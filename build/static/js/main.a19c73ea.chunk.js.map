{"version":3,"sources":["styles/global.module.scss","components/App/App.module.scss","components/Tools/Styles.module.scss","components/Controls/Controls.module.scss","components/Dialog/Dialog.module.scss","regions/TextAreaRegion/TextAreaRegion.module.scss","components/Panel/Panel.module.scss","components/ImageView/ImageView.module.scss","components/HtxTextBox/HtxTextBox.module.scss","tools/Tools.module.scss","components/Node/Node.module.scss","components/Hint/Hint.module.scss","tags/object/Text/Text.module.scss","components/TreeValidation/TreeValidation.module.scss","components/Segment/Segment.module.scss","components/SimpleBadge/SimpleBadge.module.scss","components/Waveform/Waveform.module.scss","components/Completions/Completions.module.scss","tags/object/AudioPlus/AudioPlus.module.scss","core/Registry.js","utils/unique.js","core/Helpers.js","core/Tree.js","utils/utilities.js","utils/colors.js","utils/floodfill.js","utils/image.js","utils/rle.js","utils/date.js","utils/canvas.js","utils/html.js","utils/debounce.js","utils/index.js","utils/styles.js","components/Completions/Completions.js","components/Hint/Hint.js","components/Controls/Controls.js","components/Debug.js","components/Panel/Panel.js","components/Predictions/Predictions.js","components/Segment/Segment.js","core/Hotkey.js","components/Settings/Settings.js","components/Node/Node.js","components/SimpleBadge/SimpleBadge.js","components/Entities/Entities.js","components/Entity/Entity.js","components/Relations/Relations.js","components/SideColumn/SideColumn.js","components/RelationsOverlay/Geometry.js","components/RelationsOverlay/BoundingBox.js","components/RelationsOverlay/RelationShape.js","components/RelationsOverlay/watchers/DOMWatcher.js","components/RelationsOverlay/watchers/PropertyWatcher.js","components/RelationsOverlay/NodesConnector.js","components/RelationsOverlay/RelationsOverlay.js","tags/object/Audio/Controls.js","components/Infomodal/Infomodal.js","tags/object/Base.js","core/Template.js","mixins/ProcessAttrs.js","components/Tags/Object.js","utils/messages.js","components/Waveform/Waveform.js","tags/object/Audio.js","mixins/WithStates.js","core/Constants.js","mixins/Normalization.js","mixins/Regions.js","regions/Result.js","mixins/AreaMixin.js","regions/AudioRegion.js","tags/object/AudioPlus.js","mixins/SpanText.js","regions/HyperTextRegion.js","core/CustomTypes.js","tags/object/HyperText.js","tools/Base.js","components/Tools/Slider.js","mixins/Tool.js","tools/Brush.js","components/Tools/Basic.js","tools/Erase.js","tools/KeyPoint.js","tools/Polygon.js","mixins/DrawingTool.js","tools/Rect.js","tools/Ellipse.js","tools/Zoom.js","tools/Rotate.js","components/Tools/SliderDropDown.js","tools/Brightness.js","tools/Contrast.js","components/ImageView/LabelOnRegion.js","regions/PolygonPoint.js","regions/PolygonRegion.js","tools/FloodFill.js","components/ImageGrid/ImageGrid.js","components/ImageTransformer/ImageTransformer.js","components/ImageView/ImageView.js","tools/Manager.js","regions/BrushRegion.js","regions/KeyPointRegion.js","regions/RectRegion.js","regions/EllipseRegion.js","tags/object/Image.js","regions/TextRegion.js","tags/object/Text.js","core/Types.js","tags/object/TimeSeries/helpers.js","utils/data.js","core/DataValidator/ConfigValidator.js","mixins/PersistentState.js","tags/object/TimeSeries/Channel.js","tags/object/TimeSeries.js","mixins/LabelMixin.js","mixins/SelectedModel.js","tags/control/Base.js","tags/control/Brush.js","mixins/Required.js","tags/control/Label.js","tags/control/Labels.js","tags/control/BrushLabels.js","mixins/PerRegion.js","mixins/Visibility.js","tags/control/Choice.js","tags/control/Choices.js","tags/control/HyperTextLabels.js","tags/control/KeyPoint.js","tags/control/KeyPointLabels.js","tags/control/List.js","tags/control/Pairwise.js","tags/control/Polygon.js","tags/control/PolygonLabels.js","tags/control/Ranker.js","tags/control/Rating.js","tags/control/Rectangle.js","tags/control/RectangleLabels.js","tags/control/Shortcut.js","tags/control/Taxonomy.js","components/HtxTextBox/HtxTextBox.js","regions/TextAreaRegion.js","tags/control/TextArea.js","tags/control/TimeSeriesLabels.js","tags/control/Ellipse.js","tags/control/EllipseLabels.js","tags/control/Relations.js","tags/control/Relation.js","components/Dialog/Dialog.js","tags/visual/Dialog.js","tags/visual/Header.js","tags/visual/Table.js","tags/visual/View.js","tags/visual/Style.js","tags/visual/Filter.js","components/TreeValidation/TreeValidation.js","components/App/App.js","regions/TimeSeriesRegion.js","regions/index.js","stores/NormalizationStore.js","stores/RegionStore.js","regions/Area.js","stores/RelationStore.js","core/TimeTraveller.js","core/DataValidator/index.js","stores/CompletionStore.js","stores/ProjectStore.js","stores/SettingsStore.js","stores/TaskStore.js","stores/UserStore.js","stores/AppStore.js","core/External.js","env/production.js","index.js","components/Entity/Entity.module.scss","components/Entities/Entities.module.scss","components/Relations/Relations.module.scss"],"names":["module","exports","Registry","this","tags","models","views","regions","objects","areas","Map","views_models","tools","tag","model","view","push","name","type","object","detector","detectByValue","get","set","Object","values","modelName","Error","value","available","filter","a","keys","join","getTool","bind","getModelByTag","guidGenerator","lgth","uniqueID","nanoid","cloneNode","node","snapshot","getSnapshot","getType","create","id","restoreNewsnapshot","fromModel","renderItem","el","typeName","View","getViewByModel","key","item","traverseTree","root","cb","visitNode","res","children","chld","cloneReactTree","items","attrs","clone","React","Children","forEach","child","props","moreProps","cloneElement","renderChildren","length","map","treeToModel","html","htseen","hypertexts","m","re","exec","buildData","data","toLowerCase","JSON","parse","attrsToProps","$","document","htmlSelfClosingTags","split","newData","i","edsplit","editSelfClosingTags","replace","xml2js","parseString","explicitChildren","preserveChildrenOrder","charsAsChildren","err","result","addNode","$$","text","_","findInterface","tree","fn","findParentOfType","obj","classes","c","p","getParentOfType","filterChildrenOfType","Array","isArray","cssConverter","style","firstIndexOfColon","attributes","indexOf","substring","x","toUpperCase","isString","String","isStringEmpty","isStringJSON","e","getUrl","stringToTest","slice","match","toTimeString","ms","Date","toUTCString","flatten","arr","reduce","flat","toFlatten","concat","hashCode","str","hash","charCodeAt","atobUnicode","decodeURIComponent","atob","toString","escapeHtml","unsafe","wrapArray","delay","Promise","resolve","setTimeout","gradients","colorNames","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hexToRGBA","hex","opacity","r","g","b","parseInt","colorToRGBA","alpha","undefined","convertToRGBA","charAt","stringToColor","color","substr","rgbaChangeAlpha","rgba","getScaleGradient","number","Math","ceil","MagicWand","lib","floodFill","image","px","py","colorThreshold","mask","newY","xr","xl","dy","dyl","dyr","checkY","w","width","h","height","bytes","maxX","minX","maxY","minY","Uint8Array","visited","sampleColor","stack","y","left","right","dir","shift","bounds","gaussBlur","radius","k","k1","val","end","n","s2","wg","Float32Array","total","dsq","ww","exp","PI","endX","endY","gaussBlurOnlyBorder","j","border","k2","visitedData","len","temp","x0","max","x1","min","y0","y1","createBorderForBlur","createBorderMask","rw","rh","offset","getBorderIndices","traceContours","inner","first","second","current","previous","next","d","prepareMask","contours","label","w2","src","dx","dest","directions","points","simplifyContours","simplifyTolerant","simplifyCount","resPoints","lst","ids","maxd","maxi","dist","r1","r2","r12","pi","pf","pl","lenContours","initialCount","last","sqrt","abs","sort","getImageData","img","canvas","createElement","ctx","getContext","drawImage","calcBorder","imageData","threshold","simple","parentPoints","cs","icsl","reverseCoordinates","r1X","r1Y","r2X","r2Y","x2","y2","canvasToBinaryMatrix","shape","canv","stageRef","getLayers","layer","context","initialArray","binaryMatrix","bufferCanvas","getBoundingBoxAfterTransform","rect","transform","point","transformed","getBoundingBoxAfterChanges","shiftPoint","degRotation","Konva","Transform","translate","rotate","fixRectToFit","stageWidth","stageHeight","RLEencode","prev","count","encoding","RLEdecode","encoded","uncompressed","Uint8ClampedArray","test","ind","from","msToHMS","seconds","hours","floor","prettyDate","time","date","diff","getTime","day_diff","isNaN","currentISODate","tzOffest","getTimezoneOffset","now","toISOString","imageData2Image","imagedata","putImageData","Image","toDataURL","Region2RLE","region","lineOpts","nw","naturalWidth","nh","naturalHeight","stages","findOne","cleanId","console","error","find","hide","drawScene","toCanvas","pixelRatio","show","encode","RLE2Region","rle","newdata","createImageData","decode","new_image","brushSizeCircle","size","beginPath","arc","lineWidth","strokeStyle","stroke","labelToSVG","SVG_CACHE","score","cacheKey","fillColor","Colors","toFixed","svg","svgText","innerHTML","appendChild","body","textLen","getBoundingClientRect","remove","calculateTextWidth","enc","quotes","level1","level2","escaped","addNameSpace","encodeURIComponent","encodeSVG","toggleLabelsAndScores","els","getElementsByClassName","foundCls","classList","cls","add","labelWithCSS","cache","labels","labelsStr","clsName","Checkers","cssCls","setAttribute","resSVG","Canvas","svgURL","createClass","rules","getElementsByTagName","sheet","insertRule","styleSheet","addRule","isTextNode","nodeType","firstLeaf","hasChildNodes","firstChild","lastLeaf","lastChild","getNextNode","nextSibling","parentNode","splitText","tail","deleteData","insertAfter","normalizeBoundaries","range","start","startContainer","startOffset","endContainer","endOffset","isTextNodeInRange","childNodes","documentForward","previousSibling","documentReverse","setStart","setEnd","highlightRange","normedRange","cssClass","cssStyle","nodes","commonAncestor","commonAncestorContainer","reverse","getNodesInRange","_range","nlen","results","nodeValue","hl","window","backgroundColor","className","replaceChild","splitBoundaries","toGlobalOffset","container","element","pos","nodeName","mainOffsets","getSelection","getRangeAt","cloneRange","passedStart","passedEnd","traverse","findIdxContainer","globidx","removeSpans","spans","norm","span","insertBefore","removeChild","normalize","debounce","func","wait","immediate","timeout","args","arguments","later","apply","callNow","clearTimeout","HTML","UDate","styleToProp","styles","trim","styleObj","RLe","Floodfill","DraftPanel","observer","draftSaved","versions","draft","saved","Utils","selected","placement","title","onClick","toggleDraft","draftbtn","Completion","completionID","store","badge","status","userGenerate","sentUserGenerate","pk","Item","completion","completion_selected","ev","completionStore","selectCompletion","completioncard","createdAgo","createdDate","createdBy","hasInterface","skipped","was_cancelled","ForwardOutlined","buttons","honeypot","preventDefault","setGroundTruth","StarOutlined","ghost","onConfirm","list","deleteCompletion","okText","okType","cancelText","danger","background","DeleteOutlined","Completions","titlespace","display","alignItems","marginRight","addCompletion","PlusOutlined","content","completions","bodyStyle","padding","paddingTop","Component","Hint","localClass","main","data-copy","copy","inject","taskInformation","skipButton","updateButton","submitButton","draftMenu","skip","update","submit","settings","enableHotkeys","enableTooltips","task","predictSelect","explore","disabled","isSubmitting","mouseEnterDelay","skipTask","icon","CheckOutlined","submitCompletion","CheckCircleOutlined","updateCompletion","block","wrapper","DebugComponent","state","config","self","setState","stringify","toJSON","serializeCompletion","deserializeCompletion","addInitialCompletion","project","resetState","addTask","addGeneratedCompletion","markLoading","updateValue","flexBasis","TextArea","rows","onChange","target","assignConfig","assignTask","initializeStore","predictions","history","block__controls","UndoOutlined","canUndo","undo","RedoOutlined","canRedo","redo","RollbackOutlined","reset","setPrelabeling","resetPrelabeling","undoIdx","isFrozen","description","showingDescription","toggleDescription","SettingOutlined","toggleSettings","fullscreen","FullscreenExitOutlined","FullscreenOutlined","toggleFullscreen","Prediction","selectPrediction","itembtns","addCompletionFromPrediction","CopyOutlined","Predictions","Segment","updateObjects","cn","_hotkeys_map","_hotkeys_desc","keymaster","event","getScope","srcElement","tagName","setScope","removeKey","scope","unbind","addKey","desc","unbindAll","makeComb","combs","comb","hasOwnProperty","getKeys","keysDescipritions","HotkeysDescription","descr","Hotkey","columns","dataIndex","dataSource","visible","showingSettings","footer","onCancel","defaultActiveKey","TabPane","tab","checked","toggleHotkeys","toggleTooltips","enableLabelTooltips","toggleLabelTooltips","showLabels","toggleShowLabels","continuousLabeling","toggleContinuousLabeling","selectAfterCreate","toggleSelectAfterCreate","showLineNumbers","toggleShowLineNumbers","bottomSidePanel","toggleBottomSP","displayLabelsByDefault","toggleSidepanelModel","defaultChecked","showCompletionsPanel","toggleCompletionsPanel","showPredictionsPanel","togglePredictionsPanel","NodeViews","TextRegionModel","FontColorsOutlined","HyperTextRegionModel","AudioRegionModel","AudioOutlined","TimeSeriesRegionModel","LineChartOutlined","formatTime","TextAreaRegionModel","MessageOutlined","_value","RectRegionModel","BlockOutlined","scaleX","scaleY","PolygonRegionModel","GatewayOutlined","EllipseRegionModel","Loading3QuartersOutlined","radiusX","radiusY","rotation","KeyPointRegionModel","EyeOutlined","relativeX","relativeY","BrushRegionModel","HighlightOutlined","ChoicesModel","ApartmentOutlined","TextAreaModel","Node","Icon","getContent","labelsState","aliases","selectedAliases","alias","Boolean","NodeMinimal","index","getRoot","regionStore","sortedRegions","oneColor","getOneColor","badgeStyle","boxShadow","minimal","SimpleBadge","RegionItem","idx","isAlive","classnames","lstitem","hidden","selectArea","onMouseOver","setHighlight","onMouseOut","editable","hideable","EyeInvisibleOutlined","toggleHidden","confbadge","LabelItem","labelStyle","selectedcolor","cursor","margin","GroupMenu","selectedKeys","setView","justifyContent","SortMenu","setSort","CalendarOutlined","sortOrder","ThunderboltOutlined","LabelsList","treeData","asLabelsTree","isLabel","treelabels","borderRadius","showIcon","blockNode","defaultExpandAll","autoExpandParent","switcherIcon","DownOutlined","RegionsTree","isFlat","some","parentID","asTree","draggable","onDrop","dragNode","dropPosition","dropToGap","dropKey","eventKey","dragKey","dropPos","treeDepth","dropReg","findRegionID","dragReg","unhighlightAll","setParentID","labelWithConstraint","labeling","selectedLabels","l","groupcancontain","selDrag","set1","set2","from_name","groupdepth","treeHeight","maxDepth","Number","childrenHeight","filterByParentID","pid","reg","findRegion","paddingLeft","paddingRight","flex","dashed","orientation","overlay","globalStyles","link","SortAscendingOutlined","Paragraph","Typography","Text","renderResult","endsWith","bgColor","mainValue","row","mark","long","highlightedNode","statesblk","underline","normalization","code","deleteNormalization","aria-label","button","startRelationMode","LinkOutlined","setNormalizationMode","unselectAll","CompressOutlined","deleteRegion","normalizationMode","marginTop","marginBottom","onFinish","setNormalization","normInput","setNormInput","placeholder","htmlType","Option","Select","RelationMeta","rl","relations","getSelected","v","header","mode","choice","defaultValue","option","findRelation","setSelected","Relation","isValidReference","node1","node2","iconMap","ArrowLeftOutlined","ArrowRightOutlined","bi","SwapOutlined","section__blocks","rotateDirection","relationbtn","direction","ListItem","isSelected","actions","onMouseEnter","toggleHighlight","setSelfHighlight","onMouseLeave","hasRelations","toggleMeta","MoreOutlined","parent","deleteRelation","showMeta","relationStore","relationsUIVisible","showConnections","toggleConnections","uihidden","uivisible","bordered","itemLayout","deleteAllRegions","card","Entity","Relations","Geometry","angle","minmax","num","round","point1","point2","bbox","x3","x4","y3","y4","rectsList1","rectsList2","rect1","bbox1","toRectCoordinates","rect2","bbox2","avgDistance","distance","d1","d2","convertToRectBBox","scale","rx","ry","angleRad","normalizeAngle","major","minor","t","atan","cos","sin","getXLimits","getYLimits","getPointsBBox","rx1","ry1","coords","domNode","single","bboxes","getClientRects","convertDOMRect","domRect","DEFAULT_BBOX","BoundingBox","options","assign","_detect","source","getX","_source","getY","getWidth","getHeight","imageRelatedBBox","imageBbox","getDOMBBox","imageRef","scaledBBox","scaleBBox","zoomScale","regionElement","getRectBBox","getEllipseBBox","getPolygonBBox","touches","getBrushBBox","warn","RelationShape","params","_onUpdated","onChanged","onUpdated","watcher","_watcher","callback","DOMWatcher","onUpdate","handleUpdate","addEventListener","MutationObserver","observe","removeEventListener","disconnect","createPropertyWatcher","disposers","_watchProperties","dispose","propsList","property","propertyName","parentImagePropsWatch","obtainWatcher","createShape","calculateBBox","boundingBox","padded","calculateTopPath","w1","limit","xw1","xw2","top","l1","l2","toEnd","calculateSidePath","xs1","xs2","ys1","ys2","h1","h2","renderingSide","relation","startNode","endNode","onChangedCallback","destroy","closestRects","intersecting","shapesIntersect","px1","py1","px2","py2","px3","py3","px4","py4","sweep","arc1","arc2","ex","ey","vertical","buildPathCommand","ArrowMarker","viewBox","refX","refY","markerWidth","markerHeight","orient","fill","RelationItemRect","RelationConnector","command","highlight","pathColor","pathSettings","strokeLinecap","markers","markerEnd","markerStart","strokeWidth","RelationLabel","position","textRef","createRef","useState","setBackground","groupAttributes","textAnchor","dominantBaseline","useEffect","getBBox","ref","fontSize","fontFamily","RelationItem","rootRef","dimm","hideConnection","forceUpdate","NodesConnector","path","textPosition","visibility","RelationItemObserver","rest","RelationsOverlay","rootNode","shouldRender","souldRenderConnections","random","onResize","highlighted","hasHighlight","xmlns","pointerEvents","zIndex","renderRelations","highlightedRelation","selectedValues","shouldUpdate","PureComponent","RelationsOverlayObserver","_ws","playPause","playing","PauseCircleOutlined","hotkey","PlayCircleOutlined","_type","custom","Modal","warning","success","info","ObjectBase","types","_needsUpdate","optional","_regionsCache","isMatch","toStateJSON","addProp","getProps","getAvailableStates","exceeded","states","s","checkMaxUsages","activeStates","InfoModal","maxUsages","variableNotation","variable","_index","is","runTemplate","reExp","line","js","Function","message","ProcessAttrsMixin","updateLocalValue","dataObj","ObjectTagView","dataneedsupdate","URL_CORS_DOCS","DONE","NO_COMP_LEFT","NO_NEXT_TASK","NO_ACCESS","ERR_REQUIRED","field","ERR_UNKNOWN_TAG","ERR_TAG_NOT_FOUND","ERR_TAG_UNSUPPORTED","validType","ERR_BAD_TYPE","ERR_INTERNAL","ERR_GENERAL","ERR_LOADING_AUDIO","attr","url","ERR_LOADING_S3","ERR_LOADING_CORS","ERR_LOADING_HTTP","formatTimeCallback","pxPerSec","minutes","secondsStr","timeInterval","primaryLabelInterval","secondaryLabelInterval","Waveform","onChangeZoom","zoom","wavesurfer","onChangeVolume","volume","setVolume","onChangeSpeed","speed","setPlaybackRate","onZoomPlus","step","onZoomMinus","onWheel","shiftKey","deltaY","colors","waveColor","progressColor","$el","ReactDOM","findDOMNode","$waveform","querySelector","wavesurferConfigure","backend","splitChannels","plugins","RegionsPlugin","dragSelection","slop","TimelinePlugin","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","CursorPlugin","showTime","WaveSurfer","on","messages","dataField","includes","hadNetworkError","load","_region","addRegion","selectedregionbg","onUpdateEnd","play","slider","oninput","onCreate","onwheel","throttle","handlePlay","onLoad","wave","gutter","textAlign","ZoomOutOutlined","marginLeft","ZoomInOutlined","SoundOutlined","TagAttrs","identifier","maybeNull","string","boolean","Model","fromStateJSON","choices","names","onHotKey","ws","wsCreated","AudioModel","compose","HtxAudio","addTag","addObjectType","pick","getSelectedColor","getClonedStates","defaultStyle","fillcolor","fillopacity","strokecolor","strokewidth","NormalizationMixin","RegionsMixin","readonly","volatile","perregion","getParent","moveTop","moveBottom","moveLeft","moveRight","sizeRight","sizeLeft","sizeTop","sizeBottom","rotatePoint","degree","swapSizes","rotateDimensions","updateAppearenceFromState","serialize","buildTree","control","to_name","parent_id","ser","toNames","selectRegion","unselectRegion","log","afterUnselectRegion","onClickRegion","relationMode","addRelation","stopRelationMode","wasNotSelected","destroyRegion","stopPropagation","Result","late","reference","union","modelsArr","objectTypes","enumeration","rating","maybe","array","htmllabels","rectanglelabels","keypointlabels","polygonlabels","ellipselabels","brushlabels","timeserieslabels","taxonomy","frozen","valueType","getSelectedString","joinstr","findLabel","whenlabelvalue","area","hasLabel","visiblewhen","whentagname","choiceValues","whenchoicevalue","setValue","afterCreate","afterAttach","isSubmitable","meta","metaValue","deleteNodeRelation","AreaMixin","styled","beforeDestroy","addResult","removeResult","splice","deleteArea","holdsState","resultType","AudioPlusModel","wsRegionElement","_ws_region","wsRegion","elID","original_length","getDuration","updateColor","applyCSSClass","showlabels","scrollingElement","scrollTop","scrollLeft","scrollIntoViewIfNeeded","scrollIntoView","scrollTo","Constants","WithStatesMixin","addRegionType","showscores","fm","createRegion","setRangeValue","rangeValue","playBackRate","st","regionbg","ws_region","find_r","createResult","regs","drag","resize","HtxAudioPlus","updateSpansColor","bgcolor","_spans","labelColor","getLabelColor","_lastSpan","createSpans","lastSpan","highlightcolor","addEventsToSpans","onmouseover","onmouseout","onmousedown","_currentSpan","onclick","addEvent","behavior","fspan","lspan","mspans","bottom","borderRight","borderLeft","borderTop","borderBottom","HyperTextModel","integer","savetextresult","SpanTextMixin","require","customTypes","fromSnapshot","parseFloat","toSnapshot","isTargetType","floatValue","getValidationMessage","colorTester","LS_SECURE_MODE","clickablelinks","_update","needsUpdate","HtxHyperTextView","HtxHyperTextPieceView","HyperTextPieceView","myRef","ranges","rangesToIgnore","selection","isCollapsed","rangeCount","xpath","removeAllRanges","selectedRanges","captureDocumentSelection","htxRange","isConnected","_handleUpdate","data-update","overflow","onMouseUp","dangerouslySetInnerHTML","__html","HtxHyperText","BaseTool","MIN_SIZE","X","Y","default","tipFormatter","ToolMixin","_manager","_control","moreRegionParams","call","createFromJSON","tagTypes","stateTypes","controlTagTypes","moreParams","coordstype","ToolView","Slider","sel","manager","updateCursor","setStroke","_Tool","json","controlTag","addPoints","format","_rle","opts","stage","mouseupEv","mousemoveEv","getSelectedShape","currentTouch","mousedownEv","brush","addTouch","Brush","tooltip","Basic","ScissorOutlined","Erase","clickEv","checkLabels","KeyPoint","poly","getActiveShape","closed","getActivePolygon","addPoint","freeze","Polygon","DrawingTool","updateDraw","startX","startY","setPosition","removeArea","unfreeze","Rect","Ellipse","DragOutlined","handleZoom","handleDrag","posx","movementX","posy","movementY","setZoom","batchDraw","evt","ctrlKey","freezeHistory","mousePointTo","newScale","newPos","scaleBy","zoomby","oldScale","getPointerPosition","negativezoom","Zoom","RotateLeftOutlined","RotateRightOutlined","Rotate","menu","onResetClick","ReloadOutlined","SliderDropDown","brightness","ControlOutlined","tooltitle","setBrightnessGrade","Brightness","contrast","setContrastGrade","Contrast","LabelOnBbox","ss","showScore","strokeScaleEnabled","cornerRadius","LabelOnEllipse","LabelOnRect","LabelOnPolygon","lats","lngs","polytobbox","fillEnabled","shadowBlur","LabelOnMask","pointstobbox","LabelOnKP","PolygonPoint","initX","initY","movePoint","offsetX","offsetY","_movePoint","closeStartPoint","mouseOverStartPoint","closePoly","handleMouseOverStartPoint","cancelBubble","startPoint","setX","setY","small","medium","large","setMouseOverStartPoint","handleMouseOutStartPoint","PolygonPointView","startPointAttr","hitStrokeWidth","primary","dragOpts","onDragMove","onDragStart","onDragEnd","dragOnTop","setSelectedPoint","ImageModel","selectedPoint","pointSize","pointStyle","handleMouseMove","flattenedPoints","fixZoomedCoords","getAnchorPoint","cursorX","cursorY","group","getHoverAnchor","hoverAnchor","Circle","draw","createHoverAnchor","to","duration","moveHoverAnchor","currentTarget","getLayer","handleMouseLeave","removeHoverAnchor","handleLineClick","insertIdx","insertPoint","_addPoint","canClose","p1","p2","detach","setScale","updateOffset","computeOffset","updateImageSize","wp","hp","sw","sh","natural","normalized","original_width","original_height","image_rotation","point1X","point1Y","point2X","point2Y","getFlattenedPoints","HtxPolygon","minMax","acc","setDragMode","arrX","arrY","dragBoundFunc","fixForZoom","getAttr","setAttr","metaKey","lineJoin","idx1","idx2","onMouseMove","renderLine","renderLines","renderCircle","renderCircles","cur","setThreshold","createPolygonRegion","pointsize","pointstyle","addShape","FloodFill","nodeSize","grid","gridSize","col","gridColor","TransformerComponent","constrainSizes","oldBox","newBox","isRotated","transformer","getStage","clientRect","fixed","checkNode","selectedShape","supportsTransform","selectedNode","attachTo","resizeEnabled","ignoreStroke","keepRatio","rotateEnabled","borderDash","boundBoxFunc","anchorSize","handleOnClick","handleMouseDown","handleGlobalMouseMove","handleGlobalMouseUp","canvasX","canvasY","clientX","clientY","handleMouseUp","handleError","updateGridSize","setGridSize","offsetWidth","offsetHeight","cursorPositionY","tension","dash","cursorPositionX","viewingAllCompletions","viewingAllPredictions","getToolsManager","allTools","tool","viewClass","controlButton","filler","containerClassName","containerStyle","imgStyle","transformOrigin","brightnessGrade","contrastGrade","imgTransform","imageFullSize","maxwidth","zoomingPositionX","zoomingPositionY","90","180","270","ratio","rotated","setImageRef","onError","alt","setStageRef","onMouseDown","sizeUpdated","Tree","canrotate","renderTools","ToolsManager","_default_tool","addTool","selectedTool","findSelectedTool","highlightOptions","shadowColor","shadowOffsetY","shadowOffsetX","shadowOpacity","Points","setType","rescale","origW","origH","destW","destH","scaledStrokeWidth","convertPointsToMask","initialWidth","initialHeight","ratioX","ratioY","addState","strokeColor","HtxBrushLayer","globalCompositeOperation","lineCap","HtxBrush","attrMy","sceneFunc","_loadedOnce","_img","fillStrokeShape","onload","HtxKeyPoint","perfectDrawEnabled","relativeWidth","relativeHeight","fillOpacity","coordsInside","setFill","DisabledMixin","HtxRectangle","onTransformEnd","box","relativeRadiusX","relativeRadiusY","rel_x","rel_y","theta","unit","pow","HtxEllipse","zoomcontrol","brightnesscontrol","contrastcontrol","rotatecontrol","IMAGE_CONSTANTS","brushControl","brushStrokeWidth","returnedControl","toolsManager","Tools","updateBrushControl","arg","updateBrushStrokeWidth","setPointerPosition","setZoomPosition","setMode","_updateImageSize","userResize","reinitHistory","labelStates","zoomOriginalCoords","asArray","modified","zoomed","HtxImage","ImageView","TextModel","setText","valuetype","selectionenabled","granularity","loaded","setRef","_ref","unshift","loadedValue","fetch","then","ok","statusText","catch","HtxTextView","HtxTextPieceView","TextPieceView","getValue","strleft","idxSpace","lastIndexOf","idxNewline","strright","alignWord","granularityDisabled","altKey","alignRange","collapsed","cloneContents","textContent","ee","findNode","createRange","toggle","HtxText","_mixedArray","_oneOf","lookup","dispatcher","sn","oneOfTags","unionArray","allModelsTypes","literal","unionTag","isType","nt","getParentOfTypeString","tagsArray","toolsArray","idFromValue","getOptimalWidth","screen","devicePixelRatio","sparseValues","getRegionColor","checkD3EventLoop","d3","sourceEvent","formatTrackerTime","toLocaleString","parseCSV","separator","lines","candidates","Set","RegExp","performance","secondLine","every","tryToParseJSON","errorBuilder","required","unknownTag","tagNotFound","tagUnsupported","badAttributeValueType","internalError","generalError","loadingError","attrWithUrl","validateNameTag","properties","optionalValues","validateToNameTag","flatTree","toname","controlledTags","controlledTag","validate","validateAttributes","fieldsToSkip","modelProperty","ConfigValidator","flattenTree","flatChild","propertiesToSkip","validationResult","nameValidation","toNameValidation","withNullType","describe","getTypeDescription","PersistentStateMixin","restoreValues","storeValues","persistentValuesKey","persistentValues","localStorage","setItem","stored","getItem","legend","units","displayformat","interpolation","curvestep","curvebasis","curvebasisopen","curvebundle","curvecardinal","curvecardinalopen","curvecatmullrom","curvecatmullromopen","curvelinear","curvemonotonex","curvemonotoney","curvenatural","curveradial","curvestepafter","curvestepbefore","column","Types","headers","ChannelModel","ChannelD3","extent","useOptimizedData","optimizedSeries","zoomStep","changeWidth","getRegion","isInstant","stick","createBrushMovedHandler","findIndex","moved","instant","unselectAreas","regionChanged","newBrushHandler","statesSelected","newRegion","newRegionTimer","invert","nextIndex","brushCreator","move","gCreator","updateTracker","screenX","dataX","dataY","tracker","trackerTime","trackerValue","formatValue","trackerPoint","renderTracker","append","renderXAxis","tickSize","selectAll","enter","ticks","renderYAxis","tickFormat","select","flush","managerBrush","gBrushes","brushSelection","createHandler","each","sticked","_brushRef","merge","at","exit","times","upd","throttledRangeUpdate","indices","isDate","slicesCount","clipPathId","series","slices","dataSlices","domain","plotX","lineSlice","defined","pathContainer","datum","path2","setRangeWithScaling","renderBrushCreator","initZoom","renderBrushes","addErrors","all","xDomain","pDomain","xRange","use","haveToSwitchData","prevProps","prevState","flushBrushes","ChannelD3Observed","HtxChannel","keyColumn","columnName","dataHash","brushRange","timecolumn","sep","timeformat","timedisplayformat","overviewchannels","multiaxis","valueLoaded","zoomedRange","parseTime","parseTimeFn","timestamps","justAnyColumn","raw","initialRange","_format","setData","setColumnNames","setZoomedRange","updateView","scrollToRegion","currentSize","regionSize","desiredSize","gap","extend","keysRange","updateTR","tr","predefinedStates","timerange","needUpdate","updateRegion","preloadValue","cors","space","auto","comma","dot","Overview","setWidth","setNode","useCallback","useLayoutEffect","measure","useWidth","fullWidth","idX","channels","ch","focus","useRef","gRegions","gChannels","gAxis","gb","defaultSelection","prevBrush","overviewWidth","mid","center","half","drawPath","channel","tickSizeOuter","MIN_OVERVIEW","rSelection","drawRegions","TimeSeriesModel","HtxTimeSeries","_nodeReference","LabelMixin","beforeSend","copyState","objectType","findedObj","SelectedModelMixin","_child","tiedChildren","canBeUsed","selectFirstVisible","f","toggleSelected","updateFromResult","ControlBase","erase","BrushModel","RequiredMixin","requiredmessage","objectTag","hasValue","requiredModal","maxusages","showalias","aliasstyle","usedAlready","sameObject","shouldBeUnselected","setVisible","_updateBackgroundColor","ColorScheme","make_color","seed","LabelModel","HtxLabelView","bg","borderLeftWidth","borderLeftColor","borderTopColor","borderBottomColor","borderRightColor","showinline","ModelAttrs","LabelsModel","HtxLabels","flexFlow","Validation","BrushLabelsModel","HtxBrushLabels","PerRegionMixin","perRegionVisible","VisibilityMixin","fns","labelValue","choiceValue","layout","resetSelected","updateResult","ChoiceModel","HtxChoiceView","showHotkey","nativeEvent","blur","isCheckbox","cStyle","HtxChoice","setResult","HtxChoices","visibleStyle","isVisible","opt","Composition","HyperTextLabelsModel","HtxHyperTextLabels","kp","keypoint","KeyPointModel","KeyPointLabelsModel","HtxKeyPointLabels","ListItemModel","setBG","setIdx","axis","lockaxis","elementvalue","elementtag","sortedhighlightcolor","setUpdate","vals","moveItems","oldIndex","newIndex","arrayMove","ranked","weights","item_weight","ListModel","DragHandle","sortableHandle","isMobileDevice","navigator","userAgent","SortableText","SortableElement","classNames","audio","userSelect","SortableList","SortableContainer","celled","HtxList","onSortEnd","selectionstyle","leftclass","rightclass","_selection","selectLeft","selectRight","completionAttached","PairwiseModel","PolygonModel","PolygonLabelsModel","HtxPolygonLabels","RankerItemModel","sortable","_addRegion","RankerModel","HtxRanker","maxrating","defaultvalue","setRating","increaseValue","RatingModel","HtxRating","iconSize","character","activeShape","RectangleModel","RectangleLabelsModel","HtxRectangleLabels","onShortcut","ShortcutModel","HtxShortcutView","parents","TaxonomyModel","HtxTaxonomy","showPartiallySelected","HtxTextBox","editing","inputRef","startEditing","onStartEditing","input","selectionStart","setEditing","cancel","save","updateHeight","scrollHeight","onDelete","inputProps","autoFocus","onBlur","onKeyDown","EnterOutlined","EditOutlined","delete","renderEdit","renderView","HtxTextAreaRegion","divAttrs","data-testid","Input","allowsubmit","showsubmitbutton","maxsubmissions","submissionsNum","getSerializableValue","texts","perRegionCleanup","addText","submitChanges","deleteText","HtxTextArea","showAddButton","showSubmitButton","itemStyle","showSubmit","TimeSeriesLabelsModel","HtxTimeSeriesLabels","ellipse","EllipseModel","EllipseLabelsModel","HtxEllipseLabels","RelationsModel","RelationModel","DialogView","hint","selectedStyle","block_selected","maxWidth","Replica","DialogActions","DialogModel","HtxDialogView","maxHeight","overflowY","HeaderModel","HtxHeader","Title","level","TableModel","HtxTable","pagination","hideOnSinglePage","classname","ViewModel","HtxView","StyleModel","HtxStyle","casesensetive","cleanup","minlength","applyFilter","tch","toTag","chval","applyFilterEv","setInputRef","selectFirstElement","FilterModel","HtxFilter","onPressEnter","TreeValidation","errors","getEnv","App","validation","segment","Controls","renderAllCompletions","renderAllPredictions","_renderAll","selectedStore","isLoading","renderLoader","noTask","renderNothingToLabel","noAccess","renderNoAccess","labeledSuccess","renderSuccess","renderNoCompletion","stEditor","editorfs","editor","stCommon","commonbsp","common","stMenu","menubsp","Settings","Panel","_renderUI","renderConfigValidationException","SideColumn","Debug","growRight","growLeft","shrinkRight","shrinkLeft","one","AllRegionsType","Normalization","normalizations","findNormalization","addNormalization","deleteNodeNormalization","classification","isDesc","enrich","lname","onEntityCreate","toggleSortOrder","initHotkeys","setGroup","onEntityDelete","onPatch","patch","op","selectNext","ClassificationArea","Area","$treenode","objectName","Htx","getAvailableAreas","RelationStore","removeHighlight","_relations","safeReference","findRelations","id1","id2","nodesRelated","from_id","to_id","deserializeRelation","TimeTraveller","targetPath","skipNextUndoState","createdIdx","targetStore","snapshotDisposer","updateHandlers","triggerHandlers","handler","recordNow","addUndoState","recorder","reinit","resolvePath","onSnapshot","applySnapshot","DATA_VALIDATORS","CONFIG","RESULT","VALIDATORS","ValidType","ValidationError","DataValidator","callbacks","has","validatorName","validator","compiledError","loadedDate","leadTime","localUpdate","dragMode","normalizationStore","NormalizationStore","RegionStore","preProcessSnapshot","autosave","setEdit","onGroundTruth","sendUserGenerate","setLocalUpdate","updatePersonalKey","setHighlightedNode","perRegionTags","unselectArea","unselectStates","keepStates","_relationObj","deleteReadOnly","loadRegionState","mainViewTag","unloadRegionState","addVersions","isDraft","pauseAutosave","startAutosave","onSubmitDraft","paused","setDraft","submitDraft","onDraftSaved","leading","flag","dropDraft","addToolsFromControl","setupHotKeys","audiosNum","audioNode","mod","hotkeyScope","areaValue","resultValue","put","fixBrokenCompletion","objCompletion","_initialCompletionObj","areaId","resultId","toggleViewingAll","selectItem","onSelectCompletion","initRoot","rootModel","modelClass","addItem","user","displayName","handleErrors","_validator","addErrorCallback","removeErrorCallback","toggleViewingAllCompletions","toggleViewingAllPredictions","addPrediction","prediction","newErrors","onDeleteCompletion","ProjectStore","identifierNumber","SettingsModel","enablePanelHotkeys","sidePanelMode","enableAutoSave","lsKey","lss","lsp","querySelectorAll","toggleAutoSave","togglePanelHotkeys","toggleImageFS","AuthStore","enable","username","password","TaskStore","auth","Utilities","UserStore","firstName","lastName","Task","Project","interfaces","CompletionStore","User","debug","alert","showModal","handleSubmittingFlag","defaultMessage","setFlags","race","flags","addInterface","onLabelStudioLoad","taskObject","onSkipTask","onSubmitCompletion","onUpdateCompletion","onTaskLoad","previousCompletion","LabelStudio","environment","getData","getState","rootElement","getElementById","configureApplication","osCB","ouCB","odCB","Messages","External","secureMode","app","AppStore","render"],"mappings":"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,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGEC,GAAa,CACfC,UAAW,UACXC,aAAc,UACdC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,MAAO,UACPC,eAAgB,UAChBC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,UAAW,UACXC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,MAAO,UACPC,eAAgB,UAChBC,SAAU,UACVC,QAAS,UACTC,KAAM,UACNC,SAAU,UACVC,SAAU,UACVC,cAAe,UACfC,SAAU,UACVC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,eAAgB,UAChBC,WAAY,UACZC,WAAY,UACZC,QAAS,UACTC,WAAY,UACZC,aAAc,UACdC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,SAAU,UACVC,YAAa,UACbC,QAAS,UACTC,WAAY,UACZC,UAAW,UACXC,YAAa,UACbC,YAAa,UACbC,QAAS,UACTC,UAAW,UACXC,WAAY,UACZC,KAAM,UACNC,UAAW,UACXC,KAAM,UACNC,MAAO,UACPC,YAAa,UACbC,SAAU,UACVC,QAAS,UACTC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,SAAU,UACVC,cAAe,UACfC,UAAW,UACXC,aAAc,UACdC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,qBAAsB,UACtBC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,YAAa,UACbC,cAAe,UACfC,aAAc,UACdC,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,KAAM,UACNC,UAAW,UACXC,MAAO,UACPC,QAAS,UACTC,OAAQ,UACRC,iBAAkB,UAClBC,WAAY,UACZC,aAAc,UACdC,aAAc,UACdC,eAAgB,UAChBC,gBAAiB,UACjBC,kBAAmB,UACnBC,gBAAiB,UACjBC,gBAAiB,UACjBC,aAAc,UACdC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,YAAa,UACbC,KAAM,UACNC,QAAS,UACTC,MAAO,UACPC,UAAW,UACXC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,cAAe,UACfC,UAAW,UACXC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,UAAW,UACXC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,WAAY,UACZC,OAAQ,UACRC,cAAe,UACfC,IAAK,UACLC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,OAAQ,UACRC,WAAY,UACZC,SAAU,UACVC,SAAU,UACVC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,KAAM,UACNC,YAAa,UACbC,UAAW,UACXC,IAAK,UACLC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,WAAY,UACZC,OAAQ,UACRC,YAAa,WAQR,SAASC,GAAUC,EAAKC,GAC7B,IAAIC,EAAI,EACNC,EAAI,EACJC,EAAI,EAEF1R,EAAI,GAyBR,MAvBiC,kBAAtB2R,SAASJ,KAClBvR,EAAIuR,GAMFD,GAAsB,IAAfA,EAAIzO,QACb2O,EAAI,KAAOF,EAAI,GAAKA,EAAI,GACxBG,EAAI,KAAOH,EAAI,GAAKA,EAAI,GACxBI,EAAI,KAAOJ,EAAI,GAAKA,EAAI,IAKfA,GAAsB,IAAfA,EAAIzO,SACpB2O,EAAI,KAAOF,EAAI,GAAKA,EAAI,GACxBG,EAAI,KAAOH,EAAI,GAAKA,EAAI,GACxBI,EAAI,KAAOJ,EAAI,GAAKA,EAAI,IAGd,gBAAYE,EAAZ,cAAmBC,EAAnB,cAA0BC,EAA1B,aAAgC1R,EAAhC,KASP,SAAS4R,GAAY/R,EAAOgS,GACjC,MAAqB,kBAAVhS,QAAiEiS,WAApCvJ,GAAW1I,EAAM2D,eAEhD6N,GADU9I,GAAW1I,EAAM2D,eACPqO,GAGtBhS,EAQF,SAASkS,GAAclS,EAAOgS,GACnC,MAAwB,MAApBhS,EAAMmS,OAAO,GACRX,GAAUxR,EAAOgS,GAEjBD,GAAY/R,EAAOgS,GAQvB,SAASI,GAAczK,GAG5B,IAFA,IAAIC,EAAO,EAEFxD,EAAI,EAAGA,EAAIuD,EAAI3E,OAAQoB,IAC9BwD,EAAOD,EAAIE,WAAWzD,KAAOwD,GAAQ,GAAKA,GAK5C,IAFA,IAAIyK,EAAQ,IAEHjO,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAE1BiO,IAAU,MADGzK,GAAa,EAAJxD,EAAU,KACT6D,SAAS,KAAKqK,QAAQ,GAG/C,OAAOD,EAQF,SAASE,GAAgBC,EAAMR,GACpC,OAAOQ,EAAKjO,QAAQ,cAAb,UAA+ByN,EAA/B,MAIF,SAASS,GAAiBC,GAC/B,OAAOjK,GAAUkK,KAAKC,KAAc,GAATF,ICzP7B,IAAMG,GAAa,WACjB,IAAIC,EAAM,GAozBV,OAzyBAA,EAAIC,UAAY,SAASC,EAAOC,EAAIC,EAAIC,EAAgBC,GACtD,IAAI3N,EACFY,EACAgN,EACA9R,EACA+R,EACAC,EACAC,EACAC,EACAC,EACAC,EACAjQ,EAAOsP,EAAMtP,KACbkQ,EAAIZ,EAAMa,MACVC,EAAId,EAAMe,OACVC,EAAQhB,EAAMgB,MACdC,GAAQ,EACRC,EAAON,EAAI,EACXO,GAAQ,EACRC,EAAON,EAAI,EACX1P,EAAI8O,EAAKU,EAAIX,EACbnO,EAAS,IAAIuP,WAAWT,EAAIE,GAC5BQ,EAAU,IAAID,WAAWjB,GAAcQ,EAAIE,GAE7C,GAAmB,IAAfQ,EAAQlQ,GAAU,OAAO,KAG7B,IAAImQ,EAAc,CAAC7Q,EADnBU,GAAQ4P,GACoBtQ,EAAKU,EAAI,GAAIV,EAAKU,EAAI,GAAIV,EAAKU,EAAI,IAE3DoQ,EAAQ,CAAC,CAAEC,EAAGvB,EAAIwB,KAAMzB,EAAK,EAAG0B,MAAO1B,EAAK,EAAG2B,IAAK,IACxD,EAAG,CAID,IADAjB,GAAS,EACJtN,GAHL9E,EAAKiT,EAAMK,SAGCH,KAAO,EAAGrO,EAAI9E,EAAGoT,MAAOtO,IAIlC,GAFAjC,IADAoP,EAAKjS,EAAGkT,EAAIb,GACFvN,GAAK2N,EAES,IAApBM,EAAQd,EAAKnN,OAEjBZ,EAAI/B,EAAKU,GAAKmQ,EAAY,IAClBpB,GAAkB1N,GAAK0N,OAC/B1N,EAAI/B,EAAKU,EAAI,GAAKmQ,EAAY,IACtBpB,GAAkB1N,GAAK0N,OAC/B1N,EAAI/B,EAAKU,EAAI,GAAKmQ,EAAY,IACtBpB,GAAkB1N,GAAK0N,GAA/B,CASA,IAPAQ,GAAS,EAET7O,EAAO0O,EAAKnN,GAAK,EACjBiO,EAAQd,EAAKnN,GAAK,EAElBkN,EAAKlN,EAAI,EAEFkN,GAAM,IAEXnP,GADAqP,EAAMD,EAAKD,GACDS,EACW,IAAjBM,EAAQb,QAEZhO,EAAI/B,EAAKU,GAAKmQ,EAAY,IAClBpB,GAAkB1N,GAAK0N,OAC/B1N,EAAI/B,EAAKU,EAAI,GAAKmQ,EAAY,IACtBpB,GAAkB1N,GAAK0N,OAC/B1N,EAAI/B,EAAKU,EAAI,GAAKmQ,EAAY,IACtBpB,GAAkB1N,GAAK0N,IAE/BrO,EAAO2O,GAAO,EACda,EAAQb,GAAO,EAEfF,IAIF,IAFAD,EAAKjN,EAAI,EAEFiN,EAAKM,IAEVxP,GADAsP,EAAMF,EAAKF,GACDU,EACW,IAAjBM,EAAQZ,QAEZjO,EAAI/B,EAAKU,GAAKmQ,EAAY,IAClBpB,GAAkB1N,GAAK0N,OAC/B1N,EAAI/B,EAAKU,EAAI,GAAKmQ,EAAY,IACtBpB,GAAkB1N,GAAK0N,OAC/B1N,EAAI/B,EAAKU,EAAI,GAAKmQ,EAAY,IACtBpB,GAAkB1N,GAAK0N,IAE/BrO,EAAO4O,GAAO,EACdY,EAAQZ,GAAO,EAEfJ,IAIEC,EAAKW,IAAMA,EAAOX,EAAK,GACvBD,EAAKW,IAAMA,EAAOX,EAAK,IAE3BD,EAAO9R,EAAGkT,EAAIlT,EAAGqT,MACL,GAAKvB,EAAOS,IAElBP,EAAKhS,EAAGmT,MAAMF,EAAMpV,KAAK,CAAEqV,EAAGpB,EAAMqB,KAAMnB,EAAIoB,MAAOpT,EAAGmT,KAAME,KAAMrT,EAAGqT,MACvErT,EAAGoT,MAAQrB,GAAIkB,EAAMpV,KAAK,CAAEqV,EAAGpB,EAAMqB,KAAMnT,EAAGoT,MAAOA,MAAOrB,EAAIsB,KAAMrT,EAAGqT,QAE/EvB,EAAO9R,EAAGkT,EAAIlT,EAAGqT,MACL,GAAKvB,EAAOS,GAElBP,EAAKD,GAAIkB,EAAMpV,KAAK,CAAEqV,EAAGpB,EAAMqB,KAAMnB,EAAIoB,MAAOrB,EAAIsB,IAAKrT,EAAGqT,MAIhEjB,IACEpS,EAAGkT,EAAIL,IAAMA,EAAO7S,EAAGkT,GACvBlT,EAAGkT,EAAIN,IAAMA,EAAO5S,EAAGkT,UAEtBD,EAAMxR,OAAS,GAExB,MAAO,CACLU,KAAMoB,EACN+O,MAAOb,EAAMa,MACbE,OAAQf,EAAMe,OACde,OAAQ,CACNZ,KAAMA,EACNE,KAAMA,EACNH,KAAMA,EACNE,KAAMA,KAaZrB,EAAIiC,UAAY,SAAS3B,EAAM4B,GAC7B,IAAI5Q,EACF6Q,EACAC,EACA7O,EACAoO,EACAU,EAEAC,EACAC,EAAa,EAATL,EAAa,EACjBM,EAAKN,EAASA,EACdO,EAAK,IAAIC,aAAaH,GACtBI,EAAQ,EACR7B,EAAIR,EAAKS,MACTC,EAAIV,EAAKW,OACTrQ,EAAO0P,EAAK1P,KACZwQ,EAAOd,EAAK0B,OAAOZ,KACnBD,EAAOb,EAAK0B,OAAOb,KACnBG,EAAOhB,EAAK0B,OAAOV,KACnBD,EAAOf,EAAK0B,OAAOX,KAGrB,IAAK/P,EAAI,EAAGA,EAAI4Q,EAAQ5Q,IAAK,CAC3B,IAAIsR,GAAOV,EAAS5Q,IAAM4Q,EAAS5Q,GAC/BuR,EAAKhD,KAAKiD,KAAKF,GAAO,EAAMJ,KAAQ,EAAI3C,KAAKkD,GAAKP,GACtDC,EAAGP,EAAS5Q,GAAKmR,EAAGP,EAAS5Q,GAAKuR,EAClCF,GAAS,EAAIE,EAGf,IAAKvR,EAAI,EAAGA,EAAIiR,EAAGjR,IACjBmR,EAAGnR,IAAMqR,EAGX,IAAI3Q,EAAS,IAAIuP,WAAWT,EAAIE,GAC9BgC,EAAOd,EAASpB,EAChBmC,EAAOf,EAASlB,EAGlB,IAAKW,EAAIL,EAAMK,EAAIN,EAAO,EAAGM,IAC3B,IAAKpO,EAAI6N,EAAM7N,EAAI4N,EAAO,EAAG5N,IAAK,CAOhC,IANA8O,EAAM,EAGNC,EAAMU,EAAOzP,EAAIgP,EAAIS,EAAOzP,EAAIgP,EAChCH,GAHAD,EAAIR,EAAIb,EAAIvN,GAGH2O,EAEJ5Q,EAJG4Q,EAAS3O,EAAI,EAAI2O,EAAS3O,EAAI,EAItBjC,EAAIgR,EAAKhR,IACvB+Q,GAAOzR,EAAKwR,EAAK9Q,GAAKmR,EAAGnR,GAM3B,IAHAgR,EAAMW,EAAOtB,EAAIY,EAAIU,EAAOtB,EAAIY,EAChCH,EAAKD,EAAID,EAASpB,EAEbxP,EAJG4Q,EAASP,EAAI,EAAIO,EAASP,EAAI,EAItBrQ,EAAIgR,EAAKhR,IACvB+Q,GAAOzR,EAAKwR,EAAK9Q,EAAIwP,GAAK2B,EAAGnR,GAE/BU,EAAOmQ,GAAKE,EAAM,GAAM,EAAI,EAGhC,MAAO,CACLzR,KAAMoB,EACN+O,MAAOD,EACPG,OAAQD,EACRgB,OAAQ,CACNZ,KAAMA,EACNE,KAAMA,EACNH,KAAMA,EACNE,KAAMA,KAkIZrB,EAAIkD,oBAAsB,SAAS5C,EAAM4B,EAAQV,GAC/C,IACEqB,EACAD,EACAtR,EACA6R,EACAhB,EACAC,EACA7O,EACAoO,EACAU,EAEAC,EAXEc,EAxHN,SAA6B9C,EAAM4B,EAAQV,GACzC,IAAIjO,EACFjC,EACA6R,EACAxB,EACAQ,EACAC,EACAiB,EACAvC,EAAIR,EAAKS,MACTC,EAAIV,EAAKW,OACTrQ,EAAO0P,EAAK1P,KACZ0S,EAAc,IAAI/B,WAAW3Q,GAC7BwQ,EAAOd,EAAK0B,OAAOZ,KACnBD,EAAOb,EAAK0B,OAAOb,KACnBG,EAAOhB,EAAK0B,OAAOV,KACnBD,EAAOf,EAAK0B,OAAOX,KACnBkC,EAAMzC,EAAIE,EACVwC,EAAO,IAAIjC,WAAWgC,GACtBH,EAAS,GACTK,EAAK5D,KAAK6D,IAAItC,EAAM,GACpBuC,EAAK9D,KAAK+D,IAAIzC,EAAML,EAAI,GACxB+C,EAAKhE,KAAK6D,IAAIpC,EAAM,GACpBwC,EAAKjE,KAAK+D,IAAIvC,EAAML,EAAI,GAE1B,GAAIQ,GAAWA,EAAQtR,OAAS,EAE9B,IAAKiS,EAAI,EAAGA,EAAIoB,EAAKpB,IACA,IAAfX,EAAQW,KAAUmB,EAAYnB,GAAK,GAK3C,IAAKR,EAAIkC,EAAIlC,EAAImC,EAAK,EAAGnC,IACvB,IAAKpO,EAAIkQ,EAAIlQ,EAAIoQ,EAAK,EAAGpQ,IAEP,IAAZ3C,EADJuR,EAAIR,EAAIb,EAAIvN,KAEZ6O,EAAKD,EAAIrB,EACTuC,EAAKlB,EAAIrB,EAGgB,IAAvBwC,EAAYnB,EAAI,IACO,IAAvBmB,EAAYnB,EAAI,IACI,IAApBmB,EAAYlB,IACY,IAAxBkB,EAAYlB,EAAK,IACO,IAAxBkB,EAAYlB,EAAK,IACG,IAApBkB,EAAYD,IACY,IAAxBC,EAAYD,EAAK,IACO,IAAxBC,EAAYD,EAAK,IAKjBD,EAAO9W,KAAK6V,IAMlB,GAAa,IAATf,EAAY,IAAKO,EAAIL,EAAMK,EAAIN,EAAO,EAAGM,IAAyB,IAAhB/Q,EAAK+Q,EAAIb,IAAUsC,EAAO9W,KAAKqV,EAAIb,GAEzF,GAAIK,IAASL,EAAI,EAAG,IAAKa,EAAIL,EAAMK,EAAIN,EAAO,EAAGM,IAAgC,IAAvB/Q,EAAK+Q,EAAIb,EAAIK,IAAaiC,EAAO9W,KAAKqV,EAAIb,EAAIK,GAExG,GAAa,IAATG,EAAY,IAAK/N,EAAI6N,EAAM7N,EAAI4N,EAAO,EAAG5N,IAAqB,IAAZ3C,EAAK2C,IAAU6P,EAAO9W,KAAKiH,GAEjF,GAAI8N,IAASL,EAAI,EAAG,IAAKzN,EAAI6N,EAAM7N,EAAI4N,EAAO,EAAG5N,IAAgC,IAAvB3C,EAAKyQ,EAAOP,EAAIvN,IAAU6P,EAAO9W,KAAK+U,EAAOP,EAAIvN,GAE3G,IAEE+O,EAFEtQ,EAAS,GAGXgR,EAAOd,EAASpB,EAChBmC,EAAOf,EAASlB,EAChBuB,EAAa,EAATL,EAAa,EAInB,IAFAqB,EAAMH,EAAOlT,OAERiT,EAAI,EAAGA,EAAII,EAAKJ,IAAK,CAUxB,IARAK,EADArB,EAAIiB,EAAOD,IACD,EACVnR,EAAO1F,KAAK6V,GAEZR,GAAKQ,GADL5O,EAAI4O,EAAIrB,IACMA,EAEdwB,EAAMU,EAAOzP,EAAIgP,EAAIS,EAAOzP,EAAIgP,EAChCH,EAAKD,EAAID,EAEJ5Q,EAJG4Q,EAAS3O,EAAI,EAAI2O,EAAS3O,EAAI,EAItBjC,EAAIgR,EAAKhR,IAEN,IAAbkS,EADJH,EAAKjB,EAAK9Q,KAGRkS,EAAKH,GAAM,EACXrR,EAAO1F,KAAK+W,IAOhB,IAHAf,EAAMW,EAAOtB,EAAIY,EAAIU,EAAOtB,EAAIY,EAChCH,EAAKD,EAAID,EAASpB,EAEbxP,EAJG4Q,EAASP,EAAI,EAAIO,EAASP,EAAI,EAItBrQ,EAAIgR,EAAKhR,IAEN,IAAbkS,EADJH,EAAKjB,EAAK9Q,EAAIwP,KAGZ0C,EAAKH,GAAM,EACXrR,EAAO1F,KAAK+W,IAKlB,OAAOrR,EAaM+R,CAAoBzD,EAAM4B,EAAQV,GAY7Ce,EAAa,EAATL,EAAa,EACjBM,EAAK,EAAIN,EAASA,EAClBO,EAAK,IAAIC,aAAaH,GACtBI,EAAQ,EACR7B,EAAIR,EAAKS,MACTC,EAAIV,EAAKW,OACTrQ,EAAO0P,EAAK1P,KACZwQ,EAAOd,EAAK0B,OAAOZ,KACnBD,EAAOb,EAAK0B,OAAOb,KACnBG,EAAOhB,EAAK0B,OAAOV,KACnBD,EAAOf,EAAK0B,OAAOX,KACnBkC,EAAMH,EAAOlT,OAGf,IAAKoB,EAAI,EAAGA,EAAI4Q,EAAQ5Q,IACtBsR,GAAOV,EAAS5Q,IAAM4Q,EAAS5Q,GAC/BuR,EAAKhD,KAAKiD,KAAKF,EAAMJ,GAAM3C,KAAKkD,GAChCN,EAAGP,EAAS5Q,GAAKmR,EAAGP,EAAS5Q,GAAKuR,EAClCF,GAAS,EAAIE,EAGf,IAAKvR,EAAI,EAAGA,EAAIiR,EAAGjR,IACjBmR,EAAGnR,IAAMqR,EAGX,IAAI3Q,EAAS,IAAIuP,WAAW3Q,GAC1BoS,EAAOd,EAASpB,EAChBmC,EAAOf,EAASlB,EAGlB,IAAK1P,EAAI,EAAGA,EAAIiS,EAAKjS,IAAK,CASxB,IAPA+Q,EAAM,EAENV,IAHAQ,EAAIiB,EAAO9R,KAEXiC,EAAI4O,EAAIrB,IACMA,EAEdwB,EAAMU,EAAOzP,EAAIgP,EAAIS,EAAOzP,EAAIgP,EAChCH,EAAKD,EAAID,EAEJiB,EAJGjB,EAAS3O,EAAI,EAAI2O,EAAS3O,EAAI,EAItB4P,EAAIb,EAAKa,IACvBd,GAAOzR,EAAKwR,EAAKe,GAAKV,EAAGU,GAE3B,GAAId,EAAM,GACRrQ,EAAOmQ,GAAK,EAER5O,EAAI6N,IAAMA,EAAO7N,GACjBA,EAAI4N,IAAMA,EAAO5N,GACjBoO,EAAIL,IAAMA,EAAOK,GACjBA,EAAIN,IAAMA,EAAOM,OANvB,CAaA,IAHAW,EAAMW,EAAOtB,EAAIY,EAAIU,EAAOtB,EAAIY,EAChCH,EAAKD,EAAID,EAASpB,EAEbqC,EAJGjB,EAASP,EAAI,EAAIO,EAASP,EAAI,EAItBwB,EAAIb,EAAKa,IACvBd,GAAOzR,EAAKwR,EAAKe,EAAIrC,GAAK2B,EAAGU,GAE3Bd,EAAM,IACRrQ,EAAOmQ,GAAK,EAER5O,EAAI6N,IAAMA,EAAO7N,GACjBA,EAAI4N,IAAMA,EAAO5N,GACjBoO,EAAIL,IAAMA,EAAOK,GACjBA,EAAIN,IAAMA,EAAOM,IAErB3P,EAAOmQ,GAAK,GAIhB,MAAO,CACLvR,KAAMoB,EACN+O,MAAOD,EACPG,OAAQD,EACRgB,OAAQ,CACNZ,KAAMA,EACNE,KAAMA,EACNH,KAAMA,EACNE,KAAMA,KASZrB,EAAIgE,iBAAmB,SAAS1D,GAC9B,IAAI/M,EACFoO,EACAQ,EACAC,EACAiB,EACAvC,EAAIR,EAAKS,MACTC,EAAIV,EAAKW,OACTrQ,EAAO0P,EAAK1P,KACZwQ,EAAOd,EAAK0B,OAAOZ,KACnBD,EAAOb,EAAK0B,OAAOb,KACnBG,EAAOhB,EAAK0B,OAAOV,KACnBD,EAAOf,EAAK0B,OAAOX,KACnB4C,EAAK9C,EAAOC,EAAO,EACnB8C,EAAK7C,EAAOC,EAAO,EACnBtP,EAAS,IAAIuP,WAAW0C,EAAKC,GAC7BT,EAAK5D,KAAK6D,IAAItC,EAAM,GACpBuC,EAAK9D,KAAK+D,IAAIzC,EAAML,EAAI,GACxB+C,EAAKhE,KAAK6D,IAAIpC,EAAM,GACpBwC,EAAKjE,KAAK+D,IAAIvC,EAAML,EAAI,GAG1B,IAAKW,EAAIkC,EAAIlC,EAAImC,EAAK,EAAGnC,IACvB,IAAKpO,EAAIkQ,EAAIlQ,EAAIoQ,EAAK,EAAGpQ,IAEP,IAAZ3C,EADJuR,EAAIR,EAAIb,EAAIvN,KAEZ6O,EAAKD,EAAIrB,EACTuC,EAAKlB,EAAIrB,EAGS,IAAhBlQ,EAAKuR,EAAI,IACO,IAAhBvR,EAAKuR,EAAI,IACI,IAAbvR,EAAKwR,IACY,IAAjBxR,EAAKwR,EAAK,IACO,IAAjBxR,EAAKwR,EAAK,IACG,IAAbxR,EAAKyS,IACY,IAAjBzS,EAAKyS,EAAK,IACO,IAAjBzS,EAAKyS,EAAK,KAKVrR,GAAQ2P,EAAIL,GAAQ2C,GAAM1Q,EAAI6N,IAAS,IAM7C,GAAa,IAATA,EAAY,IAAKO,EAAIL,EAAMK,EAAIN,EAAO,EAAGM,IAAyB,IAAhB/Q,EAAK+Q,EAAIb,KAAU9O,GAAQ2P,EAAIL,GAAQ2C,GAAM,GAEnG,GAAI9C,IAASL,EAAI,EACf,IAAKa,EAAIL,EAAMK,EAAIN,EAAO,EAAGM,IAAgC,IAAvB/Q,EAAK+Q,EAAIb,EAAIK,KAAanP,GAAQ2P,EAAIL,GAAQ2C,GAAM9C,EAAOC,IAAS,GAE5G,GAAa,IAATE,EAAY,IAAK/N,EAAI6N,EAAM7N,EAAI4N,EAAO,EAAG5N,IAAqB,IAAZ3C,EAAK2C,KAAUvB,EAAOuB,EAAI6N,GAAQ,GAExF,GAAIC,IAASL,EAAI,EACf,IAAKzN,EAAI6N,EAAM7N,EAAI4N,EAAO,EAAG5N,IAAgC,IAAvB3C,EAAKyQ,EAAOP,EAAIvN,KAAUvB,GAAQqP,EAAOC,GAAQ2C,GAAM1Q,EAAI6N,IAAS,GAE5G,MAAO,CACLxQ,KAAMoB,EACN+O,MAAOkD,EACPhD,OAAQiD,EACRC,OAAQ,CAAE5Q,EAAG6N,EAAMO,EAAGL,KAQ1BtB,EAAIoE,iBAAmB,SAAS9D,GAC9B,IAAI/M,EACFoO,EACAQ,EACAC,EACAiB,EACAvC,EAAIR,EAAKS,MACTC,EAAIV,EAAKW,OACTrQ,EAAO0P,EAAK1P,KACZwS,EAAS,GACTO,EAAK7C,EAAI,EACTgD,EAAK9C,EAAI,EAGX,IAAKW,EAAI,EAAGA,EAAImC,EAAInC,IAClB,IAAKpO,EAAI,EAAGA,EAAIoQ,EAAIpQ,IAEF,IAAZ3C,EADJuR,EAAIR,EAAIb,EAAIvN,KAEZ6O,EAAKD,EAAIrB,EACTuC,EAAKlB,EAAIrB,EAGS,IAAhBlQ,EAAKuR,EAAI,IACO,IAAhBvR,EAAKuR,EAAI,IACI,IAAbvR,EAAKwR,IACY,IAAjBxR,EAAKwR,EAAK,IACO,IAAjBxR,EAAKwR,EAAK,IACG,IAAbxR,EAAKyS,IACY,IAAjBzS,EAAKyS,EAAK,IACO,IAAjBzS,EAAKyS,EAAK,IAKVD,EAAO9W,KAAK6V,IAMlB,IAAKR,EAAI,EAAGA,EAAIX,EAAGW,IAAyB,IAAhB/Q,EAAK+Q,EAAIb,IAAUsC,EAAO9W,KAAKqV,EAAIb,GAE/D,IAAKvN,EAAI,EAAGA,EAAIuN,EAAGvN,IAAqB,IAAZ3C,EAAK2C,IAAU6P,EAAO9W,KAAKiH,GAGvD,IADA4O,EAAIrB,EAAI,EACHa,EAAI,EAAGA,EAAIX,EAAGW,IAA6B,IAApB/Q,EAAK+Q,EAAIb,EAAIqB,IAAUiB,EAAO9W,KAAKqV,EAAIb,EAAIqB,GAGvE,IADAA,GAAKnB,EAAI,GAAKF,EACTvN,EAAI,EAAGA,EAAIuN,EAAGvN,IAAyB,IAAhB3C,EAAKuR,EAAI5O,IAAU6P,EAAO9W,KAAK6V,EAAI5O,GAE/D,OAAO6P,GAuCTpD,EAAIqE,cAAgB,SAAS/D,GAC3B,IAUEhP,EACA6R,EACA5P,EACAoO,EACAQ,EACAC,EACAzP,EACA2R,EACAxC,EACAyC,EACAC,EACAC,EACAC,EACAC,EACAC,EAxBEpU,EAjCN,SAAqB8P,GACnB,IAAI/M,EACFoO,EACAb,EAAIR,EAAKS,MACTnQ,EAAO0P,EAAK1P,KACZwQ,EAAOd,EAAK0B,OAAOZ,KACnBD,EAAOb,EAAK0B,OAAOb,KACnBG,EAAOhB,EAAK0B,OAAOV,KACnBD,EAAOf,EAAK0B,OAAOX,KACnB4C,EAAK9C,EAAOC,EAAO,EACnB8C,EAAK7C,EAAOC,EAAO,EACnBtP,EAAS,IAAIuP,WAAW0C,EAAKC,GAG/B,IAAKvC,EAAIL,EAAMK,EAAIN,EAAO,EAAGM,IAC3B,IAAKpO,EAAI6N,EAAM7N,EAAI4N,EAAO,EAAG5N,IACH,IAApB3C,EAAK+Q,EAAIb,EAAIvN,KAAUvB,GAAQ2P,EAAIL,EAAO,GAAK2C,GAAM1Q,EAAI6N,EAAO,IAAM,GAG9E,MAAO,CACLxQ,KAAMoB,EACN+O,MAAOkD,EACPhD,OAAQiD,EACRC,OAAQ,CAAE5Q,EAAG6N,EAAO,EAAGO,EAAGL,EAAO,IAU3BuD,CAAYvE,GAClBwE,EAAW,GACXC,EAAQ,EACRjE,EAAItQ,EAAEuQ,MACNiE,EAAS,EAAJlE,EACLE,EAAIxQ,EAAEyQ,OACNgE,EAAMzU,EAAEI,KACRsU,EAAK1U,EAAE2T,OAAO5Q,EACdmN,EAAKlQ,EAAE2T,OAAOxC,EACdwD,EAAO,IAAI5D,WAAW0D,GAqBpBG,EAAa,CACf,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,EAAE,EAAG,GACL,EAAE,EAAG,GACL,EAAE,GAAI,GACN,CAAC,GAAI,GACL,CAAC,GAAI,IAGP,IAAKzD,EAAI,EAAGA,EAAIX,EAAI,EAAGW,IACrB,IAAKpO,EAAI,EAAGA,EAAIuN,EAAI,EAAGvN,IAErB,GAAe,IAAX0R,EADJ9C,EAAIR,EAAIb,EAAIvN,GAEV,IAAKjC,GAAKwP,EAAGxP,EAAI0T,EAAI1T,GAAK0T,EAExB,GAAmB,IAAfC,EAAI9C,EAAI7Q,IAA4B,IAAhB6T,EAAKhD,EAAI7Q,GAAU,CASzC,IANAyT,IAEApS,EAAI,GACJmP,GAJAwC,EAAQhT,IAAMwP,GAIA,EAAI,EAClB2D,EAAUC,EAAWH,EAAQ,CAAEhR,EAAGA,EAAGoO,EAAGA,GACxC6C,EAAS,OACI,CAGX,IAFAW,EAAKV,EAAQ9C,EAAIb,EAAI2D,EAAQlR,GAAKwR,EAE7B5B,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAQtB,GAJAyB,EAAIQ,EAHJtD,GAAOA,EAAM,GAAK,GAOF,IAAZmD,EADJ7C,GAFAuC,EAAO,CAAEpR,EAAGkR,EAAQlR,EAAIqR,EAAE,GAAIjD,EAAG8C,EAAQ9C,EAAIiD,EAAE,KAErCjD,EAAIb,EAAI6D,EAAKpR,GACJ,CAEjB4R,EAAK/C,GAAM2C,EACX,MAEFI,EAAK/C,IAAO,EACZuC,EAAO,KAET,GAAa,OAATA,EAAe,MAEnB,GADAF,EAAUE,EACNH,GACF,GACEE,EAASnR,IAAMgR,EAAMhR,GACrBmR,EAAS/C,IAAM4C,EAAM5C,GACrB8C,EAAQlR,IAAMiR,EAAOjR,GACrBkR,EAAQ9C,IAAM6C,EAAO7C,EAErB,WAGF6C,EAASG,EAEXhS,EAAErG,KAAK,CAAEiH,EAAGmR,EAASnR,EAAI2R,EAAIvD,EAAG+C,EAAS/C,EAAIjB,IAC7CgE,EAAWD,EACX3C,GAAOA,EAAM,GAAK,EAGR,MAAR6C,IACFhS,EAAErG,KAAK,CAAEiH,EAAGgR,EAAMhR,EAAI2R,EAAIvD,EAAG4C,EAAM5C,EAAIjB,IACvCoE,EAASxY,KAAK,CAAEgY,MAAOA,EAAOS,MAAOA,EAAOM,OAAQ1S,KAOhE,OAAOmS,GAWT9E,EAAIsF,iBAAmB,SAASR,EAAUS,EAAkBC,GAC1D,IAEElU,EACA6R,EACAhB,EACAxP,EACA0S,EACA9B,EACAkC,EACAC,EACAhE,EACAiE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAf,EACAxE,EACAwF,EACAC,EACAC,EAtBEC,EAAcvB,EAAS5U,OACzB8B,EAAS,GAwBX,IAAKmR,EAAI,EAAGA,EAAIkD,EAAalD,IAK3B,GAHAkC,GADA1S,EAAImS,EAAS3B,IACFkC,QACX9B,EAAM5Q,EAAE0S,OAAOnV,QAELsV,EAAV,CAGE,IADAC,EAAY,GACPtD,EAAI,EAAGA,EAAIoB,EAAKpB,IACnBsD,EAAUnZ,KAAK,CAAEiH,EAAG8R,EAAOlD,GAAG5O,EAAGoO,EAAG0D,EAAOlD,GAAGR,IAEhD3P,EAAO1F,KAAK,CAAEgY,MAAO3R,EAAE2R,MAAOS,MAAOpS,EAAEoS,MAAOM,OAAQI,EAAWa,aAAc/C,QANjF,CAUAmC,EAAM,CAAC,EAAGnC,EAAM,GAChB7B,EAAQ,CAAC,CAAE6C,MAAO,EAAGgC,KAAMhD,EAAM,IAEjC,GAEE,MADAoC,EAAMjE,EAAMK,SACJwE,MAAQZ,EAAIpB,MAAQ,GAA5B,CAQA,IAHAqB,GAAQ,EACRC,EAAOF,EAAIpB,MAGTjT,EAAIqU,EAAIpB,MAAQ,EAChBjT,EAAIqU,EAAIY,KACRjV,IAGA4U,EAAKb,EAAO/T,GACZ6U,EAAKd,EAAOM,EAAIpB,OAChB6B,EAAKf,EAAOM,EAAIY,MAChBrB,EAAKgB,EAAG3S,EAAI4S,EAAG5S,EACfmN,EAAKwF,EAAGvE,EAAIwE,EAAGxE,EACfoE,EAAKlG,KAAK2G,KAAKtB,EAAKA,EAAKxE,EAAKA,GAC9BwE,EAAKgB,EAAG3S,EAAI6S,EAAG7S,EACfmN,EAAKwF,EAAGvE,EAAIyE,EAAGzE,EACfqE,EAAKnG,KAAK2G,KAAKtB,EAAKA,EAAKxE,EAAKA,GAC9BwE,EAAKiB,EAAG5S,EAAI6S,EAAG7S,EACfmN,EAAKyF,EAAGxE,EAAIyE,EAAGzE,EACfsE,EAAMpG,KAAK2G,KAAKtB,EAAKA,EAAKxE,EAAKA,IACWoF,EAAtCC,GAAMlG,KAAK2G,KAAKR,EAAKA,EAAKC,EAAMA,GAAaD,EACxCA,GAAMnG,KAAK2G,KAAKT,EAAKA,EAAKE,EAAMA,GAAaF,EAC1ClG,KAAK4G,KAAK/F,EAAKwF,EAAG3S,EAAI2R,EAAKgB,EAAGvE,EAAIwE,EAAG5S,EAAI6S,EAAGzE,EAAIyE,EAAG7S,EAAI4S,EAAGxE,GAAKsE,IAEhEL,IACTC,EAAOvU,EACPsU,EAAOE,GAIPF,EAAOL,IAETG,EAAIpZ,KAAKuZ,GACTnE,EAAMpV,KAAK,CAAEiY,MAAOoB,EAAIpB,MAAOgC,KAAMV,IACrCnE,EAAMpV,KAAK,CAAEiY,MAAOsB,EAAMU,KAAMZ,EAAIY,eAE/B7E,EAAMxR,OAAS,GAOxB,IALAuV,EAAY,GACZlC,EAAMmC,EAAIxV,OACVwV,EAAIgB,MAAK,SAASrZ,EAAG0R,GACnB,OAAO1R,EAAI0R,KAERoD,EAAI,EAAGA,EAAIoB,EAAKpB,IACnBsD,EAAUnZ,KAAK,CAAEiH,EAAG8R,EAAOK,EAAIvD,IAAI5O,EAAGoO,EAAG0D,EAAOK,EAAIvD,IAAIR,IAE1D3P,EAAO1F,KAAK,CAAEgY,MAAO3R,EAAE2R,MAAOS,MAAOpS,EAAEoS,MAAOM,OAAQI,EAAWa,aAAc3T,EAAE0S,OAAOnV,SAG1F,OAAO8B,GAGFgO,EArzBU,GAwzBZ,SAAS2G,GAAaC,GAC3B,IAAIC,EAAS3V,SAAS4V,cAAc,UACpCD,EAAO9F,MAAQ6F,EAAI7F,MACnB8F,EAAO5F,OAAS2F,EAAI3F,OACpB,IAAI8F,EAAMF,EAAOG,WAAW,MAE5B,OADAD,EAAIE,UAAUL,EAAK,EAAG,GACfG,EAAIJ,aAAa,EAAG,EAAGC,EAAI7F,MAAO6F,EAAI3F,QAGxC,SAASiG,GAAWC,EAAWpG,EAAOE,EAAQ1N,EAAGoO,EAAGyF,EAAWC,GACpE,IAIIC,EAAe,GACfpH,EAAQ,CACVtP,KAAMuW,EACNpG,MAAOA,EACPE,OAAQA,EACRC,MAAO,GAGLZ,EAAOP,GAAUE,UAAUC,EAAO3M,EAAGoO,EAAGyF,EAAW,MAAM,GAC7D9G,EAAOP,GAAUmD,oBAAoB5C,EAblB,GAenB,IAAIiH,EAAKxH,GAAUsE,cAAc/D,GAIjC,IAFAiH,EAAKxH,GAAUuF,iBAAiBiC,EAhBP,EACH,KAiBfrX,OAAS,EAAG,CACjB,GAAImX,EACF,OAAOE,EAAG,GAAGlC,OAEf,IAAK,IAAIlC,EAAI,EAAGqE,EAAOD,EAAG,GAAGlC,OAAOnV,OAAQiT,EAAIqE,EAAMrE,IACpDmE,EAAahb,KAAK,CAACib,EAAG,GAAGlC,OAAOlC,GAAG5P,EAAGgU,EAAG,GAAGlC,OAAOlC,GAAGxB,IAExD,OAAO2F,EAEP,OAAO,E,yBCr3BJ,SAASG,GAAmB1B,EAAIC,GACrC,IAIEpB,EAJE8C,EAAM3B,EAAGxS,EACXoU,EAAM5B,EAAGpE,EACTiG,EAAM5B,EAAGzS,EACTsU,EAAM7B,EAAGrE,EAiBX,OAdI+F,EAAME,IACRhD,EAAI/E,KAAK4G,IAAIiB,EAAME,GAEnBA,GADAF,EAAME,GACMhD,GAGV+C,EAAME,IACRjD,EAAI/E,KAAK4G,IAAIkB,EAAME,GAEnBA,GADAF,EAAME,GACMjD,GAKP,CAAEjB,GAAI+D,EAAK5D,GAAI6D,EAAKG,GAAIF,EAAKG,GAAIF,GAQnC,SAASG,GAAqBnB,EAAQoB,GAS3C,IARA,IAEIC,EAFerB,EAAOsB,SAASC,YAAYhb,QAAO,SAAAib,GAAK,OAAIA,EAAM7Y,MAAMnB,KAAO4Z,EAAM5Z,MAEhE,GAAGwY,OAAOyB,QAE9BC,EAAeL,EAAKvB,aAAa,EAAG,EAAGuB,EAAKrB,OAAO9F,MAAOmH,EAAKrB,OAAO5F,QAEtEuH,EAAe,GAGblX,EAAI,EACRA,EAAIuV,EAAOsB,SAASM,aAAaH,QAAQzB,OAAO9F,MAAQ8F,EAAOsB,SAASM,aAAaH,QAAQzB,OAAO5F,OAAS,EAC7G3P,GAAK,EACL,CACA,IAAI4N,EAAQqJ,EAAa3X,KAAKU,EAAI,GAC9BuN,EAAI0J,EAAa3X,KAAKU,EAAI,GAC1BwN,EAAIyJ,EAAa3X,KAAKU,EAAI,GAC1ByN,EAAIwJ,EAAa3X,KAAKU,EAAI,GAE1B4N,EAAQ,GAAKL,EAAI,GAAKC,EAAI,GAAKC,EAAI,EACrCyJ,EAAalc,KAAK,GAElBkc,EAAalc,KAAK,GAItB,OAAOkc,EAQF,SAASE,GAA6BC,EAAMC,GACjD,IAMIxH,EAAME,EAAMH,EAAME,EAYtB,MAlBe,CACb,CAAE9N,EAAGoV,EAAKpV,EAAGoO,EAAGgH,EAAKhH,GACrB,CAAEpO,EAAGoV,EAAKpV,EAAIoV,EAAK5H,MAAOY,EAAGgH,EAAKhH,GAClC,CAAEpO,EAAGoV,EAAKpV,EAAIoV,EAAK5H,MAAOY,EAAGgH,EAAKhH,EAAIgH,EAAK1H,QAC3C,CAAE1N,EAAGoV,EAAKpV,EAAGoO,EAAGgH,EAAKhH,EAAIgH,EAAK1H,SAGzBrR,SAAQ,SAAAiZ,GACb,IAAIC,EAAcF,EAAUC,MAAMA,QACrB1J,IAATiC,IACFA,EAAOD,EAAO2H,EAAYvV,EAC1B+N,EAAOD,EAAOyH,EAAYnH,GAE5BP,EAAOvB,KAAK+D,IAAIxC,EAAM0H,EAAYvV,GAClC+N,EAAOzB,KAAK+D,IAAItC,EAAMwH,EAAYnH,GAClCR,EAAOtB,KAAK6D,IAAIvC,EAAM2H,EAAYvV,GAClC8N,EAAOxB,KAAK6D,IAAIrC,EAAMyH,EAAYnH,MAE7B,CACLpO,EAAG6N,EACHO,EAAGL,EACHP,MAAOI,EAAOC,EACdH,OAAQI,EAAOC,GAUZ,SAASyH,GAA2BJ,EAAMK,GAA8B,IAAlBC,EAAiB,uDAAH,EACnEL,EAAY,IAAIM,KAAMC,UAG5B,OAFAP,EAAUQ,UAAUJ,EAAWzV,EAAGyV,EAAWrH,GAC7CiH,EAAUS,OAAQJ,EAAcpJ,KAAKkD,GAAM,KACpC2F,GAA6BC,EAAMC,GASrC,SAASU,GAAaX,EAAMY,EAAYC,GAAc,IACrDjW,EAAwBoV,EAAxBpV,EAAGoO,EAAqBgH,EAArBhH,EAAGZ,EAAkB4H,EAAlB5H,MAAOE,EAAW0H,EAAX1H,OAgBnB,OAdI1N,EAAI,GACNwN,GAASxN,EACTA,EAAI,GACKA,EAAIwN,EAAQwI,IACrBxI,EAAQwI,EAAahW,GAGnBoO,EAAI,GACNV,GAAUU,EACVA,EAAI,GACKA,EAAIV,EAASuI,IACtBvI,EAASuI,EAAc7H,GAGlB,CAAEpO,IAAGoO,IAAGZ,QAAOE,UC5HxB,SAASwI,GAAUlV,GACjB,IACImV,EAAMC,EAAOrY,EADbsY,EAAW,GAGf,IAAKD,EAAQ,EAAGD,EAAOnV,EAAI,GAAIjD,EAAI,EAAGA,EAAIiD,EAAIrE,OAAQoB,IAChDiD,EAAIjD,KAAOoY,GACbE,EAAStd,KAAKqd,EAAOD,GACrBC,EAAQ,EACRD,EAAOnV,EAAIjD,IACNqY,IAKT,OAFAC,EAAStd,KAAKqd,EAAOD,GAEdE,EAOT,SAASC,GAAUC,GACjB,IAAIC,EAAe,IAAIC,kBACnBC,EAAO,GASX,OAPAH,EAAQla,SAAQ,SAACnB,EAAIyb,GACfA,EAAM,IAAM,GACdH,EAAazd,KAAKyG,MAAMoX,KAAK,IAAIpX,MAAM,EAAItE,GAAIlB,KAAKuc,EAAQI,EAAM,SAItEH,EAAatV,KAAK,GAAG7E,SAAQ,SAAAnB,GAAE,OAAIwb,EAAK3d,KAAK0S,SAASvQ,OAC/Cwb,ECzBF,SAASG,GAAQjW,GAEtB,IAAIkW,EAAUlW,EAAK,IAEfmW,EAAQtL,SAASqL,EAAU,MAO/B,OANAA,GAAoB,KAMbC,EAAQ,IAJDtL,SAASqL,EAAU,IAIF,KAF/BA,EAAUxK,KAAK0K,MAAMF,IAQhB,SAASG,GAAWC,GACzB,KAAoB,kBAATA,IAAsBA,aAAgBrW,OA5BjC,2EAEC6V,KA0BkDQ,GAAnE,CA7BF,IA+BMC,EAAO,IAAItW,KAAKqW,GAClBE,IAAQ,IAAIvW,MAAOwW,UAAYF,EAAKE,WAAa,IACjDC,EAAWhL,KAAK0K,MAAMI,EAAO,OAE/B,KAAIG,MAAMD,IAAaA,EAAW,GAElC,OACgB,IAAbA,KACGF,EAAO,GAAM,WACZA,EAAO,KAAO,iBACdA,EAAO,MAAQ9K,KAAK0K,MAAMI,EAAO,IAAM,gBACvCA,EAAO,MAAQ,cACfA,EAAO,OAAS9K,KAAK0K,MAAMI,EAAO,MAAQ,eACjC,IAAbE,GAAkB,aAClBA,EAAW,GAAKA,EAAW,aAC3BA,EAAW,IAAMhL,KAAKC,KAAK+K,EAAW,GAAK,cAC5CA,EAAW,aAOR,SAASE,KACd,IAAIC,EAA4C,KAAjC,IAAI5W,MAAO6W,oBAG1B,OAFmB,IAAI7W,KAAKA,KAAK8W,MAAQF,GAAUG,cAAcnX,MAAM,GAAI,G,mCCkE7E,IAiDe,IACboX,gBAtKF,SAAyBC,GACvB,IAAIxE,EAAS3V,SAAS4V,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MAC5BH,EAAO9F,MAAQsK,EAAUtK,MACzB8F,EAAO5F,OAASoK,EAAUpK,OAC1B8F,EAAIuE,aAAaD,EAAW,EAAG,GAE/B,IAAInL,EAAQ,IAAIqL,MAEhB,OADArL,EAAM+E,IAAM4B,EAAO2E,YACZtL,GA8JPuL,WAtIF,SAAoBC,EAAQxL,EAAOyL,GACjC,IAAMC,EAAK1L,EAAM2L,aACfC,EAAK5L,EAAM6L,cAEP1D,EAAQa,KAAM8C,OAAO,GAAGC,QAAhB,WAA4BP,EAAOQ,UACjD,IAAK7D,EAEH,OADA8D,QAAQC,MAAR,iBAAwBV,EAAOrd,GAA/B,4BACO,GAGTga,EAAMgE,KAAK,iBAAiBC,OAC5BpD,KAAM8C,OAAO,GAAGO,YAEhB,IAIM3b,EAJSyX,EAAMmE,SAAS,CAAEC,WAAYb,EAAK1L,EAAMqJ,aACpCvC,WAAW,MAGbL,aAAa,EAAG,EAAGiF,EAAIE,GAKxC,OAJAzD,EAAMgE,KAAK,iBAAiBK,OAC5BxD,KAAM8C,OAAO,GAAGO,YACJI,aAAO/b,EAAKA,KAAMA,EAAKA,KAAKV,SAmHxC0c,WA3JF,SAAoBC,EAAK3M,GACvB,IAAM0L,EAAK1L,EAAM2L,aACfC,EAAK5L,EAAM6L,cAETlF,EAAS3V,SAAS4V,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MAC5BH,EAAO9F,MAAQ6K,EACf/E,EAAO5F,OAAS6K,EAEhB,IAAMgB,EAAU/F,EAAIgG,gBAAgBnB,EAAIE,GACxCgB,EAAQlc,KAAK/D,IAAImgB,aAAOH,IAExB9F,EAAIuE,aAAawB,EAAS,EAAG,GAE7B,IAAIG,EAAY,IAAI1B,MAEpB,OADA0B,EAAUhI,IAAM4B,EAAO2E,YAChByB,GA4IPC,gBA/GF,SAAyBC,GACvB,IAAItG,EAAS3V,SAAS4V,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MAW5B,OAVAH,EAAO9F,MAAe,EAAPoM,EAAW,EAC1BtG,EAAO5F,OAAgB,EAAPkM,EAAW,EAE3BpG,EAAIqG,YACJrG,EAAIsG,IAAIF,EAAO,EAAI,EAAGA,EAAO,EAAI,EAAGA,EAAO,EAAG,EAAG,EAAItN,KAAKkD,IAAI,GAE9DgE,EAAIuG,UAAY,EAChBvG,EAAIwG,YAAc,QAClBxG,EAAIyG,SAEG3G,EAAO2E,aAmGdiC,WAtDkB,WAClB,IAAMC,EAAY,GAiBlB,OAAO,YAA4B,IAAjB3I,EAAgB,EAAhBA,MAAO4I,EAAS,EAATA,MACnBC,EAAW7I,EAGf,GAFc,OAAV4I,IAAgBC,GAAsBD,GAEtCC,KAAYF,EAAW,OAAOA,EAAUE,GAE5C,IAAI7M,EAAQ,EACNxR,EAAQ,GAEd,GAAc,OAAVoe,QAA4BxO,IAAVwO,EAAqB,CACzC,IAAME,EAAYC,GAAwBH,GAC1Cpe,EAAMjD,KAAN,6EAAiFuhB,EAAjF,qBACAte,EAAMjD,KAAN,yEAA6EqhB,EAAMI,QAAQ,GAA3F,YACAhN,GAAgB,GAGdgE,IACFxV,EAAMjD,KAAN,mBACcyU,EADd,qFACgGgE,EADhG,YAGAhE,EAAQA,EAnCZ,SAA4B5O,GAC1B,IAAM6b,EAAM9c,SAAS4V,cAAc,OAC7BmH,EAAU/c,SAAS4V,cAAc,QACvCmH,EAAQ/a,MAAQ,kFAChB+a,EAAQC,UAAY/b,EAEpB6b,EAAIG,YAAYF,GAChB/c,SAASkd,KAAKD,YAAYH,GAE1B,IAAMK,EAAUL,EAAIM,wBAAwBvN,MAG5C,OAFAiN,EAAIO,SAEGF,EAuBWG,CAAmBzJ,GAAS,GAG9C,IACM0J,EApFV,SAAmB7d,GAajB,IAAI8d,EANK,CACLC,OAHU,IAIVC,OALU,KAkCVC,GAJJje,GADAA,GAHEA,GAPFA,EARA,SAAsBA,GAKpB,OAJIA,EAAKyC,QAAQ,8BAAgC,IAC/CzC,EAAOA,EAAKa,QAAQ,QAAb,qBAAoCid,EAAOE,OAA3C,qCAA8EF,EAAOE,UAGvFhe,EAGFke,CAAale,IAONa,QAAQ,KAAM,MAGhBA,QAAQ,YAAa,OACrBA,QAAQ,UAAW,MAIZA,QAdL,2BAcsBsd,oBACpC,MAAM,GAAN,OAAUL,EAAOC,OAAjB,8BAA6CE,GAA7C,OAAuDH,EAAOC,QA6ChDK,CADH,kCAA8BjO,EAA9B,aAAwCxR,EAAMhC,KAAK,IAAnD,WAIT,OADAmgB,EAAUE,GAAYa,EACfA,GA7CS,ICtHpB,SAASQ,GAAsBvC,GAC7B,IAAMwC,EAAMhe,SAASie,uBAAuB,iBAC5Cpc,MAAMoX,KAAK+E,GAAKtf,SAAQ,SAAAnB,GACtB,IAAI2gB,EAAW,KACfrc,MAAMoX,KAAK1b,EAAG4gB,WAAWzf,SAAQ,SAAA0f,IACI,IAA/BA,EAAIjc,QAAQ,gBAAsB+b,EAAWE,MAGlC,OAAbF,IACE1C,EAAMje,EAAG4gB,UAAUd,OAAO,gBACzB9f,EAAG4gB,UAAUE,IAAI,oBAK5B,IAAMC,GAAgB,WACpB,IAAMC,EAAQ,GAEd,OAAO,SAASzhB,EAAT,GAAmC,IAAlB0hB,EAAiB,EAAjBA,OAAQ/B,EAAS,EAATA,MACxBgC,EAAYD,EAASA,EAAOniB,KAAK,KAAO,GACxCqiB,EAAUC,EAAkBF,EAAYhC,GAE1CmC,EAAS,aAAeF,EAG5B,IAFAE,EAASA,EAAOjf,iBAEF4e,EAAO,OAAOA,EAAMK,GAElC9hB,EAAK+hB,aAAa,cAAeJ,GAEjC,IAAMK,EAASC,GAAOxC,WAAW,CAAE1I,MAAO4K,EAAWhC,MAAOA,IACtDuC,EAAM,cAAUF,EAAV,KAMZ,OAJAG,GAAY,IAAD,OAAKL,EAAL,4BAAgCI,IAE3CT,EAAMG,IAAW,EAEVE,GArBW,GA0BtB,SAASK,GAAY5jB,EAAM6jB,GACzB,IAAIld,EAAQhC,SAAS4V,cAAc,SACnC5T,EAAM1G,KAAO,WACb0E,SAASmf,qBAAqB,QAAQ,GAAGlC,YAAYjb,IAC/CA,EAAMod,OAAS,IAAIC,WACpBrd,EAAMod,MAAMC,WAAWhkB,EAAO,IAAM6jB,EAAQ,IAAK,IADhBld,EAAMsd,YAActd,EAAMod,OAAOG,QAAQlkB,EAAM6jB,GAevF,SAASM,GAAW1iB,GAElB,OADkB,IACXA,EAAK2iB,SAGd,SAASC,GAAU5iB,GACjB,KAAOA,EAAK6iB,iBAAiB7iB,EAAOA,EAAK8iB,WACzC,OAAO9iB,EAIT,SAAS+iB,GAAS/iB,GAChB,KAAOA,EAAK6iB,iBAAiB7iB,EAAOA,EAAKgjB,UAEzC,OAAOhjB,EAGT,SAASijB,GAAYjjB,GACnB,GAAIA,EAAK8iB,WAAY,OAAO9iB,EAAK8iB,WACjC,KAAO9iB,GAAM,CACX,GAAIA,EAAKkjB,YAAa,OAAOljB,EAAKkjB,YAClCljB,EAAOA,EAAKmjB,YAsChB,SAASC,GAAUpjB,EAAMmW,GACvB,IAAIkN,EAAOrjB,EAAKD,WAAU,GAG1B,OAFAsjB,EAAKC,WAAW,EAAGnN,GACnBnW,EAAKsjB,WAAWnN,EAAQnW,EAAKkC,OAASiU,GAC/BoN,KAAYF,EAAMrjB,GAG3B,SAASwjB,GAAoBC,GAAQ,IAE/BzjB,EAAM2W,EAAM4B,EAAMmL,EAAOpP,EADvBqP,EAAyDF,EAAzDE,eAAgBC,EAAyCH,EAAzCG,YAAaC,EAA4BJ,EAA5BI,aAAcC,EAAcL,EAAdK,UAkBjD,SAASC,EAAkB/jB,GACzB,QAAK0iB,GAAW1iB,OACZA,IAAS2jB,GAAkBC,EAAc,KACzC5jB,IAAS6jB,GAA8B,IAAdC,IAU/B,IA1BIH,EAAeK,WAAW9hB,QAAU0hB,EAAc,IACpDD,EAAiBZ,GAASY,EAAeK,WAAWJ,EAAc,IAClEA,EAAcD,EAAezhB,QAAUyhB,EAAeK,WAAW9hB,QAK/D4hB,EAAYD,EAAaG,WAAW9hB,SACtC2hB,EAAejB,GAAUiB,EAAaG,WAAWF,IACjDA,EAAY,GAcd9jB,EAAO2jB,EACPhN,EAAO,SAAA3W,GAAI,OAAKA,IAASuY,EAAO,KA3GlC,SAAyBvY,GACvB,GAAIA,EAAK8iB,WAAY,OAAO9iB,EAAK8iB,WAEjC,MAAQ9iB,EAAKkjB,aAEX,KADAljB,EAAOA,EAAKmjB,YACD,OAAO,KAGpB,OAAOnjB,EAAKkjB,YAmG2Be,CAAgBjkB,IACvDuY,EAAOwK,GAASc,GACT7jB,IAAS+jB,EAAkB/jB,IAAOA,EAAO2W,EAAK3W,GASrD,IARA0jB,EAAQ1jB,EAKRA,EAAO6jB,EACPlN,EAAO,SAAA3W,GAAI,OAAKA,IAASuY,EAAO,KAzDlC,SAAyBvY,GACvB,GAAIA,EAAKgjB,UAAW,OAAOhjB,EAAKgjB,UAEhC,MAAQhjB,EAAKkkB,iBAEX,KADAlkB,EAAOA,EAAKmjB,YACD,OAAO,KAGpB,OAAOnjB,EAAKkkB,gBAiD2BC,CAAgBnkB,IACvDuY,EAAOqK,GAAUe,GACV3jB,IAAS+jB,EAAkB/jB,IAAOA,EAAO2W,EAAK3W,GACrDsU,EAAMtU,EAENyjB,EAAMW,SAASV,EAAO,GACtBD,EAAMY,OAAO/P,EAAKA,EAAIpS,QAGxB,SAASoiB,GAAeC,EAAaC,EAAUC,GACrB,qBAAbD,GAAyC,OAAbA,IACrCA,EAAW,kBAGb,IAGIlU,EAAQ,QAERoU,EAnGN,SAAyBjB,GACvB,IAIIzjB,EAJA0jB,EAAQD,EAAME,eACdrP,EAAMmP,EAAMI,aACZc,EAAiBlB,EAAMmB,wBACvBF,EAAQ,GAIZ,IAAK1kB,EAAO0jB,EAAMP,WAAYnjB,IAC5B0kB,EAAMpmB,KAAK0B,GACPA,IAAS2kB,GAFqB3kB,EAAOA,EAAKmjB,YAOhD,IAHAuB,EAAMG,UAGD7kB,EAAO0jB,EAAO1jB,IACjB0kB,EAAMpmB,KAAK0B,GACPA,IAASsU,GAFUtU,EAAOijB,GAAYjjB,IAK5C,OAAO0kB,EA0EUI,CAAgBP,EAAYQ,QAClB3lB,QAAO,SAAAmV,GAAC,OAAImO,GAAWnO,MAM9CmP,EAAQ,EACRa,EAAYQ,OAAOnB,cAAgBc,EAAMhB,GAAOxhB,QAAQwhB,IAE5D,IAAIsB,EAAON,EAAMxiB,OACb8iB,EAAO,GAAKN,EAAMA,EAAMxiB,OAAS,GAAGA,SAAWqiB,EAAYQ,OAAOjB,YAAWkB,GAAc,GAG/F,IADA,IAAMC,EAAU,GACP3hB,EAAIogB,EAAOnO,EAAMyP,EAAM1hB,EAAIiS,EAAKjS,IAAK,CAC5C,IAAItD,EAAO0kB,EAAMphB,GACjB,IAAKgN,EAAM2L,KAAKjc,EAAKklB,WAAY,CAC/B,IAAIC,EAAKC,OAAOliB,SAAS4V,cAAc,QACvCqM,EAAGjgB,MAAMmgB,gBAAkBZ,EAASY,gBAEpCF,EAAGG,UAAYd,EACfxkB,EAAKmjB,WAAWoC,aAAaJ,EAAInlB,GACjCmlB,EAAGhF,YAAYngB,GAEfilB,EAAQ3mB,KAAK6mB,IAIjB,OAAOF,EAGT,SAASO,GAAgB/B,GAAQ,IACzBE,EAAyDF,EAAzDE,eAAgBC,EAAyCH,EAAzCG,YAAaC,EAA4BJ,EAA5BI,aAAcC,EAAcL,EAAdK,UAE7CpB,GAAWmB,IACTC,EAAY,GAAKA,EAAYD,EAAa3hB,SAC5C2hB,EAAeT,GAAUS,EAAcC,GACvCL,EAAMY,OAAOR,EAAc,IAI3BnB,GAAWiB,IACTC,EAAc,GAAKA,EAAcD,EAAezhB,SAC9CyhB,IAAmBE,GACrBF,EAAiBP,GAAUO,EAAgBC,GAC3CH,EAAMY,OAAOV,EAAgBG,EAAYF,IAEzCD,EAAiBP,GAAUO,EAAgBC,GAE7CH,EAAMW,SAAST,EAAgB,IAKrC,IAAM8B,GAAiB,SAACC,EAAWC,EAASpQ,GAC1C,IAAIqQ,EAAM,EAiBV,OAAOrQ,EAhBO,SAARoG,EAAQ3b,GACZ,GAAIA,IAAS2lB,EACX,OAAOC,EAEa,UAAlB5lB,EAAK6lB,WAAsBD,GAAY5lB,EAAKkC,QAC1B,OAAlBlC,EAAK6lB,WAAmBD,GAAY,GAExC,IAAK,IAAItiB,EAAI,EAAGA,GAAKtD,EAAKgkB,WAAW9hB,OAAQoB,IAAK,CAChD,IAAMiR,EAAIvU,EAAKgkB,WAAW1gB,GAC1B,GAAIiR,EAAG,CACL,IAAMpT,EAAMwa,EAAMpH,GAClB,QAAYpD,IAARhQ,EAAmB,OAAOA,IAKvBwa,CAAM+J,IAGfI,GAAc,SAAAH,GAClB,IAAIlC,EAAQ2B,OACTW,eACAC,WAAW,GACXC,aACCvC,EAAQD,EAAMG,YACdtP,EAAMmP,EAAMK,UAEZoC,GAAc,EACdC,GAAY,EA+BhB,OA7BiB,SAAXC,EAAWpmB,GAef,GAdsB,UAAlBA,EAAK6lB,WACH7lB,IAASyjB,EAAME,gBAAmBuC,IAAaxC,GAAgB1jB,EAAKkC,QACpElC,IAASyjB,EAAME,iBAAgBuC,GAAc,GAE7ClmB,IAASyjB,EAAMI,cAAiBsC,IAAW7R,GAAYtU,EAAKkC,QAC5DlC,IAASyjB,EAAMI,eAAcsC,GAAY,IAGzB,OAAlBnmB,EAAK6lB,WACFK,IAAaxC,GAAgB,GAE7ByC,IAAW7R,GAAY,IAG1BtU,EAAKgkB,WAAW9hB,OAAS,EAC3B,IAAK,IAAIoB,EAAI,EAAGA,GAAKtD,EAAKgkB,WAAW9hB,OAAQoB,IAAK,CAChD,IAAMiR,EAAIvU,EAAKgkB,WAAW1gB,GAE1B,GAAIiR,EAAG,CACL,IAAMpT,EAAMilB,EAAS7R,GACrB,GAAIpT,EAAK,OAAOA,IAMxBilB,CAAST,GAEF,CAAEjC,MAAOA,EAAOpP,IAAKA,IAGxB+R,GAAmB,SAAC5lB,EAAI6lB,GAC5B,IAAI/Q,EAAM+Q,EAwBV,MAAO,CAAEtmB,KAtBQ,SAAXomB,EAAWpmB,GACf,GAAKA,EAEL,GAAsB,UAAlBA,EAAK6lB,SAAsB,CAC7B,GAAItQ,EAAMvV,EAAKkC,QAAU,EAAG,OAAOlC,EAC9BuV,GAAYvV,EAAKkC,YACjB,GAAsB,OAAlBlC,EAAK6lB,SACdtQ,GAAY,OACP,GAAIvV,EAAKgkB,WAAW9hB,OAAS,EAClC,IAAK,IAAIoB,EAAI,EAAGA,GAAKtD,EAAKgkB,WAAW9hB,OAAQoB,IAAK,CAChD,IAAMiR,EAAIvU,EAAKgkB,WAAW1gB,GAE1B,GAAIiR,EAAG,CACL,IAAMpT,EAAMilB,EAAS7R,GACrB,GAAIpT,EAAK,OAAOA,IAMXilB,CAAS3lB,GAEP8U,QAGjB,SAASgR,GAAYC,GACnB,IAAIC,EAAO,GAEPD,GACFA,EAAM5kB,SAAQ,SAAA8kB,GACZ,KAAOA,EAAK5D,YAAY4D,EAAKvD,WAAWwD,aAAaD,EAAK5D,WAAY4D,GAEtED,EAAKnoB,KAAKooB,EAAKvD,YACfuD,EAAKvD,WAAWyD,YAAYF,MAIhCD,EAAK7kB,SAAQ,SAAA2S,GAAC,OAAIA,EAAEsS,eC3Uf,SAASC,GAASC,EAAMC,EAAMC,GACnC,IAAIC,EAEJ,OAAO,WACL,IAAM5M,EAAU7c,KACd0pB,EAAOC,UACHC,EAAQ,WACZH,EAAU,KACLD,GACHF,EAAKO,MAAMhN,EAAS6M,IAGlBI,EAAUN,IAAcC,EAC9BM,aAAaN,GACbA,EAAUxf,WAAW2f,EAAOL,GACxBO,GAASR,EAAKO,MAAMhN,EAAS6M,ICdtB,QAAE5J,QAAOkK,OAAM5F,WAAU/B,SAAQ4H,QAAO/nB,gBAAemnB,YAAUa,YCHzE,SAAqBC,GAC1B,OAAKA,EACEA,EACJxkB,MAAM,KACNhE,QAAO,SAAA8F,GAAK,OAAIA,EAAM9B,MAAM,KAAK,IAAM8B,EAAM9B,MAAM,KAAK,MACxDjB,KAAI,SAAA+C,GAAK,MAAI,CACZA,EACG9B,MAAM,KAAK,GACXykB,OACApkB,QAAQ,OAAO,SAAAkB,GAAC,OAAIA,EAAE6M,OAAO,GAAGhM,iBACnCN,EACG9B,MAAM,KACN4C,MAAM,GACNzG,KAAK,KACLsoB,WAEJrhB,QACC,SAACshB,EAAU5iB,GAAX,mBAAC,eACI4iB,GADL,IAEE,CAAC5iB,EAAM,IAAKA,EAAM,OAEpB,IApBgB,MDEuE6iB,MAAKC,a,oBEHrFC,GAAaC,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACpC,IAAKA,EAAKqnB,aAAernB,EAAKsnB,SAASC,MAAO,OAAO,KACrD,IAAMC,EAAQxnB,EAAKunB,OAASvnB,EAAKqnB,WAAnB,iBAA0CI,GAAMb,MAAMlL,WAAW1b,EAAKqnB,aAAgB,GACpG,OAAKrnB,EAAK0nB,SAIL1nB,EAAKsnB,SAASpkB,QAAWlD,EAAKsnB,SAASpkB,OAAO9B,OAIjD,6BACE,kBAAC,IAAD,CAASumB,UAAU,UAAUC,MAAO5nB,EAAKunB,MAAQ,6BAA+B,2BAC9E,kBAAC,IAAD,CAAQ7pB,KAAK,OAAOmqB,QAAS7nB,EAAK8nB,YAAatD,UAAWsC,KAAOiB,UAC9D/nB,EAAKunB,MAAQ,QAAU,cAG3BC,GATI,6BAAMA,EAAK,eAAWA,GAAU,uBAJlCxnB,EAAKunB,MACH,qCAAWC,GADM,QAkBtBQ,GAAaZ,aAAS,YAAsB,IAwC5Ca,EAxCyBjoB,EAAkB,EAAlBA,KAAMkoB,EAAY,EAAZA,MAmC/BC,EAAQ,kBAAC,IAAD,CAAOC,OAAO,YAUtBpoB,EAAKqoB,eAAiBroB,EAAKsoB,iBAC7BL,EAAe,0BAAMzD,UAAWsC,KAAOc,OAAxB,kBAEX5nB,EAAKuoB,GACPN,EAAe,0BAAMzD,UAAWsC,KAAOc,OAAxB,MAAmC5nB,EAAKuoB,IAC9CvoB,EAAKT,KACd0oB,EAAe,0BAAMzD,UAAWsC,KAAOc,OAAxB,MAAmC5nB,EAAKT,KAOvDS,EAAKqoB,eACPF,EAAQ,kBAAC,IAAD,CAAOC,OAAO,gBAMpBpoB,EAAKqoB,cAAgBroB,EAAKsoB,mBAC5BH,EAAQ,kBAAC,IAAD,CAAOC,OAAO,aAmCxB,OACE,kBAAC,IAAKI,KAAN,CACEzoB,IAAKC,EAAKT,GACVilB,UAAWxkB,EAAK0nB,SAAL,UAAmBZ,KAAO2B,WAA1B,YAAwC3B,KAAO4B,qBAAwB5B,KAAO2B,WACzFZ,QAAS,SAAAc,IACN3oB,EAAK0nB,UAAYQ,EAAMU,gBAAgBC,iBAAiB7oB,EAAKT,MAGhE,yBAAKilB,UAAWsC,KAAOgC,gBACrB,6BACE,yBAAKtE,UAAWsC,KAAOc,OACpBO,EACAF,GAHL,UAME,2BAAIjoB,EAAK+oB,WAAL,WAAsB/oB,EAAK+oB,WAA3B,mBAAkDtB,GAAMb,MAAMlL,WAAW1b,EAAKgpB,eACjFhpB,EAAKipB,UAAL,cAAwBjpB,EAAKipB,WAAc,KAC5C,kBAAC9B,GAAD,CAAYnnB,KAAMA,KAGnBkoB,EAAMgB,aAAa,UAAYlpB,EAAKmpB,SAAWnpB,EAAKopB,gBACnD,kBAAC,IAAD,CAASzB,UAAU,UAAUC,MAAM,sBACjC,kBAACyB,EAAA,EAAD,CAAiB7E,UAAWsC,KAAOqC,WAGtCnpB,EAAK0nB,UAjDR,yBAAKlD,UAAWsC,KAAOwC,SAEXtpB,EAAKupB,SA7EnB,kBAAC,IAAD,CAAS5B,UAAU,UAAUC,MAAM,uCACjC,kBAAC,IAAD,CACEvJ,KAAK,QACL3gB,KAAK,UACLmqB,QAAS,SAAAc,GACPA,EAAGa,iBACHxpB,EAAKypB,gBAAe,KAGtB,kBAACC,EAAA,EAAD,QAMJ,kBAAC,IAAD,CAAS/B,UAAU,UAAUC,MAAM,qCACjC,kBAAC,IAAD,CACEvJ,KAAK,QACL3gB,KAAK,UACLisB,OAAO,EACP9B,QAAS,SAAAc,GACPA,EAAGa,iBACHxpB,EAAKypB,gBAAe,KAGtB,kBAACC,EAAA,EAAD,QAkDF,OAIGxB,EAAMgB,aAAa,uBAClB,kBAAC,IAAD,CAASvB,UAAU,UAAUC,MAAM,8BACjC,kBAAC,IAAD,CACED,UAAU,aACVC,MAAO,oDACPgC,UAhBM,WAGd5pB,EAAK6pB,KAAKC,iBAAiB9pB,IAcnB+pB,OAAO,SACPC,OAAO,SACPC,WAAW,UAEX,kBAAC,IAAD,CAAQ5L,KAAK,QAAQ6L,QAAM,EAAC9lB,MAAO,CAAE+lB,WAAY,gBAC/C,kBAACC,EAAA,EAAD,eAwCVC,G,uKACM,IACAnC,EAAUvrB,KAAKqE,MAAfknB,MAEJN,EACF,yBAAKpD,UAAWsC,KAAOc,MAAQ,IAAMd,KAAOwD,YAC1C,yBAAKlmB,MAAO,CAAEmmB,QAAS,OAAQC,WAAY,WACzC,4CAGF,yBAAKpmB,MAAO,CAAEqmB,YAAa,QACxBvC,EAAMgB,aAAa,wBAClB,kBAAC,IAAD,CAASvB,UAAU,UAAUC,MAAM,2BACjC,kBAAC,IAAD,CACEvJ,KAAK,QACLwJ,QAAS,SAAAc,GACPA,EAAGa,iBACH,IAAM3lB,EAAIqkB,EAAMU,gBAAgB8B,cAAc,CAAErC,cAAc,IAC9DH,EAAMU,gBAAgBC,iBAAiBhlB,EAAEtE,MAI3C,kBAACorB,EAAA,EAAD,UAsBNC,EAAU1C,EAAMU,gBAAgBiC,YAAYxpB,KAAI,SAAAwC,GAAC,OAAI,kBAACmkB,GAAD,CAAYjoB,IAAK8D,EAAEtE,GAAIS,KAAM6D,EAAGqkB,MAAOA,OAElG,OACE,kBAAC,IAAD,CAAMN,MAAOA,EAAOvJ,KAAK,QAAQyM,UAAW,CAAEC,QAAS,IAAKC,WAAY,QACtE,kBAAC,IAAD,KAAO9C,EAAMU,gBAAgBiC,YAAcD,EAAU,iE,GAhDnCK,aAsDX7D,eAASiD,I,yCC9MHa,G,uKAEjB,IAAI9mB,EACA+mB,EAAU,UAAMrE,KAAOsE,MAQ3B,OANIzuB,KAAKqE,MAAMoD,QAAOA,EAAQzH,KAAKqE,MAAMoD,OAErCzH,KAAKqE,MAAMwjB,YACb2G,EAAU,UAAMrE,KAAOsE,KAAb,YAAqBzuB,KAAKqE,MAAMwjB,YAI1C,yBAAK6G,YAAW1uB,KAAKqE,MAAMsqB,KAAM9G,UAAW2G,EAAY/mB,MAAOA,GAC5DzH,KAAKqE,MAAMV,c,GAbc2qB,a,qBCCnBM,eAAO,QAAPA,CACbnE,aAAS,YAAsB,IAgBzBoE,EAcAC,EACAC,EACAC,EACAC,EAjCM5rB,EAAkB,EAAlBA,KAAMkoB,EAAY,EAAZA,MAIZoB,EAAU,CACZuC,KAAM,GACNC,OAAQ,GACRC,OAAQ,IAGF1D,EAA6CroB,EAA7CqoB,aAAcC,EAA+BtoB,EAA/BsoB,iBAAkBhB,EAAatnB,EAAbsnB,SAVZ,EAWcY,EAAM8D,SAAxCC,EAXoB,EAWpBA,cAAeC,EAXK,EAWLA,eA2BvB,GArBIhE,EAAMiE,OACRX,EAAkB,wBAAIhH,UAAWsC,KAAOqF,KAAO,iBAA7B,YAAwDjE,EAAMiE,KAAK5sB,KAMnF0sB,GAAiBC,IACnB5C,EAAQyC,OAAS,kBAAC,GAAD,wBACjBzC,EAAQuC,KAAO,kBAAC,GAAD,wBACfvC,EAAQwC,OAAS,kBAAC,GAAD,yBAWd5D,EAAMU,gBAAgBwD,eAAiBlE,EAAMmE,QAAS,CACzD,IAAMC,EAAWpE,EAAMqE,aAEnBrE,EAAMgB,aAAa,UACrBuC,EACE,kBAAC,IAAD,CAAS7D,MAAM,4BAA4B4E,gBA9C/B,IA+CV,kBAAC,IAAD,CAAQF,SAAUA,EAAU5uB,KAAK,QAAQmqB,QAASK,EAAMuE,SAAUjI,UAAWsC,KAAO+E,KAAO,gBAA3F,QACQvC,EAAQuC,SAMjBxD,IAAiBC,GAAsBJ,EAAMmE,UAAYhE,GAAgBH,EAAMgB,aAAa,aAE/FyC,EACE,kBAAC,IAAD,CAAS/D,MAAM,+BAA+B4E,gBAzDlC,IA0DV,kBAAC,IAAD,CACEF,SAAUA,EACV5uB,KAAK,UACLgvB,KAAM,kBAACC,GAAA,EAAD,MACN9E,QAASK,EAAM0E,iBACfpI,UAAWsC,KAAOiF,OAAS,kBAL7B,UAOUzC,EAAQyC,WAMnB1D,GAAgBC,IAAuBD,GAAgBH,EAAMgB,aAAa,aAE7EwC,EACE,kBAAC,IAAD,CAAS9D,MAAM,kCAAkC4E,gBA1ErC,IA2EV,kBAAC,IAAD,CACEF,SAAUA,EACV5uB,KAAK,UACLgvB,KAAM,kBAACG,GAAA,EAAD,MACNhF,QAASK,EAAM4E,iBACftI,UAAU,iBAET8D,GAAoBhB,EAASpkB,OAAS,SAAW,SAPpD,IAO+DomB,EAAQwC,UAMxE5D,EAAMgB,aAAa,sBACtB0C,EAAY,kBAACzE,GAAD,CAAYnnB,KAAMA,KAIlC,IAAI4qB,EACF,yBAAKpG,UAAWsC,KAAOiG,OACrB,yBAAKvI,UAAWsC,KAAOkG,SACrB,yBAAKxI,UAAWsC,KAAOlC,WACpB6G,EACAC,EACAC,EACAC,GAEFJ,IAKP,OAAsB,eAAdxrB,EAAKtC,MAAyBwqB,EAAMmE,UAAYzB,M,oBC/GtDqC,G,4MACJC,MAAQ,CACN7sB,IAAK,KACL8sB,OAAQ,EAAKnsB,MAAMknB,MAAMiF,OACzBrrB,KAAM,EAAKd,MAAMknB,MAAMiE,KAAKrqB,KAC5B+oB,YAAa,I,uDAGL,IAAD,OACDuC,EAAOzwB,KACLurB,EAAUvrB,KAAKqE,MAAfknB,MACFO,EAAaP,EAAMU,gBAAgBlB,SAEzC,OACE,6BACE,6BACA,qCACA,6BACE,kBAAC,IAAD,CACEG,QAAS,SAAAc,GACP,EAAK0E,SAAS,CAAEhtB,IAAK2B,KAAKsrB,UAAUpF,EAAMU,gBAAgBlB,SAAS6F,cAFvE,wBAQA,kBAAC,IAAD,CACE1F,QAAS,SAAAc,GACP,EAAK0E,SAAS,CAAEhtB,IAAK2B,KAAKsrB,UAAUpF,EAAMU,gBAAgBlB,SAAS8F,2BAFvE,2BAQA,kBAAC,IAAD,CACE3F,QAAS,SAAAc,GACHyE,EAAKF,MAAM7sB,KAAKooB,EAAWgF,sBAAsBzrB,KAAKC,MAAMmrB,EAAKF,MAAM7sB,QAF/E,2BAQA,kBAAC,IAAD,CACEwnB,QAAS,SAAAc,GACP,IAAM9kB,EAAIqkB,EAAMU,gBAAgB8E,uBAChCxF,EAAMU,gBAAgBC,iBAAiBhlB,EAAEtE,IAErC6tB,EAAKF,MAAM7sB,KAAKwD,EAAE4pB,sBAAsBzrB,KAAKC,MAAMmrB,EAAKF,MAAM7sB,QALtE,0BAYA,kBAAC,IAAD,CACEwnB,QAAS,SAAAc,GACP,EAAK0E,SAAS,CAAEhtB,IAAK6nB,EAAMiE,KAAKrqB,SAFpC,aAQA,kBAAC,IAAD,CACE+lB,QAAS,SAAAc,GAEP,IAAM7mB,EAAOE,KAAKC,MAAMmrB,EAAKF,MAAM7sB,KAC7B8rB,EAAO,CACX5sB,GAAIuC,EAAI,GACR6rB,QAAS,EACT7rB,KAAME,KAAKsrB,UAAUxrB,IAGvBomB,EAAM0F,aACN1F,EAAM2F,QAAQ1B,GACdjE,EAAM4F,uBAAuB3B,GAC7BjE,EAAM6F,aAAY,GAEd7F,EAAMU,gBAAgBlB,UACxBQ,EAAMU,gBAAgBlB,SAASznB,cAAa,SAAAf,GAAI,OAAIA,EAAK8uB,aAAe9uB,EAAK8uB,YAAYZ,QAhB/F,0BAuBF,kBAAC,KAAD,KACE,yBAAKhpB,MAAO,CAAEmmB,QAAS,SACrB,yBAAKnmB,MAAO,CAAE6pB,UAAW,QACvB,qCACA,kBAAC,KAAMC,SAAP,CACEC,KAAM,GACN/vB,MAAOzB,KAAKuwB,MAAMC,OAClB3I,UAAU,YACV4J,SAAU,SAAAzF,GACR,EAAK0E,SAAS,CAAEF,OAAQxE,EAAG0F,OAAOjwB,YAIxC,yBAAKgG,MAAO,CAAE6pB,UAAW,QACvB,mCACA,kBAAC,KAAMC,SAAP,CACEC,KAAM,GACN/vB,MAAOzB,KAAKuwB,MAAMprB,KAClB0iB,UAAU,YACV4J,SAAU,SAAAzF,GACR,EAAK0E,SAAS,CAAEvrB,KAAM6mB,EAAG0F,OAAOjwB,WAGpC,0CACA,kBAAC,KAAM8vB,SAAP,CACEC,KAAM,GACN/vB,MAAOzB,KAAKuwB,MAAMrC,YAClBrG,UAAU,YACV4J,SAAU,SAAAzF,GACR,EAAK0E,SAAS,CAAExC,YAAalC,EAAG0F,OAAOjwB,aAK/C,kBAAC,IAAD,CACEgG,MAAO,CAAE6N,MAAO,QAChB4V,QAAS,SAAAc,GAAO,IACNwE,EAAW,EAAKD,MAAhBC,OACFtC,EAAc7oB,KAAKC,MAAM,EAAKirB,MAAMrC,aAAX,sBACzB/oB,EAAOE,KAAKC,MAAM,EAAKirB,MAAMprB,MAEnComB,EAAM0F,aACN1F,EAAMoG,aAAanB,GACnBjF,EAAMqG,WAAW,CAAEzsB,SACnBomB,EAAMsG,gBAAgB,CAAE3D,cAAa4D,YAAa,KAClD,IAAMhW,EAAKyP,EAAMU,gBACbnQ,EAAGoS,YAAYzpB,QAAQqX,EAAGoQ,iBAAiBpQ,EAAGoS,YAAY,GAAGtrB,MAZrE,e,GAvHmB0rB,aA8Id7D,eAAS6F,I,iFC5HT7F,gBAAS,YAAgB,IAAbc,EAAY,EAAZA,MACjBwG,EAAYxG,EAAMU,gBAAgBlB,SAAlCgH,QAER,OACE,yBAAKlK,UAAWsC,KAAOlC,UAAY,aACjC,yBAAKJ,UAAS,UAAKsC,KAAOiG,MAAZ,YAAqBjG,KAAO6H,kBACxC,kBAAC,IAAD,CACEjxB,KAAK,QACLgvB,KAAM,kBAACkC,GAAA,EAAD,MACN/G,QAAS,SAAAc,GACP+F,GAAWA,EAAQG,SAAWH,EAAQI,OACtCnG,EAAGa,mBALP,OASGtB,EAAM8D,SAASC,eAAiB/D,EAAM8D,SAASE,gBAAkB,kBAAC,GAAD,oBAEpE,kBAAC,IAAD,CACExuB,KAAK,QACLgvB,KAAM,kBAACqC,GAAA,EAAD,MACNlH,QAAS,SAAAc,GACP+F,GAAWA,EAAQM,SAAWN,EAAQO,OACtCtG,EAAGa,mBALP,QAUA,kBAAC,IAAD,CACE9rB,KAAK,QACLgvB,KAAM,kBAACwC,GAAA,EAAD,MACNrH,QAAS,SAAAc,GACP+F,GAAWA,EAAQS,UAJvB,SASCjH,EAAMkH,gBACL,kBAAC,IAAD,CACEhrB,MAAO,CAAEmmB,QAAS,QAClB1C,QAAS,SAAAc,GACPT,EAAMmH,qBAGP,IANH,qBAUDnH,EAAMgB,aAAa,UAClB,8BACGwF,EAAQY,QADX,MACuBZ,EAAQA,QAAQttB,OACpCstB,EAAQa,UAAY,cAK3B,yBAAK/K,UAAWsC,KAAOiG,OACpB7E,EAAMsH,aAAetH,EAAMuH,oBAC1B,kBAAC,IAAD,CACE/xB,KAAK,UACLmqB,QAAS,SAAAc,GACPT,EAAMwH,sBAHV,qBASDxH,EAAMsH,cAAgBtH,EAAMuH,oBAC3B,kBAAC,IAAD,CACE/xB,KAAK,UACLmqB,QAAS,SAAAc,GACPT,EAAMwH,sBAHV,qBAUF,kBAAC,IAAD,CACEhyB,KAAK,SACLgvB,KAAM,kBAACiD,GAAA,EAAD,MACN9H,QAAS,SAAAc,GAGP,OAFAT,EAAM0H,iBACNjH,EAAGa,kBACI,KAGX,kBAAC,IAAD,CACE9rB,KAAK,SACL8mB,UAAU,QACVkI,KAAMxE,EAAM8D,SAAS6D,WAAa,kBAACC,GAAA,EAAD,MAA6B,kBAACC,GAAA,EAAD,MAC/DlI,QAAS,SAAAc,GAGP,OAFAT,EAAM8D,SAASgE,mBACfrH,EAAGa,kBACI,U,UC3GbyG,I,OAAa7I,aAAS,YAAsB,IAAnBpnB,EAAkB,EAAlBA,KAAMkoB,EAAY,EAAZA,MACnC,OACE,kBAAC,IAAKM,KAAN,CACEzoB,IAAKC,EAAKT,GACVilB,UAAWxkB,EAAK0nB,SAAL,UAAmBZ,KAAO2B,WAA1B,YAAwC3B,KAAO4B,qBAAwB5B,KAAO2B,WACzFZ,QAAS,SAAAc,IACN3oB,EAAK0nB,UAAYQ,EAAMU,gBAAgBsH,iBAAiBlwB,EAAKT,MAGhE,yBAAKilB,UAAWsC,KAAOqJ,UACrB,6BACE,yBAAK3L,UAAWsC,KAAOc,OAAQ5nB,EAAKipB,UAAL,iBAA2BjpB,EAAKipB,UAAhC,KAA+C,MADhF,UAGE,2BAAIjpB,EAAK+oB,WAAL,WAAsB/oB,EAAK+oB,WAA3B,mBAAkDtB,GAAMb,MAAMlL,WAAW1b,EAAKgpB,gBAEpF,yBAAKxE,UAAWsC,KAAOwC,SACpBtpB,EAAK0nB,UACJ,kBAAC,IAAD,CAASC,UAAU,UAAUC,MAAM,iDACjC,kBAAC,IAAD,CACEvJ,KAAK,QACLwJ,QAAS,SAAAc,GACPA,EAAGa,iBAEH,IAAM/Q,EAAKyP,EAAMU,gBACX9kB,EAAI2U,EAAGiP,SACP7jB,EAAI4U,EAAG2X,4BAA4BtsB,GAGzCwgB,OAAO1d,YAAW,WAChBshB,EAAMU,gBAAgBC,iBAAiBhlB,EAAEtE,MACxC,MAGL,kBAAC8wB,GAAA,EAAD,eAUVC,G,uKACM,IACApI,EAAUvrB,KAAKqE,MAAfknB,MACAuG,EAAgBvG,EAAMU,gBAAtB6F,YAEJ7G,EACF,yBAAKpD,UAAWsC,KAAOc,MAAQ,IAAMd,KAAOwD,YAC1C,2CAECpC,EAAMU,gBAAgB6F,YAAYrtB,OAAS,IAAK,GAiBrD,OACE,kBAAC,IAAD,CAAMwmB,MAAOA,EAAOvJ,KAAK,QAAQyM,UAAW,CAAEC,QAAS,MACrD,kBAAC,IAAD,KACG0D,GAAeA,EAAYrtB,OAC1BqtB,EAAYptB,KAAI,SAAAyC,GAAC,OAAI,kBAACmsB,GAAD,CAAYlwB,IAAK+D,EAAEvE,GAAIS,KAAM8D,EAAGokB,MAAOA,OAE5D,kBAAC,IAAKM,KAAN,KACE,yBAAKpkB,MAAO,CAAE2mB,QAAS,WAAvB,yB,GAjCYE,aA0CX7D,eAASkJ,I,qBCtFHC,G,kLACE,IACX9H,EAAe9rB,KAAKqE,MAApBynB,WACJA,GAAYA,EAAW+H,kB,+BAI3B,IAAIC,EAAK3J,KAAOiG,MAGhB,OAFIpwB,KAAKqE,MAAMwjB,YAAWiM,EAAKA,EAAK,IAAM9zB,KAAKqE,MAAMwjB,WAE9C,yBAAKA,UAAWiM,GAAK9zB,KAAKqE,MAAMV,c,GAVNM,IAAMqqB,W,6DCNvCyF,GAAe,GACfC,GAAgB,GAEpBC,KAAUtyB,OAAS,SAASuyB,GAC1B,GAA6B,aAAzBD,KAAUE,WAAd,CAEA,IAAMzzB,GAAOwzB,EAAMxC,QAAUwC,EAAME,YAAYC,QACzCvzB,GAAQozB,EAAMxC,QAAUwC,EAAME,YAAYtzB,KAIhD,OAFAmzB,KAAUK,SAAS,4BAA4B9V,KAAK9d,GAAOI,EAAO,aAE3D,IA0EM,QAAEyzB,UA/CjB,SAAmBnxB,GAA0B,IAArBoxB,EAAoB,uDAAZ,WAC9BP,KAAUQ,OAAOrxB,EAAKoxB,UAEfT,GAAa3wB,UACb4wB,GAAc5wB,IA2CKsxB,OAlE5B,SAAgBtxB,EAAKkmB,EAAMqL,GAA2B,IAArBH,EAAoB,uDAAZ,WACnCT,GAAa3wB,KAEjB2wB,GAAa3wB,GAAOkmB,EACpB0K,GAAc5wB,GAAOuxB,EAErBV,KAAU7wB,EAAKoxB,EAAOlL,KA4DYsL,UAjCpC,WACE,cAAgBvzB,OAAOQ,KAAKkyB,IAA5B,gBAAK,IAAI3wB,EAAG,KAA+B6wB,KAAUQ,OAAOrxB,GAE5D2wB,GAAe,IA8B8Bc,SAhB/C,WAKE,IAJA,IAEIC,EADK,oCACMnvB,MAAM,IAEZE,EAAI,EAAGA,GAAKivB,EAAMrwB,OAAQoB,IAAK,CACtC,IAAIkvB,OAAI,EAIR,GAFKA,EAAOD,EAAMjvB,IAEbkuB,GAAaiB,eAAeD,GAAO,OAAOA,EAGjD,OAAO,MAGgDT,SAvBzD,SAAkBE,GAChBP,KAAUK,SAASE,IAsB8CS,QAxCnE,WACE,OAAO5zB,OAAOQ,KAAKkyB,KAuCuDmB,kBAnD5E,WACE,OAAOlB,KC/BHmB,GAAqB,WACzB,IAAMC,EAAQC,GAAOH,oBAMf/vB,EAAO9D,OAAOQ,KAAKuzB,GACtBzzB,QAAO,SAAA+U,GAAC,OAAI0e,EAAM1e,MAClBhS,KAAI,SAAAgS,GAAC,OAAI,IAAIrV,OAAO,CAAE+B,IAAKsT,EAAG0e,MAAOA,EAAM1e,QAE9C,OAAO,kBAAC,KAAD,CAAO4e,QATE,CACd,CAAErK,MAAO,MAAOsK,UAAW,MAAOnyB,IAAK,OACvC,CAAE6nB,MAAO,cAAesK,UAAW,QAASnyB,IAAK,UAOnBoyB,WAAYrwB,EAAMuc,KAAK,WAG1C+I,gBAAS,YAAgB,IAAbc,EAAY,EAAZA,MACzB,OACE,kBAAC,KAAD,CACEkK,QAASlK,EAAMmK,gBACfzK,MAAM,WACNkD,UAAW,CAAEE,WAAY,KACzBsH,OAAO,GACPC,SAAUrK,EAAM0H,gBAEhB,kBAAC,KAAD,CAAM4C,iBAAiB,KACrB,kBAAC,KAAKC,QAAN,CAAcC,IAAI,UAAU3yB,IAAI,KAC9B,kBAAC,KAAD,CACE4yB,QAASzK,EAAM8D,SAASC,cACxBmC,SAAU,WACRlG,EAAM8D,SAAS4G,kBAHnB,2BAQA,6BACA,kBAAC,KAAD,CACED,QAASzK,EAAM8D,SAASE,eACxBkC,SAAU,WACRlG,EAAM8D,SAAS6G,mBAHnB,wBAQA,6BACA,kBAAC,KAAD,CACEF,QAASzK,EAAM8D,SAAS8G,oBACxB1E,SAAU,WACRlG,EAAM8D,SAAS+G,wBAHnB,+BAQA,6BACA,kBAAC,KAAD,CACEJ,QAASzK,EAAM8D,SAASgH,WACxB5E,SAAU,WACRlG,EAAM8D,SAASiH,qBAHnB,kCAmBA,6BACA,kBAAC,KAAD,CACEN,QAASzK,EAAM8D,SAASkH,mBACxB9E,SAAU,WACRlG,EAAM8D,SAASmH,6BAHnB,+CASA,6BACA,kBAAC,KAAD,CAAUR,QAASzK,EAAM8D,SAASoH,kBAAmBhF,SAAUlG,EAAM8D,SAASqH,yBAA9E,iCAIA,6BACA,kBAAC,KAAD,CAAUV,QAASzK,EAAM8D,SAASsH,gBAAiBlF,SAAUlG,EAAM8D,SAASuH,uBAA5E,+BAoBF,kBAAC,KAAKd,QAAN,CAAcC,IAAI,UAAU3yB,IAAI,KAC9B,kBAAC,GAAD,OAEF,kBAAC,KAAK0yB,QAAN,CAAcC,IAAI,SAAS3yB,IAAI,KAC7B,kBAAC,KAAD,CACE4yB,QAASzK,EAAM8D,SAASwH,gBACxBpF,SAAU,WACRlG,EAAM8D,SAASyH,mBAHnB,gCASA,6BACA,kBAAC,KAAD,CAAUd,QAASzK,EAAM8D,SAAS0H,uBAAwBtF,SAAUlG,EAAM8D,SAAS2H,sBAAnF,8CAIA,6BACA,kBAAC,KAAD,CACEv1B,MAAM,yBACNw1B,eAAgB1L,EAAM8D,SAAS6H,qBAC/BzF,SAAU,WACRlG,EAAM8D,SAAS8H,2BAJnB,0BASA,6BACA,kBAAC,KAAD,CACE11B,MAAM,yBACNw1B,eAAgB1L,EAAM8D,SAAS+H,qBAC/B3F,SAAU,WACRlG,EAAM8D,SAASgI,2BAJnB,gC,wRC3HJC,GAAY,CAChBC,gBAAiB,CAAC,OAAQC,KAAoB,SAAAj1B,GAAI,OAAI,0BAAMslB,UAAW,MAAOtlB,EAAKmE,KAAKmB,UAAU,EAAG,QAErG4vB,qBAAsB,CAAC,OAAQD,KAAoB,SAAAj1B,GAAI,OAAI,0BAAMkF,MAAO,CAAEqM,MAAO,YAAcvR,EAAKmE,QAEpGgxB,iBAAkB,CAAC,QAASC,KAAe,SAAAp1B,GAAI,sBAAaA,EAAK0jB,MAAM3D,QAAQ,GAAhC,cAAwC/f,EAAKsU,IAAIyL,QAAQ,MAExGsV,sBAAuB,CACrB,aACAC,KACA,SAAAt1B,GAAI,mBAAUA,EAAKvB,OAAO82B,WAAWv1B,EAAK0jB,OAAtC,cAAkD1jB,EAAKvB,OAAO82B,WAAWv1B,EAAKsU,QAGpFkhB,oBAAqB,CACnB,QACAC,KACA,SAAAz1B,GAAI,OACF,kBAAC,WAAD,cACQ,0BAAMkF,MAAO,CAAEqM,MAAO,YAAcvR,EAAK01B,WAKrDC,gBAAiB,CACf,OACAC,KACA,SAAA51B,GACE,IAAM8S,EAAI9S,EAAK+S,MAAQ/S,EAAK61B,OACtB7iB,EAAIhT,EAAKiT,OAASjT,EAAK81B,OAC7B,MAAM,aAAN,OAAoBhjB,EAAEiN,QAAQ,GAA9B,cAAsC/M,EAAE+M,QAAQ,MAIpDgW,mBAAoB,CAAC,UAAWC,KAAiB,6BAEjDC,mBAAoB,CAClB,UACAC,KACA,SAAAl2B,GACE,IAAMm2B,EAAUn2B,EAAKm2B,QAAUn2B,EAAK61B,OAC9BO,EAAUp2B,EAAKo2B,QAAUp2B,EAAK81B,OAC9BO,EAAWr2B,EAAKq2B,SACtB,MAAM,WAAN,OAAkBF,EAAQpW,QAAQ,GAAlC,cAA0CqW,EAAQrW,QAAQ,GAA1D,sBAAqEsW,EAAStW,QAAQ,GAAtF,oCACc/f,EAAKuF,EAAEwa,QAAQ,GAD7B,aACoC/f,EAAK2T,EAAEoM,QAAQ,GADnD,OAMJuW,oBAAqB,CACnB,WACAC,KACA,SAAAv2B,GAAI,yBAAgBA,EAAKw2B,UAAUzW,QAAQ,GAAvC,aAA8C/f,EAAKy2B,UAAU1W,QAAQ,MAG3E2W,iBAAkB,CAAC,QAASC,KAAmB,2BAE/CC,aAAc,CAAC,iBAAkBC,KAAmB,oCAEpDC,cAAe,CAAC,QAASrB,KAAiB,4BAGtCsB,GAAO7O,aAAS,YAA0B,IAAvB5C,EAAsB,EAAtBA,UAAWtlB,EAAW,EAAXA,KAC5BzB,EAAO4B,kBAAQH,GAAMzB,KACrBA,KAAQw2B,IAAY5W,QAAQC,MAAR,aAAoB7f,EAApB,iBAFmB,mBAIlBw2B,GAAUx2B,GAJQ,GAItCy4B,EAJsC,KAIhCC,EAJgC,KAM7C,GAAIj3B,EAAKk3B,YAAa,CACpB,IAAMC,EAAUn3B,EAAKk3B,YAAYE,gBAC7BD,EAAQj1B,SACV80B,EAAO,WACL,OAAO,0BAAM1R,UAAWsC,KAAOyP,OAAQF,EAAQ53B,KAAK,QAI1D,OACE,0BAAM+lB,UAAW,CAACsC,KAAO5nB,KAAMslB,GAAWlmB,OAAOk4B,SAAS/3B,KAAK,MAC7D,kBAACy3B,EAAD,MACCC,EAAWj3B,OAKZu3B,GAAcrP,aAAS,YAAe,IAAZloB,EAAW,EAAXA,KAExBw3B,EAD6BC,kBAAQz3B,GAAM0pB,gBAAgBlB,SAASkP,YAAlEC,cACctyB,QAAQrF,GACxBzB,EAAO4B,kBAAQH,GAAMzB,KAC3B,KAAMA,KAAQw2B,IAAY,OAAO,KAEjC,IAAM6C,EAAW53B,EAAK63B,cAClBC,EAAa,GAGfA,EADEF,EACW,CACXvS,gBAAiBuS,GAGN,CACXvS,gBAAiB,OACjB9T,MAAO,OACPwmB,UAAW,2BAjB0B,mBAqBpBhD,GAAUx2B,GArBU,GAqBlC4F,EArBkC,KAqB5B6yB,EArB4B,KAsBzC,OACE,0BAAM1R,UAAWsC,KAAOoQ,SACrBR,GAAS,GAAK,kBAAC,IAAD,CAAO7b,MAAO6b,EAAQ,EAAGtyB,MAAO4yB,IAC/C,kBAACd,EAAD,MACC7yB,M,+BC7HM8zB,GAAc,SAAC,GAAD,IAAGrmB,EAAH,EAAGA,OAAQ0T,EAAX,EAAWA,UAAcxjB,EAAzB,8CACzB,uCAAKwjB,UAAW,CAACsC,KAAOqB,MAAO3D,GAAWlmB,OAAOk4B,SAAS/3B,KAAK,MAAUuC,GACtE8P,ICgBCsmB,GAAahQ,aAAS,YAA0B,IAAvBpnB,EAAsB,EAAtBA,KAAMq3B,EAAgB,EAAhBA,IAAK1xB,EAAW,EAAXA,KACxC,IAAK2xB,kBAAQt3B,GAAO,OAAO,KAC3B,IAAM6D,EAAI8yB,kBAAQ32B,GAAM4oB,gBAAgBlB,SAClC6P,EAAa,CACjBzQ,KAAO0Q,QACP7xB,GAAQmhB,KAAOnhB,MACC,IAAhB3F,EAAKy3B,QAAmB3Q,KAAO2Q,OAC/Bz3B,EAAK0nB,UAAYZ,KAAOY,UACxBppB,OAAOk4B,SAEHM,EAAW92B,EAAK+2B,cAClBC,EAAa,GAcjB,OAXEA,EADEF,EACW,CACXvS,gBAAiBuS,GAGN,CACXvS,gBAAiB,OACjB9T,MAAO,OACPwmB,UAAW,2BAKb,kBAAC,IAAKzO,KAAN,CACEzoB,IAAKC,EAAKT,GACVilB,UAAW+S,EAAW94B,KAAK,KAC3BopB,QAAS,WACPhkB,EAAE6zB,WAAW13B,IAEf23B,YAAa,WACX33B,EAAK43B,cAAa,IAEpBC,WAAY,WACV73B,EAAK43B,cAAa,KAGpB,kBAAC,GAAD,CAAa9mB,OAAQumB,EAAM,EAAGjzB,MAAO4yB,IACrC,kBAACf,GAAD,CAAM/2B,KAAMc,EAAMwkB,UAAWsC,KAAO5nB,QAElCc,EAAK83B,UAAY,kBAAC,IAAD,CAAOjd,MAAO,KAAMzW,MAAO,CAAEmgB,gBAAiB,UAEhEvkB,EAAK+3B,UACJ,kBAAC,IAAD,CACE1Z,KAAK,QACL3gB,KAAK,OACLgvB,KAAM1sB,EAAKy3B,OAAS,kBAACO,GAAA,EAAD,MAA2B,kBAACvC,GAAA,EAAD,MAC/C5N,QAAS7nB,EAAKi4B,aACdzT,UAAWxkB,EAAKy3B,OAAS3Q,KAAO2Q,OAAS3Q,KAAOsL,UAInDpyB,EAAK6e,OACJ,0BACE2F,UAAWsC,KAAOoR,UAClB9zB,MAAO,CACLqM,MAAOgX,GAAMzI,OAAOnO,iBAAiB7Q,EAAK6e,SAG3C7e,EAAK6e,MAAMI,QAAQ,QAOxBkZ,GAAY/Q,aAAS,YAAoB,IAAjBpnB,EAAgB,EAAhBA,KAEtBo4B,GAFsC,EAAVf,IAEf,CACjB9S,gBAFSvkB,EAAKmqB,WAGd1Z,MAAOzQ,EAAKq4B,cACZC,OAAQ,UACRC,OAAQ,QAGV,OACE,kBAAC,KAAD,CAAKn0B,MAAOg0B,EAAY/Z,KAAMre,EAAKqe,MAChCre,EAAK40B,WAKN4D,GAAY,SAAC,GAA2B,EAAzBtQ,MAA0B,IAAnB0O,EAAkB,EAAlBA,YAC1B,OACE,kBAAC,KAAD,CAAM6B,aAAc,CAAC7B,EAAYr5B,OAC/B,kBAAC,KAAKirB,KAAN,CAAWzoB,IAAI,WACb,yBACE8nB,QAAS,SAAAc,GAGP,OAFAiO,EAAY8B,QAAQ,WACpB/P,EAAGa,kBACI,GAETplB,MAAO,CAAE6N,MAAO,QAASsY,QAAS,OAAQoO,eAAgB,kBAE1D,0CAGJ,kBAAC,KAAKnQ,KAAN,CAAWzoB,IAAI,UACb,yBACE8nB,QAAS,SAAAc,GAGP,OAFAiO,EAAY8B,QAAQ,UACpB/P,EAAGa,kBACI,GAETplB,MAAO,CAAE6N,MAAO,QAASsY,QAAS,OAAQoO,eAAgB,kBAE1D,2CAOJC,GAAWxR,aAAS,YAAsB,IAAnBwP,EAAkB,EAAlBA,YAC3B,OACE,kBAAC,KAAD,CAAM6B,aAAc,CAAC7B,EAAYhf,OAC/B,kBAAC,KAAK4Q,KAAN,CAAWzoB,IAAI,QACb,yBACE8nB,QAAS,SAAAc,GAGP,OAFAiO,EAAYiC,QAAQ,QACpBlQ,EAAGa,kBACI,GAETplB,MAAO,CAAE6N,MAAO,QAASsY,QAAS,OAAQoO,eAAgB,kBAE1D,8BACE,kBAACG,GAAA,EAAD,MADF,SAGA,8BAA4B,SAArBlC,EAAYhf,OAA8C,QAA1Bgf,EAAYmC,UAAsB,SAAM,aAGnF,kBAAC,KAAKvQ,KAAN,CAAWzoB,IAAI,SACb,yBACE8nB,QAAS,SAAAc,GAGP,OAFAiO,EAAYiC,QAAQ,SACpBlQ,EAAGa,kBACI,GAETplB,MAAO,CAAE6N,MAAO,QAASsY,QAAS,OAAQoO,eAAgB,kBAE1D,8BACE,kBAACK,GAAA,EAAD,MADF,UAGA,8BAA4B,UAArBpC,EAAYhf,OAA+C,QAA1Bgf,EAAYmC,UAAsB,SAAM,iBAOpFE,GAAa7R,aAAS,YAAsB,IAC1C8R,EADyC,EAAlBtC,YACAuC,cAAa,SAACn5B,EAAMq3B,EAAK+B,GACpD,MAAO,CACLr5B,IAAKC,EAAKT,GACVqoB,MAAOwR,EAAU,kBAACjB,GAAD,CAAWn4B,KAAMA,EAAMq3B,IAAKA,IAAU,kBAACD,GAAD,CAAYp3B,KAAMA,EAAMq3B,IAAKA,QAIxF,OACE,kBAAC,KAAD,CACE7S,UAAWsC,KAAOuS,WAClBj1B,MAAO,CAAEkQ,OAAQ,oBAAqBglB,aAAc,OACpDJ,SAAUA,EACVK,UAAU,EACVC,WAAW,EACXC,kBAAkB,EAClBC,kBAAkB,EAClBC,aAAc,kBAACC,GAAA,EAAD,WAKdC,GAAczS,aAAS,YAAsB,IAAnBwP,EAAkB,EAAlBA,YACxBkD,GAAUlD,EAAYC,cAAckD,MAAK,SAAAhqB,GAAC,MAAmB,KAAfA,EAAEiqB,YAChDd,EAAWtC,EAAYqD,QAAO,SAACj6B,EAAMq3B,GACzC,MAAO,CACLt3B,IAAKC,EAAKT,GACVqoB,MAAO,kBAACwP,GAAD,CAAYp3B,KAAMA,EAAMq3B,IAAKA,EAAK1xB,KAAMm0B,QAInD,OACE,kBAAC,KAAD,CACEtV,UAAWsC,KAAOuS,WAClBH,SAAUA,EACVgB,WAAW,EACXX,UAAU,EACVC,WAAW,EACXC,kBAAkB,EAClBC,kBAAkB,EAClBC,aAAc,kBAACC,GAAA,EAAD,MACdO,OAAQ,YAAkD,IAA/Cj7B,EAA8C,EAA9CA,KAAMk7B,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACjCC,EAAUr7B,EAAK8B,MAAMw5B,SACrBC,EAAUL,EAASp5B,MAAMw5B,SACzBE,EAAUx7B,EAAK8B,MAAM8jB,IAAIxiB,MAAM,KACrC+3B,GAA8BnqB,SAASwqB,EAAQA,EAAQt5B,OAAS,IAChE,IAAMu5B,EAAYD,EAAQt5B,OAEpBw5B,EAAUhE,EAAYiE,aAAaN,GACnCO,EAAUlE,EAAYiE,aAAaJ,GAIzC,GAFA7D,EAAYmE,iBAEM,IAAdJ,GAAmBL,IAA+B,IAAlBD,EAClCS,EAAQE,YAAY,SACf,IAAsB,IAAlBX,EAAqB,CAAC,IAAD,MAGxBY,IADU,UAAAL,EAAQM,gBAAR,eAAkBC,iBAAkB,IAChB78B,QAAO,SAAA88B,GAAC,OAAIA,EAAEC,mBAElD,GAAIJ,EAAoB75B,OAAQ,CAC9B,IACMk6B,EAAUR,EAAQI,SAASC,eAE3BI,EAAO9T,GAAM1G,SAASvb,QAAQy1B,EAAoB55B,KAAI,SAAA+5B,GAAC,OAAIA,EAAEC,gBAAgB/4B,MAAM,SACnFk5B,EAAO/T,GAAM1G,SAASvb,QAAQ81B,EAAQj6B,KAAI,SAAA+5B,GAAC,OAAKA,EAAE7E,MAAQ,CAAC6E,EAAE7E,MAAO6E,EAAEh9B,OAAS,CAACg9B,EAAEh9B,WAExF,GAAgE,IAA5Dm9B,EAAKj9B,QAAO,SAAAF,GAAK,OAAK,IAAMo9B,EAAKj3B,QAAQnG,MAAQgD,OAAc,OAIrE,aAAIw5B,EAAQM,gBAAZ,iBAAI,EAAkBO,iBAAtB,aAAI,EAA6BC,WAAY,CAC3C,IAOIC,EANAC,EAAWC,OAAOjB,EAAQM,SAASO,UAAUC,YAkBjD,GAXAC,EAAa,SAASz8B,GACpB,IAAKA,EAAM,OAAO,EAGlB,IAAM48B,EAAiBlF,EAAYmF,iBAAiB78B,EAAK88B,KAAK36B,KAAI,SAAAwC,GAAC,OAAI83B,EAAW93B,MAElF,OAA6B,GAAzBi4B,EAAe16B,OAAoB,EAEhC,EAAI2P,KAAK6D,IAAI4R,MAAMzV,KAAM+qB,IAG9BF,GAAY,EAAG,CACjBA,GAAsBD,EAAWb,GAEjC,IADA,IAAImB,EAAMrB,EACHqB,GACLA,EAAMrF,EAAYsF,WAAWD,EAAIjC,UACjC4B,GAAsB,EAGxB,GAAIA,EAAW,EAAG,QAItBd,EAAQE,YAAYJ,EAAQr7B,WASvB6nB,gBAAS,YAA4B,EAAzBc,MAA0B,IAAnB0O,EAAkB,EAAlBA,YACxB75B,EAAY65B,EAAZ75B,QAER,OACE,6BACE,yBACEqH,MAAO,CACLmmB,QAAS,OACToO,eAAgB,gBAChBwD,YAAa,MACbC,aAAc,MACd5R,WAAY,WAGd,yBAAKpmB,MAAO,CAAEi4B,KAAM,IAElB,kBAAC,KAAD,CAASC,QAAM,EAACC,YAAY,OAAOn4B,MAAO,CAAE+N,OAAQ,SAClD,kBAAC,KAAD,CAAUqqB,QAAS,kBAAC,GAAD,CAAW5F,YAAaA,IAAiBjP,UAAU,cACpE,0BAAMnD,UAAWiY,KAAaC,KAAM7U,QAAS,SAAA9iB,GAAC,OAAIA,EAAEykB,mBAC5B,YAArBoN,EAAYr5B,KAAqB,0CAAgBR,EAAQqE,OAAxB,KAA0C,KACtD,WAArBw1B,EAAYr5B,KAAoB,SAAW,SAKnDR,EAAQqE,OAAS,GAA0B,YAArBw1B,EAAYr5B,MACjC,kBAAC,KAAD,CAAUi/B,QAAS,kBAAC5D,GAAD,CAAUhC,YAAaA,IAAiBjP,UAAU,cACnE,0BAAMnD,UAAWiY,KAAaC,KAAM7U,QAAS,SAAA9iB,GAAC,OAAIA,EAAEykB,mBAClD,kBAACmT,GAAA,EAAD,MADF,YAMJ5/B,EAAQqE,QAAU,qDAEnBrE,EAAQqE,OAAS,GAA0B,YAArBw1B,EAAYr5B,MAAsB,kBAACs8B,GAAD,CAAajD,YAAaA,IAElF75B,EAAQqE,OAAS,GAA0B,WAArBw1B,EAAYr5B,MAAqB,kBAAC07B,GAAD,CAAYrC,YAAaA,Q,kDCxT/EgG,GAAoBC,KAApBD,UAAWE,GAASD,KAATC,KAmBbC,GAAe,SAAA75B,GACnB,OAAIA,EAAOxF,KAAKs/B,SAAS,WAlBNnY,EAmBG3hB,EAjBpB,kBAAC45B,GAAD,CAAM/8B,IAAK8kB,EAAQmX,IAAKxX,UAAWsC,KAAOlG,QAA1C,cAEGiE,EAAQsW,eAAe95B,KAAI,SAAA4U,GAC1B,IAAMgnB,EAAUhnB,EAAMkU,YAAc,UAEpC,OACE,kBAAC,KAAD,CAAKpqB,IAAKkW,EAAM1W,GAAIkR,MAAOwsB,EAASzY,UAAWsC,KAAOzpB,KACnD4Y,EAAM7X,YAWU,WAAhB8E,EAAOxF,KACT,kBAACk/B,GAAD,gBAAoB15B,EAAOg6B,WACT,aAAhBh6B,EAAOxF,KAEd,kBAACk/B,GAAD,CAAWpY,UAAWsC,KAAOqW,KAC3B,kBAACL,GAAD,eACA,kBAACA,GAAD,CAAMM,MAAI,EAAC5Y,UAAWsC,KAAOuW,MAC1Bn6B,EAAOg6B,UAAUz+B,KAAK,QAIJ,YAAhByE,EAAOxF,KACT,kBAACk/B,GAAD,iBAAqB15B,EAAOg6B,UAAUz+B,KAAK,OAG7C,KAnCY,IAAAomB,GAsCNuC,gBAAS,YAA4B,IAAzBc,EAAwB,EAAxBA,MAAOO,EAAiB,EAAjBA,WAC1BvpB,EAAOupB,EAAW6U,gBAExB,OACE,kBAAC,WAAD,KACE,uBAAG9Y,UAAWsC,KAAOqW,KACnB,kBAAC1G,GAAD,CAAav3B,KAAMA,IADrB,SACoCA,EAAKK,GADzC,IAC8C,KAC1CL,EAAK44B,UAAY,kBAAC,IAAD,CAAOjd,MAAO,WAAYzW,MAAO,CAAEmgB,gBAAiB,WAEzE,yBAAKC,UAAWsC,KAAOyW,UAAY,qBAChCr+B,EAAK2f,OACJ,kBAAC,WAAD,KACE,kBAACie,GAAD,eACS,kBAACA,GAAD,CAAMU,WAAS,GAAEt+B,EAAK2f,SAKlC3f,EAAKu+B,eACJ,kBAACX,GAAD,uBACiB,kBAACA,GAAD,CAAMY,MAAI,GAAEx+B,EAAKu+B,eADlC,OAGE,kBAACrT,EAAA,EAAD,CACE1sB,KAAK,SACL0G,MAAO,CAAEk0B,OAAQ,WACjBzQ,QAAS,WACP3oB,EAAKy+B,0BAMb,kBAAC,WAAD,KAAWz+B,EAAKilB,QAAQ9iB,IAAI07B,MAG9B,yBAAKvY,UAAWsC,KAAOiG,MAAQ,sBAgB5B7tB,EAAK44B,UACJ,kBAAC,WAAD,KACE,kBAAC,IAAD,CAASnQ,UAAU,UAAUC,MAAM,wBACjC,kBAAC,IAAD,CACEgW,aAAW,kBACXpZ,UAAWsC,KAAO+W,OAClBhW,QAAS,WACPY,EAAWqV,kBAAkB5+B,KAG/B,kBAAC6+B,GAAA,EAAD,MAEC7V,EAAM8D,SAASC,eAAiB/D,EAAM8D,SAASE,gBAAkB,kBAAC,GAAD,gBAItE,kBAAC,IAAD,CAASvE,UAAU,UAAUC,MAAM,wBACjC,kBAAC,IAAD,CACEpD,UAAWsC,KAAO+W,OAClBhW,QAAS,WACPY,EAAWuV,sBAAqB,KAGlC,kBAACrT,EAAA,EAAD,SAMR,kBAAC,IAAD,CAAShD,UAAU,UAAUC,MAAM,iBACjC,kBAAC,IAAD,CACEpD,UAAWsC,KAAO+W,OAClBngC,KAAK,SACLmqB,QAAS,WACPY,EAAWwV,gBAGb,kBAACC,GAAA,EAAD,MACChW,EAAM8D,SAASC,eAAiB/D,EAAM8D,SAASE,gBAAkB,kBAAC,GAAD,gBAIrEhtB,EAAK44B,UACJ,kBAAC,IAAD,CAASnQ,UAAU,UAAUC,MAAM,8BACjC,kBAAC,IAAD,CACElqB,KAAK,SACL8mB,UAAWsC,KAAO+W,OAClBhW,QAAS,WACPY,EAAW6U,gBAAgBa,iBAG7B,kBAAC/T,EAAA,EAAD,MAEClC,EAAM8D,SAASC,eAAiB/D,EAAM8D,SAASE,gBAAkB,kBAAC,GAAD,oBAMzEzD,EAAW2V,mBACV,kBAAC,KAAD,CACEh6B,MAAO,CAAEi6B,UAAW,QAASC,aAAc,SAC3CC,SAAU,SAAAngC,GACRc,EAAKs/B,iBAAiBt/B,EAAKu/B,WAC3BhW,EAAWuV,sBAAqB,KAMlC,kBAAC,KAAD,CACE5P,SAAU,SAAAzF,GAAO,IACPvqB,EAAUuqB,EAAG0F,OAAbjwB,MACRc,EAAKw/B,aAAatgC,IAEpBgG,MAAO,CAAEk6B,aAAc,SACvBK,YAAY,sBAGd,kBAAC,IAAD,CAAQjhC,KAAK,UAAUkhC,SAAS,SAASx6B,MAAO,CAAEqmB,YAAa,UAA/D,OAIA,kBAAC,IAAD,CACE/sB,KAAK,SACLkhC,SAAS,QACT/W,QAAS,SAAAc,GAIP,OAHAF,EAAWuV,sBAAqB,GAEhCrV,EAAGa,kBACI,IAPX,e,sEC3KFqV,GAAWC,KAAXD,OAEFE,GAAe3X,aAAS,YAAmB,EAAhBc,MAAiB,IAC1CnY,EADyC,EAATivB,GACzBC,UACPvX,EAAW3X,EAAEmvB,cAAc79B,KAAI,SAAA89B,GAAC,OAAIA,EAAE/gC,SAE5C,OACE,yBAAKgG,MAAO,CAAEi6B,UAAW,SACvB,wBAAI7Z,UAAWsC,KAAOsY,QAAtB,UACA,kBAAC,KAAD,CACEC,KAAmB,aAAbtvB,EAAEuvB,OAAwB,WAAa,GAC7Cl7B,MAAO,CAAE6N,MAAO,QAChB0sB,YAAY,gBACZY,aAAc7X,EACd0G,SAAU,SAAC7a,EAAKisB,GACd,IAAMvhC,EAASuI,GAAU+M,GACzBxD,EAAEkuB,cACFhgC,EAAO6C,SAAQ,SAAAq+B,GAAC,OAAIpvB,EAAE0vB,aAAaN,GAAGO,aAAY,QAGnD3vB,EAAEzP,SAASe,KAAI,SAAAwC,GAAC,OACf,kBAAC,GAAD,CAAQ9D,IAAK8D,EAAEzF,MAAOgG,MAAO,CAAE+lB,WAAYtmB,EAAEsmB,aAC1CtmB,EAAEzF,eAaTuhC,GAAWvY,aAAS,YAAmB,EAAhBc,MAAiB,IAAV8W,EAAS,EAATA,GAClC,IAAKY,4BAAiB,kBAAMZ,EAAGa,WAAWD,4BAAiB,kBAAMZ,EAAGc,SAClE,OAAO,KAGT,IAAMC,EAAU,CACdjtB,KAAM,kBAACktB,GAAA,EAAD,MACNjtB,MAAO,kBAACktB,GAAA,EAAD,MACPC,GAAI,kBAACC,GAAA,EAAD,OAGN,OACE,6BACE,yBAAK3b,UAAWsC,KAAOsZ,iBACrB,6BACE,kBAAC3J,GAAD,CAAav3B,KAAM8/B,EAAGa,SAExB,kBAAC,IAAD,CAAQhY,QAAS,kBAAMmX,EAAGqB,mBAAmBhiB,KAAK,QAAQmG,UAAWsC,KAAOwZ,aACzEP,EAAQf,EAAGuB,YAEd,6BACE,kBAAC9J,GAAD,CAAav3B,KAAM8/B,EAAGc,cAO1BU,GAAWpZ,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACrBd,EAAOy3B,kBAAQ32B,GAAM4oB,gBAAgBlB,SAAS4V,gBAC9CmD,EAAavhC,IAASc,EAAK6/B,OAAS3gC,IAASc,EAAK8/B,MAExD,OACE,kBAAC,IAAKtX,KAAN,CACEhE,UAAWic,GAAc3Z,KAAOY,SAChC3nB,IAAKC,EAAKT,GACVmhC,QAAS,GACTC,aAAc,WACZ3gC,EAAK4gC,kBACL5gC,EAAK6gC,kBAAiB,IAExBC,aAAc,WACZ9gC,EAAK4gC,kBACL5gC,EAAK6gC,kBAAiB,KAGxB,yBAAKrc,UAAWsC,KAAO9mB,MACrB,6BACE,kBAAC2/B,GAAD,CAAUX,GAAIh/B,KAEhB,6BACGA,EAAK+gC,cACJ,kBAAC,IAAD,CACE1iB,KAAK,QACLwJ,QAAS,WACP7nB,EAAKghC,cAEPxc,UAAWsC,KAAO+W,QAElB,kBAACoD,GAAA,EAAD,OATN,OAaE,kBAAC,IAAD,CACE5iB,KAAK,QACLmG,UAAWsC,KAAO+W,OAClBhW,QAAS,WAIP,OAHA7nB,EAAK6/B,MAAMjI,cAAa,GACxB53B,EAAK8/B,MAAMlI,cAAa,GACxB53B,EAAKkhC,OAAOC,eAAenhC,IACpB,GAETkqB,QAAM,GAEN,kBAACE,EAAA,EAAD,SAILpqB,EAAKohC,UAAY,kBAACrC,GAAD,CAAcC,GAAIh/B,QAK3BonB,gBAAS,YAAgB,IAChCqB,EAD+B,EAAZP,MACAU,gBAAgBlB,SACjCuX,EAAcxW,EAAW4Y,cAAzBpC,UACF8B,EAAe9B,EAAU79B,OAAS,EAClCkgC,EAAqB7Y,EAAW4Y,cAAcE,gBAEpD,OACE,kBAAC,WAAD,KAEE,yBACEn9B,MAAO,CACLmmB,QAAS,OACToO,eAAgB,gBAChBwD,YAAa,MACbC,aAAc,MACd5R,WAAY,WAGd,yBAAKpmB,MAAO,CAAEi4B,KAAM,EAAGD,aAAc,KACnC,kBAAC,KAAD,CAASE,QAAM,EAACC,YAAY,OAAOn4B,MAAO,CAAE+N,OAAQ,SAApD,cACc8sB,EAAU79B,OADxB,MAID2/B,GACC,6BACE,kBAAC,IAAD,CACE1iB,KAAK,QACL3gB,KAAK,OACLgvB,KAAM4U,EAAqB,kBAACtJ,GAAA,EAAD,MAA2B,kBAACvC,GAAA,EAAD,MACtD5N,QAAS,kBAAMY,EAAW4Y,cAAcG,qBACxChd,UAAW,CAAC8c,EAAqBxa,KAAO2a,SAAW3a,KAAO4a,UAAWjF,KAAaC,WAMxFqE,GAAgB,qDAEjBA,GACC,kBAAC,IAAD,CACE1iB,KAAK,QACLsjB,UAAQ,EACRC,WAAW,WACXpd,UAAWsC,KAAO+C,KAClBsI,WAAY1J,EAAW4Y,cAAcpC,UACrCv/B,WAAY,SAAAM,GAAI,OAAI,kBAACwgC,GAAD,CAAUxgC,KAAMA,W,qBC/J/BonB,gBAAS,YAAgB,IAAbc,EAAY,EAAZA,MACnBO,EAAaP,EAAMU,gBAAgBlB,SACnC7jB,EAAIqkB,EAAMU,gBAAgBlB,SAC1BxoB,EAAOupB,EAAW6U,gBAEhBvgC,EAAY8G,EAAE+yB,YAAd75B,QAwBJ6qB,EACF,yBAAKxjB,MAAO,CAAEmmB,QAAS,OAAQoO,eAAgB,gBAAiBnO,WAAY,WAC1E,wBAAIpmB,MAAO,CAAEm0B,OAAQ,IAArB,WACCx7B,EAAQqE,OAAS,GAAKyC,EAAEi0B,UAnBzB,kBAAC,IAAD,CACEnQ,UAAU,aACVC,MAAO,wDACPgC,UARY,WACd/lB,EAAEg+B,oBAQA9X,OAAO,SACPC,OAAO,SACPC,WAAW,UAEX,kBAAC,IAAD,CAAQ5L,KAAK,QAAQ3gB,KAAK,UACxB,kBAAC0sB,EAAA,EAAD,MACClC,EAAM8D,SAASC,eAAiB/D,EAAM8D,SAASE,gBAAkB,kBAAC,GAAD,yBAa1E,OACE,kBAAC,IAAD,CAAMtE,MAAOA,EAAOvJ,KAAK,QAAQmG,UAAWsC,KAAOgb,MAChD5iC,GAAQ,kBAAC6iC,GAAD,CAAQ7Z,MAAOA,EAAOO,WAAYA,KAEzCA,EAAW6U,iBAAmB,uBAAGl5B,MAAO,CAAEk6B,aAAc,IAA1B,oBAEhC,kBAAC,GAAD,CAAUpW,MAAOA,EAAO0O,YAAanO,EAAWmO,cAEhD,kBAACoL,GAAD,CAAW9Z,MAAOA,EAAOloB,KAAMyoB,Q,SC5CxBwZ,GAAb,4GAKwBC,GACpB,OAASA,EAAQ,KAAO,KAAQnxB,KAAKkD,GAAK,OAN9C,oCAcuBsC,GACnB,IAAM4rB,EAAS,CAAC,KAAM,KAAM,KAAM,MAelC,OAdA5rB,EAAOzV,SAAQ,SAACshC,EAAK5/B,GACnB,IAAMsiB,EAA0B,EAApB/T,KAAKsxB,MAAM7/B,EAAI,GAASA,EAExB,IAARsiB,IAEgB,OAAdqd,EAAO,IAAeA,EAAO,IAAMC,KAAKD,EAAO,GAAKC,IACtC,OAAdD,EAAO,IAAeA,EAAO,IAAMC,KAAKD,EAAO,GAAKC,IACvC,IAARtd,KAES,OAAdqd,EAAO,IAAeA,EAAO,IAAMC,KAAKD,EAAO,GAAKC,IACtC,OAAdD,EAAO,IAAeA,EAAO,IAAMC,KAAKD,EAAO,GAAKC,OAIrDD,IA9BX,+BAsCkBG,EAAQC,GAAS,IAAD,eACbD,EADa,GACvBztB,EADuB,KACnBG,EADmB,oBAEbutB,EAFa,GAEvBvpB,EAFuB,KAEnBC,EAFmB,KAG9B,OAAOlI,KAAK2G,KAAK,SAACsB,EAAKnE,EAAO,GAAb,SAAkBoE,EAAKjE,EAAO,MAzCnD,wCAiD2BwtB,GAAO,IACnB3tB,EAA6B2tB,EAAhC/9B,EAAUuQ,EAAsBwtB,EAAzB3vB,EAAOZ,EAAkBuwB,EAAlBvwB,MAAOE,EAAWqwB,EAAXrwB,OAI7B,MAAO,CAAE0C,KAAImE,GAHKnE,EAAK5C,EAGNwwB,GAFC5tB,EAAK5C,EAEFywB,GADH7tB,EACOG,KAAIiE,GAHCjE,EAGG2tB,GAFH3tB,EAAK7C,EAEEywB,GADf5tB,EAAK7C,KArD/B,wCA8D2B0H,GACvB,MAAO,CACLpV,EAAGoV,EAAKhF,GACRhC,EAAGgH,EAAK7E,GACR/C,MAAO4H,EAAKb,GAAKa,EAAKhF,GACtB1C,OAAQ0H,EAAK8oB,GAAK9oB,EAAK7E,MAnE7B,mCA4EsB6tB,EAAYC,GAAa,IAAD,OA0B1C,OAzBeD,EACZn9B,QAAO,SAACrF,EAAK0iC,GACZ,IAAMC,EAAQ,EAAKC,kBAAkBF,GAmBrC,OAjBAD,EAAWhiC,SAAQ,SAAAoiC,GACjB,IAAMC,EAAQ,EAAKF,kBAAkBC,GAE/BE,EACJ,CACE,EAAKC,SAAS,CAACL,EAAMnuB,GAAImuB,EAAMhuB,IAAK,CAACmuB,EAAMtuB,GAAImuB,EAAMhuB,KACrD,EAAKquB,SAAS,CAACL,EAAMhqB,GAAIgqB,EAAM/pB,IAAK,CAACkqB,EAAMnqB,GAAIgqB,EAAM/pB,KACrD,EAAKoqB,SAAS,CAACL,EAAMP,GAAIO,EAAML,IAAK,CAACQ,EAAMV,GAAIO,EAAML,KACrD,EAAKU,SAAS,CAACL,EAAMN,GAAIM,EAAMJ,IAAK,CAACO,EAAMT,GAAIS,EAAMP,MACrDl9B,QAAO,SAAC49B,EAAIC,GAAL,OAAYD,EAAKC,KAAM,EAElCljC,EAAI7C,KAAK,CACP6lC,SAAUD,EACVZ,KAAM,CAAC,EAAKgB,kBAAkBR,GAAQ,EAAKQ,kBAAkBL,SAI1D9iC,IACN,IACFuX,MAAK,SAACrZ,EAAG0R,GAAJ,OAAU1R,EAAE8kC,SAAWpzB,EAAEozB,YAEnB,GAAGb,OAtGrB,gCA+GmBA,GAAkB,IAAZiB,EAAW,uDAAH,EAC7B,OAAO,2BACFjB,GADL,IAEE/9B,EAAG+9B,EAAK/9B,EAAIg/B,EACZ5wB,EAAG2vB,EAAK3vB,EAAI4wB,EACZxxB,MAAOuwB,EAAKvwB,MAAQwxB,EACpBtxB,OAAQqwB,EAAKrwB,OAASsxB,MArH5B,8BA8HiBjB,GAAoB,IAAdzX,EAAa,uDAAH,EAC7B,OAAO,2BACFyX,GADL,IAEE/9B,EAAG+9B,EAAK/9B,EAAIsmB,EACZlY,EAAG2vB,EAAK3vB,EAAIkY,EACZ9Y,MAAOuwB,EAAKvwB,MAAkB,EAAV8Y,EACpB5Y,OAAQqwB,EAAKrwB,OAAmB,EAAV4Y,MApI5B,qCAiJwBtmB,EAAGoO,EAAG6wB,EAAIC,EAAIzB,GAClC,IAAM0B,EAAWjnC,KAAKknC,eAAe3B,GAC/B4B,EAA2B,EAAnB/yB,KAAK6D,IAAI8uB,EAAIC,GACrBI,EAA2B,EAAnBhzB,KAAK+D,IAAI4uB,EAAIC,GAHc,EAKtB,WACjB,IAAMK,EAAIjzB,KAAKkzB,MAAQF,EAAQ,EAAKhzB,KAAK9B,IAAI20B,IAAcE,EAAQ,IAEnE,MAAO,CAACE,EAAGA,EAAIjzB,KAAKkD,IACjB5S,KAAI,SAAA2iC,GACH,OAAOv/B,EAAKq/B,EAAQ,EAAK/yB,KAAKmzB,IAAIF,GAAKjzB,KAAKmzB,IAAIN,GAAaG,EAAQ,EAAKhzB,KAAKozB,IAAIH,GAAKjzB,KAAKozB,IAAIP,MAElGhsB,MAAK,SAACrZ,EAAG0R,GAAJ,OAAUA,EAAI1R,KAYP6lC,GAxBwB,oBAwBlCvvB,EAxBkC,KAwB9BmE,EAxB8B,OAetB,WACjB,IAAMgrB,EAAIjzB,KAAKkzB,KAAOF,EAAQ,EAAK,EAAOhzB,KAAK9B,IAAI20B,IAAaE,EAAQ,IACxE,MAAO,CAACE,EAAGA,EAAIjzB,KAAKkD,IACjB5S,KAAI,SAAA2iC,GACH,OAAOnxB,EAAKkxB,EAAQ,EAAKhzB,KAAKozB,IAAIH,GAAKjzB,KAAKmzB,IAAIN,GAAaE,EAAQ,EAAK/yB,KAAKmzB,IAAIF,GAAKjzB,KAAKozB,IAAIP,MAElGhsB,MAAK,SAACrZ,EAAG0R,GAAJ,OAAUA,EAAI1R,KAIP8lC,GAzBwB,oBAyBlCrvB,EAzBkC,KAyB9BiE,EAzB8B,KA6BzC,MAAO,CAAExU,EAAGuU,EAAInG,EAAGoG,EAAIhH,MAHT4C,EAAKmE,EAGW7G,OAFf6C,EAAKiE,KA5KxB,kCA0LqBxU,EAAGoO,EAAGZ,EAAOE,EAAQ+vB,GACtC,IAAM0B,EAAWjnC,KAAKknC,eAAe3B,GAE/B3nB,EAAS,SAAC1F,EAAIG,GAAL,MAAY,EACxBH,EAAKpQ,GAAKsM,KAAKmzB,IAAIN,IAAa5uB,EAAKnC,GAAK9B,KAAKozB,IAAIP,GAAYn/B,GAC/DoQ,EAAKpQ,GAAKsM,KAAKozB,IAAIP,IAAa5uB,EAAKnC,GAAK9B,KAAKmzB,IAAIN,GAAY/wB,IALrB,EAQhBlW,KAAK2nC,cAAL,CAC3B7/B,EACAoO,GAF2B,oBAGxB0H,EAAO9V,EAAIwN,EAAOY,IAHM,aAIxB0H,EAAO9V,EAAIwN,EAAOY,EAAIV,IAJE,aAKxBoI,EAAO9V,EAAGoO,EAAIV,MAb0B,oBAQtCoyB,EARsC,KAQjCC,EARiC,KAgB7C,MAAO,CAAE//B,EAAG8/B,EAAK1xB,EAAG2xB,EAAKvyB,MAhBoB,KAgBPsyB,EAAKpyB,OAhBE,KAgBYqyB,KA1M7D,qCAkNwBjuB,GACpB,IAAMkuB,EAASluB,EAAO7Q,QAAO,SAACrF,EAAK0Z,GAAN,6BAAoB1Z,GAApB,CAAyB0Z,EAAMtV,EAAGsV,EAAMlH,MAAI,IAD7C,EAEHlW,KAAK2nC,cAAcG,GAFhB,oBAErB5vB,EAFqB,KAEjBG,EAFiB,KAG5B,MAAO,CAAEvQ,EAAGoQ,EAAIhC,EAAGmC,EAAI/C,MAHK,KAGO4C,EAAI1C,OAHX,KAGwB6C,KArNxD,mCA6NsBuB,GAAS,IAAD,EACD5Z,KAAK2nC,cAAc/tB,GADlB,oBACnB1B,EADmB,KACfG,EADe,KAE1B,MAAO,CAAEvQ,EAAGoQ,EAAIhC,EAAGmC,EAAI/C,MAFG,KAES4C,EAAI1C,OAFb,KAE0B6C,KA/NxD,iCAwOoB0vB,GAA0B,IAAjBC,EAAgB,wDACzC,IAAKD,EAAS,OAAO,KAErB,IAAME,EAASF,EAAQG,iBAEvB,GAAsB,IAAlBD,EAAOxjC,OAAc,OAAO,KAEhC,IAAM0jC,EAAiB,SAAAC,GAAO,MAAK,CACjCtgC,EAAGsgC,EAAQtgC,EACXoO,EAAGkyB,EAAQlyB,EACXZ,MAAO8yB,EAAQ9yB,MACfE,OAAQ4yB,EAAQ5yB,SAGlB,OAAOwyB,EAASG,EAAeF,EAAO,IAAM3gC,MAAMoX,KAAKqpB,EAAQG,kBAAkBxjC,IAAIyjC,OAtPzF,KCXME,GAAe,CAAEvgC,EAAG,EAAGoO,EAAG,EAAGZ,MAAO,EAAGE,OAAQ,GAKxC8yB,GAAb,WAqBE,WAAYC,GAAU,yBApBtBA,QAAU,GAqBRlnC,OAAOmnC,OAAOxoC,KAAKuoC,QAASA,GAtBhC,sDAGctoB,GACV,IAAM4lB,EAAO4C,GAAQxoB,GACrB,OAAOpW,GAAUg8B,GAAMnhC,KAAI,SAAAmhC,GAAI,OAAIxkC,OAAOmnC,OAAPnnC,OAAA,IAAAA,CAAA,GAAmBgnC,IAAgBxC,UAL1E,6CA0BI,OAAO7lC,KAAKuoC,QAAQG,SA1BxB,wBA8BI,OAAO1oC,KAAKuoC,QAAQI,KAAK3oC,KAAK4oC,WA9BlC,wBAkCI,OAAO5oC,KAAKuoC,QAAQM,KAAK7oC,KAAK4oC,WAlClC,4BAsCI,OAAO5oC,KAAKuoC,QAAQO,SAAS9oC,KAAK4oC,WAtCtC,6BA0CI,OAAO5oC,KAAKuoC,QAAQQ,UAAU/oC,KAAK4oC,aA1CvC,KA8CMI,GAAmB,SAAC/oB,EAAQ4lB,GAChC,IAAMoD,EAAY3D,GAAS4D,WAAWjpB,EAAOskB,OAAO4E,UAAU,GACxDC,EAAa9D,GAAS+D,UAAUxD,EAAM5lB,EAAOskB,OAAO+E,WAC1D,OAAO,2BACFF,GADL,IAEEthC,EAAGmhC,EAAUnhC,EAAIshC,EAAWthC,EAC5BoO,EAAG+yB,EAAU/yB,EAAIkzB,EAAWlzB,KAI1BuyB,GAAU,SAAAxoB,GACd,OAAQA,EAAOlf,MACb,IAAK,YACL,IAAK,kBACL,IAAK,iBACL,IAAK,cACL,IAAK,mBACH,OAAOukC,GAAS4D,WAAWjpB,EAAOspB,eAEpC,IAAK,kBACH,OAAOP,GACL/oB,EACAqlB,GAASkE,YAAYvpB,EAAOnY,EAAGmY,EAAO/J,EAAG+J,EAAO3K,MAAO2K,EAAOzK,OAAQyK,EAAO2Y,WAGjF,IAAK,gBACH,OAAOoQ,GACL/oB,EACAqlB,GAASmE,eAAexpB,EAAOnY,EAAGmY,EAAO/J,EAAG+J,EAAOyY,QAASzY,EAAO0Y,QAAS1Y,EAAO2Y,WAGvF,IAAK,gBACH,OAAOoQ,GAAiB/oB,EAAQqlB,GAASoE,eAAezpB,EAAOrG,SAEjE,IAAK,iBACH,IAAMqvB,EAAY3D,GAAS4D,WAAWjpB,EAAOskB,OAAO4E,UAAU,GACxDrC,EAAQ7mB,EAAOskB,OAAO+E,UAC5B,MAAO,CACLxhC,EAAGmY,EAAOnY,EAAIg/B,EAAQmC,EAAUnhC,EAAI,EACpCoO,EAAG+J,EAAO/J,EAAI4wB,EAAQmC,EAAU/yB,EAAI,EACpCZ,MAAO,EACPE,OAAQ,GAGZ,IAAK,cACH,IAAMoE,EAAS/Q,EAAQgB,GAAUoW,EAAO0pB,QAAQhoC,QAAO,SAAA0lC,GAAC,MAAe,QAAXA,EAAEtmC,QAAgB2D,KAAI,SAAA2iC,GAAC,OAAI//B,MAAMoX,KAAK2oB,EAAEztB,aACpG,OAAOovB,GAAiB/oB,EAAQqlB,GAASsE,aAAahwB,IAExD,QAEE,OADA8G,QAAQmpB,KAAR,+BAAqC5pB,EAAOlf,OACrC,eAAKsnC,MCxGLyB,GAAb,WAKE,WAAYC,GAAS,IAAD,gCAJpBA,OAAS,GAIW,KAFpBC,WAAa,KAEO,KAgBpBC,UAAY,WAAO,IAAD,EAChB,YAAKC,iBAAL,kBAhBA7oC,OAAOmnC,OAAOxoC,KAAK+pC,OAAQA,GAEvB/pC,KAAK+pC,OAAOI,UACdnqC,KAAKoqC,SAAW,IAAIpqC,KAAK+pC,OAAOI,QAAQnqC,KAAK+pC,OAAOxmC,KAAMvD,KAAK+pC,OAAO7hB,QAASloB,KAAKiqC,YAT1F,0DAcI,OAAO3B,GAAYzC,KAAK7lC,KAAK+pC,OAAO7hB,WAdxC,+BAiBWmiB,GACPrqC,KAAKkqC,UAAYG,IAlBrB,gCA0BIrqC,KAAKkqC,UAAY,SA1BrB,KCHaI,GAAb,WACE,WAAY/mC,EAAM2kB,EAASmiB,GAAW,IAAD,gCAkBrCE,SAAW,WACT,EAAKF,YAlBLrqC,KAAKuD,KAAOA,EACZvD,KAAKkoB,QAAUA,EAAQqhB,cACvBvpC,KAAKqqC,SAAWA,EAEhBrqC,KAAKwqC,eANT,2DAUI7iB,OAAO8iB,iBAAiB,SAAUzqC,KAAKuqC,YAV3C,qCAcIvqC,KAAKyqB,SAAW,IAAIigB,iBAAiB1qC,KAAKuqC,UAE1CvqC,KAAKyqB,SAASkgB,QAAQ3qC,KAAKkoB,QAAS,CAAEvgB,YAAY,MAhBtD,gCAwBIggB,OAAOijB,oBAAoB,SAAU5qC,KAAKuqC,UAC1CvqC,KAAKyqB,SAASogB,iBAzBlB,K,SCGaC,GAAwB,SAAAzmC,GACnC,kBACE,WAAYd,EAAM2kB,EAASmiB,GAAW,IAAD,gCAYrCE,SAAWlhB,IAAS,WAClB,EAAKghB,aACJ,IAbDrqC,KAAKuD,KAAOA,EACZvD,KAAKkoB,QAAUA,EACfloB,KAAKqqC,SAAWA,EAEhBrqC,KAAKwqC,eANT,2DAUIxqC,KAAK+qC,UAAY/qC,KAAKgrC,iBAAiBhrC,KAAKkoB,QAAS7jB,EAAO,MAVhE,gCAkBIrE,KAAK+qC,UAAU5mC,SAAQ,SAAA8mC,GAAO,OAAIA,SAlBtC,uCAqBmB/iB,EAASgjB,EAAWH,GAAY,IAAD,OAC9C,OAAOG,EAAUniC,QAAO,SAACrF,EAAKynC,GAa5B,MAZwB,kBAAbA,EACT9pC,OAAOQ,KAAKspC,GAAUhnC,SAAQ,SAAAinC,GAC5B,EAAKJ,iBAAiB9iB,EAAQkjB,GAAeD,EAASC,GAAeL,MAGnEzjC,MAAMC,QAAQ2gB,GAChBA,EAAQ/jB,SAAQ,SAAAnB,GAAE,OAAI,EAAKgoC,iBAAiBhoC,EAAIkoC,EAAWH,MAE3DrnC,EAAI7C,KAAK8pC,aAAQziB,EAASijB,EAAU,EAAKZ,UAAU,IAIhD7mC,IACNqnC,OApCP,MCEIM,GAAwB,CAC5B9G,OAAQ,CAAC,YAAa,mBAAoB,qBAGtC+G,GAAgB,SAAA/oC,GACpB,OAAQA,EAAKxB,MACX,IAAK,aACL,IAAK,kBACL,IAAK,cACH,OAAOupC,GACT,IAAK,kBACH,OAAOQ,GAAsB,CAAC,IAAK,IAAK,QAAS,SAAU,SAAUO,KACvE,IAAK,gBACH,OAAOP,GAAsB,CAAC,IAAK,IAAK,UAAW,UAAW,WAAY,SAAUO,KACtF,IAAK,gBACH,OAAOP,GAAsB,CAAC,SAAU,CAAElxB,OAAQ,CAAC,IAAK,MAAQyxB,KAClE,IAAK,iBACH,OAAOP,GAAsB,CAAC,IAAK,IAAK,SAAUO,KACpD,IAAK,cACH,OAAOP,GAAsB,CAAC,cAAe,SAAUO,KACzD,IAAK,mBACH,OAAOP,GAAsB,CAAC,QAAS,MAAO,CAAEvG,OAAQ,CAAC,kBAC3D,QACE,OAAO,OAIPgH,GAAc,SAAChpC,EAAMgB,GACzB,OAAO,IAAIumC,GAAc,CACvBvmC,KAAMA,EACN2kB,QAAS3lB,EACT4nC,QAASmB,GAAc/oC,MA6BrBipC,GAAgB,SAAChvB,EAAOjZ,GAAU,IAAD,cACpB+hC,GAAS4D,WAAW3lC,GAAM,UADN,QACe,CAAEuE,EAAG,EAAGoO,EAAG,GAAvDpO,EAD6B,EAC7BA,EAAGoO,EAD0B,EAC1BA,EAGX,OAFiBsG,EAAMivB,cAEP/mC,KAAI,SAAAmhC,GAClB,IAAM6F,EAASpG,GAASlX,QAAQyX,EAAM,GACtC,OAAO,2BACF6F,GADL,IAEE5jC,EAAG4jC,EAAO5jC,EAAIA,EACdoO,EAAGw1B,EAAOx1B,EAAIA,QAuBdy1B,GAAmB,SAAC,GAAuC,IAArCzzB,EAAoC,EAApCA,GAAIG,EAAgC,EAAhCA,GAAIuzB,EAA4B,EAA5BA,GAAIvvB,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,GAAI/C,EAAgB,EAAhBA,GAAIsyB,EAAY,EAAZA,MAC5CC,EAAM5zB,EAAU,GAAL0zB,EACfG,EAAM1vB,EAAU,GAAL9C,EAEPyyB,EAAM53B,KAAK+D,IAAIE,EAAIiE,GAAMuvB,EAM/B,MAAO,CAAE3zB,GAAI4zB,EAAKzvB,GAAI0vB,EAAK1zB,KAAIiE,KAAI2vB,GALxB73B,KAAK+D,IAAI6zB,EAAK3zB,EAAKwzB,GAKSK,GAJ5B93B,KAAK+D,IAAI6zB,EAAK1vB,EAAKuvB,GAIaM,MAF7BL,EAAMC,IAKhBK,GAAoB,SAAC,GAA+C,IAOpEC,EAAKC,EAAKC,EAAKC,EAAKP,EAAIC,EAPDh0B,EAA4C,EAA5CA,GAAIG,EAAwC,EAAxCA,GAAIuzB,EAAoC,EAApCA,GAAIa,EAAgC,EAAhCA,GAAIpwB,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,GAAI/C,EAAoB,EAApBA,GAAImzB,EAAgB,EAAhBA,GAAIb,EAAY,EAAZA,MACvDc,EAAgB,OAQpB,GANIv4B,KAAK+D,IAAID,EAAImE,GAAMwvB,EAAQ,IAC7Bc,EAAgB,SAKI,SAAlBA,EAA0B,CAC5BN,EAAMn0B,EACNq0B,EAAMl0B,EAAU,GAALo0B,EACXH,EAAMjwB,EACNmwB,EAAMlwB,EAAU,GAALowB,EACX,IAAMv2B,EAAO/B,KAAK+D,IAAIk0B,EAAKC,GAAOT,EAClCI,EAAK73B,KAAK+D,IAAIhC,EAAMk2B,EAAMR,GAC1BK,EAAK93B,KAAK+D,IAAIhC,EAAMm2B,EAAMT,OACrB,CACLQ,EAAMn0B,EAAK0zB,EACXW,EAAMl0B,EAAU,GAALo0B,EACXH,EAAMjwB,EAAK9C,EACXizB,EAAMlwB,EAAU,GAALowB,EACX,IAAMv2B,EAAO/B,KAAK6D,IAAIo0B,EAAKC,GAAOT,EAClCI,EAAK73B,KAAK6D,IAAI9B,EAAMk2B,EAAMR,GAC1BK,EAAK93B,KAAK6D,IAAI9B,EAAMm2B,EAAMT,GAK5B,MAAO,CAAE3zB,GAAIm0B,EAAKhwB,GAAIiwB,EAAKj0B,GAAIk0B,EAAKjwB,GAAIkwB,EAAKP,KAAIC,KAAIC,MAFvCI,EAAMC,EAEwCG,kBAyG/C,GA5MC,SAACC,EAAUrpC,GAAU,IAAD,EAClC,MAAO,CACLX,GAAIgqC,EAAShqC,GACb0W,MAAOzP,GAAS,UAAC+iC,EAAS3oB,cAAV,QAAoB,IAAIniB,KAAK,MAC7CgS,MAAO,UACP8vB,UAAWgJ,EAAShJ,UACpB3d,MAAOslB,GAAYqB,EAASC,UAAWtpC,GACvCsT,IAAK00B,GAAYqB,EAASE,QAASvpC,GACnCkuB,SAAS4Y,GACP,IAAM0C,EAAoB1jB,GAASghB,EAAU,IAC7CrqC,KAAKimB,MAAMskB,SAASwC,GACpB/sC,KAAK6W,IAAI0zB,SAASwC,IAEpBC,UACEhtC,KAAKimB,MAAM+mB,UACXhtC,KAAK6W,IAAIm2B,aA6LA,GArKM,SAAC,GAA0B,IAAxB/mB,EAAuB,EAAvBA,MAAOpP,EAAgB,EAAhBA,IAAKtT,EAAW,EAAXA,KAAW,EAChB+hC,GAAS2H,aAAazB,GAAcvlB,EAAO1iB,GAAOioC,GAAc30B,EAAKtT,IADrD,oBAG7C,MAAO,CACL0iB,MAJ2C,KAK3CpP,IAL2C,OAqKhC,GAjCO,SAACoP,EAAOpP,GAAS,IAC1BqB,EAAqC+N,EAAxCne,EAAUuQ,EAA8B4N,EAAjC/P,EAAc01B,EAAmB3lB,EAA1B3Q,MAAmBm3B,EAAOxmB,EAAfzQ,OACtB6G,EAAqCxF,EAAxC/O,EAAUwU,EAA8BzF,EAAjCX,EAAcqD,EAAmB1C,EAA1BvB,MAAmBo3B,EAAO71B,EAAfrB,OAI3B03B,EAjIgB,SAAC,GAAgC,IAA9Bh1B,EAA6B,EAA7BA,GAAIG,EAAyB,EAAzBA,GAAIuzB,EAAqB,EAArBA,GAAIvvB,EAAiB,EAAjBA,GAAIC,EAAa,EAAbA,GAAI/C,EAAS,EAATA,GAC7C,OAAIlB,IAAOiE,IAEcpE,GAAMmE,GAAMA,GAAMnE,EAAK0zB,GACtB1zB,GAAMmE,EAAK9C,GAAM8C,EAAK9C,GAAMrB,EAAK0zB,GA6HtCuB,CAAgB,CACnCj1B,KACAG,KACAuzB,KACAvvB,KACAC,KACA/C,OAkBF,OAnGuB,SAAC,EAAkDqmB,GAAiB,IAIvFwN,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAOC,EAAMC,EACrDC,EAAIC,EALkB91B,EAAgE,EAAhEA,GAAIG,EAA4D,EAA5DA,GAAIgE,EAAwD,EAAxDA,GAAIC,EAAoD,EAApDA,GAAI2vB,EAAgD,EAAhDA,GAAIC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,MAAOQ,EAAiC,EAAjCA,cAEnDsB,EAA2B,aAAhBrO,EAgEjB,OA3DIqO,GACFb,EAAMl1B,EACNm1B,EAAMh1B,EACNi1B,EAAMp1B,EACNq1B,EAAMtB,EAVO,EAWbuB,EAAMnxB,EAXO,GAWQ8vB,GAAS,EAAI,GAClCsB,EAAMvB,EACNwB,EAAMrxB,EACNsxB,EAAMrxB,EACNsxB,EAAQzB,EAAQ,EAAI,EACpB0B,EAAO1B,EAAK,UAhBC,EAgBD,aAhBC,GAgBD,WAhBC,EAgBD,aAhBC,GAiBb2B,EAAO3B,EAAK,UAjBC,EAiBD,YAjBC,GAiBD,WAjBC,EAiBD,YAjBC,GAoBb4B,EAAK35B,KAAK+D,IAAID,EAAImE,GAAMjI,KAAK4G,IAAIqB,EAAKnE,GAAM,EAC5C81B,EAAK/B,GACKgC,GAA8B,UAAlBtB,EAgBZsB,GAA8B,SAAlBtB,IACtBS,EAAMl1B,EACNm1B,EAAMh1B,EACNi1B,EAAMrB,EAzCO,EA0CbsB,EAAMl1B,EACNm1B,EAAMtB,EACNuB,EAAMnxB,EA5CO,GA4CQ6vB,GAAS,EAAI,GAClCuB,EAAMrxB,EACNsxB,EAAMrxB,EACNsxB,EAAQzB,EAAQ,EAAI,EACpB0B,EAAO1B,EAAK,WAhDC,EAgDD,YAhDC,GAgDD,WAhDC,EAgDD,aAhDC,GAiDb2B,EAAO3B,EAAK,UAjDC,EAiDD,YAjDC,GAiDD,UAjDC,EAiDD,aAjDC,GAoDb4B,EAAK9B,EACL+B,EAAK55B,KAAK+D,IAAIE,EAAIiE,GAAMlI,KAAK4G,IAAIsB,EAAKjE,GAAM,IA9B5C+0B,EAAMl1B,EACNm1B,EAAMh1B,EACNi1B,EAAMrB,EAzBO,EA0BbsB,EAAMl1B,EACNm1B,EAAMtB,EACNuB,EAAMnxB,EA5BO,GA4BQ6vB,GAAS,EAAI,GAClCuB,EAAMrxB,EACNsxB,EAAMrxB,EACNsxB,EAAQzB,EAAQ,EAAI,EACpB0B,EAAO1B,EAAK,UAhCC,EAgCD,YAhCC,GAgCD,UAhCC,EAgCD,aAhCC,GAiCb2B,EAAO3B,EAAK,WAjCC,EAiCD,YAjCC,GAiCD,WAjCC,EAiCD,aAjCC,GAoCb4B,EAAK9B,EACL+B,EAAK55B,KAAK+D,IAAIE,EAAIiE,GAAMlI,KAAK4G,IAAIsB,EAAKjE,GAAM,GA4BvC,CATa,CAAC,KAAD,OACb+0B,EADa,YACNC,GADM,UAEfC,EAFe,YAERC,GAFQ,oBAGLK,EAHK,YAGIC,GAHJ,YAIbL,EAJa,YAINC,GAJM,oBAKLG,EALK,YAKIE,GALJ,YAMbJ,EANa,YAMNC,IAGM7rC,KAAK,KAAM,CAACisC,EAAIC,IA+BhBE,EAbUhB,EAAed,GAAoBT,IACvB,CACxCzzB,KACAG,KACAuzB,KACAa,KACApwB,KACAC,KACA/C,KACAmzB,KACAb,MArBY,KAwBoCqB,EAAe,aAAe,aCzO5EiB,GAAc,SAAC,GAAmB,IAAjBvrC,EAAgB,EAAhBA,GAAIkR,EAAY,EAAZA,MACzB,OACE,4BACElR,GAAE,gBAAWA,GACbwrC,QAAQ,YACRC,KAAM,EACNC,KAAM,EACNC,YAAa,EACbC,aAAc,EACdC,OAAO,sBAEP,0BAAMt1B,EAAE,wBAAwBu1B,KAAM56B,MAKtC66B,GAAmB,SAAC,GAA6B,IAA3B7mC,EAA0B,EAA1BA,EAAGoO,EAAuB,EAAvBA,EAAGZ,EAAoB,EAApBA,MAAOE,EAAa,EAAbA,OACvC,OAAO,0BAAM1N,EAAGA,EAAGoO,EAAGA,EAAGZ,MAAOA,EAAOE,OAAQA,EAAQk5B,KAAK,UAGxDE,GAAoB,SAAC,GAAkD,IAAhDhsC,EAA+C,EAA/CA,GAAIisC,EAA2C,EAA3CA,QAAS/6B,EAAkC,EAAlCA,MAAO8vB,EAA2B,EAA3BA,UAAWkL,EAAgB,EAAhBA,UACpDC,EAAYD,EAAY,UAAYh7B,EACpCk7B,EAAe,CACnB71B,EAAG01B,EACH9sB,OAAQgtB,EACRL,KAAM,OACNO,cAAe,SAGXC,EAAU,GAShB,MAPkB,OAAdtL,GAAoC,UAAdA,IACxBsL,EAAQC,UAAR,qBAAkCvsC,EAAlC,MAEgB,OAAdghC,GAAoC,SAAdA,IACxBsL,EAAQE,YAAR,qBAAoCxsC,EAApC,MAIA,oCACE,8BACE,kBAAC,GAAD,CAAaA,GAAIA,EAAIkR,MAAOi7B,KAE7BD,GAAa,0CAAUE,EAAV,CAAwBjtB,OAAQjO,EAAOX,QAAS,GAAKk8B,YAAa,KAChF,0CAAUL,EAAV,CAAwB77B,QAAS27B,EAAY,EAAI,GAAKO,YAAa,GAAOH,MAK1EI,GAAgB,SAAC,GAAyB,IAAvBh2B,EAAsB,EAAtBA,MAAOi2B,EAAe,EAAfA,SAAe,eAC9BA,EAD8B,GACtCznC,EADsC,KACnCoO,EADmC,KAEvCs5B,EAAUvrC,IAAMwrC,YAFuB,EAGTC,mBAAS,CAAEp6B,MAAO,EAAGE,OAAQ,EAAG1N,EAAG,EAAGoO,EAAG,IAHhC,oBAGtCsX,EAHsC,KAG1BmiB,EAH0B,KAKvCC,EAAkB,CACtBzyB,UAAU,aAAD,OAAerV,EAAf,aAAqBoO,EAArB,KACT25B,WAAY,SACZC,iBAAkB,UAmBpB,OAXAC,qBAAU,WACR,IACMlK,EADc2J,EAAQx2B,QACHg3B,UACzBL,EAAc,CACZ7nC,EAAG+9B,EAAK/9B,EAAI,EACZoO,EAAG2vB,EAAK3vB,EAAI,EACZZ,MAAOuwB,EAAKvwB,MAAQ,GACpBE,OAAQqwB,EAAKrwB,OAAS,MAEvB,CAAC8D,IAGF,sBAAOs2B,EACL,0CAAUpiB,EAAV,CAAsBzL,OAAO,OAAOstB,YAAa,EAAGX,KAAK,OAAO3H,GAAG,OACnE,wCAAMkJ,IAAKT,GAnBQ,CACrBd,KAAM,QACNjnC,MAAO,CAAEyoC,SAAU,GAAIC,WAAY,WAkB9B72B,KAMH82B,GAAe,SAAC,GAAsF,IAApFxtC,EAAmF,EAAnFA,GAAIiqC,EAA+E,EAA/EA,UAAWC,EAAoE,EAApEA,QAASlJ,EAA2D,EAA3DA,UAAWyM,EAAgD,EAAhDA,QAASvB,EAAuC,EAAvCA,UAAWwB,EAA4B,EAA5BA,KAAMrsB,EAAsB,EAAtBA,OAAQwR,EAAc,EAAdA,QACrFlyB,EAAO8sC,EAAQr3B,QAEfu3B,GADmC,IAArB1D,EAAU/R,SAAsC,IAAnBgS,EAAQhS,SAClBrF,EAHkE,EAIjFia,qBAAfc,EAJgG,qBAMnG5D,EAAW6D,GAAuB,CAAE7tC,KAAIiqC,YAAWC,UAASlJ,YAAW3f,UAAU1gB,GANkB,EAOlFktC,GAAA,aAA8BltC,QAASqpC,IAAtD3mB,EAPiG,EAOjGA,MAAOpP,EAP0F,EAO1FA,IAP0F,EAQ5E45B,GAA6BxqB,EAAOpP,GARwC,oBAQlG65B,EARkG,KAQ5FC,EAR4F,KAezG,OALAZ,qBAAU,WAER,OADAnD,EAASnb,UAAS,kBAAM+e,EAAY,OAC7B,kBAAM5D,EAASI,aACrB,IAGD,uBAAG75B,QAASm9B,IAASxB,EAAY,GAAM,EAAG8B,WAAYL,EAAiB,SAAW,WAChF,kBAAC,GAAqBtqB,GACtB,kBAAC,GAAqBpP,GACtB,kBAAC,GAAD,CACEjU,GAAIgqC,EAAShqC,GACbisC,QAAS6B,EACT58B,MAAO84B,EAAS94B,MAChB8vB,UAAWgJ,EAAShJ,UACpBkL,UAAWA,IAEZlC,EAAStzB,OAAS,kBAAC,GAAD,CAAeA,MAAOszB,EAAStzB,MAAOi2B,SAAUoB,MAWnEE,GAAuBpmB,aAAS,YAA4B,IAAzBmiB,EAAwB,EAAxBA,SAAakE,EAAW,6BAChDjE,EAA8BD,EAArC1J,MAAyB4J,EAAYF,EAAnBzJ,MAE1B,OACE,kBAAC,GAAD,eAAcvgC,GAAIgqC,EAAShqC,GAAIiqC,UAAWA,EAAWC,QAASA,EAASlJ,UAAWgJ,EAAShJ,WAAekN,OAIxGC,G,4MAEJC,SAAW/sC,IAAMwrC,Y,EACjBlf,MAAQ,CAAE0gB,cAAc,EAAOC,uBAAwB98B,KAAK+8B,U,EAqD5DC,SAAW,WACT,EAAK1gB,SAAS,CAAEwgB,uBAAwB98B,KAAK+8B,Y,kEAnDzCnxC,KAAKgxC,SAASh4B,SAChBhZ,KAAK0wB,SAAS,CAAEugB,cAAc,IAGhCtpB,OAAO8iB,iBAAiB,SAAUzqC,KAAKoxC,Y,6CAIvCzpB,OAAOijB,oBAAoB,SAAU5qC,KAAKoxC,Y,+BAGlC,IAAD,EACqCpxC,KAAKqE,MAAzCi+B,EADD,EACCA,UAAW7M,EADZ,EACYA,QAAS4b,EADrB,EACqBA,YACtBC,IAAiBD,EAYvB,OACE,yBAAKpB,IAAKjwC,KAAKgxC,SAAUO,MAAM,6BAA6B9pC,MAXhD,CACZukC,IAAK,EACL71B,KAAM,EACNb,MAAO,OACPE,OAAQ,OACR+5B,SAAU,WACViC,cAAe,OACfC,OAAQ,MAKLzxC,KAAKuwB,MAAM0gB,cAAgBjxC,KAAK0xC,gBAAgBpP,EAAW7M,EAAS6b,EAAcD,M,sCAKzE/O,EAAW7M,EAAS6b,EAAcK,GAAsB,IAAD,OACrE,OAAOrP,EAAU59B,KAAI,SAAAkoC,GAAa,IAAD,EACzByE,EAAcM,IAAwB/E,EAC5C,OACE,kBAACiE,GAAD,CACEztC,IAAKwpC,EAAShqC,GACdgqC,SAAUA,EACVyD,QAAS,EAAKW,SACd/sB,OAAM,UAAE2oB,EAAStK,iBAAX,aAAE,EAAoBsP,iBAC5BtB,KAAMgB,IAAiBD,EACvBvC,UAAWuC,EACX5b,QAAS4b,GAAe5b,EACxBoc,aAAc,EAAKthB,MAAM2gB,gC,GAlDJY,iBA6DzBC,GAA2BtnB,aAAS,YAAgB,IAAbc,EAAY,EAAZA,MACnC+W,EAA4C/W,EAA5C+W,UAAWsC,EAAiCrZ,EAAjCqZ,gBAAiByM,EAAgB9lB,EAAhB8lB,YACpC,OAAO,kBAAC,GAAD,CAAkB/O,UAAWh7B,MAAMoX,KAAK4jB,GAAY7M,QAASmP,EAAiByM,YAAaA,O,oBCpKrF5mB,gBA9BO,SAAC,GAAqB,IAAnBpnB,EAAkB,EAAlBA,KAAMkoB,EAAY,EAAZA,MAC7B,OACE,yBAAK9jB,MAAO,CAAEmmB,QAAS,OAAQoO,eAAgB,gBAAiB0F,UAAW,QACzE,kBAAC,IAAD,CACE3gC,KAAK,UACLmqB,QAAS,SAAAc,GACP3oB,EAAK2uC,IAAIC,cAGV5uC,EAAK6uC,SACJ,kBAAC,WAAD,KACE,kBAACC,GAAA,EAAD,MADF,SAEG5mB,EAAM8D,SAASE,gBAAkBhE,EAAM8D,SAASC,eAAiBjsB,EAAK+uC,QACrE,kBAAC,GAAD,SAAQ/uC,EAAK+uC,OAAb,OAIJ/uC,EAAK6uC,SACL,kBAAC,WAAD,KACE,kBAACG,GAAA,EAAD,MADF,QAEG9mB,EAAM8D,SAASE,gBAAkBhE,EAAM8D,SAASC,eAAiBjsB,EAAK+uC,QACrE,kBAAC,GAAD,SAAQ/uC,EAAK+uC,OAAb,W,qBC1BR/hB,GAAU,SAACiiB,EAAO7wC,EAAOwpB,GAC7B,IAAIsnB,EAAS,CACXxxC,KAAM,GACNkqB,MAAO,IAGT,OAAQqnB,GACN,IAAK,QACHC,EAAOxxC,KAAOyxC,KAAM7xB,MACpB4xB,EAAOtnB,MAAQ,QACf,MACF,IAAK,UACHsnB,EAAOxxC,KAAOyxC,KAAMC,QACpBF,EAAOtnB,MAAQ,UACf,MACF,IAAK,UACHsnB,EAAOxxC,KAAOyxC,KAAME,QACpBH,EAAOtnB,MAAQ,UACf,MACF,QACEsnB,EAAOxxC,KAAOyxC,KAAMG,KACpBJ,EAAOtnB,MAAQ,OAGnBsnB,EAAOxxC,KAAK,CACVkqB,MAAOA,GAAgBsnB,EAAOtnB,MAC9BgD,QAASxsB,KAwCE,IAAEkf,MA/BH,SAAClf,EAAOwpB,GACpBoF,GAAQ,QAAS5uB,EAAOwpB,IA8BFwnB,QAtBR,SAAChxC,EAAOwpB,GACtBoF,GAAQ,UAAW5uB,EAAOwpB,IAqBKynB,QAbjB,SAACjxC,EAAOwpB,GACtBoF,GAAQ,UAAW5uB,EAAOwpB,IAYc0nB,KAJ7B,SAAClxC,EAAOwpB,GACnBoF,GAAQ,OAAQ5uB,EAAOwpB,KCGV2nB,GAhEIC,QAChBlyC,MAAM,CAELmyC,aAAcD,QAAME,SAASF,QAAM1+B,OAAQ,KAE5ChU,OAAM,SAAAswB,GAAI,MAAK,CACd8O,WAAWwK,GACT,IAAI/iC,EAAM,KAMV,OAJIypB,EAAKuiB,eAAiBviB,EAAKuiB,cAAcvuC,SAC3CuC,EAAMypB,EAAKuiB,cAAcpyB,MAAK,gBAAGX,EAAH,EAAGA,OAAH,OAAgBgzB,KAAQhzB,EAAQ8pB,OAGzD/iC,GAAOypB,EAAKrwB,QAAQwgB,MAAK,SAAAxN,GAAC,OAAI6/B,KAAQ7/B,EAAG22B,WAGnDhG,SAAQ,SAAAtT,GAAI,MAAK,CAChByiB,cACE,GAAKziB,EAAKrwB,QAGV,OADwBqwB,EAAKrwB,QAAQsE,KAAI,SAAA0O,GAAC,OAAIA,EAAE8/B,sBAInDnP,SAAQ,SAAAtT,GACP,IAAIpsB,EAAQ,GAgCZ,MAAO,CACL8uC,QA/BF,SAAiBryC,EAAMW,GACrB4C,EAAMvD,GAAQW,EACdgvB,EAAKqiB,aAAeriB,EAAKqiB,aAAe,GA8BxCM,SA3BF,WACE,OAAO/uC,GA2BPgvC,mBAnBF,WAEE,IAEMC,GADY7iB,EAAK8iB,UAAY,IACRxqC,QAFH,SAACmkB,EAAMsmB,GAAP,OAAcA,EAAEC,eAAiBvmB,EAAKhkB,OAAOsqC,EAAEC,kBAAoBvmB,IAExC,IAC7CqmB,EAAS9iB,EAAKijB,gBAAkB,GACtC,GAAsB,IAAlBH,EAAO9uC,OAAc,CACvB,GAAI6uC,EAAS7uC,OAAQ,CACnB,IAAM6U,EAAQg6B,EAAS,GACvBK,GAAUlB,QAAV,wBAAmCn5B,EAAM7X,MAAzC,sBAA4D6X,EAAMs6B,UAAlE,aAEFnjB,EAAK3E,WAAWwV,cAElB,OAAOiS,OCxCb,SAASM,GAAiBC,EAAU9sC,GAClC,MAA2B,MAAvB8sC,EAASlgC,OAAO,GAbtB,SAASmgC,EAAO/sC,EAAKgtC,EAAIvyC,GACvB,MAAkB,kBAAPuyC,EAAwBD,EAAO/sC,EAAKgtC,EAAGruC,MAAM,KAAMlE,GACvC,IAAduyC,EAAGvvC,aAA0BiP,IAAVjS,EAA6BuF,EAAIgtC,EAAG,IAAMvyC,EAC/C,IAAduyC,EAAGvvC,OAAqBuC,EACrB+sC,EAAO/sC,EAAIgtC,EAAG,IAAKA,EAAGzrC,MAAM,GAAI9G,GAWnCsyC,CAAO/sC,EADJ8sC,EAASjsC,UAAU,IAGtBisC,EAaX,SAASG,GAAYrvC,EAAM2jC,GACpBA,IAASA,EAAU,IAgBxB,IAdA,IAIEhiC,EACAiC,EALExD,EAAK,WACPkvC,EAAQ,yDACRnT,EAAO,0BACPpF,EAAS,EAIP7X,EAAM,SAANA,EAAeqwB,EAAMC,GAIvB,OAFKrT,GADLqT,EACaD,EAAK3rC,MAAM0rC,GAASC,EAAO,KAAO,UAAYA,EAAO,OAC5C,KAATA,EAAc,WAAaA,EAAKnuC,QAAQ,KAAM,OAAS,QAAU,GACvE8d,GAGDtb,EAAQxD,EAAGC,KAAKL,IACtBkf,EAAIlf,EAAK2D,MAAMozB,EAAQnzB,EAAMuxB,OAA7BjW,CAAqCtb,EAAM,IAAI,GAC/CmzB,EAASnzB,EAAMuxB,MAAQvxB,EAAM,GAAG/D,OAGlC,IAAKG,EAAM,MAAO,GAElBkf,EAAIlf,EAAKmP,OAAO4nB,EAAQ/2B,EAAKH,OAASk3B,IACtCoF,GAAQA,EAAO,wBAAwB/6B,QAAQ,YAAa,KAE5D,IACEO,EAAS,IAAI8tC,SAAS,MAAOtT,GAAMlX,MAAM0e,EAAS,CAACA,IACnD,MAAOjiC,GACPoa,QAAQC,MAAM,IAAMra,EAAIguC,QAAU,IAAK,kBAAmBvT,EAAM,MAGlE,OAAOx6B,ECjET,IAUeguC,GAVW1B,QAAMlyC,QAAQojC,SAAQ,SAAAtT,GAAI,MAAK,CACvD+jB,iBAAiB/yC,GACfgvB,EAAKwH,OAASx2B,GAGhB4vB,YAAY9F,GACVkF,EAAKwH,OAASgc,GAAYxjB,EAAKhvB,MAAO8pB,EAAMiE,KAAKilB,UAAY,QCH3DC,G,uKACM,IACArwC,EAAUrE,KAAVqE,MACAhB,EAASgB,EAAThB,KAEFiB,EAAYjB,EAAK+vC,UAAY/vC,EAAK+vC,WAExC,OACE,uCAAKvrB,UAAWxjB,EAAMwjB,UAAW8sB,gBAAiBtxC,EAAKyvC,aAAcrrC,MAAOpD,EAAMoD,OAAWnD,GAC1FD,EAAMV,c,GATaM,IAAMqqB,WAoBnB7D,eAASiqB,I,wLCvBlBE,GAAgB,+FAEP,IACbC,KAAM,QACNC,aAAc,sBACdC,aAAc,sCACdC,UAAW,qCAGXC,aAAc,YAA2B,IAAxB1zC,EAAuB,EAAvBA,UAAW2zC,EAAY,EAAZA,MAC1B,MAAM,gBAAN,OAAuBA,EAAvB,mCAAuD3zC,EAAvD,SAGF4zC,gBAAiB,YAAkC,IAA/B5zC,EAA8B,EAA9BA,UAAW2zC,EAAmB,EAAnBA,MAAOzzC,EAAY,EAAZA,MACpC,MAAM,oBAAN,OAA2BA,EAA3B,oDAA4EF,EAA5E,YAAyF2zC,EAAzF,UAGFE,kBAAmB,YAAkC,IAA/B7zC,EAA8B,EAA9BA,UAAW2zC,EAAmB,EAAnBA,MAAOzzC,EAAY,EAAZA,MACtC,MAAM,oBAAN,OAA2BA,EAA3B,+DAAuFF,EAAvF,YAAoG2zC,EAApG,UAGFG,oBAAqB,YAA6C,IAA1C9zC,EAAyC,EAAzCA,UAAW2zC,EAA8B,EAA9BA,MAAOzzC,EAAuB,EAAvBA,MAAO6zC,EAAgB,EAAhBA,UAC/C,MAAM,wBAAN,OAA+BJ,EAA/B,uBAAmD3zC,EAAnD,sCAA0FE,EAA1F,wBAA+GF,EAA/G,oCAAoJ,GACjJ2H,OAAOosC,GACPxzC,KAAK,MAFR,SAKFyzC,aAAc,YAAsC,IAAnCh0C,EAAkC,EAAlCA,UAAW2zC,EAAuB,EAAvBA,MAAOI,EAAgB,EAAhBA,UACjC,MAAM,gBAAN,OAAuBJ,EAAvB,0BAA8C3zC,EAA9C,sDAAqG+zC,EAArG,UAGFE,aAAc,YAAgB,IAAb/zC,EAAY,EAAZA,MACf,MAAM,2FAAN,OAAkGA,IAGpGg0C,YAAa,YACX,OAD0B,EAAZh0C,OAKhBmzC,iBAEAc,kBAAmB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKj1B,EAAd,EAAcA,MAAd,OACjB,+DACmC,8BAAOg1B,GAD1C,kBAEE,6BAFF,0BAG0Bh1B,EACxB,6BAJF,QAKQi1B,IAIVC,eAAgB,gBAAGF,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,EAAcj1B,MAAd,0FAGkCg1B,EAHlC,4MAOYC,EAPZ,4BAOmCA,EAPnC,oCAWhBE,iBAAkB,gBAAGH,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,EAAcj1B,MAAd,0FAGgCg1B,EAHhC,iHAKFf,GALE,yPAcUgB,EAdV,4BAciCA,EAdjC,oCAkBlBG,iBAAkB,gBAAGJ,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKj1B,EAAd,EAAcA,MAAd,0FAGgCg1B,EAHhC,wSAYEf,GAZF,+IAiBmBj0B,EAjBnB,+DAmBSi1B,EAnBT,4BAmBgCA,EAnBhC,6CCxDpB,SAASI,GAAmBp3B,EAASq3B,GACnCr3B,EAAUsgB,OAAOtgB,GACjB,IAAIs3B,EAAU9hC,KAAK0K,MAAMF,EAAU,IACnCA,GAAoB,GAGpB,IAAIu3B,EAAa/hC,KAAKsxB,MAAM9mB,GAASlV,WAOrC,OANIusC,GAAY,IACdE,EAAav3B,EAAQ0D,QAAQ,GACpB2zB,GAAY,KACrBE,EAAav3B,EAAQ0D,QAAQ,IAG3B4zB,EAAU,GACRt3B,EAAU,KACZu3B,EAAa,IAAMA,GAEf,GAAN,OAAUD,EAAV,YAAqBC,IAEhBA,EAaT,SAASC,GAAaH,GAmBpB,OAjBIA,GAAY,KACL,IACAA,GAAY,IACZ,KACAA,GAAY,IACZ,GACAA,GAAY,IACZ,IACAA,GAAY,GACZ,EACW,EAAXA,GAAgB,GAChB,EACW,GAAXA,GAAiB,GACjB,GAE4B,GAA5B7hC,KAAKC,KAAK,GAAM4hC,GAgB7B,SAASI,GAAqBJ,GAmB5B,OAjBIA,GAAY,KACL,GACAA,GAAY,IACZ,EACAA,GAAY,IACZ,GACAA,GAAY,IACZ,EACAA,GAAY,GACZ,EACW,EAAXA,GAAgB,GAChB,EACW,GAAXA,GAAiB,GACjB,GAE4B,GAA5B7hC,KAAKC,KAAK,GAAM4hC,GAoB7B,SAASK,GAAuBL,GAE9B,OAAO7hC,KAAK0K,MAAM,GAAKs3B,GAAaH,I,IAGjBM,G,kDACnB,WAAYlyC,GAAQ,IAAD,8BACjB,cAAMA,IAkBRmyC,aAAe,SAAA/0C,GACb,EAAKivB,SAAL,2BACK,EAAKH,OADV,IAEEkmB,KAAMh1C,KAGR,EAAKi1C,WAAWD,KAAKh1C,IAzBJ,EA4BnBk1C,eAAiB,SAAAl1C,GACf,EAAKivB,SAAL,2BACK,EAAKH,OADV,IAEEqmB,OAAQn1C,KAGV,EAAKi1C,WAAWG,UAAUp1C,IAlCT,EAwCnBq1C,cAAgB,SAAAr1C,GACd,EAAKivB,SAAL,2BACK,EAAKH,OADV,IAEEwmB,MAAOt1C,KAGT,EAAKi1C,WAAWM,gBAAgBv1C,IA9Cf,EAiDnBw1C,WAAa,SAACjrB,GAAmB,IAAfkrB,EAAc,uDAAP,GACnBtgC,EAAM,EAAK2Z,MAAMkmB,KAMrB,OALA7/B,GAAYsgC,GACF,MAAKtgC,EAAM,KAErB,EAAK4/B,aAAa5/B,GAClBoV,GAAMA,EAAGa,kBACF,GAxDU,EA2DnBsqB,YAAc,SAACnrB,GAAmB,IAAfkrB,EAAc,uDAAP,GACpBtgC,EAAM,EAAK2Z,MAAMkmB,KAMrB,OALA7/B,GAAYsgC,GACF,IAAGtgC,EAAM,GAEnB,EAAK4/B,aAAa5/B,GAClBoV,EAAGa,kBACI,GAlEU,EAqEnBuqB,QAAU,SAAAhvC,GACR,IAAIA,GAAMA,EAAEivC,SAAZ,CAEWjvC,GAAKA,EAAEivC,UAIhBjvC,EAAEykB,iBAGJ,IAAMqqB,EAAO9uC,EAAEkvC,OAAS,EAAI,GAAK,EAEjC,EAAKL,WAAW7uC,EAAG8uC,KA9EnB,EAAK3mB,MAAQ,CACX/W,IAAK,EAAKnV,MAAMmV,IAChB2O,IAAK,EACLovB,OAAQ,CACNC,UAAW,UACXC,cAAe,WAEjBhB,KAAM,EACNM,MAAO,EACPH,OAAQ,GAZO,E,gEAoFE,IAAD,OAClB52C,KAAK03C,IAAMC,IAASC,YAAY53C,MAEhCA,KAAK63C,UAAY73C,KAAK03C,IAAII,cAAc,SAExC,IAAIC,EAAsB,CACxB9vB,UAAWjoB,KAAK63C,UAChBL,UAAWx3C,KAAKuwB,MAAMgnB,OAAOC,UAC7BhiC,OAAQxV,KAAKqE,MAAMmR,OACnBwiC,QAAS,eACTP,cAAez3C,KAAKuwB,MAAMgnB,OAAOE,cAEjCQ,eAAe,GAGbj4C,KAAKqE,MAAMjE,UACb23C,EAAmB,2BACdA,GADc,IAEjBG,QAAS,CACPC,KAAcx1C,OAAO,CACnBy1C,cAAe,CACbC,KAAM,KAGVC,KAAe31C,OAAO,CACpBslB,UAAW,YACX+tB,mBAAoBA,GACpBI,aAAcA,GACdC,qBAAsBA,GACtBC,uBAAwBA,GACxBiC,aAAc,OACdC,eAAgB,OAChBC,iBAAkB,OAClBC,mBAAoB,SAEtBC,KAAah2C,OAAO,CAClB0tB,QAASrwB,KAAK63C,UACde,UAAU,EACVzlC,QAAS,QAMjBnT,KAAK02C,WAAamC,KAAWl2C,OAAOo1C,GAEpC/3C,KAAK02C,WAAWoC,GAAG,SAAS,SAAA1wC,GAC1B,IAAMuY,EAAQ1Y,OAAOG,EAAEksC,SAAWlsC,GAAK,IACjCwtC,EAAM,EAAKvxC,MAAMmV,IAGnBmJ,EAAOo2B,GAASrD,kBAAkB,CAAEC,KAAM,EAAKtxC,MAAM20C,UAAWr4B,QAAOi1B,QAG3E,IAAS,OAALj1B,QAAK,IAALA,OAAA,EAAAA,EAAOs4B,SAAS,WAAhB,OAA2Bt4B,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAOs4B,SAAS,UAC7C,EAAKvC,WAAWwC,iBAAkB,EAElCv2B,EAAOo2B,GAAShD,iBAAiB,CAAEJ,KAAM,EAAKtxC,MAAM20C,UAAWr4B,QAAOi1B,aACjE,GAAiB,kBAANxtC,GAAkBA,EAAE6wC,SAAS,iBAAkB,CAG/D,GAAI,EAAKvC,WAAWwC,gBAAiB,OAErCv2B,EAAO,qEAGTgxB,GAAUhzB,MAAMgC,EAAM,WAMxB3iB,KAAK02C,WAAWyC,KAAKn5C,KAAKqE,MAAMmV,KAKhCxZ,KAAK02C,WAAWM,gBAAgBh3C,KAAKuwB,MAAMwmB,OAE3C,IAAMtmB,EAAOzwB,KAETA,KAAKqE,MAAMjE,UAIbJ,KAAK02C,WAAWoC,GAAG,qBAAqB,SAAAxZ,GACtCA,EAAI8Z,QAAQpe,iBAMdh7B,KAAK02C,WAAWoC,GAAG,qBAAqB,SAAAxZ,GACtCA,EAAI8Z,QAAQjV,kBAMdnkC,KAAK02C,WAAWoC,GAAG,kBAAkB,SAAAxZ,GACnC,IAAMrf,EAASwQ,EAAKpsB,MAAMg1C,UAAU/Z,GAC/Brf,IAELqf,EAAI8Z,QAAUn5B,EACdqf,EAAIxrB,MAAQmM,EAAOq5B,iBAEnBha,EAAIwZ,GAAG,SAAS,kBAAM74B,EAAOiL,QAAQuF,EAAKimB,eAC1CpX,EAAIwZ,GAAG,cAAc,kBAAM74B,EAAOs5B,YAAY9oB,EAAKimB,eAEnDpX,EAAIwZ,GAAG,YAAY,SAAA1wC,GACjBuf,OAAO1d,YAAW,WAChBq1B,EAAIka,SACH,MAGLla,EAAIwZ,GAAG,OAAO,oBAOlB,IAAMW,EAASh0C,SAASqyC,cAAc,WAElC2B,IACFA,EAAOC,QAAU,WACfjpB,EAAKimB,WAAWD,KAAKvX,OAAOl/B,KAAKyB,UAIrCzB,KAAK02C,WAAWoC,GAAG,SAAS,WAC1BroB,EAAKpsB,MAAMs1C,SAAS,EAAKjD,YAEzB,EAAKA,WAAWzuB,UAAU2xB,QAAUC,KAAS,EAAKzC,QAAS,QAM7Dp3C,KAAK02C,WAAWoC,GAAG,QAASroB,EAAKpsB,MAAMy1C,YAKvC95C,KAAK02C,WAAWoC,GAAG,OAAQroB,EAAKpsB,MAAMy1C,YAElC95C,KAAKqE,MAAMjE,SACbJ,KAAKqE,MAAM01C,OAAO/5C,KAAK02C,c,+BAIjB,IAAD,OAKP,OACE,6BACE,yBAAK9zC,GAAG,OAAOilB,UAAWsC,KAAO6vB,OAEjC,yBAAKp3C,GAAG,aAEP5C,KAAKqE,MAAMoyC,MACV,kBAAC,KAAD,CAAKwD,OAAQ,GAAIxyC,MAAO,CAAEi6B,UAAW,QACnC,kBAAC,KAAD,CAAKhC,KAAM,GAAIj4B,MAAO,CAAEyyC,UAAW,QAASxY,UAAW,QACrD,yBAAKj6B,MAAO,CAAEmmB,QAAS,SACrB,yBAAKnmB,MAAO,CAAEi6B,UAAW,MAAO5T,YAAa,QAC3C,kBAACqsB,GAAA,EAAD,CAAiBjvB,QAASlrB,KAAKm3C,YAAatvB,UAAWiY,KAAaC,QAEtE,yBAAKt4B,MAAO,CAAE6N,MAAO,SACnB,kBAAC,KAAD,CACE6C,IAAK,EACL++B,KAAM,GACNj/B,IAAK,IACLxW,MAAkC,kBAApBzB,KAAKuwB,MAAMkmB,KAAoBz2C,KAAKuwB,MAAMkmB,KAAO,EAC/DhlB,SAAU,SAAAhwB,GACR,EAAK+0C,aAAa/0C,OAIxB,yBAAKgG,MAAO,CAAEi6B,UAAW,MAAO0Y,WAAY,QAC1C,kBAACC,GAAA,EAAD,CAAgBnvB,QAASlrB,KAAKi3C,WAAYpvB,UAAWiY,KAAaC,UAIxE,kBAAC,KAAD,CAAKL,KAAM,GACR1/B,KAAKqE,MAAMuyC,QACV,yBAAKnvC,MAAO,CAAEmmB,QAAS,OAAQ8T,UAAW,UACxC,yBAAKj6B,MAAO,CAAE6N,MAAO,SACnB,kBAAC,KAAD,CACE6C,IAAK,EACLF,IAAK,EACLi/B,KAAM,GACNz1C,MAAoC,kBAAtBzB,KAAKuwB,MAAMqmB,OAAsB52C,KAAKuwB,MAAMqmB,OAAS,EACnEnlB,SAAU,SAAAhwB,GACR,EAAKk1C,eAAel1C,OAI1B,yBAAKgG,MAAO,CAAE2yC,WAAY,OAAQ1Y,UAAW,QAC3C,kBAAC4Y,GAAA,EAAD,SAKR,kBAAC,KAAD,CAAK5a,KAAM,EAAGj4B,MAAO,CAAEi6B,UAAW,QAC/B1hC,KAAKqE,MAAM0yC,OACV,kBAAC,KAAD,CACE/U,YAAY,QACZv6B,MAAO,CAAE6N,MAAO,QAChBstB,aAAc5iC,KAAKuwB,MAAMwmB,MACzBtlB,SA3DDzxB,KA2DgB82C,eAzDd,CAAC,MAAO,OAAQ,MAAO,OAAQ,MAAO,OA2D/BpyC,KAAI,SAAAqyC,GAAK,OACf,kBAAC,KAAO7U,OAAR,CAAezgC,OAAQs1C,EAAO3zC,IAAK2zC,GAAnC,SACSA,c,GA5SS9yC,IAAMqqB,WClGtCisB,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ/4C,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAC7BjE,KAAM5D,QAAME,SAASF,QAAM8H,SAAS,GACpC/D,OAAQ/D,QAAME,SAASF,QAAM8H,SAAS,GACtC5D,MAAOlE,QAAME,SAASF,QAAM8H,SAAS,GACrCvI,OAAQS,QAAM4H,UAAU5H,QAAM6H,UAG1BE,GAAQ/H,QACXlyC,MAAM,CACLI,KAAM,QACNk3B,OAAQ4a,QAAME,SAASF,QAAM6H,OAAQ,IACrCxI,QAASW,QAAME,SAASF,QAAM8H,SAAS,GACvCnlC,OAAQq9B,QAAME,SAASF,QAAM1+B,OAAQ,MAEtChU,OAAM,SAAAswB,GAAI,MAAK,CACd,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,cAGxCgZ,SAAQ,SAAAtT,GAAI,MAAK,CAChBoqB,cAAc7zC,EAAKlE,GACbkE,EAAIvF,MAAMq5C,SACZrqB,EAAK3E,WAAWivB,MAAM55C,IAAI6F,EAAI83B,WAAW+b,cAAc7zC,GAGrDA,EAAIvF,MAAMiF,MACZ+pB,EAAK3E,WAAWivB,MAAM55C,IAAI6F,EAAI83B,WAAW+b,cAAc7zC,IAI3D8yC,aACErpB,EAAKyhB,SAAWzhB,EAAKyhB,SAGvB8I,SAAQ,IACCvqB,EAAKuhB,IAAIC,YAGlB8H,OAAOkB,GACLxqB,EAAKuhB,IAAMiJ,GAGbC,UAAUD,GACRxqB,EAAKuhB,IAAMiJ,OAIXE,GAAatI,QAAMuI,QAAQ,aAAcR,GAAOL,GAAUhG,GAAmB3B,IAwB7EyI,GAAWzsB,YAAO,QAAPA,CAAgBnE,aAtBZ,SAAC,GAAqB,IAAnBc,EAAkB,EAAlBA,MAAOloB,EAAW,EAAXA,KAC7B,OAAKA,EAAK40B,OAGR,kBAAC,GAAD,CAAW50B,KAAMA,GACf,kBAAC,GAAD,CACE21C,UAAW31C,EAAK5B,MAChB+X,IAAKnW,EAAK40B,OACV0hB,SAAUt2C,EAAK63C,UACfnB,OAAQ12C,EAAK02C,OACbD,WAAYz2C,EAAKy2C,WACjB/C,MAAO1zC,EAAK0zC,MACZN,KAAMpzC,EAAKozC,KACXG,OAAQvzC,EAAKuzC,OACbx2C,SAAS,EACToV,OAAQnS,EAAKmS,SAEf,kBAAC,GAAD,CAAenS,KAAMA,EAAMkoB,MAAOA,KAhBb,SAuB3BxrB,EAASu7C,OAAO,QAASH,GAAYE,IACrCt7C,EAASw7C,cAAcJ,I,WC9GRtI,WACZlyC,MAAM,cACNR,OAAM,SAAAswB,GAAI,MAAK,CAEd2J,cAA6B,IAAjBohB,EAAgB,uDAAT,QACjB,GAAK/qB,EAAK8iB,OAAV,CAEA,GAAa,UAATiI,EAAkB,CACpB,IAAMhI,EAAI/iB,EAAK8iB,OAAO3yB,MAAK,SAAA4yB,GAAC,MAAI,qBAAsBA,KAEtD,OAAOA,EAAIA,EAAEiI,mBAAqB,KAG/BD,EAAO,YAKdE,gBAAe,IACNjrB,EAAK8iB,OAAO7uC,KAAI,SAAA8uC,GAAC,OAAIlxC,EAAUkxC,UAGzCzP,SAAQ,SAAAtT,GAAI,MAAK,MC1BPkrB,GAAe,CAC1BC,UAAW,SACXC,YAAa,GACbC,YAAa,SACbC,YAAa,EACb5oC,QAAS,IAGI,GACD,GADC,GAEC,GAFD,GAGC,EAHD,GAMK,UANL,GAQQ,OARR,GAWI,QAXJ,GAYU,QAZV,GAea,MAfb,GAgBa,EAhBb,GAiBW,qBAjBX,GAoBG,UApBH,GAqBE,UArBF,GAsBG,UAtBH,GAuBA,OAvBA,GAwBS,YAxBT,GA2BK,IA3BL,GA4BG,IA5BH,GA8BG,IA9BH,GA+BC,ICPD6oC,GA1BYnJ,QACxBlyC,MAAM,CACLmhC,UAAW+Q,QAAM4H,UAAU5H,QAAM6H,QACjC5Z,cAAe+R,QAAM4H,UAAU5H,QAAM6H,UAEtC3W,SAAQ,SAAAtT,GAAI,MAAK,CAKhBoR,iBAAiBjrB,GACf6Z,EAAKqQ,cAAgBlqB,GAMvBoqB,sBACEvQ,EAAKoR,iBAAiB,KAGxBE,aAAanrB,GACX6Z,EAAKqR,UAAYlrB,OCwLRqlC,GAjNMpJ,QAClBlyC,MAAM,CAEL0+B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAElCggB,MAAO2wB,QAAM4H,UAAU5H,QAAM1+B,QAC7B+nC,SAAUrJ,QAAME,SAASF,QAAM8H,SAAS,GAExC7f,OAAQ+X,QAAME,SAASF,QAAM8H,SAAS,GAEtCtd,SAAUwV,QAAME,SAASF,QAAM6H,OAAQ,MAExCyB,UAAS,SAAA1rB,GAAI,MAAK,CAEjB4gB,aAAa,MAEdlxC,OAAM,SAAAswB,GAAI,MAAK,CACd,sBACE,IAAM8iB,EAAS9iB,EAAK8iB,OACpB,OAAOA,GAAUA,EAAO5xC,QAAO,SAAA6xC,GAAC,OAAoB,IAAhBA,EAAE4I,cAGxC,YACE,OAAOpiB,kBAAQvJ,IAGjB,aACE,OAAO4rB,oBAAU5rB,IAGnB,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC,eACE,OAAyB,IAAlB0F,EAAKyrB,WAAmD,IAA7BzrB,EAAK3E,WAAWqP,cAGrD4I,SAAQ,SAAAtT,GAAI,MAAK,CAChB4N,YAAYz7B,GACV6tB,EAAK4M,SAAWz6B,GAGlB05C,QAAQ56B,KACR66B,WAAW76B,KACX86B,SAAS96B,KACT+6B,UAAU/6B,KAEVg7B,UAAUh7B,KACVi7B,SAASj7B,KACTk7B,QAAQl7B,KACRm7B,WAAWn7B,KAIXo7B,YAAY1/B,EAAO2/B,GAA2B,IAAnBC,IAAkB,yDACnCl1C,EAASsV,EAATtV,EAAGoO,EAAMkH,EAANlH,EACX,IAAK6mC,EAAQ,MAAO,CAAEj1C,IAAGoO,KAEzB6mC,GAAU,IAAMA,GAAU,IAG1B,IAAM1nC,EAAIob,EAAK8T,OAAOzmB,WAChBvI,EAAIkb,EAAK8T,OAAOxmB,YAMtB,OAAe,MAAXg/B,EAAuB,CAAEj1C,EAAGoO,EAAGA,GAAI8mC,EAAYznC,EAAIF,GAAKvN,GAC7C,KAAXi1C,EAAsB,CAAEj1C,GAAIk1C,EAAY3nC,EAAIE,GAAKW,EAAGA,EAAGpO,GAClC,MAArBsM,KAAK4G,IAAI+hC,GAAwB,CAAEj1C,EAAGuN,EAAIvN,EAAGoO,EAAGX,EAAIW,GACjD,CAAEpO,IAAGoO,MAGd+mC,iBAAiB,EAAmBF,GAAS,IAA1BznC,EAAyB,EAAzBA,MAAOE,EAAkB,EAAlBA,OACxB,OAAKunC,EAAS,KAAO,MAAQ,EAAU,CAAEznC,QAAOE,UACzC,CAAEF,MAAOE,EAAQA,OAAQF,IAMlC4nC,8BAEAC,YACEz8B,QAAQC,MAAM,8CAGhBuyB,cACE,IAAM3O,EAAS9T,EAAK8T,OACd6Y,EAAY,SAAAC,GAChB,IAAMx2C,EAAO,CACXjE,GAAI6tB,EAAK4O,IACTP,UAAWue,EAAQv8C,KACnBw8C,QAAS/Y,EAAOzjC,KAChB4nC,OAAQnE,EAAO9iC,MACfV,KAAMs8C,EAAQt8C,KACdw8C,UAA6B,KAAlB9sB,EAAK4M,SAAkB,KAAO5M,EAAK4M,UAKhD,OAFI5M,EAAKqQ,gBAAej6B,EAAI,cAAoB4pB,EAAKqQ,eAE9Cj6B,GAGT,GAAI4pB,EAAK8iB,QAAU9iB,EAAK8iB,OAAO9uC,OAC7B,OAAOgsB,EAAK8iB,OACT7uC,KAAI,SAAA8uC,GACH,IAAMgK,EAAM/sB,EAAK0sB,UAAU3J,EAAGjP,GAC9B,OAAKiZ,EAEK,2BACLJ,EAAU5J,IACVgK,GAJY,QAWlB77C,OAAOk4B,SAEV,IAAM7yB,EAAMypB,EAAK3E,WAAW2xB,QAAQt8C,IAAIojC,EAAOzjC,MACzCu8C,EAAUr2C,EAAIvC,OAASuC,EAAI,GAAKA,EAOtC,OALU,2BACLo2C,EAAUC,IACV5sB,EAAK0sB,UAAUE,EAAS9Y,KAOjCmZ,iBAOAC,iBACEj9B,QAAQk9B,IAAI,kBAAmB,2BAuBjCC,wBAEAC,gBACE,IAAMhyB,EAAa2E,EAAK3E,WACxB,GAAKA,EAAWqP,SAEhB,GAAIrP,EAAWiyB,aACbjyB,EAAWkyB,YAAYvtB,GACvB3E,EAAWmyB,mBACXnyB,EAAWmO,YAAYqH,kBAClB,CACL,IAAM4c,GAAkBztB,EAAK1F,SAC7Be,EAAWwV,cACP4c,GACFpyB,EAAWiP,WAAWtK,KAQ5B+Q,eACO/Q,EAAK3E,WAAWqP,WACjB1K,EAAK1F,UAAU0F,EAAK3E,WAAWwV,cAC/B7Q,EAAK0tB,eAAe1tB,EAAK0tB,gBAC7B1tB,EAAK3E,WAAW0V,aAAa/Q,KAG/BwK,aAAarkB,GACX6Z,EAAK4gB,YAAcz6B,GAGrBqtB,kBACExT,EAAKwK,cAAcxK,EAAK4gB,cAG1B/V,aAAalzB,GACXqoB,EAAKqK,QAAUrK,EAAKqK,OACpB1yB,GAAKA,EAAEg2C,uBCkFEC,GA9RAxL,QACZlyC,MAAM,SAAU,CACfiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GAGrCggB,MAAO2wB,QAAM4H,UAAU5H,QAAM1+B,QAiB7B2qB,UAAW+T,QAAMyL,MAAK,kBAAMzL,QAAM0L,UAAU1L,QAAM2L,MAAN,MAAA3L,QAAK,aAAU9yC,EAAS0+C,kBAEpEnB,QAASzK,QAAMyL,MAAK,kBAAMzL,QAAM0L,UAAU1L,QAAM2L,MAAN,MAAA3L,QAAK,aAAU9yC,EAAS2+C,oBAElE39C,KAAM8xC,QAAM8L,YAAY,CACtB,SACA,kBACA,YACA,WACA,UACA,QACA,UACA,kBACA,iBACA,gBACA,cACA,gBACA,mBACA,UACA,WACA,WACA,SACA,aAGFl9C,MAAOoxC,QAAMlyC,MAAM,CACjBi+C,OAAQ/L,QAAMgM,MAAMhM,QAAM1+B,QAC1BzN,KAAMmsC,QAAMgM,MAAMhM,QAAM2L,MAAM3L,QAAM6H,OAAQ7H,QAAMiM,MAAMjM,QAAM6H,UAC9DI,QAASjI,QAAMgM,MAAMhM,QAAMiM,MAAMjM,QAAM6H,SAEvC3vB,SAAU8nB,QAAMgM,MAAMhM,QAAM8L,YAAY,CAAC,OAAQ,WAEjD16B,OAAQ4uB,QAAMgM,MAAMhM,QAAMiM,MAAMjM,QAAM6H,SACtCqE,WAAYlM,QAAMgM,MAAMhM,QAAMiM,MAAMjM,QAAM6H,SAC1CsE,gBAAiBnM,QAAMgM,MAAMhM,QAAMiM,MAAMjM,QAAM6H,SAC/CuE,eAAgBpM,QAAMgM,MAAMhM,QAAMiM,MAAMjM,QAAM6H,SAC9CwE,cAAerM,QAAMgM,MAAMhM,QAAMiM,MAAMjM,QAAM6H,SAC7CyE,cAAetM,QAAMgM,MAAMhM,QAAMiM,MAAMjM,QAAM6H,SAC7C0E,YAAavM,QAAMgM,MAAMhM,QAAMiM,MAAMjM,QAAM6H,SAC3C2E,iBAAkBxM,QAAMgM,MAAMhM,QAAMiM,MAAMjM,QAAM6H,SAChD4E,SAAUzM,QAAM0M,aAKnBp/C,OAAM,SAAAswB,GAAI,MAAK,CACd,sBACE,IAAM8iB,EAAS9iB,EAAK8iB,OACpB,OAAOA,GAAUA,EAAO5xC,QAAO,SAAA6xC,GAAC,OAAoB,IAAhBA,EAAE4I,cAGxC,YACE,OAAOpiB,kBAAQvJ,IAGjB,WACE,OAAO4rB,oBAAU5rB,EAAM,IAGzB,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC,gBACE,OAAO0F,EAAKhvB,MAAMgvB,EAAKqO,UAAU0gB,YAGnC,eACE,IAAM/9C,EAAQgvB,EAAK8P,UACnB,QAAK9+B,KACD6F,MAAMC,QAAQ9F,IAAeA,EAAMgD,OAAS,IAIlD,eACE,OAAyB,IAAlBgsB,EAAKyrB,WAAmD,IAA7BzrB,EAAK3E,WAAWqP,UAGpDskB,oBAAkC,IAAD,EAAfC,EAAe,uDAAL,IAC1B,OAAO,UAAAjvB,EAAK8P,iBAAL,eAAgBz+B,KAAK49C,KAAY,IAG1C,qBAAsB,IAAD,EACnB,iBAAOjvB,EAAK8P,iBAAZ,aAAO,EAAgB77B,KAAI,SAAAjD,GAAK,OAAIgvB,EAAKqO,UAAU6gB,UAAUl+C,MAAQE,OAAOk4B,UAM9E,mBACE,IAAMwjB,EAAU5sB,EAAKqO,UAErB,GAAIue,EAAQjB,UAAW,CACrB,IAAM9iC,EAAQ+jC,EAAQuC,eACtB,GAAItmC,IAAUmX,EAAKovB,KAAKC,SAASxmC,GAAQ,OAAO,EAGlD,GAA4B,oBAAxB+jC,EAAQ0C,YAAmC,CAC7C,IAAM1rB,EAAUgpB,EAAQ2C,YAClBC,EAAe5C,EAAQ6C,gBAAkB7C,EAAQ6C,gBAAgBv6C,MAAM,KAAO,KAC9E6hB,EAAUiJ,EAAK3E,WAAWtE,QAAQ7lB,QAAO,SAAAyR,GAAC,MAAe,YAAXA,EAAErS,MAAsBqS,IAAMqd,KAClF,GAAI4D,EAAS,CACX,IAAM9tB,EAASihB,EAAQ5G,MAAK,SAAAxN,GAAC,OAAIA,EAAE0rB,UAAUh+B,OAASuzB,KACtD,IAAK9tB,EAAQ,OAAO,EACpB,GAAI05C,IAAiBA,EAAa7iB,MAAK,SAAAoF,GAAC,OAAIj8B,EAAOg6B,UAAU0Y,SAASzW,MAAK,OAAO,MAC7E,CACL,IAAKhb,EAAQ/iB,OAAQ,OAAO,EAE5B,GAAIw7C,IAAiBA,EAAa7iB,MAAK,SAAAoF,GAAC,OAAIhb,EAAQ4V,MAAK,SAAAhqB,GAAC,OAAIA,EAAEmtB,UAAU0Y,SAASzW,SAAM,OAAO,GAIpG,OAAO,GAGT,UACE,IAAM/gC,EAAQgvB,EAAK8P,UACnB,OAAK9+B,GACAgvB,EAAKqO,UAAU6gB,UACblvB,EAAKqO,UAAU6gB,UAAUl+C,EAAM,IAFnB,MAKrB,YACE,IAAKgvB,EAAK/vB,IAAK,OAAO,KACtB,IAAMk7C,EAAYnrB,EAAK/vB,IAAI8sB,YAAciD,EAAK/vB,IAAI6jC,OAAOqX,UACzD,IAAKA,EAAW,OAAO,KACvB,IAAME,EAAcrrB,EAAK/vB,IAAI8sB,YAAciD,EAAK/vB,IAAI6jC,OAAOuX,YAJjD,EAKoCrrB,EAAK/vB,IAAI6jC,OACvD,MAAO,CAAEuX,cAAaC,YANZ,EAKFA,YAC2BH,YAAWC,YANpC,EAKWA,YACsC1oC,QANjD,EAKwBA,cAIrCgpC,UAAS,SAAA1rB,GAAI,MAAK,CACjB4O,IAAK,GACLtU,UAAU,MAGXgZ,SAAQ,SAAAtT,GAAI,MAAK,CAChB0vB,SAAS1+C,GACPgvB,EAAKhvB,MAAMgvB,EAAKqO,UAAU0gB,WAAa/9C,GAGzC2+C,cACE3vB,EAAK4O,IAAM5O,EAAK7tB,IAGlBy9C,gBAMAhiB,YAAYz7B,GACV6tB,EAAK4M,SAAWz6B,GAMlBs6C,8BAEAC,YAAa,IAAD,EACyC16C,sBAAYguB,GAAvDqO,EADE,EACFA,UAAWwe,EADT,EACSA,QAASv8C,EADlB,EACkBA,KAAMmhB,EADxB,EACwBA,MAAOzgB,EAD/B,EAC+BA,MACjC+9C,EAAc/uB,EAAKqO,UAAnB0gB,UACFr6C,EAAOsrB,EAAKovB,KAAOpvB,EAAKovB,KAAK1C,YAAc,GACjD,IAAKh4C,EAAM,OAAO,KAClB,IAAKsrB,EAAK6vB,aAAc,OAAO,KAE/B,IAAM19C,EAAK6tB,EAAKovB,KAAKp/B,QAChBtb,EAAK1D,QAAO0D,EAAK1D,MAAQ,IAE9B,IAAM8+C,EAAO9vB,EAAKqO,UAAU0hB,UAa5B,OAZID,IACFp7C,EAAKo7C,KAAL,2BAAiBp7C,EAAKo7C,MAASA,IAG7B9vB,EAAKovB,KAAKxiB,WACZl4B,EAAKk4B,SAAW5M,EAAKovB,KAAKxiB,SAASr3B,QAAQ,MAAO,KAGpD3E,OAAOmnC,OAAOrjC,EAAM,CAAEvC,KAAIk8B,YAAWwe,UAASv8C,SAC9CU,EAAM+9C,IAAcn+C,OAAOmnC,OAAOrjC,EAAK1D,MAAO,CAAE,CAAC+9C,GAAY/9C,EAAM+9C,KAC9C,kBAAVt9B,IAAoB/c,EAAK+c,MAAQA,GAErC/c,GAGT+tC,cACE,IAAM3O,EAAS9T,EAAK8T,OACd6Y,EAAY,SAAAC,GAChB,IAAMx2C,EAAO,CACXjE,GAAI6tB,EAAK4O,IACTP,UAAWue,EAAQv8C,KACnBw8C,QAAS/Y,EAAOzjC,KAChB4nC,OAAQnE,EAAO9iC,MACfV,KAAMs8C,EAAQt8C,KACdw8C,UAA6B,KAAlB9sB,EAAK4M,SAAkB,KAAO5M,EAAK4M,UAKhD,OAFI5M,EAAKqQ,gBAAej6B,EAAI,cAAoB4pB,EAAKqQ,eAE9Cj6B,GAGT,GAAI4pB,EAAK8iB,QAAU9iB,EAAK8iB,OAAO9uC,OAC7B,OAAOgsB,EAAK8iB,OACT7uC,KAAI,SAAA8uC,GACH,IAAMgK,EAAM/sB,EAAK0sB,UAAU3J,EAAGjP,GAC9B,OAAKiZ,EAEK,2BACLJ,EAAU5J,IACVgK,GAJY,QAWlB77C,OAAOk4B,SAEV,IAAM7yB,EAAMypB,EAAK3E,WAAW2xB,QAAQt8C,IAAIojC,EAAOzjC,MACzCu8C,EAAUr2C,EAAIvC,OAASuC,EAAI,GAAKA,EAOtC,OALU,2BACLo2C,EAAUC,IACV5sB,EAAK0sB,UAAUE,EAAS9Y,KAUjC/C,eACO/Q,EAAK3E,WAAWqP,WAErB1K,EAAKktB,iBAELltB,EAAK3E,WAAW4Y,cAAc+b,mBAAmBhwB,GAE/B,kBAAdA,EAAK1vB,MACP0vB,EAAK0tB,gBAGP1tB,EAAK3E,WAAWmO,YAAYuH,aAAa/Q,GAEzCA,EAAK3E,WAAW0V,aAAa/Q,KAG/BwK,aAAarkB,GACX6Z,EAAK4gB,YAAcz6B,GAGrBqtB,kBACExT,EAAKwK,cAAcxK,EAAK4gB,cAG1B/V,eACE7K,EAAKqK,QAAUrK,EAAKqK,YC1Rb4lB,GAAY7N,QACtBlyC,MAAM,CACLiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCslB,QAASqrB,QAAMiM,MAAMT,IACrBhhB,SAAUwV,QAAM4H,UAAU5H,QAAM6H,UAEjCv6C,OAAM,SAAAswB,GAAI,MAAK,CAEd,cACE,OAAOA,EAAK7tB,GAAGoD,QAAQ,MAAO,KAGhC,iBACE,OAAOq2C,oBAAU5rB,EAAM,IAGzB,eACE,OAAOA,EAAKjJ,QAAQ5G,MAAK,SAAAxN,GAAC,OAAIA,EAAErS,KAAKs/B,SAAS,cAGhD,UAAW,IAAD,EACR,iBAAO5P,EAAK8N,gBAAZ,aAAO,EAAeO,WAGxBghB,SAASr+C,GAAQ,IAAD,IACd,iBAAOgvB,EAAK8N,gBAAZ,iBAAO,EAAegC,iBAAtB,aAAO,EAA0B0Y,SAASx3C,IAG5C,oBAAqB,IAAD,EAClB,OAAO,UAAAgvB,EAAK3E,WAAW2xB,QAAQt8C,IAAIsvB,EAAKzvB,OAAOF,aAAxC,eAA+Ca,QAAO,SAAAjB,GAAG,OAAIA,EAAI07C,eAAc,IAGxF,aACE,OAAO3rB,EAAKzvB,QAGd,YACE,IAAM2/C,EAASlwB,EAAKjJ,QAAQ5G,MAAK,SAAAxN,GAAC,OAAIA,EAAE3L,SACxC,OAAOk5C,GAAUA,EAAOl5C,OAI1B,eACE,OAAOgpB,EAAK3E,WAAW6U,kBAAoBlQ,GAG7C2J,cAAe,IAAD,EACZ,OAAO,UAAA3J,EAAKhpB,aAAL,eAAYm0C,YAAa,YAGnCO,UAAS,SAAA1rB,GAAI,MAAK,MAGlBsT,SAAQ,SAAAtT,GAAI,MAAK,CAChBmwB,gBACEnwB,EAAKjJ,QAAQrjB,SAAQ,SAAAiP,GAAC,OAAI45B,kBAAQ55B,OAGpC2vB,YAAYthC,GACVgvB,EAAK1F,SAAWtpB,GAGlBo/C,UAAUztC,GACRqd,EAAKjJ,QAAQ3mB,KAAKuS,IAGpB0tC,aAAa1tC,GACX,IAAM2mB,EAAQtJ,EAAKjJ,QAAQ5f,QAAQwL,GAC/B2mB,EAAQ,IACZtJ,EAAKjJ,QAAQu5B,OAAOhnB,EAAO,GAC3BiT,kBAAQ55B,GACHqd,EAAKjJ,QAAQ/iB,QAAQgsB,EAAK3E,WAAWk1B,WAAWvwB,KAGvD0vB,SAASz/C,GACP,IAAM6F,EAASkqB,EAAKjJ,QAAQ5G,MAAK,SAAAxN,GAAC,OAAIA,EAAE0rB,YAAcp+B,KAChDY,EAASZ,EAAIkxC,iBACfrrC,EACE7F,EAAIugD,WAAY16C,EAAO45C,SAAS7+C,GAC/BmvB,EAAKqwB,aAAav6C,GAEvBkqB,EAAKjJ,QAAQ3mB,KAAK,CAChBg/C,KAAMpvB,EACNqO,UAAWp+B,EACX48C,QAAS7sB,EAAKzvB,OACdD,KAAML,EAAIwgD,WACVz/C,MAAO,CACL,CAACf,EAAI8+C,WAAYl+C,KAIvBmvB,EAAKysB,2BAA6BzsB,EAAKysB,iCCpFvCtC,GAAQ/H,QACXlyC,MAAM,mBAAoB,CACzBI,KAAM,cACNC,OAAQ6xC,QAAMyL,MAAK,kBAAMzL,QAAM0L,UAAU4C,OAEzCl7B,MAAO4sB,QAAM1+B,OACb0C,IAAKg8B,QAAM1+B,OAEXmlC,iBAAkBzG,QAAME,SAASF,QAAM6H,OAAQ,wBAEhDv6C,OAAM,SAAAswB,GAAI,MAAK,CACd,oBACE,OAAOA,EAAK2wB,gBAAgB3wB,EAAK4wB,aAGnCD,gBAAgBE,GACd,IAAMC,EAAOD,EAAS1+C,GAGtB,OAFS6C,SAASqyC,cAAT,oBAAoCyJ,EAApC,YAKZxd,SAAQ,SAAAtT,GAAI,MAAK,CAChB0sB,UAAS,KACG,CACRqE,gBAAiB/wB,EAAKzvB,OAAOgxC,IAAIyP,cACjChgD,MAAO,CACLwkB,MAAOwK,EAAKxK,MACZpP,IAAK4Z,EAAK5Z,OAOhB6qC,cAAwB,IAAD,EAAXjuC,EAAW,uDAAH,EACZK,EAAQgX,GAAMzI,OAAO1O,cAAc8c,EAAK2J,cAAe3mB,GAE7D,UAAAgd,EAAK4wB,kBAAL,SAAiBlyB,OAAO,CAAErb,WAG5BopC,4BAA6B,IAAD,GAC1B,UAAIzsB,EAAK4wB,kBAAT,aAAI,EAAiBlyB,SACnBsB,EAAKkxB,cAAclxB,EAAK4wB,aAI5BM,cAAcL,GACZ7wB,EAAKixB,YAAY,IAEjB,IAAMryB,EAAW2K,kBAAQvJ,GAAMpB,SACzBrsB,EAAKytB,EAAK2wB,gBAAgBE,GAChC,GAAKt+C,EAAL,CACA,IAAMiE,EAAU,CAACjE,EAAG6kB,UAAW,gBAAiB,sBAEhD,GAAK4I,EAAK8T,OAAOqd,YAAevyB,EAASgH,WAElC,CAAC,IAAD,EACChS,EAASyG,GAAMd,KAAKjG,aAAa/gB,EAAI,CACzCihB,OAAM,UAAEwM,EAAK8N,gBAAP,aAAE,EAAegC,UACvBre,MAAOuO,EAAKvO,QAEdjb,EAAQpG,KAAKwjB,QANbpd,EAAQpG,KAAK,gBAQfmC,EAAG6kB,UAAY5gB,EAAQtF,OAAOk4B,SAAS/3B,KAAK,OAM9C47C,eACEjtB,EAAKixB,YAAY,IAEjB,IAAM1+C,EAAKytB,EAAK2wB,gBAAgB3wB,EAAK4wB,YACrC,GAAIr+C,EAAI,CAEN,IAAMilB,EAAYN,OAAOliB,SAASo8C,iBAC5B7V,EAAM/jB,EAAU65B,UAChB3rC,EAAO8R,EAAU85B,WACvB/+C,EAAGg/C,uBAAyBh/C,EAAGg/C,yBAA2Bh/C,EAAGi/C,iBAC7Dt6B,OAAOliB,SAASo8C,iBAAiBK,SAAS/rC,EAAM61B,KAOpD6R,sBACEptB,EAAKixB,YAAY,KAGnBzmB,aAAarkB,GACX6Z,EAAK4gB,YAAcz6B,EAEfA,GACF6Z,EAAKixB,YAAY,IACjBjxB,EAAK4wB,WAAWn5B,QAAQzgB,MAAMkQ,OAASwqC,KAEvC1xB,EAAKixB,YAAY,IACjBjxB,EAAK4wB,WAAWn5B,QAAQzgB,MAAMkQ,OAAS,SAI3CipC,gBACMnwB,EAAK4wB,YAAY5wB,EAAK4wB,WAAWv+B,UAGvCoI,QAAQwrB,GAGDjmB,EAAK3E,WAAWiyB,cAKnBttB,EAAK4wB,WAAWlyB,OAAO,CAAErb,MAAOgX,GAAMzI,OAAOrO,gBAAgByc,EAAK6oB,iBAAkB,MAGtF7oB,EAAKqtB,iBAGP9iB,cACMvK,EAAK3E,WAAWiyB,eAClBttB,EAAKwK,cAAa,GAClBxK,EAAK4wB,WAAWn5B,QAAQzgB,MAAMk0B,OAASwmB,KAI3Che,eACM1T,EAAK3E,WAAWiyB,eAClBttB,EAAKwK,cAAa,GAClBxK,EAAK4wB,WAAWn5B,QAAQzgB,MAAMk0B,OAASwmB,KAI3C5I,YAAY7C,GACVjmB,EAAKxK,MAAQwK,EAAK4wB,WAAWp7B,MAC7BwK,EAAK5Z,IAAM4Z,EAAK4wB,WAAWxqC,IAC3B4Z,EAAKixB,YAAYjxB,EAAK1F,SAAW,GAAM,SAIvC2M,GAAmBmb,QAAMuI,QAC7B,mBACAgH,GACAnG,GACAyE,GACA1E,GACApB,IAGF76C,EAASsiD,cAAc3qB,GAAkB,aChIzC,IAAM6iB,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ/4C,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAC7BjE,KAAM5D,QAAME,SAASF,QAAM8H,SAAS,GACpC/D,OAAQ/D,QAAME,SAASF,QAAM8H,SAAS,GACtC5D,MAAOlE,QAAME,SAASF,QAAM8H,SAAS,GACrCvI,OAAQS,QAAM4H,UAAU5H,QAAM6H,QAC9BkH,WAAY/O,QAAME,SAASF,QAAM8H,SAAS,GAC1C2H,WAAYzP,QAAME,SAASF,QAAM8H,SAAS,GAC1CnlC,OAAQq9B,QAAME,SAASF,QAAM6H,OAAQ,SAGjCE,GAAQ/H,QACXlyC,MAAM,iBAAkB,CACvBI,KAAM,QACNk3B,OAAQ4a,QAAME,SAASF,QAAM6H,OAAQ,IAErCxI,QAASW,QAAME,SAASF,QAAM8H,SAAS,GACvCv6C,QAASyyC,QAAMiM,MAAMpnB,MAEtBv3B,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,IAAM8iB,EAAS9iB,EAAK8iB,SACpB,OAAOA,GAAUA,EAAO9uC,OAAS,GAGnC,iBACE,OAAOu1B,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC,WAAY,IAAD,EACT,OAAO,UAAA0F,EAAK3E,kBAAL,eAAiBmO,YAAY75B,QAAQuB,QAAO,SAAAyR,GAAC,OAAIA,EAAEpS,SAAWyvB,OAAS,IAGhF8iB,OAAM,IACG9iB,EAAK3E,WAAW2xB,QAAQt8C,IAAIsvB,EAAK3vB,MAG1C4yC,eACE,IAAMH,EAAS9iB,EAAK8iB,SACpB,OAAOA,GAAUA,EAAO5xC,QAAO,SAAA6xC,GAAC,MAAwB,gBAApB9wC,kBAAQ8wC,GAAG1yC,MAA0B0yC,EAAE1P,mBAG9EC,SAAQ,SAAAtT,GAAI,MAAK,CAChBuqB,SAAS5yC,IACPA,GAAKA,EAAEykB,iBACA4D,EAAKuhB,IAAIC,aAGlB4I,cAAc7zC,EAAKlE,GACjB,IAAIsQ,EACArO,EAEEw9C,EAAK9xB,EAAK3E,WAAWivB,MAAM55C,IAAI6F,EAAI83B,WAGzC,GAFAyjB,EAAG1H,cAAc7zC,GAEZu7C,EAAGnG,WAAgC,WAAnBt5C,EAAU/B,KAA/B,CAKA,IAAM8F,EAAO,CACXw4B,IAAKr4B,EAAIpE,GACTqjB,MAAOjf,EAAIvF,MAAMwkB,MACjBpP,IAAK7P,EAAIvF,MAAMoV,IACfiqB,cAAe95B,EAAI85B,cACnB5e,MAAOlb,EAAIkb,MACXg6B,SAAUl1C,EAAIk1C,UA8BhB,OA3BA9oC,EAAIqd,EAAK8O,WAAW,CAAEtZ,MAAOjf,EAAIvF,MAAMwkB,MAAOpP,IAAK7P,EAAIvF,MAAMoV,MAEzD/T,IACFiC,EAAIlC,EAAmBC,GAGlBsQ,EAKHA,EAAEmgC,OAAO1yC,KAAKkE,GAHdqO,EAAIqd,EAAK+xB,aAAa37C,EAAM,CAAC9B,KAO7B0rB,EAAKuhB,KACPvhB,EAAKuhB,IAAIqH,UAAU,CACjBpzB,MAAO7S,EAAE6S,MACTpP,IAAKzD,EAAEyD,MAOXzD,EAAE8pC,4BAEK9pC,IAGTqvC,cAAc7rC,GACZ6Z,EAAKiyB,WAAa9rC,GAGpBogC,gBAAgBpgC,GACd6Z,EAAKkyB,aAAe/rC,GAGtB4rC,aAAalB,EAAU/N,GACrB,IAAIjT,EAAU7P,EAAK6oB,iBACbsJ,EAAKrP,EAAO3yB,MAAK,SAAA4yB,GAAC,MAAe,WAAXA,EAAEzyC,QAC1B6hD,IAAItiB,EAAUxV,GAAMzI,OAAO1O,cAAcivC,EAAGnH,mBAAoB,KAEpE,IAAMroC,EAAIskB,GAAiB/0B,OAAO,CAChCC,GAAI0+C,EAAS1+C,GAAK0+C,EAAS1+C,GAAKV,IAChCm9B,IAAKiiB,EAASjiB,IAAMiiB,EAASjiB,IAAMn9B,IACnCm7B,SAAiC,OAAvBikB,EAAS/D,UAAqB,GAAK+D,EAAS/D,UACtDt3B,MAAOq7B,EAASr7B,MAChBpP,IAAKyqC,EAASzqC,IACdqL,MAAOo/B,EAASp/B,MAChBg6B,SAAUoF,EAASpF,SACnB2G,SAAUpyB,EAAKoyB,SACfvJ,iBAAkBhZ,EAClBQ,cAAewgB,EAASxgB,cACxByS,OAAQA,IAQV,OALAngC,EAAEiuC,WAAaC,EAEf7wB,EAAKrwB,QAAQS,KAAKuS,GAClBqd,EAAK3E,WAAWutB,UAAUjmC,GAEnBA,GAGTimC,UAAUyJ,GAER,IAAMC,EAAStyB,EAAK3E,WAAWxrB,MAAMa,IAAI2hD,EAAUlgD,IAEnD,GAAImgD,EAIF,OAHAA,EAAOpB,cAAcmB,GAErBC,EAAO1B,WAAayB,EACbC,EAIT,GAAsB,IADPtyB,EAAK4iB,qBACT5uC,OAAX,CAKA,IAAM44C,EAAU5sB,EAAKijB,eAAe,GAC9BzvB,EAAS,CAAE,CAACo5B,EAAQmC,WAAYnC,EAAQzL,kBACxCx+B,EAAIqd,EAAK3E,WAAWk3B,aAAaF,EAAW7+B,EAAQo5B,EAAS5sB,GAGnE,OAFArd,EAAEiuC,WAAayB,EACf1vC,EAAE8pC,4BACK9pC,EATL0vC,EAAUhgC,QAAUggC,EAAUhgC,UAelCg3B,aACErpB,EAAKyhB,SAAWzhB,EAAKyhB,SAGvB6H,OAAOkB,GACLxqB,EAAKuhB,IAAMiJ,EAEXxqB,EAAKwyB,KAAK9+C,SAAQ,SAAA6C,GAChB,IAAMs4B,EAAM,CACV18B,GAAIoE,EAAIpE,GACRqjB,MAAOjf,EAAIif,MACXpP,IAAK7P,EAAI6P,IACT/C,MAAO,UAGL9M,EAAIk1C,WACN5c,EAAI4jB,MAAO,EACX5jB,EAAI6jB,QAAS,GAGf,IAAM/vC,EAAIqd,EAAKuhB,IAAIqH,UAAU/Z,GAC7Bt4B,EAAIq6C,WAAajuC,EACjBpM,EAAIk2C,gCAIRhC,UAAUD,GACRxqB,EAAKuhB,IAAMiJ,OAIXkG,GAAiBtO,QAAMuI,QAAQ,iBAAkBb,GAAUK,GAAOrG,GAAmB3B,IA8BrFwQ,GAAex0B,YAAO,QAAPA,CAAgBnE,aA5BhB,SAAC,GAAqB,IAAnBc,EAAkB,EAAlBA,MAAOloB,EAAW,EAAXA,KAC7B,OAAKA,EAAK40B,OAGR,kBAAC,GAAD,CAAW50B,KAAMA,GACf,kBAAC,WAAD,KACE,kBAAC,GAAD,CACE21C,UAAW31C,EAAK5B,MAChB+X,IAAKnW,EAAK40B,OACVylB,aAAcr6C,EAAKq6C,aACnB5D,WAAYz2C,EAAKy2C,WACjBH,SAAUt2C,EAAK63C,UACf7B,UAAWh2C,EAAKg2C,UAChBU,OAAQ12C,EAAK02C,OACbhD,MAAO1zC,EAAK0zC,MACZN,KAAMpzC,EAAKozC,KACXG,OAAQvzC,EAAKuzC,OACbx2C,SAAS,EACToV,OAAQnS,EAAKmS,SAGf,kBAAC,GAAD,CAAenS,KAAMA,EAAMkoB,MAAOA,IAClC,yBAAK9jB,MAAO,CAAEk6B,aAAc,WArBT,SA6B3B5hC,EAASu7C,OAAO,YAAa6F,GAAgBiC,IAC7CrjD,EAASw7C,cAAc4F,I,cC/PRtO,WACZlyC,QACAR,OAAM,SAAAswB,GAAI,MAAK,MACfsT,SAAQ,SAAAtT,GAAI,MAAK,CAChB4yB,iBAAiBC,EAASnwC,GACpBsd,EAAK8yB,QACP9yB,EAAK8yB,OAAOp/C,SAAQ,SAAA8kB,GACdq6B,IACFr6B,EAAKxhB,MAAMmgB,gBAAkB07B,GAG3BnwC,IACF8V,EAAKxhB,MAAMmgB,gBAAkBkD,GAAMzI,OAAOrO,gBAAgBiV,EAAKxhB,MAAMmgB,gBAAiBzU,QAM9F+pC,4BACE,IAAMsG,EAAa/yB,EAAKgzB,gBAExBhzB,EAAK4yB,iBAAiBG,EAAY/yB,EAAK1F,SAAW,GAAM,IACxD0F,EAAKkxB,cAAclxB,EAAKizB,YAG1BC,cACE,IAAMH,EAAa/yB,EAAKgzB,gBAClB16B,EAAQlC,GAAe4J,EAAM,gBAAiB,CAAE7I,gBAAiB47B,IAEjEI,EAAW76B,EAAMA,EAAMtkB,OAAS,GACtC,GAAKm/C,EAOL,OALAnzB,EAAKkxB,cAAciC,GAEnBnzB,EAAKizB,UAAYE,EACjBnzB,EAAK8yB,OAASx6B,EAEPA,GAGT06B,gBACE,IAAID,EAAa/yB,EAAK8T,OAAOsf,gBAAkBpzB,EAAKhpB,MAAMm0C,UAM1D,OAJI4H,IACFA,EAAa14B,GAAMzI,OAAO1O,cAAc6vC,EAAY,KAG/CA,GAGT7B,cAAciC,GACZ,GAAKA,EAAL,CACA,IAAM38C,EAAU,CAAC,gBAAiB,sBAC5BooB,EAAW2K,kBAAQvJ,GAAMpB,SAC/B,GAAKoB,EAAK8T,OAAOqd,YAAevyB,EAASgH,WAElC,CAAC,IAAD,EAEC0kB,EAAK,UAAGtqB,EAAK8N,gBAAR,aAAG,EAAegC,UACvBlc,EAASyG,GAAMd,KAAKjG,aAAa6/B,EAAU,CAC/C3/B,OAAQ82B,EACR74B,MAAOuO,EAAKvO,QAEdjb,EAAQpG,KAAKwjB,QARbpd,EAAQpG,KAAK,gBAUf+iD,EAAS/7B,UAAY5gB,EAAQtF,OAAOk4B,SAAS/3B,KAAK,OAGpDgiD,iBAAiB/6B,GAqCfA,GAASA,EAAM5kB,SAAQ,SAAAqvC,GAAC,OApCP,SAAAA,GAiCf,OAhCAA,EAAEuQ,YAAc,SAAS/3B,GACnByE,EAAK3E,WAAWiyB,cAClBttB,EAAKwT,kBACLuP,EAAE/rC,MAAMk0B,OAASwmB,GAEjBn2B,EAAGoyB,mBAEH5K,EAAE/rC,MAAMk0B,OAASwmB,IAIrB3O,EAAEwQ,WAAa,WACbvzB,EAAKwK,cAAa,IAGpBuY,EAAEyQ,YAAc,SAASj4B,GAGnByE,EAAK8T,OAAO2f,eAAiBlkD,OAC/BgsB,EAAGoyB,kBACH3tB,EAAK8T,OAAO2f,aAAelkD,OAI/BwzC,EAAE2Q,QAAU,SAASn4B,GAEfyE,EAAK8T,OAAO2f,eAAiBlkD,OAEjCwzC,EAAE/rC,MAAMk0B,OAASwmB,GACjB1xB,EAAKqtB,mBAGA,EAGmBsG,CAAS5Q,OAGvCkK,eACEjtB,EAAK4yB,iBAAiB,KAAM,IAE5B,IAAMvqC,EAAQ2X,EAAK8yB,OAAO,GACtBzqC,IACEA,EAAMkpC,uBACRlpC,EAAMkpC,yBAENlpC,EAAMmpC,eAAe,CAAE7xB,MAAO,SAAUi0B,SAAU,aAQxDxG,sBACEptB,EAAK4yB,iBAAiB,KAAM,KAG9BpoB,aAAarkB,GAGX,GAFA6Z,EAAK4gB,YAAcz6B,EAEf6Z,EAAK8yB,OAAQ,CACf,IAAMzrC,EAAM2Y,EAAK8yB,OAAO9+C,OAClB6/C,EAAQ7zB,EAAK8yB,OAAO,GACpBgB,EAAQ9zB,EAAK8yB,OAAOzrC,EAAM,GAC1B0sC,EAAS/zB,EAAK8yB,OAAOh7C,MAAM,EAAGuP,EAAM,GAEpC1W,EAAM,SAAC6nB,EAAMuqB,GAAsE,IAAD,yDAAP,GAAO,IAAhExH,WAAgE,aAApDyY,cAAoD,aAArCruC,aAAqC,aAAvBD,YAAuB,SAClFC,IAAO6S,EAAKxhB,MAAMi9C,YAAclR,GAChCr9B,IAAM8S,EAAKxhB,MAAMk9C,WAAanR,GAC9BxH,IAAK/iB,EAAKxhB,MAAMm9C,UAAYpR,GAC5BiR,IAAQx7B,EAAKxhB,MAAMo9C,aAAerR,IAGxC,GAAI/iB,EAAK4gB,YAAa,CACpB,IAAM97B,EAAI4sC,GACV/gD,EAAIkjD,EAAO/uC,EAAG,CAAEa,OAAO,IACvBhV,EAAImjD,EAAOhvC,EAAG,CAAEY,MAAM,IAElBquC,EAAO//C,QAAQ+/C,EAAOrgD,SAAQ,SAAAqvC,GAAC,OAAIpyC,EAAIoyC,EAAGj+B,EAAG,CAAEY,MAAM,EAAOC,OAAO,WAClE,CAELhV,EAAIkjD,EADQ,OAEZljD,EAAImjD,EAFQ,OAIRC,EAAO//C,QAAQ+/C,EAAOrgD,SAAQ,SAAAqvC,GAAC,OAAIpyC,EAAIoyC,EAJ/B,MAIuC,CAAEr9B,MAAM,EAAOC,OAAO,cCrJ7EwkC,GAAQ/H,QACXlyC,MAAM,uBAAwB,CAC7BiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCm9B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAClCnB,KAAM,kBACNC,OAAQ6xC,QAAMyL,MAAK,kBAAMzL,QAAM0L,UAAUuG,OAEzC3+B,YAAa0sB,QAAMkS,QACnB9+B,MAAO4sB,QAAM6H,OACbr0B,UAAWwsB,QAAMkS,QACjBluC,IAAKg8B,QAAM6H,OACXh0C,KAAMmsC,QAAM6H,SAEbv6C,OAAM,SAAAswB,GAAI,MAAK,CACd,aACE,OAAOA,EAAKzvB,QAEd,oBACE,OAAOyvB,EAAK8yB,OAAO,QAGtBxf,SAAQ,SAAAtT,GAAI,MAAK,CAChBmwB,gBACE91B,GAAMd,KAAKlB,YAAY2H,EAAK8yB,SAG9BpG,YACE,IAAIz5C,EAAM,CACRjC,MAAO,CACLwkB,MAAOwK,EAAKxK,MACZpP,IAAK4Z,EAAK5Z,IACVsP,YAAasK,EAAKtK,YAClBE,UAAWoK,EAAKpK,YAQpB,MAJmC,QAA/BoK,EAAKzvB,OAAOgkD,iBACdthD,EAAIjC,MAAJ,KAAoBgvB,EAAK/pB,MAGpBhD,OAIP+zB,GAAuBob,QAAMuI,QACjC,uBACAgH,GACAnG,GACAyE,GACA1E,GACApB,GACAqK,IAGFllD,EAASsiD,cAAc5qB,GAAsB,a,IClErCob,GAAUqS,EAAQ,GAAlBrS,MAkDKsS,GAAc,CACzBn/B,MA3CY,eAAC7N,EAAD,uDAAO,EAAGF,EAAV,uDAAgB,EAAhB,OACZ46B,GAAMN,OAAO,CACXzxC,KAAK,SAAD,OAAWqX,EAAX,aAAmBF,EAAnB,KACJmtC,aAAa5iD,GACJ6iD,WAAW7iD,GAEpB8iD,WAAW7jD,GACFA,EAAMiI,WAEf67C,aAAa9jD,GACX,IAAM+jD,EAAaH,WAAW5jD,GAC9B,OAAO0W,GAAOqtC,GAAcA,GAAcvtC,GAE5CwtC,qBAAqBhkD,GACnB,OAAIzB,KAAKulD,aAAa9jD,GAAe,GAC/B,SAAN,OAAgBA,EAAhB,gCAA6C0W,EAA7C,aAAqDF,EAArD,SA6BJnE,MArBe++B,GAAMN,OAAO,CAC5BzxC,KAAM,WACNskD,aAAa3jD,GACJwG,OAAOxG,GAEhB6jD,WAAW7jD,GACFA,EAAMiI,WAEf67C,aAAa9jD,GACX,IAAMikD,GAAc,IAAIxjB,QAASz6B,MAEjC,OADAi+C,EAAY5xC,MAAQrS,EACS,KAAtBikD,EAAY5xC,OAErB2xC,qBAAqBhkD,GACnB,OAAIzB,KAAKulD,aAAa9jD,GAAe,GAC/B,SAAN,OAAgBA,EAAhB,gDCjBE84C,GAAW1H,QAAMlyC,MAAM,iBAAkB,CAE7CG,KAAM+xC,QAAME,SAASF,QAAM2H,WAAYt4C,EAAc,IACrDT,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAG7BsK,eAAgBnS,QAAME,SAASF,QAAM8L,YAAY,CAAC,OAAQ,KAAM,SAAS,kBACvEh3B,OAAOg+B,eAAiB,KAAO,SAEjCC,gBAAgB,EAEhB/B,eAAgBhR,QAAM4H,UAAU0K,GAAYrxC,OAC5C8tC,WAAY/O,QAAME,SAASF,QAAM8H,SAAS,GAE1Cx8B,SAAU00B,QAAME,SAASF,QAAM8L,YAAY,CAAC,OAAQ,SAAU,kBAAmB,UAG7E/D,GAAQ/H,QACXlyC,MAAM,iBAAkB,CACvBI,KAAM,YACNk3B,OAAQ4a,QAAME,SAASF,QAAM6H,OAAQ,IACrCmL,QAAShT,QAAME,SAASF,QAAM1+B,OAAQ,KAEvChU,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,IAAM8iB,EAAS9iB,EAAK8iB,SACpB,OAAOA,GAAUA,EAAO9uC,OAAS,GAGnC,iBACE,OAAOu1B,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC,WACE,OAAO0F,EAAK3E,WAAWmO,YAAY75B,QAAQuB,QAAO,SAAAyR,GAAC,OAAIA,EAAEpS,SAAWyvB,MAGtE8iB,OAAM,IACG9iB,EAAK3E,WAAW2xB,QAAQt8C,IAAIsvB,EAAK3vB,MAG1C4yC,eACE,IAAMH,EAAS9iB,EAAK8iB,SACpB,OAAOA,EACHA,EAAO5xC,QACL,SAAA6xC,GAAC,OAAIA,EAAE1P,aAAmC,yBAApBphC,kBAAQ8wC,GAAG1yC,MAAuD,gBAApB4B,kBAAQ8wC,GAAG1yC,SAEjF,UAGPijC,SAAQ,SAAAtT,GAAI,MAAK,CAChBq1B,cACEr1B,EAAKo1B,QAAUp1B,EAAKo1B,QAAU,GAGhCx0B,YAAY9F,GACVkF,EAAKwH,OAASgc,GAAYxjB,EAAKhvB,MAAO8pB,EAAMiE,KAAKilB,UAGnD+N,aAAar7C,GACX,IAAMiM,EAAIqkB,GAAqB90B,OAArB,aACR08B,IAAKl4B,EAAEvE,IACJuE,IAQL,OALAiM,EAAEkU,OAASngB,EAAEmgB,OAEbmJ,EAAKrwB,QAAQS,KAAKuS,GAClBqd,EAAK3E,WAAWutB,UAAUjmC,GAEnBA,GAGTimC,UAAUrzB,GACR,IAAMutB,EAAS9iB,EAAK4iB,qBACpB,GAAsB,IAAlBE,EAAO9uC,OAAX,CAEA,IAAM44C,EAAU9J,EAAO,GACjBtvB,EAAS,CAAE,CAACo5B,EAAQmC,WAAYnC,EAAQzL,kBACxCiO,EAAOpvB,EAAK3E,WAAWk3B,aAAah9B,EAAO/B,EAAQo5B,EAAS5sB,GAElE,OADAovB,EAAKv4B,OAAStB,EAAMsB,OACbu4B,IAQThF,cAAc7zC,EAAKlE,GAAY,IAAD,EACyBkE,EAAIvF,MAAjDwkB,EADoB,EACpBA,MAAOE,EADa,EACbA,YAAatP,EADA,EACAA,IAAKwP,EADL,EACKA,UAAW3f,EADhB,EACgBA,KAE5C,GAAuB,aAAnB5D,EAAU/B,MAA0C,YAAnB+B,EAAU/B,KAA/C,CAKA,IAAMwyC,EAAS1wC,EAAmBC,GAC5B+D,EAAO,CACXw4B,IAAKr4B,EAAIpE,GACTy6B,SAA4B,OAAlBr2B,EAAIu2C,UAAqB,GAAKv2C,EAAIu2C,UAC5Cp3B,YAAaA,EACbE,UAAWA,EACXJ,MAAOA,EACPpP,IAAKA,EACLnQ,KAAMA,EACNwb,MAAOlb,EAAIkb,MACXg6B,SAAUl1C,EAAIk1C,SACdpb,cAAe95B,EAAI85B,cACnByS,OAAQ,CAACA,IAGXA,EAAOsH,cAAc7zC,GAErBypB,EAAK+xB,aAAa37C,GAElB4pB,EAAKq1B,mBAvBHr1B,EAAK3E,WAAWivB,MAAM55C,IAAI6F,EAAI83B,WAAW+b,cAAc7zC,QA2BzD89C,GAAiBjS,QAAMuI,QAAQ,iBAAkBa,GAAc1B,GAAUK,GAAOhI,IAEhFmT,G,uKACM,IAAD,EACiB/lD,KAAKqE,MAArBhB,EADD,EACCA,KAAMkoB,EADP,EACOA,MAEd,OAAKloB,EAAK40B,OAEH,kBAAC+tB,GAAD,CAAuBz6B,MAAOA,EAAOloB,KAAMA,IAFzB,S,GAJEirB,aAUzB23B,G,kDACJ,WAAY5hD,GAAQ,IAAD,8BACjB,cAAMA,IACD6hD,MAAQjiD,IAAMwrC,YAFF,E,uEAMjB,IAAI5pC,EAEFsgD,EAAS,GACTC,EAAiB,GACjBC,EAAY1+B,OAAOW,eAErB,GAAI+9B,EAAUC,YAAa,MAAO,GAElC,IAAKzgD,EAAI,EAAGA,EAAIwgD,EAAUE,WAAY1gD,IAAK,CACzC,IAAIuN,EAAIizC,EAAU99B,WAAW1iB,GAEG,QAA5BuN,EAAEgT,aAAagC,UACjBhV,EAAEwT,OAAOxT,EAAE8S,eAAgB9S,EAAE8S,eAAezhB,QAG9C,IACE,IAAIqiB,EAAc0/B,aAAgBpzC,EAf7BpT,KAeqCkmD,MAAMltC,SAChD+O,GAAgB3U,GAEhB0T,EAAYQ,OAASlU,EACrB0T,EAAYpgB,KAAO2/C,EAAU38C,WAIT,OAAhBod,EACFs/B,EAAevlD,KAAKuS,GAEpB+yC,EAAOtlD,KAAKimB,GAEd,MAAOxgB,KAQX,OAFA+/C,EAAUI,kBAEHN,I,gCAGCn6B,GACR,IAAM3oB,EAAOrD,KAAKqE,MAAMhB,KAClBkwC,EAASlwC,EAAKqwC,eACpB,GAAKH,GAA4B,IAAlBA,EAAO9uC,OAAtB,CAEA,IAAIiiD,EAAiB1mD,KAAK2mD,2BAE1B,GAA8B,IAA1BD,EAAejiD,OAAnB,CAEApB,EAAK6gD,aAAe,KAEpB,IAAM0C,EAAWvjD,EAAKg2C,UAAUqN,EAAe,IAC/C,GAAIE,EAAU,CACZ,IAAM79B,EAAQ69B,EAASjD,cACvBiD,EAAS9C,iBAAiB/6B,Q,sCAK5B,IAAMxlB,EAAOvD,KAAKkmD,MAAMltC,QAChB3V,EAASrD,KAAKqE,MAAdhB,KAERA,EAAK4/C,KAAK9+C,SAAQ,SAASiP,GAAI,IAAD,IAI5B,eAAIA,EAAEmwC,cAAN,iBAAI,EAAW,UAAf,aAAI,EAAesD,aAEnB,IACE,IAAM7gC,EAAQwgC,WAAcpzC,EAAE6S,MAAO7S,EAAE+S,YAAa/S,EAAEyD,IAAKzD,EAAEiT,UAAW9iB,GAExEwkB,GAAgB/B,GAEhB5S,EAAEkU,OAAStB,EACX,IAAM+C,EAAQ3V,EAAEuwC,cAChBvwC,EAAE0wC,iBAAiB/6B,GACnB,MAAOziB,GACPoa,QAAQk9B,IAAIxqC,OAIX/P,EAAKuiD,gBACRt+C,MAAMoX,KAAK1e,KAAKkmD,MAAMltC,QAAQ4L,qBAAqB,MAAMzgB,SAAQ,SAAAvC,GAC/DA,EAAE6oC,iBAAiB,SAAS,SAASze,GAEnC,OADAA,EAAGa,kBACI,U,2CAOb7sB,KAAK8mD,kB,0CAIL9mD,KAAK8mD,kB,+BAGG,IAAD,EACiB9mD,KAAKqE,MAArBhB,EADD,EACCA,KAAMkoB,EADP,EACOA,MAEV3U,EAAMq9B,GAAY5wC,EAAK5B,MAAO8pB,EAAMiE,KAAKilB,SAI7C,MAHsB,WAAlBpxC,EAAK8a,WAAuBvH,EAAMnN,KAAKmN,IACrB,kBAAlBvT,EAAK8a,WAA8BvH,EAAMkU,GAAM1G,SAAS7a,YAAYqN,IAGtE,kBAAC,GAAD,CAAWvT,KAAMA,GACf,yBACE4sC,IAAKjwC,KAAKkmD,MACVa,cAAa1jD,EAAKwiD,QAClBp+C,MAAO,CAAEu/C,SAAU,QACnBC,UAAWjnD,KAAKinD,UAAUjlD,KAAKhC,MAC/BknD,wBAAyB,CAAEC,OAAQvwC,U,GAxHZ0X,aA+H3B84B,GAAex4B,YAAO,QAAPA,CAAgBnE,YAASs7B,KACxCC,GAAwBp3B,YAAO,QAAPA,CAAgBnE,YAASw7B,KAEvDlmD,EAASu7C,OAAO,YAAawJ,GAAgBsC,IAC7CrnD,EAASw7C,cAAcuJ,IClSvB,IAAMuC,GAAWxU,QAAMlyC,MAAM,WAAY,IAAIojC,SAAQ,SAAAtT,GAAI,MAAK,MAEjD62B,GAAW,CAAEC,EAAG,EAAGC,EAAG,GAEpBH,M,qBCAA58B,eAAQ,uKAGjB,OACE,kBAAC,WAAD,KACE,kBAAC,KAAD,CACEmY,aAAc5iC,KAAKqE,MAAMojD,SAAW,GACpCxvC,IAAKjY,KAAKqE,MAAM4T,KAAO,GACvBE,IAAK,EACL81B,UAAQ,EACRyZ,aAAc,KACdjgD,MAAO,CAAE+N,OAAQxV,KAAKqE,MAAMmR,QAAU,KACtCic,SAAUzxB,KAAKqE,MAAMotB,WAEvB,kBAAC,IAAD,CAASxG,MAAOjrB,KAAKqE,MAAM4mB,MAAOD,UAAU,QAC1C,kBAAC,IAAD,CACExO,MAAM,SACNzb,KAAMf,KAAKqE,MAAM0mB,SAAW,UAAY,UACxClD,UAAWsC,KAAO+W,OAClBhW,QAASlrB,KAAKqE,MAAM6mB,SAEnBlrB,KAAKqE,MAAM0rB,YArBH,GACIzB,cC+HZq5B,GAnIG9U,QACflyC,MAAM,CACLoqB,SAAU8nB,QAAME,SAASF,QAAM8H,SAAS,KAEzCx6C,OAAM,SAAAswB,GAAI,MAAK,CACd,UACE,OAAOA,EAAKm3B,SAAS5gD,KAGvB,cACE,OAAOypB,EAAKm3B,UAGd,cACE,OAAOn3B,EAAKo3B,UAGd,iBACE,OAAO7tB,kBAAQvJ,EAAK4sB,SAASpxB,gBAAgBlB,UAG/C,gBACE,OAAO,MAGT,mBACE,IAAMwoB,EAAS,CAAC9iB,EAAK4sB,SACf3J,EAAeH,EACjBA,EAAO5xC,QAAO,SAAAuF,GAAC,OAAIA,EAAE48B,cAQrB,KAEJ,OAAO4P,EAAeA,EAAahvC,KAAI,SAAA8uC,GAAC,OAAIlxC,EAAUkxC,MAAM,MAI9DsU,iBAAiB9gD,KAEjB,qBAEE,IAAMA,EAAMypB,EAAKzpB,IACjB,OAAOA,EAAIi8C,KAAKj8C,EAAIi8C,KAAKx+C,OAAS,IAGpC,uBACE,OAAOgsB,EAAK4sB,QAAQvxB,WAAW6U,qBAGlCoD,SAAQ,SAAAtT,GAAI,MAAK,CAChBsS,YAAYnsB,GACV6Z,EAAK1F,SAAWnU,GAGlBsd,MAAMpzB,EAAMkrB,EAAItC,GACd,IAAM5iB,EAAKhG,EAAO,KACM,qBAAb2vB,EAAK3pB,IAAqB2pB,EAAK3pB,GAAIihD,KAAKt3B,EAAMzE,EAAItC,IAG/Ds+B,eAAehhD,EAAKlE,GAClB,IAAIsQ,EACAmgC,EAAS,GAEPgP,EAAK9xB,EAAK3E,WAAWivB,MAAM55C,IAAI6F,EAAI83B,WAKzC,GAJAyjB,EAAG1H,cAAc7zC,IAIbu7C,EAAGnG,WAAgC,aAAnBt5C,EAAU/B,KAA9B,CAT6B,MAWW0vB,EAAKw3B,SAArCC,EAXqB,EAWrBA,WAAYC,EAXS,EAWTA,gBAEpB,GAAK5F,EAAGnG,WAAc+L,EAAgBlP,SAASn2C,EAAU/B,MAAzD,CAWA,GATIiG,EAAIjG,OAASmnD,KACf3U,EAAS1wC,EAAmBC,IACjB+3C,eACTtH,EAAOsH,cAAc7zC,GAGvBusC,EAAS,CAACA,IAGR4U,EAAgBlP,SAASjyC,EAAIjG,MAAO,CACtC,IACMqnD,EAAa33B,EAAKq3B,iBAAiB9gD,GACnC7B,EAAI,qCACRk6B,IAAKr4B,EAAIpE,GACTy6B,SAA4B,OAAlBr2B,EAAIu2C,UAAqB,GAAKv2C,EAAIu2C,UAC5Cr7B,MAAOlb,EAAIkb,MACXg6B,SAAUl1C,EAAIk1C,SACdmM,WAAY,OACZ9U,UARa,IAUVvsC,EAAIvF,OACJ2mD,GAGLh1C,EAAIqd,EAAK+xB,aAAar9C,QACjB,GAAIo9C,EAAGnG,UAAW,CACvB,IAAMr3C,EAAIlC,EAAmBC,IAQ7BsQ,EADoBqd,EAAKzpB,IAAjB5G,QACIwgB,MAAK,SAAAxN,GAAC,OAAIA,EAAEisB,MAAQr4B,EAAIpE,QAI7BwQ,EAAEmgC,OAAO1yC,KAAKkE,GAGvB,OAAOqO,KAGTynC,cAAc7zC,EAAKlE,GAEjB,GAAK2tB,EAAKw3B,SAEV,OAAOx3B,EAAKu3B,eAAehhD,EAAKlE,QCxHhCwlD,GAAW79B,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KAC3B,OACE,kBAACklD,GAAD,CACEx9B,SAAU1nB,EAAK0nB,SACfgF,KAAM,kBAACmJ,GAAA,EAAD,MACNhO,QAAS,SAAAc,GACP,IAAMw8B,EAAMnlD,EAAK0nB,SACjB1nB,EAAKolD,QAAQnnB,cAEbj+B,EAAK0/B,aAAaylB,GAEdnlD,EAAK0nB,UACP1nB,EAAKqlD,gBAGTj3B,SAAU,SAAA7a,GACRvT,EAAKslD,UAAU/xC,GACfvT,EAAKqlD,qBAMPE,GAAQ/V,QACXlyC,MAAM,CACL0uC,YAAawD,QAAME,SAASF,QAAM1+B,OAAQ,MAE3ChU,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,OAAO,kBAAC63B,GAAD,CAAUjlD,KAAMotB,KAGzB,eACE,MAAO,CACLy3B,WAAY,cACZC,gBAAiB,CAAC,cAAe,eAItCpkB,SAAQ,SAAAtT,GAAI,MAAK,CAChBoqB,cAAcgO,EAAMC,GAClB,IAAM7oC,EAASwQ,EAAKu3B,eAAea,EAAMC,GAErCD,EAAKpnD,MAAMmY,QACHqG,EAAO8oC,UAAU,CAAEhoD,KAAM,QACjCgoD,UAAUF,EAAKpnD,MAAMmY,QAOzB,MAJ0B,QAAtBivC,EAAKpnD,MAAMunD,SACb/oC,EAAOgpC,KAAOJ,EAAKpnD,MAAM2f,KAGpBnB,GA2BTuiC,aAAa0G,GAAO,IAAD,EACX7L,EAAU5sB,EAAK4sB,QACfp5B,EAAS,CAAE,CAACo5B,EAAQmC,WAAT,UAAqBnC,EAAQzL,sBAA7B,aAAqB,OAAAyL,IACtC,OAAO5sB,EAAKzpB,IAAI8kB,WAAWk3B,aAAakG,EAAMjlC,EAAQo5B,EAAS5sB,EAAKzpB,MAGtE0hD,eACE,IAAM9xC,EAAM6Z,EAAK4e,YACX8Z,EAAQ14B,EAAKzpB,IAAI0V,SAEjBif,EAAS,CAAC,QADDnX,GAAO/C,gBAAgB7K,GACL,KAAM,IAAKxC,KAAK0K,MAAMlI,EAAM,GAAK,EAAG,IAAKxC,KAAK0K,MAAMlI,EAAM,GAAK,EAAG,UAEnGuyC,EAAMlhC,YAAYxgB,MAAMk0B,OAASA,EAAO75B,KAAK,KAG/C6mD,UAAU/xC,GACR6Z,EAAK4e,YAAcz4B,GAGrBwyC,YACE34B,EAAKiS,KAAO,WAGd2mB,YAAYr9B,EAAD,GAAc,IAAD,oBAAPlkB,EAAO,KAAJoO,EAAI,KACJ,YAAdua,EAAKiS,MAEKjS,EAAK64B,iBAEbC,aAAaR,UAAU30C,KAAK0K,MAAMhX,GAAIsM,KAAK0K,MAAM5I,KAGzDszC,YAAYx9B,EAAD,GAAc,IAAD,oBAAPlkB,EAAO,KAAJoO,EAAI,KAChBhP,EAAIupB,EAAK4sB,QACToM,EAAQh5B,EAAK64B,iBAEnB,GAAIG,EACFh5B,EAAKiS,KAAO,UAEF+mB,EAAMC,SAAS,CACvB3oD,KAAM,MACNsuC,YAAa5e,EAAK4e,aAAenoC,EAAEmoC,cAGnC0Z,UAAU30C,KAAK0K,MAAMhX,GAAIsM,KAAK0K,MAAM5I,SAEtC,GAAIhP,EAAE48B,WAAY,CAChBrT,EAAKiS,KAAO,UAEZ,IAAM+mB,EAAQh5B,EAAK+xB,aAAa,CAC9B7Y,QAAS,GACT0e,WAAY,OAGd53B,EAAKzpB,IAAI8kB,WAAWiP,WAAW0uB,GAErBA,EAAMC,SAAS,CACvB3oD,KAAM,MACNsuC,YAAa5e,EAAK4e,aAAenoC,EAAEmoC,cAGnC0Z,UAAU30C,KAAK0K,MAAMhX,GAAIsM,KAAK0K,MAAM5I,UAM1CyzC,GAAQ9W,QAAMuI,QAAQuM,GAAWN,GAAUuB,I,UCrJlCn+B,eAAQ,uKAGjB,OACE,kBAAC,IAAD,CAASQ,MAAOjrB,KAAKqE,MAAMulD,QAAS5+B,UAAU,QAC5C,kBAAC,IAAD,CACExO,MAAM,SACNzb,KAAMf,KAAKqE,MAAM0mB,SAAW,UAAY,UACxC4E,WAAU3vB,KAAKqE,MAAMsrB,SACrBI,KAAM/vB,KAAKqE,MAAM0rB,KACjBlI,UAAWsC,KAAO+W,OAClBhW,QAASlrB,KAAKqE,MAAM6mB,eAXT,GACOoD,cCGxBg6B,GAAW79B,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KAC3B,OACE,kBAACwmD,GAAD,CACE9+B,SAAU1nB,EAAK0nB,SACfG,QAAS,SAAAc,GACP,IAAMw8B,EAAMnlD,EAAK0nB,SAEjB1nB,EAAKolD,QAAQnnB,cAEbj+B,EAAK0/B,aAAaylB,GAEdnlD,EAAK0nB,UACP1nB,EAAKqlD,gBAGT34B,KAAM,kBAAC+5B,GAAA,EAAD,WAKNlB,GAAQ/V,QACXlyC,MAAM,IACNR,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,OAAO,kBAAC,GAAD,CAAUptB,KAAMotB,SAG1BsT,SAAQ,SAAAtT,GAAI,MAAK,CAChBi4B,eACE,IACMS,EAAQ14B,EAAKzpB,IAAI0V,SAEjBif,EAAS,CAAC,QADDnX,GAAO/C,gBAFV,IAGqB,KAAM,IAAKrN,KAAK0K,MAAMlI,IAAW,EAAG,IAAKxC,KAAK0K,MAAMlI,IAAW,EAAG,UAEnGuyC,EAAMlhC,YAAYxgB,MAAMk0B,OAASA,EAAO75B,KAAK,KAG/CsnD,YACE34B,EAAKiS,KAAO,WAGd2mB,YAAYr9B,EAAD,GAAc,IAAD,oBAAPlkB,EAAO,KAAJoO,EAAI,KACtB,GAAkB,YAAdua,EAAKiS,KAAT,CAEA,IAAMlmB,EAAQiU,EAAK64B,iBACf9sC,GAAwB,gBAAfA,EAAMzb,MACjByb,EAAM+sC,aAAaR,UAAU30C,KAAK0K,MAAMhX,GAAIsM,KAAK0K,MAAM5I,MAI3DszC,YAAYx9B,EAAD,GAAc,IAAD,8BACtByE,EAAKiS,KAAO,UAEZ,IAAMlmB,EAAQiU,EAAK64B,iBACd9sC,GAEDA,GAAwB,gBAAfA,EAAMzb,MACjByb,EAAMktC,SAAS,CAAE3oD,KAAM,gBAKzBgpD,GAAQlX,QAAMuI,QAAQuM,GAAWiB,GAAOvB,ICnExCuB,GAAQ/V,QACXlyC,MAAM,CACL8mD,QAAS5U,QAAME,SAASF,QAAM8H,SAAS,KAExCx6C,OAAM,SAAAswB,GAAI,MAAK,CACd,eACE,MAAO,CACLy3B,WAAY,iBACZC,gBAAiB,CAAC,iBAAkB,kBAIzCpkB,SAAQ,SAAAtT,GAAI,MAAK,CAChB+xB,aAAa0G,GAAO,IAAD,EACX7L,EAAU5sB,EAAK4sB,QACfp5B,EAAS,CAAE,CAACo5B,EAAQmC,WAAT,UAAqBnC,EAAQzL,sBAA7B,aAAqB,OAAAyL,IACtC5sB,EAAKzpB,IAAI8kB,WAAWk3B,aAAakG,EAAMjlC,EAAQo5B,EAAS5sB,EAAKzpB,MAG/DgjD,QAAQh+B,EAAD,GAAc,IAAD,oBAAPlkB,EAAO,KAAJoO,EAAI,KACZhP,EAAIupB,EAAK4sB,SACA,mBAAXn2C,EAAEnG,MAA8BmG,EAAE48B,aAEjCrT,EAAKzpB,IAAIijD,eAEdx5B,EAAK+xB,aAAa,CAChB16C,EAAGA,EACHoO,EAAGA,EACHZ,MAAO4pB,OAAOh4B,EAAE60C,aAChBsM,WAAY,YAKd6B,GAAWrX,QAAMuI,QAAQuM,GAAWN,GAAUuB,IClC9CA,GAAQ/V,QACXlyC,MAAM,CACL8mD,QAAS5U,QAAME,SAASF,QAAM8H,SAAS,GACvCjY,KAAMmQ,QAAME,SAASF,QAAM8L,YAAY,CAAC,UAAW,YAAa,aAEjEx+C,OAAM,SAAAswB,GAAI,MAAK,CACd,uBACE,IAAM05B,EAAO15B,EAAK25B,eAElB,OAAID,GAAQA,EAAKE,aACJ32C,IAATy2C,GACc,kBAAdA,EAAKppD,KAFuB,KAIzBopD,GAGT,eACE,MAAO,CACLjC,WAAY,gBACZC,gBAAiB,CAAC,gBAAiB,aAIvCL,iBAAiB9gD,IACR,CACLc,EAAGd,EAAIvF,MAAMmY,OAAO,GAAG,GACvB1D,EAAGlP,EAAIvF,MAAMmY,OAAO,GAAG,SAI5BmqB,SAAQ,SAAAtT,GAAI,MAAK,CAChBu5B,QAAQh+B,EAAD,GAAc,IAAD,oBAAPlkB,EAAO,KAAJoO,EAAI,KACZmnC,EAAU5sB,EAAK4sB,QACfrkC,EAAUyX,EAAK65B,iBAGrB,MAFmB75B,EAAKw3B,SAASC,aAAe7K,EAAQt8C,OAErCs8C,EAAQvZ,YAA0B,OAAZ9qB,KAEpCA,GAAYyX,EAAKzpB,IAAIijD,eAW1B,GAAIjxC,EACFA,EAAQuxC,SAASziD,EAAGoO,OACf,CAAC,IAAD,EACCgzC,EAAO,CACXtvC,OAAQ,CAAC,CAAC9R,EAAGoO,IACbZ,MAAO,GACP+yC,WAAY,MAGd53B,EAAKzpB,IAAI8kB,WAAWiG,QAAQy4B,SAC5B,IAAMvmC,EAAS,CAAE,CAACo5B,EAAQmC,WAAT,UAAqBnC,EAAQzL,sBAA7B,aAAqB,OAAAyL,IACtC5sB,EAAKzpB,IAAI8kB,WAAWk3B,aAAakG,EAAMjlC,EAAQo5B,EAAS5sB,EAAKzpB,WAK/DyjD,GAAU5X,QAAMuI,QAAQuM,GAAWN,GAAUuB,ICjE7C8B,GAAc7X,QAAMlyC,MAAM,eAAeojC,SAAQ,SAAAtT,GAAI,MAAK,CAC9Dk6B,WAAY9Q,MAAS,SAAS/xC,EAAGoO,GAC/B,IAAMsG,EAAQiU,EAAK25B,eADe,EAEE35B,EAAKzpB,IAAjC8W,EAF0B,EAE1BA,WAAYC,EAFc,EAEdA,YAFc,EAIT+M,GAAMhL,MAAM9D,mBAAmB,CAAElU,EAAG0U,EAAMouC,OAAQ10C,EAAGsG,EAAMquC,QAAU,CAAE/iD,IAAGoO,MAA7FgC,EAJ4B,EAI5BA,GAAIG,EAJwB,EAIxBA,GAAIgE,EAJoB,EAIpBA,GAAIC,EAJgB,EAIhBA,GAElBpE,EAAK9D,KAAK6D,IAAI,EAAGC,GACjBG,EAAKjE,KAAK6D,IAAI,EAAGI,GACjBgE,EAAKjI,KAAK+D,IAAI2F,EAAYzB,GAC1BC,EAAKlI,KAAK+D,IAAI4F,EAAazB,GAE3BE,EAAMsuC,YAAY5yC,EAAIG,EAAIgE,EAAKnE,EAAIoE,EAAKjE,EAAImE,EAAMoc,YACjD,QCZCgwB,GAAQ/V,QACXlyC,MAAM,CACL8mD,SAAS,EACT/kB,KAAMmQ,QAAME,SAASF,QAAM8L,YAAY,CAAC,UAAW,YAAa,aAEjEx+C,OAAM,SAAAswB,GAAI,MAAK,CACd,eACE,MAAO,CACLy3B,WAAY,kBACZC,gBAAiB,CAAC,kBAAmB,mBAI1CpkB,SAAQ,SAAAtT,GAAI,MAAK,CAChB+xB,aAAa0G,GAAO,IAAD,EACX7L,EAAU5sB,EAAK4sB,QACfp5B,EAAS,CAAE,CAACo5B,EAAQmC,WAAT,UAAqBnC,EAAQzL,sBAA7B,aAAqB,OAAAyL,IACtC5sB,EAAKzpB,IAAI8kB,WAAWk3B,aAAakG,EAAMjlC,EAAQo5B,EAAS5sB,EAAKzpB,MAG/DwiD,YAAYx9B,EAAD,GAAc,IAAD,oBAAPlkB,EAAO,KAAJoO,EAAI,MAClBua,EAAKw3B,SAASC,aAAez3B,EAAK4sB,QAAQt8C,MAAS0vB,EAAK4sB,QAAQvZ,aAC/DrT,EAAKzpB,IAAIijD,gBAEdx5B,EAAK3E,WAAWiG,QAAQy4B,SAExB/5B,EAAKiS,KAAO,UAEZjS,EAAK+xB,aAAa,CAChB16C,EAAGA,EACHoO,EAAGA,EACHV,OAAQ,EACRF,MAAO,EACP+yC,WAAY,SAIhBgB,YAAYr9B,EAAD,GAAc,IAAD,oBAAPlkB,EAAO,KAAJoO,EAAI,KACJ,YAAdua,EAAKiS,MAETjS,EAAKk6B,WAAW7iD,EAAGoO,IAGrBkzC,UAAUp9B,EAAD,GAAc,IAAD,8BACpB,GAAkB,YAAdyE,EAAKiS,KAAT,CAEA,IAAM8Q,EAAI/iB,EAAK25B,eAEX5W,EAAEl+B,MAAQgyC,GAASC,GAAK/T,EAAEh+B,OAAS8xC,GAASE,GAC9C/2B,EAAK3E,WAAWi/B,WAAWvX,GACD,oBAAtB/iB,EAAK4sB,QAAQt8C,MAA4B0vB,EAAK3E,WAAWwV,aAAY,IAEzE7Q,EAAK3E,WAAWiG,QAAQi5B,WAI1Bv6B,EAAKiS,KAAO,gBAIZuoB,GAAOpY,QAAMuI,QAAQuM,GAAWN,GAAUqD,GAAa9B,IC5DvDA,GAAQ/V,QACXlyC,MAAM,CACL8mD,SAAS,EACT/kB,KAAMmQ,QAAME,SAASF,QAAM8L,YAAY,CAAC,UAAW,YAAa,aAEjEx+C,OAAM,SAAAswB,GAAI,MAAK,CACd,eACE,MAAO,CACLy3B,WAAY,gBACZC,gBAAiB,CAAC,gBAAiB,iBAIxCpkB,SAAQ,SAAAtT,GAAI,MAAK,CAChB+xB,aAAa0G,GAAO,IAAD,EACX7L,EAAU5sB,EAAK4sB,QACfp5B,EAAS,CAAE,CAACo5B,EAAQmC,WAAT,UAAqBnC,EAAQzL,sBAA7B,aAAqB,OAAAyL,IACtC5sB,EAAKzpB,IAAI8kB,WAAWk3B,aAAakG,EAAMjlC,EAAQo5B,EAAS5sB,EAAKzpB,MAG/DwiD,YAAYx9B,EAAD,GAAc,IAAD,oBAAPlkB,EAAO,KAAJoO,EAAI,MAClBua,EAAKw3B,SAASC,aAAez3B,EAAK4sB,QAAQt8C,MAAS0vB,EAAK4sB,QAAQvZ,aAC/DrT,EAAKzpB,IAAIijD,gBAEdx5B,EAAK3E,WAAWiG,QAAQy4B,SAExB/5B,EAAKiS,KAAO,UAEZjS,EAAK+xB,aAAa,CAChB16C,EAAGA,EACHoO,EAAGA,EACHwiB,QAAS,EACTC,QAAS,EACT0vB,WAAY,SAIhBgB,YAAYr9B,EAAD,GAAc,IAAD,oBAAPlkB,EAAO,KAAJoO,EAAI,KACJ,YAAdua,EAAKiS,MAETjS,EAAKk6B,WAAW7iD,EAAGoO,IAGrBkzC,UAAUp9B,EAAD,GAAc,IAAD,8BACpB,GAAkB,YAAdyE,EAAKiS,KAAT,CAEA,IAAM8Q,EAAI/iB,EAAK25B,eAEX5W,EAAE9a,QAAU4uB,GAASC,GAAK/T,EAAE7a,QAAU2uB,GAASE,GACjD/2B,EAAK3E,WAAWi/B,WAAWvX,GACD,kBAAtB/iB,EAAK4sB,QAAQt8C,MAA0B0vB,EAAK3E,WAAWwV,aAAY,IAEvE7Q,EAAK3E,WAAWiG,QAAQi5B,WAI1Bv6B,EAAKiS,KAAO,gBAIZwoB,GAAUrY,QAAMuI,QAAQuM,GAAWN,GAAUqD,GAAa9B,I,UCzD1DN,GAAW79B,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KAC3B,OACE,kBAAC,WAAD,KACE,kBAACwmD,GAAD,CACE9+B,SAAU1nB,EAAK0nB,SACfgF,KAAM,kBAACo7B,GAAA,EAAD,MACNvB,QAAQ,gBACR1+B,QAAS,SAAAc,GACP,IAAMw8B,EAAMnlD,EAAK0nB,UACjB1nB,EAAKolD,QAAQnnB,cACbj+B,EAAK0/B,aAAaylB,GACdnlD,EAAK0nB,YACO1nB,EAAK2D,IAAI0V,SACjBuL,YAAYxgB,MAAMk0B,OAAS,iBAIvC,kBAACkuB,GAAD,CACE95B,KAAM,kBAACsqB,GAAA,EAAD,MACNuP,QAAQ,sBACR1+B,QAAS,SAAAc,GAGP3oB,EAAK+nD,WAAW,QAGpB,kBAACvB,GAAD,CACE95B,KAAM,kBAACoqB,GAAA,EAAD,MACNyP,QAAQ,wBACR1+B,QAAS,SAAAc,GACP3oB,EAAK+nD,WAAW,WAOpBxC,GAAQ/V,QACXlyC,MAAM,IAGNR,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,OAAO,kBAAC,GAAD,CAAUptB,KAAMotB,SAG1BsT,SAAQ,SAAAtT,GAAI,MAAK,CAChB24B,YACE34B,EAAKiS,KAAO,WAGd2oB,WAAWr/B,GACT,IAAM3oB,EAAOotB,EAAKm3B,SAAS5gD,IACrBmiD,EAAQ9lD,EAAKqZ,SACboqB,EAAQqiB,EAAM/wB,SAEhBkzB,EAAOnC,EAAMrhD,IAAMkkB,EAAGu/B,UACtBC,EAAOrC,EAAMjzC,IAAM8V,EAAGy/B,UAEtBH,EAAO,IAAGA,EAAO,GACjBE,EAAO,IAAGA,EAAO,GAErBnoD,EAAKqoD,QAAQ5kB,EAAOwkB,EAAME,GAC1BrC,EAAM5Z,SAAS,CAAEznC,EAAGwjD,EAAMp1C,EAAGs1C,IAC7BrC,EAAMwC,aAGRtC,YAAYr9B,EAAD,GAAc,IAAD,8BACRyE,EAAKm3B,SAAS5gD,IAAI0V,SAAS0b,UAE5B,GACK,WAAd3H,EAAKiS,MAAmBjS,EAAK46B,WAAWr/B,IAG9Cw9B,YAAYx9B,EAAD,GAAc,IAAD,8BACtByE,EAAKiS,KAAO,UAGd0oB,WAAWhjD,EAAGwO,GACZ,IAAIxO,EAAEwjD,KAAQxjD,EAAEwjD,IAAIC,QAApB,CAEWzjD,EAAEwjD,KAAOxjD,EAAEwjD,IAAIC,SAIxBzjD,EAAEwjD,IAAI/+B,iBAMR,IAAMxpB,EAAOotB,EAAKm3B,SAAS5gD,IAG3B3D,EAAKyoD,gBAEL,IAIIC,EACAC,EACA7jC,EACA8jC,EAPE9C,EAAQ9lD,EAAKqZ,SACbwvC,EAAU7G,WAAWhiD,EAAK8oD,QAC1BC,EAAWjD,EAAM/wB,SAsCvB,GA/BIhwB,EAAEwjD,KACJG,EAAe,CACbjkD,EAAGqhD,EAAMkD,qBAAqBvkD,EAAIskD,EAAWjD,EAAMrhD,IAAMskD,EACzDl2C,EAAGizC,EAAMkD,qBAAqBn2C,EAAIk2C,EAAWjD,EAAMjzC,IAAMk2C,GAG3DJ,EAAW5jD,EAAEwjD,IAAItU,OAAS,EAAI8U,EAAWF,EAAUE,EAAWF,EAE9DD,EAAS,CACPnkD,IAAKikD,EAAajkD,EAAIqhD,EAAMkD,qBAAqBvkD,EAAIkkD,GAAYA,EACjE91C,IAAK61C,EAAa71C,EAAIizC,EAAMkD,qBAAqBn2C,EAAI81C,GAAYA,KAQnED,EAAe,CACbjkD,GANFqgB,EAAM,CACJrgB,EAAGqhD,EAAM7zC,QAAU,EACnBY,EAAGizC,EAAM3zC,SAAW,IAIb1N,EAAIskD,EAAWjD,EAAMrhD,IAAMskD,EAClCl2C,EAAGiS,EAAIjS,EAAIk2C,EAAWjD,EAAMjzC,IAAMk2C,GAGpCJ,EAAW53C,KAAK6D,IAAI,IAAMm0C,EAAWhkD,GAErC6jD,EAAS,CACPnkD,IAAKikD,EAAajkD,EAAIqgB,EAAIrgB,EAAIkkD,GAAYA,EAC1C91C,IAAK61C,EAAa71C,EAAIiS,EAAIjS,EAAI81C,GAAYA,KAIpB,IAAtB3oD,EAAKipD,cAAyBN,GAAY,EAK5C,OAJA3oD,EAAKqoD,QAAQ,EAAG,EAAG,GACnBvC,EAAMriB,MAAM,CAAEh/B,EAAG,EAAGoO,EAAG,IACvBizC,EAAM5Z,SAAS,CAAEznC,EAAG,EAAGoO,EAAG,SAC1BizC,EAAMwC,YAIRxC,EAAMriB,MAAM,CAAEh/B,EAAGkkD,EAAU91C,EAAG81C,IAE9B3oD,EAAKqoD,QAAQM,EAAUC,EAAOnkD,EAAGmkD,EAAO/1C,GACxCizC,EAAM5Z,SAAS0c,GACf9C,EAAMwC,kBAINY,GAAO1Z,QAAMuI,QAAQuM,GAAWN,GAAUuB,I,oBCvJ1CN,GAAW79B,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KAC3B,OACE,oCACE,kBAACwmD,GAAD,CACE9+B,SAAU1nB,EAAK0nB,SACfgF,KAAM,kBAACy8B,GAAA,EAAD,MACN5C,QAAQ,cACR1+B,QAAS,SAAAc,GACP3oB,EAAKua,QAAQ,OAGjB,kBAACisC,GAAD,CACE9+B,SAAU1nB,EAAK0nB,SACfgF,KAAM,kBAAC08B,GAAA,EAAD,MACN7C,QAAQ,eACR1+B,QAAS,SAAAc,GACP3oB,EAAKua,OAAO,WAOhBgrC,GAAQ/V,QACXlyC,MAAM,IACNR,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,OAAO,kBAAC,GAAD,CAAUptB,KAAMotB,SAG1BsT,SAAQ,SAAAtT,GAAI,MAAK,CAChB7S,OAAOm/B,GACLtsB,EAAKzpB,IAAI4W,OAAOm/B,QAIhB2P,GAAS7Z,QAAMuI,QAAQuM,GAAWN,GAAUuB,I,oBCvCnCn+B,eAAQ,uKAGjB,IAAMkiC,EACJ,kBAAC,KAAD,KACE,kBAAC,KAAK9gC,KAAN,CAAWzoB,IAAI,KACb,kBAAC,KAAD,CACEw/B,aAAc5iC,KAAKqE,MAAMojD,SAAW,GACpCxvC,IAAKjY,KAAKqE,MAAM4T,KAAO,GACvBxW,MAAOzB,KAAKqE,MAAM5C,MAClB0W,IAAK,EACL81B,UAAQ,EACRyZ,aAAc,KACdjgD,MAAO,CAAE+N,OAAQxV,KAAKqE,MAAMmR,QAAU,KACtCic,SAAUzxB,KAAKqE,MAAMotB,WAEvB,kBAAC,IAAD,CACEjV,MAAM,SACNzb,KAAMf,KAAKqE,MAAM0mB,SAAW,UAAY,UACxClD,UAAWsC,KAAO+W,OAClBhW,QAASlrB,KAAKqE,MAAMuoD,cAEpB,kBAACC,GAAA,EAAD,SAMR,OACE,kBAAC,WAAD,KACE,kBAAC,KAAD,CAAUhtB,QAAS8sB,GACjB,kBAAC,IAAD,CAAQnwC,MAAM,SAASqL,UAAWsC,KAAO+W,QACtClhC,KAAKqE,MAAM0rB,YAhCH,GACYzB,c,qBCI7Bg6B,GAAW79B,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KAC3B,OACE,kBAAC,WAAD,KACE,kBAACypD,GAAD,CACErF,QAAStF,GACT1gD,MAAO4B,EAAK0pD,WACZ90C,IAAKkqC,GACLp3B,SAAU1nB,EAAK0nB,SACfgF,KAAM,kBAACi9B,GAAA,EAAD,MACNJ,aAAc,SAAA5gC,GACZ3oB,EAAKslD,UAAUxG,KAEjB1wB,SAAU,SAAA7a,GACRvT,EAAKslD,UAAU/xC,MAGnB,0BAAMiR,UAAWsC,KAAO8iC,WAAxB,kBAKArE,GAAQ/V,QACXlyC,MAAM,CACLosD,WAAYla,QAAME,SAASF,QAAM1+B,OAAQguC,MAE1ChiD,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,OAAO,kBAAC,GAAD,CAAUptB,KAAMotB,SAG1BsT,SAAQ,SAAAtT,GAAI,MAAK,CAChBk4B,UAAU/xC,GACR6Z,EAAKs8B,WAAan2C,EAClB6Z,EAAKzpB,IAAIkmD,mBAAmBt2C,QAI5Bu2C,GAAata,QAAMuI,QAAQuM,GAAWN,GAAUuB,ICrChDN,GAAW79B,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KAC3B,OACE,kBAAC,WAAD,KACE,kBAACypD,GAAD,CACErF,QAAStF,GACT1gD,MAAO4B,EAAK+pD,SACZn1C,IAAKkqC,GACLp3B,SAAU1nB,EAAK0nB,SACfgF,KAAM,kBAACi9B,GAAA,EAAD,MACNJ,aAAc,SAAA5gC,GACZ3oB,EAAKslD,UAAUxG,KAEjB1wB,SAAU,SAAA7a,GACRvT,EAAKslD,UAAU/xC,MAGnB,0BAAMiR,UAAWsC,KAAO8iC,WAAxB,gBAKArE,GAAQ/V,QACXlyC,MAAM,CACLysD,SAAUva,QAAME,SAASF,QAAM1+B,OAAQguC,MAExChiD,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,OAAO,kBAAC,GAAD,CAAUptB,KAAMotB,SAG1BsT,SAAQ,SAAAtT,GAAI,MAAK,CAChBk4B,UAAU/xC,GACR6Z,EAAK28B,SAAWx2C,EAChB6Z,EAAKzpB,IAAIqmD,iBAAiBz2C,QAI1B02C,GAAWza,QAAMuI,QAAQuM,GAAWN,GAAUuB,I,SCKpD,IAAM2E,GAAc,SAAC,GAA6D,IAA3DzlD,EAA0D,EAA1DA,EAAGoO,EAAuD,EAAvDA,EAAGxP,EAAoD,EAApDA,KAAMwb,EAA8C,EAA9CA,MAAOmU,EAAuC,EAAvCA,WAClCm3B,EADyE,EAA3BC,WAC5BvrC,EAClB4kB,EAAQ,GAFiE,EAAhBwC,WAE/B,GAEhC,OACE,kBAAC,SAAD,CAAOokB,oBAAoB,EAAOv6C,QAAS,IACxCq6C,GACC,kBAAC,SAAD,CAAO1lD,EAAGA,EAAGoO,EAAGA,EAAI,GAAK4wB,EAAO1O,OAAQ0O,EAAOzO,OAAQyO,GACrD,kBAAC,OAAD,CAAK4H,KAAM5jB,GAAMzI,OAAOnO,iBAAiBgO,GAAQyrC,aAAc,IAC/D,kBAAC,QAAD,CAAMjnD,KAAMwb,EAAMI,QAAQ,GAAI6tB,WAAW,UAAUzB,KAAK,QAAQtgB,QAAS,KAI5EiI,GACC,kBAAC,SAAD,CAAOvuB,EAAG0lD,EAAK1lD,EAAI,GAAKg/B,EAAQh/B,EAAGoO,EAAGA,EAAI,GAAK4wB,EAAO1O,OAAQ0O,EAAOzO,OAAQyO,GAC3E,kBAAC,OAAD,CAAK4H,KAAMyT,GAAiCwL,aAAc,IAC1D,kBAAC,QAAD,CAAMjnD,KAAMA,EAAMypC,WAAW,UAAUzB,KAAMyT,GAA2B/zB,QAAS,OAOrFw/B,GAAiBnjC,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KAC3BmwC,EAAInwC,EAAKk7B,SACf,OAAKiV,EAGH,kBAAC,GAAD,CACE1rC,EAAGzE,EAAKyE,EACRoO,EAAG7S,EAAK6S,EACRxP,KAAM8sC,EAAEiM,kBAAkB,KAC1Bv9B,MAAO7e,EAAK6e,MACZmU,WAAY2D,kBAAQ32B,GAAMgsB,SAASgH,WACnCo3B,UAAWzzB,kBAAQ32B,GAAMgsB,SAASgH,WAClCiT,UAAWjmC,EAAKkhC,OAAO+E,YAVZ,QAeXukB,GAAcpjC,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACxBmwC,EAAInwC,EAAKk7B,SACf,OAAKiV,EAGH,kBAAC,GAAD,CACE1rC,EAAGzE,EAAKyE,EACRoO,EAAG7S,EAAK6S,EACRxP,KAAM8sC,EAAEiM,kBAAkB,KAC1Bv9B,MAAO7e,EAAK6e,MACZmU,WAAY2D,kBAAQ32B,GAAMgsB,SAASgH,WACnCo3B,UAAWzzB,kBAAQ32B,GAAMgsB,SAASgH,WAClCiT,UAAWjmC,EAAKkhC,OAAO+E,YAVZ,QAeXwkB,GAAiBrjC,aAAS,YAAe,IAAD,EAAXpnB,EAAW,EAAXA,KAC3BmwC,EAAInwC,EAAKk7B,SACf,IAAKiV,EAAG,OAAO,KAEf,IAAM3N,EAzGR,SAAoBjsB,GAClB,IAAIm0C,EAAO,GACPC,EAAO,GAcX,OAZAp0C,EAAOzV,SAAQ,SAAAgD,GACb4mD,EAAKltD,KAAKsG,EAAEW,GACZkmD,EAAKntD,KAAKsG,EAAE+O,MAUP,CACL,CAPW9B,KAAK+D,IAAI0R,MAAM,KAAMkkC,GACvB35C,KAAK6D,IAAI4R,MAAM,KAAMkkC,IAO9B,CANW35C,KAAK+D,IAAI0R,MAAM,KAAMmkC,GACvB55C,KAAK6D,IAAI4R,MAAM,KAAMmkC,KA4FnBC,CAAW5qD,EAAKuW,QACvByV,EAAW2K,kBAAQ32B,GAAMgsB,SAC/B,OACE,kBAAC,WAAD,KACGA,IAAaA,EAASgH,YAAchH,EAASo+B,YAC5C,kBAAC,QAAD,CACE3lD,EAAG+9B,EAAK,GAAG,GACX3vB,EAAG2vB,EAAK,GAAG,GACXqoB,aAAa,EACb54C,MAAOuwB,EAAK,GAAG,GAAKA,EAAK,GAAG,GAC5BrwB,OAAQqwB,EAAK,GAAG,GAAKA,EAAK,GAAG,GAC7B9jB,OAAM,UAAE1e,EAAKoE,aAAP,aAAE,EAAYq0C,YACpBzM,YAAa,EACbqe,oBAAoB,EACpBS,WAAY,IAGhB,kBAAC,GAAD,CACErmD,EAAG+9B,EAAK,GAAG,GACX3vB,EAAG2vB,EAAK,GAAG,GAAK,EAAIxiC,EAAKkhC,OAAO+E,UAChC5iC,KAAM8sC,EAAEiM,kBAAkB,KAC1Bv9B,MAAO7e,EAAK6e,MACZmU,WAAYhH,GAAYA,EAASgH,WACjCo3B,UAAWp+B,GAAYA,EAASo+B,UAChCnkB,UAAWjmC,EAAKkhC,OAAO+E,gBAMzB8kB,GAAc3jC,aAAS,YAAe,IAAD,EAAXpnB,EAAW,EAAXA,KACxBgsB,EAAW2K,kBAAQ32B,GAAMgsB,SAC/B,GAAIA,IAAaA,EAASgH,aAAehH,EAASo+B,UAAW,OAAO,KAEpE,IAAMja,EAAInwC,EAAKk7B,SACf,IAAKiV,EAAG,OAAO,KACf,GAA4B,IAAxBnwC,EAAKsmC,QAAQllC,OAAc,OAAO,KAGtC,IAAMohC,EAzHR,SAAsBjsB,GACpB,IAAM9B,EAAM8B,EAAOnV,OACnB,IAAKqT,EACH,MAAO,CACL,CAAC,EAAG,GACJ,CAAC,EAAG,IAMR,IAHA,IAAIhQ,EAAI,CAAC8R,EAAO,GAAIA,EAAO,IACvB1D,EAAI,CAAC0D,EAAO,GAAIA,EAAO,IAElB/T,EAAI,EAAGA,EAAIiS,EAAKjS,GAAK,EACxB+T,EAAO/T,GAAKiC,EAAE,GAAIA,EAAE,GAAK8R,EAAO/T,GAC3B+T,EAAO/T,GAAKiC,EAAE,KAAIA,EAAE,GAAK8R,EAAO/T,IACrC+T,EAAO/T,EAAI,GAAKqQ,EAAE,GAAIA,EAAE,GAAK0D,EAAO/T,EAAI,GACnC+T,EAAO/T,EAAI,GAAKqQ,EAAE,KAAIA,EAAE,GAAK0D,EAAO/T,EAAI,IAGnD,MAAO,CAACiC,EAAGoO,GAuGEm4C,CAAaxlD,EAAQxF,EAAKsmC,QAAQjlC,KAAI,SAAA2iC,GAAC,OAAIA,EAAEztB,YAE1D,OACE,kBAAC,SAAD,CAAO9Y,KAAK,gBACV,kBAAC,QAAD,CACEgH,EAAG+9B,EAAK,GAAG,GACX3vB,EAAG2vB,EAAK,GAAG,GACXqoB,aAAa,EACb54C,MAAOuwB,EAAK,GAAG,GAAKA,EAAK,GAAG,GAC5BrwB,OAAQqwB,EAAK,GAAG,GAAKA,EAAK,GAAG,GAC7B9jB,OAAM,UAAE1e,EAAKoE,aAAP,aAAE,EAAYq0C,YACpBzM,YAAa,EACbqe,oBAAoB,EACpBS,WAAY,IAEd,kBAAC,GAAD,CACErmD,EAAG+9B,EAAK,GAAG,GACX3vB,EAAG2vB,EAAK,GAAG,GAAK,EAAIxiC,EAAKkhC,OAAO+E,UAChC5iC,KAAM8sC,EAAEiM,kBAAkB,KAC1Bv9B,MAAO7e,EAAK6e,MACZmU,WAAY2D,kBAAQ32B,GAAMgsB,SAASgH,WACnCo3B,UAAWp+B,GAAYA,EAASo+B,UAChCnkB,UAAWjmC,EAAKkhC,OAAO+E,gBAMzBglB,GAAY7jC,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACtBmwC,EAAInwC,EAAKk7B,SACf,OAAKiV,EAGH,kBAAC,GAAD,CAEE1rC,EAAGzE,EAAKyE,GAAKzE,EAAKiS,MAAQ,GAAKjS,EAAKkhC,OAAO+E,UAC3CpzB,EAAG7S,EAAK6S,GAAK7S,EAAKiS,MAAQ,GAAKjS,EAAKkhC,OAAO+E,UAC3C5iC,KAAM8sC,EAAEiM,kBAAkB,KAC1Bv9B,MAAO7e,EAAK6e,MACZmU,WAAY2D,kBAAQ32B,GAAMgsB,SAASgH,WACnCo3B,UAAWzzB,kBAAQ32B,GAAMgsB,SAASo+B,UAClCnkB,UAAWjmC,EAAKkhC,OAAO+E,YAXZ,QCjLXilB,GAAe1b,QAClBlyC,MAAM,eAAgB,CACrBiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GAErC62B,UAAW8Z,QAAME,SAASF,QAAM1+B,OAAQ,GACxC6kB,UAAW6Z,QAAME,SAASF,QAAM1+B,OAAQ,GAExCq6C,MAAO3b,QAAME,SAASF,QAAM1+B,OAAQ,GACpCs6C,MAAO5b,QAAME,SAASF,QAAM1+B,OAAQ,GAEpCrM,EAAG+qC,QAAM1+B,OACT+B,EAAG28B,QAAM1+B,OAET4lB,MAAO8Y,QAAM1+B,OAEb4W,SAAU8nB,QAAME,SAASF,QAAM8H,SAAS,GAExClzC,MAAO,SACPia,KAAM,UAEPvhB,OAAM,SAAAswB,GAAI,MAAK,CACd,aACE,OAAO4rB,oBAAU5rB,EAAM,IAGzB,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,cAGxCgZ,SAAQ,SAAAtT,GAAI,MAAK,CAIhB2vB,cACE3vB,EAAK+9B,MAAQ/9B,EAAK3oB,EAClB2oB,EAAKg+B,MAAQh+B,EAAKva,EAEa,SAA3Bua,EAAK8T,OAAO8jB,YACd53B,EAAKsI,UAAYtI,EAAK3oB,EACtB2oB,EAAKuI,UAAYvI,EAAKva,IAEtBua,EAAKsI,UAAatI,EAAK3oB,EAAI2oB,EAAK8T,OAAOA,OAAOzmB,WAAc,IAC5D2S,EAAKuI,UAAavI,EAAKva,EAAIua,EAAK8T,OAAOA,OAAOxmB,YAAe,MAUjE2wC,UAAUC,EAASC,GACjBn+B,EAAK+9B,MAAQ/9B,EAAK+9B,MAAQG,EAC1Bl+B,EAAKg+B,MAAQh+B,EAAKg+B,MAAQG,EAC1Bn+B,EAAK3oB,EAAI2oB,EAAK3oB,EAAI6mD,EAClBl+B,EAAKva,EAAIua,EAAKva,EAAI04C,EAElBn+B,EAAKsI,UAAatI,EAAK3oB,EAAI2oB,EAAK8T,OAAOA,OAAOzmB,WAAc,IAC5D2S,EAAKuI,UAAavI,EAAKva,EAAIua,EAAK8T,OAAOA,OAAOxmB,YAAe,KAG/D8wC,WAAW/mD,EAAGoO,GACZua,EAAK+9B,MAAQ1mD,EACb2oB,EAAKg+B,MAAQv4C,EAEbua,EAAKsI,UAAajxB,EAAI2oB,EAAK8T,OAAOA,OAAOzmB,WAAc,IACvD2S,EAAKuI,UAAa9iB,EAAIua,EAAK8T,OAAOA,OAAOxmB,YAAe,IAExD0S,EAAK3oB,EAAIA,EACT2oB,EAAKva,EAAIA,GAOX44C,gBAAgB9iC,GACTyE,EAAK3E,WAAWqP,UAEjB1K,EAAK8T,OAAOwqB,qBACdt+B,EAAK8T,OAAOyqB,aAIhBC,0BAA0BjjC,GAUxB,GATAA,EAAGkjC,cAAe,EAEJz+B,EAAK8T,OAAOA,OAAO7nB,SAE3BuL,YAAYxgB,MAAMk0B,OAAS,cAK7BlL,EAAK8T,OAAO8lB,QAAU55B,EAAK8T,OAAO3qB,OAAOnV,OAAS,GAAtD,CAEA,IAAM0qD,EAAanjC,EAAG0F,OAEH,cAAfjB,EAAKhpB,QACP0nD,EAAWC,KAAKD,EAAWrnD,IAAMqnD,EAAW75C,QAAU,GACtD65C,EAAWE,KAAKF,EAAWj5C,IAAMi5C,EAAW35C,SAAW,IAGzD,IAMMsxB,EANW,CACfwoB,MAAO,EACPC,OAAQ,EACRC,MAAO,GAGc/+B,EAAK/O,MAE5BytC,EAAWroB,MAAM,CACfh/B,EAAGg/B,EAAQrW,EAAK8T,OAAOA,OAAO+E,UAC9BpzB,EAAG4wB,EAAQrW,EAAK8T,OAAOA,OAAO+E,YAGhC7Y,EAAK8T,OAAOkrB,wBAAuB,KAGrCC,yBAAyB1jC,GACvB,IAAMqb,EAAIrb,EAAG0F,OAECjB,EAAK8T,OAAOA,OAAO7nB,SAC3BuL,YAAYxgB,MAAMk0B,OAAS,UAEd,cAAflL,EAAKhpB,QACP4/B,EAAE+nB,KAAK/nB,EAAEv/B,IAAMu/B,EAAE/xB,QAAU,GAC3B+xB,EAAEgoB,KAAKhoB,EAAEnxB,IAAMmxB,EAAE7xB,SAAW,IAG9B6xB,EAAEP,MAAM,CACNh/B,EAAG,EAAI2oB,EAAK8T,OAAOA,OAAO+E,UAC1BpzB,EAAG,EAAIua,EAAK8T,OAAOA,OAAO+E,YAG5B7Y,EAAK8T,OAAOkrB,wBAAuB,QAInCE,GAAmBllC,aAAS,YAAqB,IAAlBpnB,EAAiB,EAAjBA,KAAMvC,EAAW,EAAXA,KACnC2G,EAAQpE,EAAKkhC,OAAO98B,MAQpBsa,EAAS,CACbutC,MAAO,EACPC,OAAQ,EACRC,MAAO,GAGHn6C,EAZQ,CACZi6C,MAAO,EACPC,OAAQ,EACRC,MAAO,IASOnsD,EAAKqe,MAEfkuC,EACW,IAAfvsD,EAAK02B,MACD,CACE81B,eAAgB,GAChBnhB,KAAMjnC,EAAMq0C,aAAez4C,EAAKysD,QAChC90B,YAAa33B,EAAK4rD,0BAClB/zB,WAAY73B,EAAKqsD,yBACjBxkC,QAAS7nB,EAAKyrD,iBAEhB,KAEAiB,EAAW,CACfC,WAAY,SAAA5nD,GAAM,IAAD,EACAA,EAAEspB,OAAO3tB,MAAlB+D,EADS,EACTA,EAAGoO,EADM,EACNA,EAELpO,EAAI,IAAGA,EAAI,GACXoO,EAAI,IAAGA,EAAI,GACXpO,EAAIzE,EAAKkhC,OAAOA,OAAOzmB,aAAYhW,EAAIzE,EAAKkhC,OAAOA,OAAOzmB,YAC1D5H,EAAI7S,EAAKkhC,OAAOA,OAAOxmB,cAAa7H,EAAI7S,EAAKkhC,OAAOA,OAAOxmB,aAE/D1a,EAAKwrD,WAAW/mD,EAAGoO,IAGrB+5C,YAAa,SAAA7nD,GACX/E,EAAKyoB,WAAWiG,QAAQy4B,UAG1B0F,UAAW,SAAA9nD,GACT/E,EAAKyoB,WAAWiG,QAAQi5B,WACxB5iD,EAAE8mD,cAAe,GAGnBl0B,YAAa,SAAA5yB,GACXA,EAAE8mD,cAAe,EACH7rD,EAAKkhC,OAAOA,OAAO7nB,SAC3BuL,YAAYxgB,MAAMk0B,OAAS,aAGnCT,WAAY,SAAA9yB,GACI/E,EAAKkhC,OAAOA,OAAO7nB,SAC3BuL,YAAYxgB,MAAMk0B,OAAS,YAI/B+S,EAAOrrC,EAAK0nB,SAAW,QAAU,QAEvC,MAAmB,WAAf1nB,EAAKoE,MAEL,kBAAC,UAAD,eACErE,IAAKtC,EACLA,KAAMA,EACNgH,EAAGzE,EAAKyE,EACRoO,EAAG7S,EAAK6S,EACRO,OAAQpB,EACRq5B,KAAMA,EACN3sB,OAAO,QACPstB,YAAattB,EAAO1e,EAAKqe,MACzByuC,WAAW,EACXzC,oBAAoB,EACpBt1B,OAAQ,GAAK/0B,EAAKkhC,OAAOA,OAAO+E,WAAa,GAC7CjR,OAAQ,GAAKh1B,EAAKkhC,OAAOA,OAAO+E,WAAa,GAC7Cpe,QAAS,SAAAc,GACH3oB,EAAKkhC,OAAOwqB,oBACd1rD,EAAKkhC,OAAOyqB,YAIZ3rD,EAAKkhC,OAAO6rB,iBAAiB/sD,KAG7B0sD,EACAH,EAvBN,CAwBEryB,UAAWl6B,EAAKkhC,OAAOpJ,YAKzB,kBAAC,QAAD,eACEr6B,KAAMA,EACNsC,IAAKtC,EACLgH,EAAGzE,EAAKyE,EAAIuN,EAAI,EAChBa,EAAG7S,EAAK6S,EAAIb,EAAI,EAChBC,MAAOD,EACPG,OAAQH,EACRq5B,KAAMA,EACN3sB,OAAO,QACPstB,YAAattB,EAAO1e,EAAKqe,MACzByuC,WAAW,GACPJ,EACAH,EAZN,CAaEryB,UAAWl6B,EAAKkhC,OAAOpJ,e,UC5OzByf,GAAQ/H,QACXlyC,MAAM,CACLiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCm9B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAClCnB,KAAM,gBACNC,OAAQ6xC,QAAMyL,MAAK,kBAAMzL,QAAM0L,UAAU8R,OAEzCz2C,OAAQi5B,QAAMiM,MAAMjM,QAAM2L,MAAM+P,GAAc1b,QAAMiM,MAAMjM,QAAM1+B,SAAU,IAE1Ek0C,WAAYxV,QAAME,SAASF,QAAM8L,YAAY,CAAC,KAAM,SAAU,UAE/DxC,UAAS,SAAA1rB,GAAI,MAAK,CACjB45B,QAAQ,EACR0E,qBAAqB,EACrBuB,cAAe,KACfl1B,UAAU,MAEXj7B,OAAM,SAAAswB,GAAI,MAAK,CACd,YACE,OAAOuJ,kBAAQvJ,QAGlBsT,SAAQ,SAAAtT,GAAI,MAAK,CAChB2vB,cACO3vB,EAAK7W,OAAOnV,SACZgsB,EAAK7W,OAAO,GAAGhX,KAClB6tB,EAAK7W,OAAS6W,EAAK7W,OAAOlV,KAAI,WAASq1B,GAAT,wBAAEjyB,EAAF,KAAKoO,EAAL,WAAoB,CAChDtT,GAAIV,IACJ4F,EAAGA,EACHoO,EAAGA,EACHwL,KAAM+O,EAAK8/B,UACX9oD,MAAOgpB,EAAK+/B,WACZz2B,aAIAtJ,EAAK7W,OAAOnV,OAAS,IAAGgsB,EAAK45B,QAAS,KAQ5CoF,uBAAuBhuD,GACrBgvB,EAAKs+B,oBAAsBttD,GAI7B2uD,iBAAiBhzC,GACXqT,EAAK6/B,gBACP7/B,EAAK6/B,cAAcvlC,UAAW,GAGhC3N,EAAM2N,UAAW,EACjB0F,EAAK6/B,cAAgBlzC,GAGvBqzC,gBAAgB,GAAyB,IAAvBroD,EAAsB,EAAtBA,EAAGsoD,EAAmB,EAAnBA,gBAAmB,EACTtoD,EAAEwjD,IAAvB+C,EAD8B,EAC9BA,QAASC,EADqB,EACrBA,QADqB,EAEXn+B,EAAK8T,OAAOosB,gBAAgB,CAAChC,EAASC,IAF3B,sBAGvBgC,GAAe,CAAEF,kBAAiBG,QAHX,KAGoBC,QAHpB,4BA+N5C,YAAyD,IAA9B1zC,EAA6B,EAA7BA,MAAO2zC,EAAsB,EAAtBA,MAAOn0C,EAAe,EAAfA,MAAO65B,EAAQ,EAARA,MAC1Bua,GAAe,CAAEp0C,WApBvC,YAA2D,IAA9BQ,EAA6B,EAA7BA,MAAO2zC,EAAsB,EAAtBA,MAAOn0C,EAAe,EAAfA,MAAO65B,EAAQ,EAARA,KAC1Cwa,EAAc,IAAIxzC,KAAMyzC,OAAO,CACnCpwD,KAAM,cACNgH,EAAGsV,EAAM,GACTlH,EAAGkH,EAAM,GACT2E,OAAQxU,KAAMuiD,QACdphB,KAAMnhC,KAAM,GACZ6qB,OAAQ,GAAKqe,GAAQ,GACrBpe,OAAQ,GAAKoe,GAAQ,GAErBpH,YAAa,EACb54B,OAAQ,IAKV,OAFAs6C,EAAMjtC,IAAImtC,GACVr0C,EAAMu0C,OACCF,EAI0CG,CAAkB,CAAEh0C,QAAO2zC,QAAOn0C,QAAO65B,UAC9E4a,GAAG,CAAEvpD,EAAGsV,EAAM,GAAIlH,EAAGkH,EAAM,GAAIk0C,SAAU,IAxNjDC,CAAgB,CAAEn0C,MAAO,CATa,WASL2zC,MAJnB3oD,EAAEopD,cAIwB50C,MAH1BxU,EAAEopD,cAAcC,WAGiBhb,KAFlChmB,EAAK8T,OAAO+E,aAK3BooB,iBAAiB,GACfC,GAAkB,CAAE/0C,MADE,EAALxU,EACYopD,cAAcC,cAG7CG,gBAAgB,GAAoC,IAAlCxpD,EAAiC,EAAjCA,EAAGsoD,EAA8B,EAA9BA,gBAAiBmB,EAAa,EAAbA,UAGpC,GAFAzpD,EAAE8mD,cAAe,EAEZz+B,EAAK45B,QAAW55B,EAAK1F,SAA1B,CAEA4mC,GAAkB,CAAE/0C,MAAOxU,EAAEopD,cAAcC,aALM,MAOpBrpD,EAAEwjD,IAAvB+C,EAPyC,EAOzCA,QAASC,EAPgC,EAOhCA,QAPgC,EAQtBn+B,EAAK8T,OAAOosB,gBAAgB,CAAChC,EAASC,IARhB,oBAS3CxxC,EAAQwzC,GAAe,CAAEF,kBAAiBG,QATC,KASQC,QATR,OAWjDrgC,EAAKqhC,YAAYD,EAAWz0C,EAAM,GAAIA,EAAM,MAG9CmtC,SAASziD,EAAGoO,GACNua,EAAK45B,QACT55B,EAAKshC,UAAUjqD,EAAGoO,IAGpB47C,YAAYD,EAAW/pD,EAAGoO,GACxB,IAAM/O,EAAI,CACRvE,GAAIV,IACJ4F,EAAGA,EACHoO,EAAGA,EACHwL,KAAM+O,EAAK8/B,UACX9oD,MAAOgpB,EAAK+/B,WACZz2B,MAAOtJ,EAAK7W,OAAOnV,QAErBgsB,EAAK7W,OAAOmnC,OAAO8Q,EAAW,EAAG1qD,IAGnC4qD,UAAUjqD,EAAGoO,GACXua,EAAK7W,OAAO/Y,KAAK,CACf+B,GAAIV,IACJ4F,EAAGA,EACHoO,EAAGA,EACHwL,KAAM+O,EAAK8/B,UACX9oD,MAAOgpB,EAAK+/B,WACZz2B,MAAOtJ,EAAK7W,OAAOnV,UAKvBmZ,SAAsB,IAAfm/B,EAAc,wDAAJ,GACftsB,EAAK7W,OAAOzV,SAAQ,SAAAiZ,GAClB,IAAMjW,EAAIspB,EAAKqsB,YAAY1/B,EAAO2/B,GAClC3/B,EAAMyxC,WAAW1nD,EAAEW,EAAGX,EAAE+O,OAI5B84C,YACEv+B,EAAK45B,QAAS,EACd55B,EAAKitB,eACLjtB,EAAK3E,WAAWiG,QAAQi5B,YAG1BgH,SAASlqD,EAAGoO,GACV,GAAIua,EAAK7W,OAAOnV,OAAS,EAAG,OAAO,EAEnC,IAAMwtD,EAAKxhC,EAAK7W,OAAO,GACjBs4C,EAAOpqD,EAAPoqD,EAAUh8C,EAKhB,OAFkB,SAAC+7C,EAAGnqD,EAAIoqD,EAAS,GAAjB,SAAsBD,EAAG/7C,EAAIg8C,EAAS,GADhD,IAUV/T,gBACEgU,iBAAO1hC,EAAK7W,QACZozB,kBAAQvc,EAAK7W,SAGfikC,sBACMptB,EAAK6/B,gBACP7/B,EAAK6/B,cAAcvlC,UAAW,IAMlCqnC,SAAStqD,EAAGoO,GACVua,EAAK2H,OAAStwB,EACd2oB,EAAK4H,OAASniB,GAGhBm8C,eACE5hC,EAAK7W,OAAOlV,KAAI,SAAAyC,GAAC,OAAIA,EAAEmrD,oBAGzBC,gBAAgBC,EAAIC,EAAIC,EAAIC,GACF,OAApBliC,EAAK43B,YACP53B,EAAK7W,OAAOzV,SAAQ,SAAAgD,GAClB,IAAMW,EAAK4qD,EAAKvrD,EAAE4xB,UAAa,IACzB7iB,EAAKy8C,EAAKxrD,EAAE6xB,UAAa,IAE/B7xB,EAAE0nD,WAAW/mD,EAAGoO,MAIfua,EAAK3E,WAAWH,kBAAwC,SAApB8E,EAAK43B,YAC5C53B,EAAK7W,OAAOzV,SAAQ,SAAAgD,GAClB,IAAMW,EAAK4qD,EAAKvrD,EAAEW,EAAK,IACjBoO,EAAKy8C,EAAKxrD,EAAE+O,EAAK,IACvBua,EAAK43B,WAAa,KAClBlhD,EAAE0nD,WAAW/mD,EAAGoO,OAKtBinC,YACE,GAAI1sB,EAAK7W,OAAOnV,OAAS,EAAG,OAAO,KADzB,MAGuDgsB,EAAKzvB,OAA9Dof,EAHE,EAGFA,aAAcE,EAHZ,EAGYA,cAAexC,EAH3B,EAG2BA,WAAYC,EAHvC,EAGuCA,YAC3Cg/B,GAAUtsB,EAAK8T,OAAO3L,SACtBg6B,EAAUniC,EAAKwsB,iBAAiB,CAAE3nC,MAAO8K,EAAc5K,OAAQ8K,GAAiBy8B,GAL5E,EAMgBtsB,EAAKwsB,iBAAiB,CAAE3nC,MAAOwI,EAAYtI,OAAQuI,GAAeg/B,GAApFznC,EANE,EAMFA,MAAOE,EANL,EAMKA,OAmBf,MATU,CACR/T,MAAO,CACLmY,OAVgB6W,EAAK7W,OAAOlV,KAAI,SAAAyC,GAClC,IAAM0rD,EAAapiC,EAAKqsB,YAAY31C,EAAG41C,GAAQ,GAI/C,MAAO,CAHuB,IAAf8V,EAAW/qD,EAAWwN,EACP,IAAfu9C,EAAW38C,EAAWV,OASrCs9C,eAAgBF,EAAQt9C,MACxBy9C,gBAAiBH,EAAQp9C,OACzBw9C,eAAgBviC,EAAK8T,OAAO3L,eAO9BN,GAAqBua,QAAMuI,QAC/B,qBACAgH,GACAnG,GACAyE,GACA1E,GACApB,IASF,SAASgW,GAAT,GAAgE,IAAtCF,EAAqC,EAArCA,gBAAiBG,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAAW,eAChBJ,EADgB,GACtDuC,EADsD,KAC7CC,EAD6C,KACpCC,EADoC,KAC3BC,EAD2B,KAa7D,MAAO,CALLvC,GACEuC,EAAUF,IACTC,EAAUD,EAAUD,EAAUG,EAAUvC,GAAWuC,EAAUF,GAAWpC,GAAWqC,EAAUF,MAC5FG,EAAUF,IAAYE,EAAUF,IAAYC,EAAUF,IAAYE,EAAUF,MAR9EE,EAAUF,IAAYE,EAAUD,EAAUD,EAAUG,IACnDD,EAAUF,IAAYG,EAAUF,GAAWrC,GAC3CuC,EAAUF,IAAYE,EAAUF,GAAWpC,KAC5CsC,EAAUF,IAAYE,EAAUF,IAAYC,EAAUF,IAAYE,EAAUF,KAUlF,SAASI,GAAmBz5C,GAE1B,OADUA,EAAOlV,KAAI,SAAAyC,GAAC,MAAI,CAACA,EAAEW,EAAGX,EAAE+O,MACzBnN,QAAO,SAAS2nD,EAAiBtzC,GACxC,OAAOszC,EAAgBxnD,OAAOkU,KAC7B,IAGL,SAAS4zC,GAAT,GACE,OADiC,EAATp0C,MACX4D,QAAQ,gBA8BvB,SAASmxC,GAAT,GAAuC,IAAV/0C,EAAS,EAATA,MACrBq0C,EAAcD,GAAe,CAAEp0C,UAChCq0C,IACLA,EAAYjkB,UACZpwB,EAAMu0C,QAGR,IAkMMmC,GAAa7oC,aAlMI,SAAC,GAAc,IAAZpnB,EAAW,EAAXA,KACxB,GAAIA,EAAKy3B,OAAQ,OAAO,KADW,IAG3BvP,EAAUloB,EAAVkoB,MAEF9jB,EAAQpE,EAAKoE,OAASpE,EAAK3C,KAAOi7C,GAwFxC,SAAS4X,EAAOzvD,GACd,OAAOA,EAAMiF,QAAO,SAACyqD,EAAK58C,GAGxB,OAFA48C,EAAI,QAAgB9/C,IAAX8/C,EAAI,IAAoB58C,EAAM48C,EAAI,GAAK58C,EAAM48C,EAAI,GAC1DA,EAAI,QAAgB9/C,IAAX8/C,EAAI,IAAoB58C,EAAM48C,EAAI,GAAK58C,EAAM48C,EAAI,GACnDA,IACN,IAGL,IAzCoB55C,EAyChBjE,EAAO,EACTD,EAAO,EACPG,EAAO,EACPD,EAAO,EAET,OACE,kBAAC,SAAD,CACExS,IAAKC,EAAKT,GAAKS,EAAKT,GAAKV,EAAc,GACvC+tD,YAAa,SAAA7nD,GACX/E,EAAKyoB,WAAW2nC,aAAY,GAE5B,IAAIC,EAAOrwD,EAAKuW,OAAOlV,KAAI,SAAAyC,GAAC,OAAIA,EAAEW,KAC9B6rD,EAAOtwD,EAAKuW,OAAOlV,KAAI,SAAAyC,GAAC,OAAIA,EAAE+O,KAJlB,EAMDq9C,EAAOG,GANN,oBAMf/9C,EANe,KAMTD,EANS,WAOD69C,EAAOI,GAPN,oBAOf99C,EAPe,KAOTD,EAPS,MASlBg+C,cAAevwD,EAAKkhC,OAAOsvB,YAAW,SAAA1rC,GAAQ,IACtCrgB,EAASqgB,EAATrgB,EAAGoO,EAAMiS,EAANjS,EAEHw8C,EAAKrvD,EAAKkhC,OAAOzmB,WACjB60C,EAAKtvD,EAAKkhC,OAAOxmB,YAOvB,OALIlI,EAAOK,EAAI,IAAGA,GAAK,EAAIL,GACvBF,EAAO7N,EAAI,IAAGA,GAAK,EAAI6N,GACvBC,EAAOM,EAAIy8C,IAAIz8C,EAAIy8C,EAAK/8C,GACxBF,EAAO5N,EAAI4qD,IAAI5qD,EAAI4qD,EAAKh9C,GAErB,CAAE5N,EAAGA,EAAGoO,EAAGA,MAEpBg6C,UAAW,SAAA9nD,GACT,IAAMi/B,EAAIj/B,EAAEspB,OAEZruB,EAAKyoB,WAAW2nC,aAAY,GACvBpwD,EAAKgnD,QAAQhnD,EAAK2rD,YAEvB3rD,EAAKyoB,WAAWiG,QAAQy4B,SACxBnnD,EAAKuW,OAAOzV,SAAQ,SAAAgD,GAAC,OAAIA,EAAEunD,UAAUrnB,EAAEysB,QAAQ,KAAMzsB,EAAEysB,QAAQ,SAC/DzwD,EAAKyoB,WAAWiG,QAAQi5B,WAExB3jB,EAAE0sB,QAAQ,IAAK,GACf1sB,EAAE0sB,QAAQ,IAAK,IAEjB/4B,YAAa,SAAA5yB,GACX,IAAM+gD,EAAQ9lD,EAAKkhC,OAAO7nB,SAEtB6O,EAAMU,gBAAgBlB,SAASgzB,cACjC16C,EAAK43B,cAAa,GAClBkuB,EAAMlhC,YAAYxgB,MAAMk0B,OAASwmB,IAEjCgH,EAAMlhC,YAAYxgB,MAAMk0B,OAASwmB,IAGrCjnB,WAAY,SAAA9yB,GACI/E,EAAKkhC,OAAO7nB,SACpBuL,YAAYxgB,MAAMk0B,OAASwmB,GAE7B52B,EAAMU,gBAAgBlB,SAASgzB,cACjC16C,EAAK43B,cAAa,IAGtB/P,QAAS,SAAA9iB,GAEP,IAAIA,EAAEwjD,IAAIoI,UAAW5rD,EAAEwjD,IAAIC,UAE3BzjD,EAAE8mD,cAAe,EAIZ7rD,EAAKgnD,QAAV,CAEA,IAAMlB,EAAQ9lD,EAAKkhC,OAAO7nB,SAEtB6O,EAAMU,gBAAgBlB,SAASgzB,eACjCoL,EAAMlhC,YAAYxgB,MAAMk0B,OAASwmB,IAGnC9+C,EAAK43B,cAAa,GAClB53B,EAAKy6C,kBAEPvgB,UAAWl6B,EAAK83B,UAEhB,kBAAC2yB,GAAD,CAAgBzqD,KAAMA,IAErBA,EAAK0rD,oBAEL1rD,EAAKuW,QAAUvW,EAAKgnD,QA/HLzwC,EA+HyBvW,EAAKuW,OA5H9C,kBAAC,SAAD,CAAOxW,IAFI,OAEOtC,KAFP,QAGT,kBAAC,QAAD,CACEmzD,SAAS,QACTr6C,OAAQy5C,GAAmBz5C,GAC3B80B,KAAMjnC,EAAMq0C,YACZuO,QAAQ,EACRl3C,QAAS,OAsH2C,KACvD9P,EAAKuW,OA7IV,SAAqBA,GAEnB,OACE,kBAAC,SAAD,CAAOxW,IAFI,UAEOtC,KAFP,WAGR8Y,EAAOlV,KAAI,SAACyC,EAAGuzB,GACd,IAAMw5B,EAAOx5B,EACPy5B,EAAOz5B,IAAQ9gB,EAAOnV,OAAS,EAAI,EAAIi2B,EAAM,EACnD,OA5CR,YAA6C,IAAvB9gB,EAAsB,EAAtBA,OAAQs6C,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAC5BrzD,EAAI,iBAAaozD,EAAb,YAAqBC,GACzBrY,EAA6Br0C,EAA7Bq0C,YAAaC,EAAgBt0C,EAAhBs0C,YAOnB,GALI14C,EAAKguC,cACPyK,EAAcqG,GACdpG,EAAcoG,KAGX9+C,EAAKgnD,QAAmB,IAAT8J,EAAY,OAAO,KAEvC,IAAMtC,EAAYqC,EAAO,EACnBxD,EAAkB2C,GAAmB,CAACz5C,EAAOs6C,GAAOt6C,EAAOu6C,KACjE,OACE,kBAAC,SAAD,CACE/wD,IAAKtC,EACLA,KAAMA,EACNoqB,QAAS,SAAA9iB,GAAC,OAAI/E,EAAKuuD,gBAAgB,CAAExpD,IAAGsoD,kBAAiBmB,eACzDuC,YAAa,SAAAhsD,GACN/E,EAAKgnD,QAAWhnD,EAAK0nB,UAAa1nB,EAAK83B,UAE5C93B,EAAKotD,gBAAgB,CAAEroD,IAAGsoD,qBAE5BvsB,aAAc,SAAA/7B,GAAC,OAAI/E,EAAKquD,iBAAiB,CAAEtpD,QAE3C,kBAAC,QAAD,CACEwR,OAAQ82C,EACR3uC,OAAQ+5B,EACR3oC,SAAU1L,EAAM0L,QAChB8gD,SAAS,QACT5kB,aAAc0M,EACd2R,oBAAoB,KAab2G,CAAW,CAAEz6C,SAAQs6C,OAAMC,aAsIvBG,CAAYjxD,EAAKuW,QAAU,KACzCvW,EAAKuW,OAzGV,SAAuBA,GAErB,OACE,kBAAC,SAAD,CAAOxW,IAFI,UAEOtC,KAFP,WAGR8Y,EAAOlV,KAAI,SAACyC,EAAGuzB,GAAJ,OAblB,YAAwC,IAAhB9gB,EAAe,EAAfA,OAAQ8gB,EAAO,EAAPA,IACxB55B,EAAI,iBAAa8Y,EAAOnV,OAApB,YAA8Bi2B,GAClCtd,EAAQxD,EAAO8gB,GAErB,IAAKr3B,EAAKgnD,QAAWhnD,EAAKgnD,QAAUhnD,EAAK0nB,SACvC,OAAO,kBAAC4kC,GAAD,CAAkBtsD,KAAM+Z,EAAOtc,KAAMA,EAAMsC,IAAKtC,IAQ7ByzD,CAAa,CAAE36C,SAAQ8gB,YAqGlC85B,CAAcnxD,EAAKuW,QAAU,SAOlD7Z,EAASu7C,OAAO,gBAAiBhjB,GAAoBg7B,IACrDvzD,EAASsiD,cAAc/pB,GAAoB,SAAS,SAAA72B,GAAK,QAAMA,EAAMmY,UCjfrE,IAEM0uC,GAAW79B,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KAC3B,OACE,kBAACklD,GAAD,CACEtwC,IAAK,GACLwvC,QANgB,GAOhB18B,SAAU1nB,EAAK0nB,SACfgF,KAAM,OACN7E,QAAS,SAAAc,GACP,IAAMyoC,EAAMpxD,EAAK0nB,SACjB1nB,EAAKolD,QAAQnnB,cACbj+B,EAAK0/B,aAAa0xB,IAEpBhjC,SAAU,SAAA7a,GACRvT,EAAKqxD,aAAa99C,SAMpBgyC,GAAQ/V,QACXlyC,MAAM,CACLgb,UAAWk3B,QAAME,SAASF,QAAM1+B,OAvBd,MAyBnBhU,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,OAAO,kBAAC,GAAD,CAAUptB,KAAMotB,SAG1BsT,SAAQ,SAAAtT,GAAI,MAAK,CAChBikC,aAAa99C,GACX6Z,EAAK9U,UAAY/E,GAGnBwyC,YACE34B,EAAKiS,KAAO,WAGd2mB,YAAYr9B,EAAD,GAAc,IAAD,8BAClByE,EAAKiS,MAGXiyB,oBAAoB/6C,GAAS,IAAD,EACM,GAAxB25B,EADkB,EAClBA,OAAQuI,EADU,EACVA,YACV50C,EAAIupB,EAAK4sB,QAETl2C,EAAImxB,GAAmB31B,OAAO,CAClCC,GAAIV,IAEJiR,QAASkyC,WAAWn+C,EAAEiM,SACtByoC,UAAW10C,EAAE00C,UAEbG,YAAaxoC,SAASrM,EAAE60C,aACxBD,YAAaA,EAEb8Y,UAAW1tD,EAAE0tD,UACbC,WAAY3tD,EAAE2tD,WAEdthB,OAAQA,EAER8U,WAAY,OAQd,OALAzuC,EAAOzV,SAAQ,SAAAkjC,GAAC,OAAIlgC,EAAEojD,SAASljB,EAAEv/B,EAAGu/B,EAAEnxB,MACtCua,EAAKzpB,IAAI8tD,SAAS3tD,GAElBA,EAAE6nD,YAEK7nD,GAGT6iD,QAAQh+B,EAAD,GAAc,IAAD,oBAAPlkB,EAAO,KAAJoO,EAAI,KACZzB,EAAQgc,EAAKzpB,IAGb4S,EAAS6B,GADGP,GADDzG,EAAM00B,UAEahkC,KAAMsP,EAAM2L,aAAc3L,EAAM6L,cAAexY,EAAGoO,EAAGua,EAAK9U,WAAW,GAErG/B,GAAQ6W,EAAKkkC,oBAAoB/6C,GAErC6W,EAAK4sB,QAAQ/b,eAGfkoB,YAAYx9B,EAAD,GAAc,IAAD,8BACtByE,EAAKiS,KAAO,eAIZqyB,GAAYliB,QAAMuI,QAAQuM,GAAWiB,GAAOvB,IC3EnC58B,eAAQ,uKAET,IAhBMnV,EAAOE,EAAQw/C,EAiBrB3xD,EAASrD,KAAKqE,MAAdhB,KAEF4xD,GAnBQ3/C,EAoBZlB,KAAKC,KAAKhR,EAAKya,WAAaza,EAAK6xD,UApBd1/C,EAqBnBpB,KAAKC,KAAKhR,EAAK0a,YAAc1a,EAAK6xD,UArBPF,EAsB3B3xD,EAAK6xD,SArBJ,aAAI5tD,MAAMgO,IACd5Q,KAAI,SAACiC,EAAGwuD,GAAJ,OACH,aAAI7tD,MAAMkO,IAAS9Q,KAAI,SAACiC,EAAG65B,GAAJ,MAAa,CAClC20B,MACA30B,MACA14B,EAAGqtD,EAAMH,EACT9+C,EAAGsqB,EAAMw0B,EACTtmB,KAAM,cAGT3lC,QAAO,SAAC5B,EAAGD,GAAJ,6BAAcC,GAAd,aAAoBD,QAc1B,OACE,kBAAC,SAAD,CAAOiM,QAAS,IAAMrS,KAAK,SACxBO,OAAOC,OAAO2zD,GAAMvwD,KAAI,SAACoS,EAAGjR,GAAJ,OACvB,kBAAC,QAAD,CACEzC,IAAKyC,EACLiC,EAAGgP,EAAEhP,EACLoO,EAAGY,EAAEZ,EACLZ,MAAOjS,EAAK6xD,SACZ1/C,OAAQnS,EAAK6xD,SACbnzC,OAAQ1e,EAAK+xD,UACb/lB,YAAa,YArBJ,GACG/gB,cCpBL+mC,G,4MAwCnBC,eAAiB,SAACC,EAAQC,GAExB,IAAM58B,OAA+BllB,IAApB8hD,EAAO58B,SAAyB48B,EAAO58B,SAAW28B,EAAO38B,SACpE68B,EAAY78B,IAAa28B,EAAO38B,SAEhCuwB,EAAQ,EAAKuM,YAAYC,WAM/B,GAJIH,EAAOlgD,MAAQgyC,KAAUkO,EAAOlgD,MAAQgyC,IACxCkO,EAAOhgD,OAAS8xC,KAAUkO,EAAOhgD,OAAS8xC,IAG1C1uB,GAAY68B,EAAW,CAAC,IAClB3tD,EAAwB0tD,EAAxB1tD,EAAGoO,EAAqBs/C,EAArBt/C,EAIL0/C,EAAat4C,GAHF,CAAExV,EAAG,EAAGoO,EAAG,EAAGZ,MADCkgD,EAAlBlgD,MACwBE,OADNggD,EAAXhgD,QAImC,CAAE1N,IAAGoO,KAAK0iB,GAC5Di9B,EAAQh4C,GAAa+3C,EAAYzM,EAAM7zC,QAAS6zC,EAAM3zC,UAG5D,MAAI,CAAC,IAAK,IAAK,QAAS,UAAU4nB,MAAK,SAAAh6B,GAAG,OAAIyyD,EAAMzyD,KAASwyD,EAAWxyD,MAAcmyD,EAC/EC,EAEP,OAAO33C,GAAa23C,EAAQrM,EAAM7zC,QAAS6zC,EAAM3zC,W,kEA7DnDxV,KAAK81D,c,2CAIL91D,KAAK81D,c,kCAIL,GAAK91D,KAAK01D,YAAV,CAGA,IAAMvM,EAAQnpD,KAAK01D,YAAYC,WACvBI,EAAkB/1D,KAAKqE,MAAvB0xD,cAER,IAAKA,EAGH,OAFA/1D,KAAK01D,YAAYvD,cACjBnyD,KAAK01D,YAAYjE,WAAW9F,YAI9B,GAAKoK,EAAcC,kBAAnB,CAEA,IAAMC,EAAe9M,EAAM3oC,QAAQ,IAAMu1C,EAAcnzD,IAEnDqzD,IAAiBj2D,KAAK01D,YAAYnzD,SAIlC0zD,EAEFj2D,KAAK01D,YAAYQ,SAASD,GAG1Bj2D,KAAK01D,YAAYvD,SAEnBnyD,KAAK01D,YAAYjE,WAAW9F,iB,+BA8BpB,IAAD,OACP,OAAK3rD,KAAKqE,MAAM0xD,cAAcC,kBAG5B,kBAAC,eAAD,CACEG,eAAe,EACfC,cAAc,EACdC,WAAW,EACXC,cAAet2D,KAAKqE,MAAMiyD,cAC1BC,WAAY,CAAC,EAAG,GAEhBC,aAAcx2D,KAAKs1D,eACnBmB,WAAY,EACZxmB,IAAK,SAAA1tC,GACH,EAAKmzD,YAAcnzD,KAb+B,S,GApEV+rB,a,qBCOnC7D,eAAQ,4MAMnBisC,cAAgB,SAAAtuD,GAGd,OAFiB,EAAK/D,MAAdhB,KAEI6wB,MAAM,QAAS9rB,EAAGA,EAAEwjD,IAAI+C,QAASvmD,EAAEwjD,IAAIgD,UATlC,EAYnB+H,gBAAkB,SAAAvuD,GAAM,IACd/E,EAAS,EAAKgB,MAAdhB,KAGF8D,EAAIiB,EAAEspB,OAAO2qB,YAEnB,IAAIl1C,GAAqB,gBAAhBA,EAAE0gB,UAAX,CAEA,GAEGzf,EAAEwjD,MAAQxjD,EAAEwjD,IAAIoI,SAAW5rD,EAAEwjD,IAAIC,UAClCzjD,EAAEspB,SAAWtpB,EAAEspB,OAAOikC,YACrBvtD,EAAEspB,OAAO6S,SAA0C,UAA/Bn8B,EAAEspB,OAAO6S,OAAOxgC,MAAMjD,MAAmD,iBAA/BsH,EAAEspB,OAAO6S,OAAOxgC,MAAMjD,MACrF,CACA6mB,OAAO8iB,iBAAiB,YAAa,EAAKmsB,uBAC1CjvC,OAAO8iB,iBAAiB,UAAW,EAAKosB,qBAFxC,MAGmCzuD,EAAEwjD,IAApB9jD,EAHjB,EAGQ6mD,QAAqBz4C,EAH7B,EAGoB04C,QAHpB,EAKsB,EAAK3mC,UAAUpF,wBAA7B1M,EALR,EAKQA,KAAM61B,EALd,EAKcA,IAGd,OAFA,EAAK8qB,QAAU3gD,EACf,EAAK4gD,QAAU/qB,EACR3oC,EAAK6wB,MAAM,YAAa9rB,EAAGN,EAAGoO,GAGvC,OAAO,IApCU,EA0CnB2gD,oBAAsB,SAAAzuD,GAIpB,GAHAuf,OAAOijB,oBAAoB,YAAa,EAAKgsB,uBAC7CjvC,OAAOijB,oBAAoB,UAAW,EAAKisB,sBAEvCzuD,EAAEspB,QAA+B,WAArBtpB,EAAEspB,OAAO2C,QAAzB,CAJyB,IAMjBhxB,EAAS,EAAKgB,MAAdhB,KACSyE,EAAkBM,EAA3B4uD,QAAqB9gD,EAAM9N,EAAf6uD,QAIpB,OAFA5zD,EAAKyoD,gBAEEzoD,EAAK6wB,MAAM,UAAW9rB,EAAGN,EAAI,EAAKgvD,QAAS5gD,EAAI,EAAK6gD,WArD1C,EAwDnBH,sBAAwB,SAAAxuD,GACtB,IAAIA,EAAEspB,QAA+B,WAArBtpB,EAAEspB,OAAO2C,QAAzB,CAD2B,IAGnBhxB,EAAS,EAAKgB,MAAdhB,KACSyE,EAAkBM,EAA3B4uD,QAAqB9gD,EAAM9N,EAAf6uD,QAEpB,OAAO5zD,EAAK6wB,MAAM,YAAa9rB,EAAGN,EAAI,EAAKgvD,QAAS5gD,EAAI,EAAK6gD,WA9D5C,EAoEnBG,cAAgB,SAAA9uD,GAAM,IACZ/E,EAAS,EAAKgB,MAAdhB,KAIR,OAFAA,EAAKyoD,gBAEEzoD,EAAK6wB,MAAM,UAAW9rB,EAAGA,EAAEwjD,IAAI+C,QAASvmD,EAAEwjD,IAAIgD,UAzEpC,EA4EnB6B,gBAAkB,SAAAroD,GAAM,IACd/E,EAAS,EAAKgB,MAAdhB,KAERA,EAAKyoD,gBAEL,IAAM3C,EAAQ9lD,EAAKqZ,SACboqB,EAAQqiB,EAAM/wB,SAEpB,KAAIhwB,EAAEwjD,MAA0B,IAAlBxjD,EAAEwjD,IAAIj/B,SAAoC,IAAlBvkB,EAAEwjD,IAAIj/B,SAAiBvkB,EAAEwjD,IAAIvU,WAAcvQ,EAAQ,GAOvF,OAAOzjC,EAAK6wB,MAAM,YAAa9rB,EAAGA,EAAEwjD,IAAI+C,QAASvmD,EAAEwjD,IAAIgD,SANvDxmD,EAAEwjD,IAAI/+B,iBACN,IAAMo/B,EAAS,CAAEnkD,EAAGqhD,EAAMrhD,IAAMM,EAAEwjD,IAAIL,UAAWr1C,EAAGizC,EAAMjzC,IAAM9N,EAAEwjD,IAAIH,WACtEpoD,EAAKqoD,QAAQ5kB,EAAOmlB,EAAOnkD,EAAGmkD,EAAO/1C,GACrCizC,EAAM5Z,SAAS0c,GACf9C,EAAMwC,aAzFS,EA+FnBwL,YAAc,WACZxjB,GAAUhzB,MAAV,6BAAsC,EAAKtc,MAAMhB,KAAK40B,OAAtD,oDAhGiB,EAmGnBm/B,eAAiB,SAAApxC,GAAU,IACjB3iB,EAAS,EAAKgB,MAAdhB,KACRA,EAAKyoD,gBAELzoD,EAAKg0D,YAAYrxC,IAvGA,EA6GnBolC,WAAa,SAAAhjD,GAIX,IAAIA,EAAEwjD,KAAQxjD,EAAEwjD,IAAIC,QAApB,CAEWzjD,EAAEwjD,KAAOxjD,EAAEwjD,IAAIC,SAIxBzjD,EAAEwjD,IAAI/+B,iBAVQ,IAaRxpB,EAAS,EAAKgB,MAAdhB,KACRA,EAAKyoD,gBAEL,IAIIC,EACAC,EACA7jC,EACA8jC,EAPE9C,EAAQ9lD,EAAKqZ,SACbwvC,EAAU7G,WAAWhiD,EAAK8oD,QAC1BC,EAAWjD,EAAM/wB,SAsCvB,GA/BIhwB,EAAEwjD,KACJG,EAAe,CACbjkD,EAAGqhD,EAAMkD,qBAAqBvkD,EAAIskD,EAAWjD,EAAMrhD,IAAMskD,EACzDl2C,EAAGizC,EAAMkD,qBAAqBn2C,EAAIk2C,EAAWjD,EAAMjzC,IAAMk2C,GAG3DJ,EAAW5jD,EAAEwjD,IAAItU,OAAS,EAAI8U,EAAWF,EAAUE,EAAWF,EAE9DD,EAAS,CACPnkD,IAAKikD,EAAajkD,EAAIqhD,EAAMkD,qBAAqBvkD,EAAIkkD,GAAYA,EACjE91C,IAAK61C,EAAa71C,EAAIizC,EAAMkD,qBAAqBn2C,EAAI81C,GAAYA,KAQnED,EAAe,CACbjkD,GANFqgB,EAAM,CACJrgB,EAAGqhD,EAAM7zC,QAAU,EACnBY,EAAGizC,EAAM3zC,SAAW,IAIb1N,EAAIskD,EAAWjD,EAAMrhD,IAAMskD,EAClCl2C,EAAGiS,EAAIjS,EAAIk2C,EAAWjD,EAAMjzC,IAAMk2C,GAGpCJ,EAAW53C,KAAK6D,IAAI,IAAMm0C,EAAWhkD,GAErC6jD,EAAS,CACPnkD,IAAKikD,EAAajkD,EAAIqgB,EAAIrgB,EAAIkkD,GAAYA,EAC1C91C,IAAK61C,EAAa71C,EAAIiS,EAAIjS,EAAI81C,GAAYA,KAIpB,IAAtB3oD,EAAKipD,cAAyBN,GAAY,EAK5C,OAJA3oD,EAAKqoD,QAAQ,EAAG,EAAG,GACnBvC,EAAMriB,MAAM,CAAEh/B,EAAG,EAAGoO,EAAG,IACvBizC,EAAM5Z,SAAS,CAAEznC,EAAG,EAAGoO,EAAG,SAC1BizC,EAAMwC,YAIRxC,EAAMriB,MAAM,CAAEh/B,EAAGkkD,EAAU91C,EAAG81C,IAE9B3oD,EAAKqoD,QAAQM,EAAUC,EAAOnkD,EAAGmkD,EAAO/1C,GACxCizC,EAAM5Z,SAAS0c,GACf9C,EAAMwC,cAjLW,EAwNnBva,SAAW,WACT,EAAK/sC,MAAMhB,KAAK+tC,SAAS,EAAKnpB,UAAUqvC,YAAa,EAAKrvC,UAAUsvC,cAAc,IAzNjE,6DAoLH,IACNl0D,EAASrD,KAAKqE,MAAdhB,KAIR,OACE,kBAAC,SAAD,CACEvC,KAAK,QACLoqB,QAAS,SAAAc,GACPA,EAAGkjC,cAAe,IAGpB,kBAAC,QAAD,CACEpnD,EAAG,EACHoO,EAAG7S,EAAKm0D,gBACR59C,OAAQ,CAAC,EAAG,EAAGvW,EAAKya,WAAY,GAChCuxB,YAdQ,EAeRttB,OAdQ,QAeR01C,QAAS,EACTC,KAAM,CAAC,EAAG,GACVrN,QAAM,IAER,kBAAC,QAAD,CACEviD,EAAGzE,EAAKs0D,gBACRzhD,EAAG,EACH0D,OAAQ,CAAC,EAAG,EAAG,EAAGvW,EAAK0a,aACvBsxB,YAxBQ,EAyBRttB,OAxBQ,QAyBR01C,QAAS,EACTC,KAAM,CAAC,KACPrN,QAAM,OAlNK,0CA6NjB1iC,OAAO8iB,iBAAiB,SAAUzqC,KAAKoxC,YA7NtB,6CAiOjBzpB,OAAOijB,oBAAoB,SAAU5qC,KAAKoxC,YAjOzB,oCAoOJ,IAAD,EACYpxC,KAAKqE,MAArBhB,EADI,EACJA,KACFyY,EAFM,EACEyP,MACGU,gBAEjB,OAAInQ,EAAG87C,uBAAyB97C,EAAG+7C,sBAA8B,KAG/D,yBAAKhwC,UAAWsC,KAAOiG,OACpB/sB,EACEy0D,kBACAC,WACArzD,KAAI,SAAAszD,GAAI,OAAIA,EAAKC,gBA/OP,+BAoPT,IAAD,SACiBj4D,KAAKqE,MAArBhB,EADD,EACCA,KAGR,IAJO,EACOkoB,MAGHiE,OAASnsB,EAAK40B,OAAQ,OAAO,KAExC,IAAMlN,EAAW1nB,EAAK0yD,cAChB31D,EAAUiD,EAAK4/C,KAAKthD,QAAO,SAAAyR,GAAC,OAAIA,IAAM2X,KACtCvnB,EAAKH,EAAK60D,gBACZC,EAAS,KACTC,EAAqBjuC,KAAOlC,UAC1BowC,EAAiB,GAEjBC,EAAW,CACfhjD,MAAOjS,EAAKiS,MACZijD,gBAAiB,WACjB52D,OAAO,cAAD,OAAgB0B,EAAKm1D,gBAArB,uBAAmDn1D,EAAKo1D,cAAxD,OAEFC,EAAe,GAMrB,IAJ6C,IAAzC1+B,kBAAQ32B,GAAMgsB,SAASspC,gBACzBN,EAAc,SAAeh1D,EAAKu1D,UAGb,IAAnBv1D,EAAKimC,UAAiB,CAAC,IACnBuvB,EAAuCx1D,EAAvCw1D,iBAAkBC,EAAqBz1D,EAArBy1D,iBACxBJ,EAAa73D,KAAK,aAAeg4D,EAAmB,MAAQC,EAAmB,OAC/EJ,EAAa73D,KAAK,SAAWwC,EAAK8/C,OAAS,KAAO9/C,EAAK8/C,OAAS,KAGlE,GAAI9/C,EAAKu1B,SAAU,CASjB,GAFA8/B,EAAa73D,KAAb,iBAA4BwC,EAAKu1B,SAAjC,SACA8/B,EAAa73D,KAAb,oBAPkB,CAChBk4D,GAAG,WACHC,IAAI,eACJC,IAAI,YAImC51D,EAAKu1B,WAAa,OAA3D,MACI,CAAC,GAAI,KAAKqgB,SAAS51C,EAAKu1B,UAAW,CAErC,IAAMsgC,EAAQ71D,EAAKid,cAAgBjd,EAAK+c,aACxC+3C,EAAS,yBAAKtwC,UAAWsC,KAAOguC,OAAQ1wD,MAAO,CAAEi6B,UAAU,GAAD,OAAa,IAARw3B,EAAL,QAC1Dd,GAAsB,IAAMjuC,KAAOgvC,QAEnCb,EAAShjD,MAAT,UAA4B,IAAR4jD,EAApB,MAQJ,OAJIR,EAAaj0D,SACf6zD,EAAQ,UAAgBI,EAAa52D,KAAK,MAI1C,kBAAC,GAAD,CACEuB,KAAMA,EACNoE,MAAO,CACL8nC,SAAU,WACV3hB,QAAS,OACTC,WAAY,aACZmO,eAAgB,kBAGlB,yBACEiU,IAAK,SAAA1tC,GACH,EAAK0lB,UAAY1lB,GAEnBslB,UAAWuwC,EACX3wD,MAAO4wD,GAENF,EACD,yBACEloB,IAAK,SAAAA,GACH5sC,EAAK+1D,YAAYnpB,IAEnBxoC,MAAO6wD,EACP9+C,IAAKnW,EAAK40B,OACV8hB,OAAQ12C,EAAKkvD,gBACb8G,QAASr5D,KAAKm3D,YACdjsC,QAASlrB,KAAK02D,cACd4C,IAAI,QAIPj2D,EAAKya,YAAc,EAAI,KACtB,kBAAC,SAAD,CACEmyB,IAAK,SAAAA,GACH5sC,EAAKk2D,YAAYtpB,IAEnBxoC,MAAO,CAAE8nC,SAAU,WAAYvD,IAAK,EAAG71B,KAAM,EAAG42C,WAAY,QAC5DllC,UAAW,gBACXvS,MAAOjS,EAAKya,WACZtI,OAAQnS,EAAK0a,YACbqa,OAAQ/0B,EAAKyjC,MACbzO,OAAQh1B,EAAKyjC,MACbh/B,EAAGzE,EAAKw1D,iBACR3iD,EAAG7S,EAAKy1D,iBACR5tC,QAASlrB,KAAK02D,cACd8C,YAAax5D,KAAK22D,gBAClBvC,YAAap0D,KAAKywD,gBAClBxJ,UAAWjnD,KAAKk3D,cAChB9f,QAAS/zC,EAAKozC,KAAOz2C,KAAKorD,WAAa,cAEtC/nD,EAAK4xD,MAAQ5xD,EAAKo2D,aAAe,kBAAC,GAAD,CAAWp2D,KAAMA,IAClDjD,EAAQuB,QAAO,SAAA6xC,GAAC,MAAe,gBAAXA,EAAEzyC,QAAwB2D,IAAIg1D,EAAK32D,YACvDgoB,GAA8B,gBAAlBA,EAAShqB,MAA0B24D,EAAK32D,WAAWgoB,GAChE,kBAAC,SAAD,CAAOjqB,KAAK,UACTV,EAAQuB,QAAO,SAAA6xC,GAAC,MAAe,gBAAXA,EAAEzyC,QAAwB2D,IAAIg1D,EAAK32D,YACvDgoB,GAA8B,gBAAlBA,EAAShqB,MAA0B24D,EAAK32D,WAAWgoB,IACvD,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUoQ,WACT,kBAAC,GAAD,CAAkBm7B,cAAe9yD,GAAMA,EAAGm2D,UAAW5D,cAAe1yD,EAAK0yD,kBAMhF/1D,KAAK45D,mBAxWO,GACGtrC,cCmDXurC,G,WA/Db,cAAsB,IAAR7yD,EAAO,EAAPA,IAAO,oBACnBhH,KAAKgH,IAAMA,EACXhH,KAAKS,MAAQ,GACbT,KAAK85D,cAAgB,K,oDAGfh5D,EAAMk3D,GACZh4D,KAAKS,MAAMK,GAAQk3D,EACnBA,EAAKpQ,SAAW5nD,KAEZg4D,EAAKvQ,UACPznD,KAAK85D,cAAgB9B,K,oCAOvB32D,OAAOC,OAAOtB,KAAKS,OAAO0D,SAAQ,SAAAkjC,GACN,qBAAfA,EAAEtc,UAA0Bsc,EAAEtE,aAAY,MAGzC/iC,KAAKgH,IAAI0V,SACjBuL,YAAYxgB,MAAMk0B,OAAS,Y,iCAIjC,OAAOt6B,OAAOC,OAAOtB,KAAKS,S,0CAGR+yC,GAClB,IAAM/iB,EAAOzwB,KAEb,GAAIwzC,EAAE/yC,MAAO,CACX,IAAM4mC,EAAImM,EAAE/yC,MAEZY,OAAOQ,KAAKwlC,GAAGljC,SAAQ,SAAAuS,GACrB+Z,EAAKspC,QAAQrjD,EAAG2wB,EAAE3wB,U,yCAMtB,OAAOrV,OAAOC,OAAOtB,KAAKS,OAAOmgB,MAAK,SAAAymB,GAAC,OAAIA,EAAEtc,c,4BAGzCjqB,EAAMkrB,GAAa,IAEvB,IAAMguC,EAAeh6D,KAAKi6D,mBAFH,mBAANvwC,EAAM,iCAANA,EAAM,kBAInBswC,EACFA,EAAa9lC,MAAMpzB,EAAMkrB,EAAItC,GAK3B1pB,KAAK85D,eACP95D,KAAK85D,cAAc5lC,MAAMpzB,EAAMkrB,EAAItC,O,KC3CnCwwC,GAAmB,CACvBC,YAAa,MACbhM,WAAY,EACZiM,cAAe,EACfC,cAAe,EACfC,cAAe,GAGXC,GAAS1nB,QACZlyC,MAAM,SAAU,CACfiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCnB,KAAM8xC,QAAME,SAASF,QAAM8L,YAAY,CAAC,MAAO,WAAY,OAC3D/kC,OAAQi5B,QAAMiM,MAAMjM,QAAM1+B,QAI1Bk7B,YAAawD,QAAME,SAASF,QAAM1+B,OAAQ,MAE3ChU,OAAM,SAAAswB,GAAI,MAAK,CACd,YACE,OAAOuJ,kBAAQvJ,IAEjB,aACE,OAAO4rB,oBAAU5rB,EAAM,QAG1BsT,SAAQ,SAAAtT,GAAI,MAAK,CAChB+pC,QAAQz5D,GACN0vB,EAAK1vB,KAAOA,GAGdgoD,UAAUjhD,EAAGoO,GAEXua,EAAK7W,OAAO/Y,KAAKiH,EAAI2oB,EAAK8T,OAAOnM,QACjC3H,EAAK7W,OAAO/Y,KAAKqV,EAAIua,EAAK8T,OAAOlM,SAInCoiC,QAAQC,EAAOC,EAAOC,EAAOC,GAC3B,IAAMrnB,EAAIonB,EAAQF,EAClB,OAAOjqC,EAAK7W,OAAOlV,KAAI,SAAAyC,GAAC,OAAIA,EAAIqsC,MAGlCsnB,kBAAiB,CAACJ,EAAOC,EAAOC,EAAOC,IAC3BD,EAAQF,EACPjqC,EAAK4e,gBAQhBuL,GAAQ/H,QACXlyC,MAAM,CACLiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCm9B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAElCnB,KAAM,cACNC,OAAQ6xC,QAAMyL,MAAK,kBAAMzL,QAAM0L,UAAU8R,OAEzChI,WAAYxV,QAAME,SAASF,QAAM8L,YAAY,CAAC,KAAM,SAAU,QAE9Dv9B,IAAKyxB,QAAM0M,SAEX5V,QAASkJ,QAAMiM,MAAMyb,IACrBhR,aAAc1W,QAAM4H,UAAU5H,QAAM0L,UAAUgc,OAE/Cpe,UAAS,SAAA1rB,GAAI,MAAK,CAIjBgnC,QAAS,EASTtkD,QAAS,EACTilB,OAAQ,EACRC,OAAQ,EAKRqK,KAAM,QAENojB,YAAa,EACb1qB,UAAU,MAEXj7B,OAAM,SAAAswB,GAAI,MAAK,CACd,aACE,OAAOA,EAAKzvB,YAGf+iC,SAAQ,SAAAtT,GAAI,MAAK,CAChB2vB,gBAYAsJ,SAAS,GAAwB,IAAtB3oD,EAAqB,EAArBA,KAAMsuC,EAAe,EAAfA,YACTloC,EAAIozD,GAAO53D,OAAO,CAAEC,GAAIV,IAAiBnB,KAAMA,EAAMsuC,YAAaA,IAIxE,OAHA5e,EAAKkZ,QAAQ9oC,KAAKsG,GAClBspB,EAAK84B,aAAepiD,EAEbA,GAGT4zD,wBAYA3I,SAAStqD,EAAGoO,GACVua,EAAK2H,OAAStwB,EACd2oB,EAAK4H,OAASniB,GAGhBq8C,gBAAgBC,EAAIC,EAAIC,EAAIC,GAC1B,GAAIliC,EAAK8T,OAAOy2B,aAAe,GAAKvqC,EAAK8T,OAAO02B,cAAgB,EAAG,CACjE,IAAIC,EAASzqC,EAAK8T,OAAOzmB,WAAa2S,EAAK8T,OAAOy2B,aAC9CG,EAAS1qC,EAAK8T,OAAOxmB,YAAc0S,EAAK8T,OAAO02B,cAEnDxqC,EAAK2hC,SAAS8I,EAAQC,GAEtB1qC,EAAKq1B,YAAcr1B,EAAKq1B,YAAc,IAI1CsV,SAAS7qC,GACPE,EAAK8iB,OAAO1yC,KAAK0vB,IAGnB4sB,YACE,IAAMn8C,EAASyvB,EAAKzvB,OACdogB,EAAMoD,GAAOxE,WAAWyQ,EAAMzvB,EAAQ,CAC1C+gB,OAAQ0O,EAAK4qC,YACb5D,QAAShnC,EAAKgnC,UAGhB,OAAKr2C,GAAQA,EAAI3c,OAEL,CACVquD,eAAgB9xD,EAAOof,aACvB2yC,gBAAiB/xD,EAAOsf,cACxB7e,MAAO,CACLunD,OAAQ,MAER5nC,IAAK9Z,MAAMoX,KAAK0C,KARY,UAgBhC6X,GAAmB4Z,QAAMuI,QAC7B,mBACAgH,GACAnG,GACAD,GACA0E,GACA9F,IAGI0gB,GAAgB7wC,aAAS,YAAuB,IAApBpnB,EAAmB,EAAnBA,KAAMuW,EAAa,EAAbA,OAChCk1B,EAAYzrC,EAAKguC,YAAc6oB,GAAmB,CAAEI,cAAe,GACnEvwB,EACY,QAAhBnwB,EAAO7Y,KAAP,2BAES+tC,GAFT,IAGM37B,QAAuB,UAAd9P,EAAKq/B,KAAmBr/B,EAAK8P,QAAU,EAChDooD,yBAA0B,gBAE5B,CACEpoD,QAAS,EACTooD,yBAA0B,mBAGlC,OACE,kBAAC,QAAD,eACE/B,YAAa,SAAApxD,GACXA,EAAE8mD,cAAe,GAEnBt1C,OAAM,aAAMA,EAAOA,QACnBmI,OAAQ1e,EAAKoE,MAAMq0C,YACnBzM,YAAaz1B,EAAOy1B,YACpB4kB,SAAU,QACVuH,QAAQ,QACR/D,QAASp0D,EAAKo0D,SACV1tB,OAmHJ0xB,GAAWhxC,aA9GI,SAAC,GAAc,IAAZpnB,EAAW,EAAXA,KACtB,GAAIA,EAAKy3B,OAAQ,OAAO,KADS,IAGzBvP,EAAUloB,EAAVkoB,MAaJujB,EAAYzrC,EAAKguC,YAAc6oB,GAAmB,CAAEI,cAAe,GAEvE,OACE,kBAAC,SAAD,CAAO13D,GAAIS,EAAKod,SACd,kBAAC,SAAD,CACEi7C,OAAQr4D,EAAKyiD,YACbhlD,KAAK,eAQLk6B,YAAa,SAAA5yB,GACX,IAAM+gD,EAAQ9lD,EAAKkhC,OAAO7nB,SAEtB6O,EAAMU,gBAAgBlB,SAASgzB,cACjC16C,EAAK43B,cAAa,GAClBkuB,EAAMlhC,YAAYxgB,MAAMk0B,OAAS,aAG5Bt4B,EAAKkhC,OAAOuzB,kBAAkBmC,qBAAoB9Q,EAAMlhC,YAAYxgB,MAAMk0B,OAAS,YAG5FT,WAAY,SAAA9yB,IACNmjB,EAAMU,gBAAgBlB,SAASgzB,cACjC16C,EAAK43B,cAAa,GAGf53B,EAAKkhC,OAAOuzB,kBAAkBmC,sBACnB52D,EAAKkhC,OAAO7nB,SACpBuL,YAAYxgB,MAAMk0B,OAAS,YAGrCzQ,QAAS,SAAA9iB,GACP,GAAImjB,EAAMU,gBAAgBlB,SAASgzB,aACjC16C,EAAKy6C,qBAIP,IAAIz6C,EAAKkhC,OAAOuzB,kBAAkBmC,mBAAlC,CAEA,IAAM9Q,EAAQ9lD,EAAKkhC,OAAO7nB,SAEtB6O,EAAMU,gBAAgBlB,SAASgzB,eACjCoL,EAAMlhC,YAAYxgB,MAAMk0B,OAAS,WAGnCt4B,EAAK43B,cAAa,GAClB53B,EAAKy6C,mBAKP,kBAAC,SAAD,eACE6d,UAAW,SAACrgD,EAAKkB,GACf,GAAiC,IAA7BnZ,EAAKkhC,OAAOnkB,aAAoB,OAAO,KAE3C,IAAyB,IAArB/c,EAAKu4D,YAIP,OAHAtgD,EAAIE,UAAUnY,EAAKw4D,KAAM,EAAG,EAAGx4D,EAAKkhC,OAAOzmB,WAAYza,EAAKkhC,OAAOxmB,kBACnEzC,EAAIwgD,gBAAgBt/C,GAKtB,GAAInZ,EAAK+d,IAAK,CACZ,IAAMjG,EAAMqJ,GAAOrD,WAAW9d,EAAK+d,IAAK/d,EAAKkhC,QAC7ClhC,EAAKu4D,aAAc,EAEnBzgD,EAAI4gD,OAAS,WACXzgD,EAAIE,UAAUL,EAAK,EAAG,EAAG9X,EAAKkhC,OAAOzmB,WAAYza,EAAKkhC,OAAOxmB,aAC7DzC,EAAIwgD,gBAAgBt/C,IAGtBnZ,EAAKw4D,KAAO1gD,IAGhBhI,QAAS,GACL27B,IAGN,kBAAC,SAAD,CAAO1W,OAAQ/0B,EAAK+0B,OAAQC,OAAQh1B,EAAKg1B,QACtCh1B,EAAKsmC,QAAQjlC,KAAI,SAAAyC,GAAC,OACjB,kBAACm0D,GAAD,CAAel4D,IAAK+D,EAAEvE,GAAI2oB,MAAOA,EAAOloB,KAAMA,EAAMuW,OAAQzS,OAG9D,kBAACinD,GAAD,CAAa/qD,KAAMA,UAS7BtD,EAASu7C,OAAO,cAAeriB,GAAkBwiC,IACjD17D,EAASsiD,cAAcppB,GAAkB,SAAS,SAAAx3B,GAAK,OAAIA,EAAM2f,KAAO3f,EAAMkoC,WCtU9E,IAAMiR,GAAQ/H,QACXlyC,MAAM,CACLiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCm9B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAClCnB,KAAM,iBACNC,OAAQ6xC,QAAMyL,MAAK,kBAAMzL,QAAM0L,UAAU8R,OAEzCvoD,EAAG+qC,QAAM1+B,OACT+B,EAAG28B,QAAM1+B,OAETmB,MAAOu9B,QAAM1+B,OACbk0C,WAAYxV,QAAME,SAASF,QAAM8L,YAAY,CAAC,KAAM,SAAU,UAE/DxC,UAAS,SAAA1rB,GAAI,MAAK,CACjBsI,UAAW,EACXC,UAAW,EACXoC,UAAU,MAEXj7B,OAAM,SAAAswB,GAAI,MAAK,CACd,YACE,OAAOuJ,kBAAQvJ,QAGlBsT,SAAQ,SAAAtT,GAAI,MAAK,CAChB2vB,cACE,GAAwB,SAApB3vB,EAAK43B,WAEP53B,EAAKsI,UAAYtI,EAAK3oB,EACtB2oB,EAAKuI,UAAYvI,EAAKva,MACjB,OAE8Cua,EAAK8T,OAApCjvB,EAFf,EAEGwI,WAAgCtI,EAFnC,EAEsBuI,YACvBzI,GAASE,IACXib,EAAKsI,UAAatI,EAAK3oB,EAAIwN,EAAS,IACpCmb,EAAKuI,UAAavI,EAAKva,EAAIV,EAAU,OAK3CoI,OAAOm/B,GACL,IAAM51C,EAAIspB,EAAKqsB,YAAYrsB,EAAMssB,GACjCtsB,EAAKq6B,YAAY3jD,EAAEW,EAAGX,EAAE+O,IAG1B40C,YAAYhjD,EAAGoO,GACbua,EAAK3oB,EAAIA,EACT2oB,EAAKva,EAAIA,EAETua,EAAKsI,UAAajxB,EAAI2oB,EAAK8T,OAAOzmB,WAAc,IAChD2S,EAAKuI,UAAa9iB,EAAIua,EAAK8T,OAAOxmB,YAAe,KAGnDw0C,gBAAgBC,EAAIC,EAAIC,EAAIC,GACF,OAApBliC,EAAK43B,aACP53B,EAAK3oB,EAAK4qD,EAAKjiC,EAAKsI,UAAa,IACjCtI,EAAKva,EAAKy8C,EAAKliC,EAAKuI,UAAa,KAGX,SAApBvI,EAAK43B,aACP53B,EAAK3oB,EAAK4qD,EAAKjiC,EAAK3oB,EAAK,IACzB2oB,EAAKva,EAAKy8C,EAAKliC,EAAKva,EAAK,IACzBua,EAAKnb,MAASo9C,EAAKjiC,EAAKnb,MAAS,IACjCmb,EAAK43B,WAAa,OAItBlL,YACE,IAAMn8C,EAASyvB,EAAKzvB,OACZof,EAAyDpf,EAAzDof,aAAcE,EAA2Ctf,EAA3Csf,cAAexC,EAA4B9c,EAA5B8c,WAAYC,EAAgB/c,EAAhB+c,YAC3Cg/B,GAAUtsB,EAAK8T,OAAO3L,SACtBg6B,EAAUniC,EAAKwsB,iBAAiB,CAAE3nC,MAAO8K,EAAc5K,OAAQ8K,GAAiBy8B,GAJ5E,EAKgBtsB,EAAKwsB,iBAAiB,CAAE3nC,MAAOwI,EAAYtI,OAAQuI,GAAeg/B,GAApFznC,EALE,EAKFA,MAAOE,EALL,EAKKA,OALL,EAOOib,EAAKqsB,YAAYrsB,EAAMssB,GAAQ,GAAxCj1C,EAPE,EAOFA,EAAGoO,EAPD,EAOCA,EAcX,MAZY,CACV48C,eAAgBF,EAAQt9C,MACxBy9C,gBAAiBH,EAAQp9C,OACzBw9C,eAAgBviC,EAAK8T,OAAO3L,SAE5Bn3B,MAAO,CACLqG,EAAQ,IAAJA,EAAWwN,EACfY,EAAQ,IAAJA,EAAWV,EACfF,MAAqB,IAAbmb,EAAKnb,MAAeA,SAQhCujB,GAAsBga,QAAMuI,QAChC,sBACAgH,GACAnG,GACAyE,GACA1E,GACApB,IAiGIohB,GAAcvxC,aA9FI,SAAC,GAAc,IAAZpnB,EAAW,EAAXA,KACzB,GAAIA,EAAKy3B,OAAQ,OAAO,KADY,IAG5BvP,EAAUloB,EAAVkoB,MAEFzjB,EAAIzE,EAAKyE,EACToO,EAAI7S,EAAK6S,EACTzO,EAAQpE,EAAKoE,OAASpE,EAAK3C,KAAOi7C,GAElCt3C,EAAQ,GAkBd,OAhBAA,EAAK,SAAeoD,EAAM0L,QAEtB1L,EAAMm0C,YACRv3C,EAAK,KAAWoD,EAAMm0C,WAGxBv3C,EAAK,OAAaoD,EAAMq0C,YACxBz3C,EAAK,aAAmBoD,EAAMs0C,YAC9B13C,EAAK,oBAAyB,EAC9BA,EAAK,WAAiB,GAElBhB,EAAKguC,aAAehuC,EAAK0nB,YAC3B1mB,EAAK,OAAa89C,GAClB99C,EAAK,YAAkB89C,IAIvB,kBAAC,WAAD,KACE,kBAAC,UAAD,eACEr6C,EAAGA,EACHoO,EAAGA,EACHO,OAAQpT,EAAKiS,MAEb2mD,oBAAoB,EACpB7jC,OAAQ,EAAI/0B,EAAKkhC,OAAO+E,UACxBjR,OAAQ,EAAIh1B,EAAKkhC,OAAO+E,UACxBxoC,KAAMuC,EAAKT,GACXstD,UAAW,SAAA9nD,GACT,IAAMi/B,EAAIj/B,EAAEspB,OACZruB,EAAKynD,YAAYzjB,EAAEysB,QAAQ,KAAMzsB,EAAEysB,QAAQ,OAE7CF,cAAevwD,EAAKkhC,OAAOsvB,YAAW,SAAA1rC,GACpC,IAAM/U,EAAI/P,EAAKkhC,OAAOzmB,WAChBxK,EAAIjQ,EAAKkhC,OAAOxmB,YAEhBjW,EAASqgB,EAATrgB,EAAGoO,EAAMiS,EAANjS,EAQT,OANIpO,EAAI,IAAGA,EAAI,GACXoO,EAAI,IAAGA,EAAI,GAEXpO,EAAIsL,IAAGtL,EAAIsL,GACX8C,EAAI5C,IAAG4C,EAAI5C,GAER,CAAExL,IAAGoO,QAEd8kB,YAAa,SAAA5yB,GACX,IAAM+gD,EAAQ9lD,EAAKkhC,OAAO7nB,SAEtB6O,EAAMU,gBAAgBlB,SAASgzB,cACjC16C,EAAK43B,cAAa,GAClBkuB,EAAMlhC,YAAYxgB,MAAMk0B,OAAS,aAEjCwtB,EAAMlhC,YAAYxgB,MAAMk0B,OAAS,WAGrCT,WAAY,SAAA9yB,GACI/E,EAAKkhC,OAAO7nB,SACpBuL,YAAYxgB,MAAMk0B,OAAS,UAE7BpQ,EAAMU,gBAAgBlB,SAASgzB,cACjC16C,EAAK43B,cAAa,IAGtB/P,QAAS,SAAA9iB,GACP,IAAM+gD,EAAQ9lD,EAAKkhC,OAAO7nB,SAErBrZ,EAAKyoB,WAAWqP,WAEjB5P,EAAMU,gBAAgBlB,SAASgzB,eACjCoL,EAAMlhC,YAAYxgB,MAAMk0B,OAAS,WAGnCt4B,EAAK43B,cAAa,GAClB53B,EAAKy6C,mBAEHz5C,EAzDN,CA0DEk5B,UAAWl6B,EAAK83B,YAElB,kBAACmzB,GAAD,CAAWjrD,KAAMA,QAOvBtD,EAASu7C,OAAO,iBAAkBziB,GAAqBmjC,IACvDj8D,EAASsiD,cACPxpB,GACA,SACA,SAAAp3B,GAAK,MAAI,MAAOA,GAAS,MAAOA,GAAS,UAAWA,KAAW,WAAYA,MCjM7E,IAAMm5C,GAAQ/H,QACXlyC,MAAM,CACLiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCm9B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAClCnB,KAAM,kBACNC,OAAQ6xC,QAAMyL,MAAK,kBAAMzL,QAAM0L,UAAU8R,OAEzCvoD,EAAG+qC,QAAM1+B,OACT+B,EAAG28B,QAAM1+B,OAETmB,MAAOu9B,QAAM1+B,OACbqB,OAAQq9B,QAAM1+B,OAEdykB,SAAU,EAEVyvB,WAAYxV,QAAME,SAASF,QAAM8L,YAAY,CAAC,KAAM,SAAU,UAE/DxC,UAAS,SAAA1rB,GAAI,MAAK,CACjBsI,UAAW,EACXC,UAAW,EAEXkjC,cAAe,EACfC,eAAgB,EAEhBvR,OAAQ,EACRC,OAAQ,EAGRzyB,OAAQ,EACRC,OAAQ,EAERllB,QAAS,GAETu7B,MAAM,EACNtsB,UAAW,UACXg6C,YAAa,GAEbf,YAAalZ,GACb9S,YAAa8S,GAEb6T,mBAAmB,EAEnB56B,UAAU,MAEXj7B,OAAM,SAAAswB,GAAI,MAAK,CACd,YACE,OAAOuJ,kBAAQvJ,IAEjB,aACE,OAAOA,EAAKzvB,YAGf+iC,SAAQ,SAAAtT,GAAI,MAAK,CAChB2vB,cAIE,GAHA3vB,EAAKm6B,OAASn6B,EAAK3oB,EACnB2oB,EAAKo6B,OAASp6B,EAAKva,EAEK,SAApBua,EAAK43B,WAAuB,CAC9B53B,EAAKsI,UAAYtI,EAAK3oB,EACtB2oB,EAAKuI,UAAYvI,EAAKva,EACtBua,EAAKyrC,cAAgBzrC,EAAKnb,MAC1Bmb,EAAK0rC,eAAiB1rC,EAAKjb,OAJG,MAMkDib,EAAK8T,OAA7EnkB,EANsB,EAMtBA,aAAcE,EANQ,EAMRA,cAA2BhL,EANnB,EAMOwI,WAAgCtI,EANvC,EAM0BuI,YACpDzI,GAASE,GACXib,EAAK8hC,gBAAgBj9C,EAAQ8K,EAAc5K,EAAS8K,EAAehL,EAAOE,GAI9Eib,EAAKysB,6BAGPt/B,OAAOm/B,GACL,IAAM51C,EAAIspB,EAAKqsB,YAAYrsB,EAAMssB,IACjB,KAAZA,IAAgB51C,EAAE+O,GAAKua,EAAKnb,OACjB,KAAXynC,IAAe51C,EAAEW,GAAK2oB,EAAKjb,QAC/Bib,EAAKq6B,YAAY3jD,EAAEW,EAAGX,EAAE+O,EAAGua,EAAKjb,OAAQib,EAAKnb,MAAOmb,EAAKmI,WAI3DyjC,aAAav0D,EAAGoO,GAEd,IAAM6wB,EAAKtW,EAAK3oB,EACVk/B,EAAKvW,EAAKva,EACVsC,EAAKiY,EAAKnb,OAASmb,EAAK2H,QAAU,GAClC3f,EAAKgY,EAAKjb,QAAUib,EAAK4H,QAAU,GAEzC,OAAIvwB,EAAIi/B,GAAMj/B,EAAIi/B,EAAKvuB,GAAMtC,EAAI8wB,GAAM9wB,EAAI8wB,EAAKvuB,GAalDqyC,YAAYhjD,EAAGoO,EAAGZ,EAAOE,EAAQojB,GAC/BnI,EAAK3oB,EAAIA,EACT2oB,EAAKva,EAAIA,EACTua,EAAKnb,MAAQA,EACbmb,EAAKjb,OAASA,EAEdib,EAAKsI,UAAajxB,EAAI2oB,EAAK8T,OAAOzmB,WAAc,IAChD2S,EAAKuI,UAAa9iB,EAAIua,EAAK8T,OAAOxmB,YAAe,IAEjD0S,EAAKyrC,cAAiB5mD,EAAQmb,EAAK8T,OAAOzmB,WAAc,IACxD2S,EAAK0rC,eAAkB3mD,EAASib,EAAK8T,OAAOxmB,YAAe,IAE3D0S,EAAKmI,UAAYA,EAAW,KAAO,KAGrCw5B,SAAStqD,EAAGoO,GACVua,EAAK2H,OAAStwB,EACd2oB,EAAK4H,OAASniB,GAGhBklD,SAAS7qC,GACPE,EAAK8iB,OAAO1yC,KAAK0vB,IAGnB+rC,QAAQxoD,GACN2c,EAAKie,KAAO56B,GAGdy+C,gBAAgBC,EAAIC,EAAIC,EAAIC,GACF,OAApBliC,EAAK43B,YACP53B,EAAK3oB,EAAK4qD,EAAKjiC,EAAKsI,UAAa,IACjCtI,EAAKva,EAAKy8C,EAAKliC,EAAKuI,UAAa,IACjCvI,EAAKnb,MAASo9C,EAAKjiC,EAAKyrC,cAAiB,IACzCzrC,EAAKjb,OAAUm9C,EAAKliC,EAAK0rC,eAAkB,KACd,SAApB1rC,EAAK43B,aACd53B,EAAK3oB,EAAK4qD,EAAKjiC,EAAK3oB,EAAK,IACzB2oB,EAAKva,EAAKy8C,EAAKliC,EAAKva,EAAK,IACzBua,EAAKnb,MAASo9C,EAAKjiC,EAAKnb,MAAS,IACjCmb,EAAKjb,OAAUm9C,EAAKliC,EAAKjb,OAAU,IACnCib,EAAK43B,WAAa,OAItBlL,YACE,IAAMn8C,EAASyvB,EAAKzvB,OACd+7C,GAAU,IAAMtsB,EAAK8T,OAAO3L,UAAY,IAFpC,EAGKnI,EAAKqsB,YAAYrsB,EAAMssB,GAAQ,GAAxCj1C,EAHI,EAGJA,EAAGoO,EAHC,EAGDA,EACM,MAAX6mC,IAAgB7mC,GAAKua,EAAKnb,OACf,KAAXynC,IAAej1C,GAAK2oB,EAAKjb,QACd,MAAXunC,IACFj1C,GAAK2oB,EAAKnb,MACVY,GAAKua,EAAKjb,QAGZ,IAAMo9C,EAAUniC,EAAKwsB,iBAAiB,CAAE3nC,MAAOtU,EAAOof,aAAc5K,OAAQxU,EAAOsf,eAAiBy8B,GAC9FoM,EAAQ14B,EAAKwsB,iBAAiB,CAAE3nC,MAAOtU,EAAO8c,WAAYtI,OAAQxU,EAAO+c,aAAeg/B,GAZpF,EAagBtsB,EAAKwsB,iBAC7B,CACE3nC,MAAQmb,EAAKnb,OAASmb,EAAK2H,QAAU,GAAK,IAAOp3B,EAAO8c,WACxDtI,OAASib,EAAKjb,QAAUib,EAAK4H,QAAU,GAAK,IAAOr3B,EAAO+c,aAE5Dg/B,GALMznC,EAbE,EAaFA,MAAOE,EAbL,EAaKA,OAQf,MAAO,CACLs9C,eAAgBF,EAAQt9C,MACxBy9C,gBAAiBH,EAAQp9C,OACzBw9C,eAAgBviC,EAAK8T,OAAO3L,SAC5Bn3B,MAAO,CACLqG,EAAQ,IAAJA,EAAWqhD,EAAM7zC,MACrBY,EAAQ,IAAJA,EAAWizC,EAAM3zC,OACrBF,QACAE,SACAojB,SAAUnI,EAAKmI,gBAMnBV,GAAkB2a,QAAMuI,QAC5B,kBACAgH,GACAnG,GACAD,GACAugB,GACA7b,GACA9F,IAkHI4hB,GAAe/xC,aA/GI,SAAC,GAAc,IAAZpnB,EAAW,EAAXA,KAC1B,IAAKs3B,kBAAQt3B,GAAO,OAAO,KADU,IAG7BkoB,EAAUloB,EAAVkoB,MAEF9jB,EAAQpE,EAAKoE,OAASpE,EAAK3C,KAAOi7C,GAClCG,EAA6Br0C,EAA7Bq0C,YAAaC,EAAgBt0C,EAAhBs0C,YAMnB,OALI14C,EAAKguC,cACPyK,EAAcqG,GACdpG,EAAcoG,IAGZ9+C,EAAKy3B,OAAe,KAGtB,kBAAC,WAAD,KACE,kBAAC,QAAD,CACEhzB,EAAGzE,EAAKyE,EACRoO,EAAG7S,EAAK6S,EACRZ,MAAOjS,EAAKiS,MACZE,OAAQnS,EAAKmS,OACbk5B,KAAMrrC,EAAKqrC,KAAO5jB,GAAMzI,OAAO1O,cAAclM,EAAMm0C,WAAYn0C,EAAMo0C,aAAe,KACpF95B,OAAQ+5B,EACRzM,aAAc0M,EACd2R,oBAAoB,EACpBS,WAAY,EACZ/1B,OAAQ/0B,EAAK+0B,OACbC,OAAQh1B,EAAKg1B,OACbllB,SAAU1L,EAAM0L,QAChBylB,SAAUv1B,EAAKu1B,SACf93B,KAAMuC,EAAKT,GACX65D,eAAgB,SAAAr0D,GACd,IAAMi/B,EAAIj/B,EAAEspB,OAEZruB,EAAKynD,YACHzjB,EAAEysB,QAAQ,KACVzsB,EAAEysB,QAAQ,KACVzsB,EAAEysB,QAAQ,SAAWzsB,EAAEysB,QAAQ,UAC/BzsB,EAAEysB,QAAQ,UAAYzsB,EAAEysB,QAAQ,UAChCzsB,EAAEysB,QAAQ,aAGZzsB,EAAE0sB,QAAQ,SAAU,GACpB1sB,EAAE0sB,QAAQ,SAAU,IAEtB7D,UAAW,SAAA9nD,GACT,IAAMi/B,EAAIj/B,EAAEspB,OAEZruB,EAAKynD,YACHzjB,EAAEysB,QAAQ,KACVzsB,EAAEysB,QAAQ,KACVzsB,EAAEysB,QAAQ,SACVzsB,EAAEysB,QAAQ,UACVzsB,EAAEysB,QAAQ,aAEZzwD,EAAK+uD,SAAS/qB,EAAEysB,QAAQ,UAAWzsB,EAAEysB,QAAQ,YAE/CF,cAAevwD,EAAKkhC,OAAOsvB,YAAW,SAAA1rC,GAAQ,IACtCrgB,EAASqgB,EAATrgB,EAAGoO,EAAMiS,EAANjS,EACDZ,EAA4BjS,EAA5BiS,MAAOE,EAAqBnS,EAArBmS,OAAQojB,EAAav1B,EAAbu1B,SAFoB,EAGPv1B,EAAKkhC,OAAjCxmB,EAHmC,EAGnCA,YAAaD,EAHsB,EAGtBA,WAEf4+C,EAAMp/C,GADK,CAAExV,EAAG,EAAGoO,EAAG,EAAGZ,QAAOE,UACW,CAAE1N,IAAGoO,KAAK0iB,GACrDi9B,EAAQh4C,GAAa6+C,EAAK5+C,EAAYC,GAU5C,OARI83C,EAAMvgD,QAAUonD,EAAIpnD,QACtBxN,IAAM+tD,EAAMvgD,MAAQonD,EAAIpnD,QAAUugD,EAAM/tD,IAAM40D,EAAI50D,GAAK,EAAI,IAGzD+tD,EAAMrgD,SAAWknD,EAAIlnD,SACvBU,IAAM2/C,EAAMrgD,OAASknD,EAAIlnD,SAAWqgD,EAAM3/C,IAAMwmD,EAAIxmD,GAAK,EAAI,IAGxD,CAAEpO,IAAGoO,QAEd8kB,YAAa,SAAA5yB,GACX,IAAM+gD,EAAQ9lD,EAAKkhC,OAAO7nB,SAEtB6O,EAAMU,gBAAgBlB,SAASgzB,cACjC16C,EAAK43B,cAAa,GAClBkuB,EAAMlhC,YAAYxgB,MAAMk0B,OAASwmB,IAEjCgH,EAAMlhC,YAAYxgB,MAAMk0B,OAASwmB,IAGrCjnB,WAAY,SAAA9yB,GACI/E,EAAKkhC,OAAO7nB,SACpBuL,YAAYxgB,MAAMk0B,OAASwmB,GAE7B52B,EAAMU,gBAAgBlB,SAASgzB,cACjC16C,EAAK43B,cAAa,IAGtB/P,QAAS,SAAA9iB,GACP,IAAM+gD,EAAQ9lD,EAAKkhC,OAAO7nB,SACrBrZ,EAAKyoB,WAAWqP,WAEjB5P,EAAMU,gBAAgBlB,SAASgzB,eACjCoL,EAAMlhC,YAAYxgB,MAAMk0B,OAASwmB,IAGnC9+C,EAAK43B,cAAa,GAClB53B,EAAKy6C,kBAEPvgB,UAAWl6B,EAAK83B,WAElB,kBAAC0yB,GAAD,CAAaxqD,KAAMA,QAOzBtD,EAASu7C,OAAO,kBAAmBpjB,GAAiBskC,IACpDz8D,EAASsiD,cAAcnqB,GAAiB,SChTxC,IAAM0iB,GAAQ/H,QACXlyC,MAAM,CACLiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCm9B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAClCnB,KAAM,gBACNC,OAAQ6xC,QAAMyL,MAAK,kBAAMzL,QAAM0L,UAAU8R,OAEzCvoD,EAAG+qC,QAAM1+B,OACT+B,EAAG28B,QAAM1+B,OAETukB,QAASma,QAAM1+B,OACfwkB,QAASka,QAAM1+B,OAEfykB,SAAU,EAEVyvB,WAAYxV,QAAME,SAASF,QAAM8L,YAAY,CAAC,KAAM,SAAU,UAE/DxC,UAAS,SAAA1rB,GAAI,MAAK,CACjBsI,UAAW,EACXC,UAAW,EAEXkjC,cAAe,EACfC,eAAgB,EAEhBvR,OAAQ,EACRC,OAAQ,EAER8R,gBAAiB,EACjBC,gBAAiB,EAGjBxkC,OAAQ,EACRC,OAAQ,EAERllB,QAAS0/B,QAAM1+B,OAEfu6B,MAAM,EACNtsB,UAAW+/B,GACXia,YAAa,GAEbf,YAAalZ,GACb9S,YAAa8S,GAEb6T,mBAAmB,EACnB56B,UAAU,MAEXj7B,OAAM,SAAAswB,GAAI,MAAK,CACd,YACE,OAAOuJ,kBAAQvJ,QAGlBsT,SAAQ,SAAAtT,GAAI,MAAK,CAChB2vB,cACE3vB,EAAKm6B,OAASn6B,EAAK3oB,EACnB2oB,EAAKo6B,OAASp6B,EAAKva,EAEK,SAApBua,EAAK43B,aACP53B,EAAKsI,UAAYtI,EAAK3oB,EACtB2oB,EAAKuI,UAAYvI,EAAKva,EACtBua,EAAKksC,gBAAkBlsC,EAAKiI,QAC5BjI,EAAKmsC,gBAAkBnsC,EAAKkI,QAC5BlI,EAAKyrC,cAAgBzrC,EAAKnb,MAC1Bmb,EAAK0rC,eAAiB1rC,EAAKjb,QAG7Bib,EAAKysB,6BAIPmf,aAAav0D,EAAGoO,GAEd,IAAMtU,EAAI6uB,EAAKiI,QACTplB,EAAImd,EAAKkI,QAKXkkC,EAAQ/0D,EAHD2oB,EAAK3oB,EAIZg1D,EAAQ5mD,EAHDua,EAAKva,EAMV6mD,EAAQtsC,EAAKmI,SAInB,OAFAkkC,GADAD,EAAQA,EAAQzoD,KAAKmzB,IAAInzB,KAAK4oD,KAAKD,EAAO,QAAUD,EAAQ1oD,KAAKozB,IAAIpzB,KAAK4oD,KAAKD,EAAO,SACtE3oD,KAAKozB,IAAIpzB,KAAK4oD,KAAKD,EAAO,QAAUD,EAAQ1oD,KAAKmzB,IAAInzB,KAAK4oD,KAAKD,EAAO,QAElF3oD,KAAK4G,IAAI6hD,GAASj7D,IAChBwS,KAAK6oD,IAAIH,EAAO,GAAK1oD,KAAK6oD,IAAI3pD,EAAG,IAAM,EAAIc,KAAK6oD,IAAIJ,EAAO,GAAKzoD,KAAK6oD,IAAIr7D,EAAG,UAAhF,IAQJgc,OAAOm/B,GACL,IAAM51C,EAAIspB,EAAKqsB,YAAYrsB,EAAMssB,GACjCtsB,EAAKq6B,YAAY3jD,EAAEW,EAAGX,EAAE+O,EAAGua,EAAKkI,QAASlI,EAAKiI,QAASjI,EAAKmI,WAW9DkyB,YAAYhjD,EAAGoO,EAAGwiB,EAASC,EAASC,GAClCnI,EAAK3oB,EAAIA,EACT2oB,EAAKva,EAAIA,EACTua,EAAKiI,QAAUA,EACfjI,EAAKkI,QAAUA,EAEflI,EAAKsI,UAAajxB,EAAI2oB,EAAK8T,OAAOzmB,WAAc,IAChD2S,EAAKuI,UAAa9iB,EAAIua,EAAK8T,OAAOxmB,YAAe,IAEjD0S,EAAKksC,gBAAmBjkC,EAAUjI,EAAK8T,OAAOzmB,WAAc,IAC5D2S,EAAKmsC,gBAAmBjkC,EAAUlI,EAAK8T,OAAOxmB,YAAe,IAE7D0S,EAAKmI,UAAYA,EAAW,KAAO,KAGrCw5B,SAAStqD,EAAGoO,GACVua,EAAK2H,OAAStwB,EACd2oB,EAAK4H,OAASniB,GAGhBomD,QAAQxoD,GACN2c,EAAKie,KAAO56B,GAGdy+C,gBAAgBC,EAAIC,EAAIC,EAAIC,GAC1BliC,EAAKiiC,GAAKA,EACVjiC,EAAKkiC,GAAKA,EAEc,OAApBliC,EAAK43B,YACP53B,EAAK3oB,EAAK4qD,EAAKjiC,EAAKsI,UAAa,IACjCtI,EAAKva,EAAKy8C,EAAKliC,EAAKuI,UAAa,IACjCvI,EAAKiI,QAAWg6B,EAAKjiC,EAAKksC,gBAAmB,IAC7ClsC,EAAKkI,QAAWg6B,EAAKliC,EAAKmsC,gBAAmB,KAChB,SAApBnsC,EAAK43B,aACd53B,EAAK3oB,EAAK4qD,EAAKjiC,EAAK3oB,EAAK,IACzB2oB,EAAKva,EAAKy8C,EAAKliC,EAAKva,EAAK,IACzBua,EAAKiI,QAAWg6B,EAAKjiC,EAAKiI,QAAW,IACrCjI,EAAKkI,QAAWg6B,EAAKliC,EAAKkI,QAAW,IACrClI,EAAK43B,WAAa,OAItBlL,YAAa,IAAD,EACuD1sB,EAAKzvB,OAA9Dof,EADE,EACFA,aAAcE,EADZ,EACYA,cAAexC,EAD3B,EAC2BA,WAAYC,EADvC,EACuCA,YAC3Cg/B,GAAUtsB,EAAK8T,OAAO3L,SACtBg6B,EAAUniC,EAAKwsB,iBAAiB,CAAE3nC,MAAO8K,EAAc5K,OAAQ8K,GAAiBy8B,GAH5E,EAIgBtsB,EAAKwsB,iBAAiB,CAAE3nC,MAAOwI,EAAYtI,OAAQuI,GAAeg/B,GAApFznC,EAJE,EAIFA,MAAOE,EAJL,EAIKA,OAJL,EAKkCib,EAAKwsB,iBAC/C,CACE3nC,MAAQmb,EAAKiI,SAAWjI,EAAK2H,QAAU,GAAK,IAAO3H,EAAKzvB,OAAO8c,WAC/DtI,OAASib,EAAKkI,SAAWlI,EAAK4H,QAAU,GAAK,IAAO5H,EAAKzvB,OAAO+c,aAElEg/B,GALarkB,EALL,EAKFpjB,MAAwBqjB,EALtB,EAKcnjB,OALd,EAaOib,EAAKqsB,YAAYrsB,EAAMssB,GAAQ,GAAxCj1C,EAbE,EAaFA,EAAGoO,EAbD,EAaCA,EAeX,MAbY,CACV48C,eAAgBF,EAAQt9C,MACxBy9C,gBAAiBH,EAAQp9C,OACzBw9C,eAAgBviC,EAAK8T,OAAO3L,SAC5Bn3B,MAAO,CACLqG,EAAQ,IAAJA,EAAWwN,EACfY,EAAQ,IAAJA,EAAWV,EACfkjB,UACAC,UACAC,SAAUnI,EAAKmI,gBAQnBJ,GAAqBqa,QAAMuI,QAC/B,qBACAgH,GACAnG,GACAyE,GACA1E,GACAugB,GACA3hB,IAiHIsiB,GAAazyC,aA9GI,SAAC,GAAc,IAAZpnB,EAAW,EAAXA,KACxB,GAAIA,EAAKy3B,OAAQ,OAAO,KADW,IAG3BvP,EAAUloB,EAAVkoB,MAEF9jB,EAAQpE,EAAKoE,OAASpE,EAAK3C,KAAOi7C,GAClCG,EAA6Br0C,EAA7Bq0C,YAAaC,EAAgBt0C,EAAhBs0C,YAOnB,OALI14C,EAAKguC,cACPyK,EAAcqG,GACdpG,EAAcoG,IAId,kBAAC,WAAD,KACE,kBAAC,WAAD,CACEr6C,EAAGzE,EAAKyE,EACRoO,EAAG7S,EAAK6S,EACRwiB,QAASr1B,EAAKq1B,QACdC,QAASt1B,EAAKs1B,QACd+V,KAAMrrC,EAAKqrC,KAAO5jB,GAAMzI,OAAO1O,cAAclM,EAAMm0C,WAAYn0C,EAAMo0C,aAAe,KACpF95B,OAAQ+5B,EACRzM,aAAc0M,EACd2R,oBAAoB,EACpBS,WAAY,EACZ/1B,OAAQ/0B,EAAK+0B,OACbC,OAAQh1B,EAAKg1B,OACbllB,SAAU1L,EAAM0L,QAChBylB,SAAUv1B,EAAKu1B,SACf93B,KAAMuC,EAAKT,GACX65D,eAAgB,SAAAr0D,GACd,IAAMi/B,EAAIj/B,EAAEspB,OAEZruB,EAAKynD,YACHzjB,EAAEysB,QAAQ,KACVzsB,EAAEysB,QAAQ,KACVzsB,EAAEysB,QAAQ,WAAazsB,EAAEysB,QAAQ,UACjCzsB,EAAEysB,QAAQ,WAAazsB,EAAEysB,QAAQ,UACjCzsB,EAAEysB,QAAQ,aAGZzsB,EAAE0sB,QAAQ,SAAU,GACpB1sB,EAAE0sB,QAAQ,SAAU,IAEtB7D,UAAW,SAAA9nD,GACT,IAAMi/B,EAAIj/B,EAAEspB,OAEZruB,EAAKynD,YACHzjB,EAAEysB,QAAQ,KACVzsB,EAAEysB,QAAQ,KACVzsB,EAAEysB,QAAQ,WACVzsB,EAAEysB,QAAQ,WACVzsB,EAAEysB,QAAQ,aAEZzwD,EAAK+uD,SAAS/qB,EAAEysB,QAAQ,UAAWzsB,EAAEysB,QAAQ,YAE/CF,cAAevwD,EAAKkhC,OAAOsvB,YAAW,SAAA1rC,GAAQ,IACtCrgB,EAASqgB,EAATrgB,EAAGoO,EAAMiS,EAANjS,EACDwiB,EAA+Br1B,EAA/Bq1B,QAASC,EAAsBt1B,EAAtBs1B,QAASC,EAAav1B,EAAbu1B,SAFiB,EAGPv1B,EAAKkhC,OAAjCxmB,EAHmC,EAGnCA,YAAaD,EAHsB,EAGtBA,WAEf4+C,EAAMp/C,GADK,CAAExV,GAAI4wB,EAASxiB,GAAIyiB,EAASrjB,MAAiB,EAAVojB,EAAaljB,OAAkB,EAAVmjB,GACxB,CAAE7wB,IAAGoO,KAAK0iB,GACrDi9B,EAAQh4C,GAAa6+C,EAAK5+C,EAAYC,GAU5C,OARI83C,EAAMvgD,QAAUonD,EAAIpnD,QACtBxN,IAAM+tD,EAAMvgD,MAAQonD,EAAIpnD,QAAUugD,EAAM/tD,IAAM40D,EAAI50D,GAAK,EAAI,IAGzD+tD,EAAMrgD,SAAWknD,EAAIlnD,SACvBU,IAAM2/C,EAAMrgD,OAASknD,EAAIlnD,SAAWqgD,EAAM3/C,IAAMwmD,EAAIxmD,GAAK,EAAI,IAGxD,CAAEpO,IAAGoO,QAEd8kB,YAAa,SAAA5yB,GACX,IAAM+gD,EAAQ9lD,EAAKkhC,OAAO7nB,SAEtB6O,EAAMU,gBAAgBlB,SAASgzB,cACjC16C,EAAK43B,cAAa,GAClBkuB,EAAMlhC,YAAYxgB,MAAMk0B,OAASwmB,IAEjCgH,EAAMlhC,YAAYxgB,MAAMk0B,OAASwmB,IAGrCjnB,WAAY,SAAA9yB,GACI/E,EAAKkhC,OAAO7nB,SACpBuL,YAAYxgB,MAAMk0B,OAASwmB,GAE7B52B,EAAMU,gBAAgBlB,SAASgzB,cACjC16C,EAAK43B,cAAa,IAGtB/P,QAAS,SAAA9iB,GACP,IAAM+gD,EAAQ9lD,EAAKkhC,OAAO7nB,SACrBrZ,EAAKyoB,WAAWqP,WAEjB5P,EAAMU,gBAAgBlB,SAASgzB,eACjCoL,EAAMlhC,YAAYxgB,MAAMk0B,OAASwmB,IAGnC9+C,EAAK43B,cAAa,GAClB53B,EAAKy6C,kBAEPvgB,UAAWl6B,EAAK83B,WAElB,kBAACyyB,GAAD,CAAgBvqD,KAAMA,QAO5BtD,EAASu7C,OAAO,gBAAiB9iB,GAAoB0kC,IACrDn9D,EAASsiD,cAAc7pB,GAAoB,SC1R3C,IAAM+hB,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ/4C,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAC7ByI,OAAQtQ,QAAM4H,UAAU5H,QAAM1+B,QAC9BmB,MAAOu9B,QAAME,SAASF,QAAM6H,OAAQ,QACpCke,SAAU/lB,QAAME,SAASF,QAAM6H,OAAQ,SAGvCua,KAAMpiB,QAAME,SAASF,QAAM8H,SAAS,GACpCua,SAAUriB,QAAME,SAASF,QAAM1+B,OAAQ,IACvCihD,UAAWviB,QAAME,SAASoS,GAAYrxC,MAAO,WAE7C2iC,KAAM5D,QAAME,SAASF,QAAM8H,SAAS,GACpC2R,aAAczZ,QAAME,SAASF,QAAM8H,SAAS,GAC5CwR,OAAQtZ,QAAME,SAASF,QAAM6H,OAAQ,OAErCkH,WAAY/O,QAAME,SAASF,QAAM8H,SAAS,GAE1CwiB,YAAatqB,QAAME,SAASF,QAAM8H,SAAS,GAC3CyiB,kBAAmBvqB,QAAME,SAASF,QAAM8H,SAAS,GACjD0iB,gBAAiBxqB,QAAME,SAASF,QAAM8H,SAAS,GAC/C2iB,cAAezqB,QAAME,SAASF,QAAM8H,SAAS,KAGzC4iB,GAMa,kBANbA,GASS,cATTA,GAWW,gBAGX3iB,GAAQ/H,QACXlyC,MAAM,CACLI,KAAM,QACNk3B,OAAQ4a,QAAME,SAASF,QAAM6H,OAAQ,IAIrC9hB,SAAUia,QAAME,SAASF,QAAM1+B,OAAQ,GAEvCslD,YAAa5mB,QAAME,SAASF,QAAM8H,SAAS,GAM3Cv6B,aAAcyyB,QAAME,SAASF,QAAMkS,QAAS,GAC5CzkC,cAAeuyB,QAAME,SAASF,QAAMkS,QAAS,GAK7CiW,aAAcnoB,QAAME,SAASF,QAAMkS,QAAS,GAC5CkW,cAAepoB,QAAME,SAASF,QAAMkS,QAAS,GAE7CjnC,WAAY+0B,QAAME,SAASF,QAAMkS,QAAS,GAC1ChnC,YAAa80B,QAAME,SAASF,QAAMkS,QAAS,GAK3Czb,UAAWuJ,QAAME,SAASF,QAAM1+B,OAAQ,GAMxC0kD,iBAAkBhmB,QAAM4H,UAAU5H,QAAM1+B,QACxC2kD,iBAAkBjmB,QAAM4H,UAAU5H,QAAM1+B,QAKxCqkD,gBAAiB3lB,QAAME,SAASF,QAAM1+B,OAAQ,KAE9CskD,cAAe5lB,QAAME,SAASF,QAAM1+B,OAAQ,KAK5CwjD,gBAAiB9kB,QAAME,SAASF,QAAM1+B,OAAQ,GAC9CqjD,gBAAiB3kB,QAAME,SAASF,QAAM1+B,OAAQ,GAE9CqpD,aAAc3qB,QAAME,SAASF,QAAM6H,OAAQ,SAE3C+iB,iBAAkB5qB,QAAME,SAASF,QAAM1+B,OAAQ,IAO/CuuB,KAAMmQ,QAAME,SAASF,QAAM8L,YAAY,CAAC,UAAW,UAAW,QAAS,WAAY,WAEnFv+C,QAASyyC,QAAMiM,MACbjM,QAAM2L,MAAMvlB,GAAkBf,GAAiBM,GAAoBF,GAAoBO,IACvF,MAGH14B,OAAM,SAAAswB,GAAI,MAAK,CAId,gBACE,IAAM8iB,EAAS9iB,EAAK8iB,SACpB,OAAOA,GAAUA,EAAO9uC,OAAS,GAMnC,iBAEE,OAAOu1B,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC,WAAY,IAAD,EACT,OAAO,UAAA0F,EAAK3E,kBAAL,eAAiBmO,YAAY75B,QAAQuB,QAAO,SAAAyR,GAAC,OAAIA,EAAEpS,SAAWyvB,OAAS,IAGhF,oBACE,OAAOA,EAAKwyB,KAAKriC,MAAK,SAAAxN,GAAC,OAAIA,EAAE2X,aAM/BwoB,OAAM,IACG9iB,EAAK3E,WAAW2xB,QAAQt8C,IAAIsvB,EAAK3vB,MAG1C4yC,eACE,IAAMH,EAAS9iB,EAAK8iB,SACpB,OAAOA,GAAUA,EAAO5xC,QAAO,SAAA6xC,GAAC,OAAIA,EAAE1P,YAAc0P,EAAEzyC,KAAKk4C,SAAS,cAGtEif,gBACE,IAAMnd,EAAQtqB,EAAK8iB,SACnB,GAAKwH,GAA0B,IAAjBA,EAAMt2C,OAApB,CAEA,IAAIi5D,EAAkB3iB,EAAM,GAY5B,OAVAA,EAAM52C,SAAQ,SAAAd,GAEVA,EAAKtC,OAASw8D,IACdl6D,EAAKtC,OAASw8D,IACdl6D,EAAKtC,OAASw8D,KAEdG,EAAkBr6D,MAIfq6D,IAGT,wBACE,IAAM58D,EAAO2vB,EAAKynC,gBAClB,OAAOx1D,kBAAQ5B,GAAMA,UAKxBijC,SAAQ,SAAAtT,GACP,IAAMktC,EAAe,IAAI9D,GAAa,CAAE7yD,IAAKypB,IAiB7C,MAAO,CAAE2vB,YAfT,WACM3vB,EAAK0sC,aAAaQ,EAAa5D,QAAQ,OAAQ6D,GAAWj7D,OAAO,GAAI,CAAE8lD,QAASkV,KAEhFltC,EAAK2sC,mBACPO,EAAa5D,QAAQ,aAAc6D,GAAiBj7D,OAAO,GAAI,CAAE8lD,QAASkV,KAExEltC,EAAK4sC,iBAAiBM,EAAa5D,QAAQ,WAAY6D,GAAej7D,OAAO,GAAI,CAAE8lD,QAASkV,KAE5FltC,EAAK6sC,eAAeK,EAAa5D,QAAQ,SAAU6D,GAAaj7D,OAAO,GAAI,CAAE8lD,QAASkV,MAOtE7F,gBAJtB,WACE,OAAO6F,OAMV55B,SAAQ,SAAAtT,GAAI,MAAK,CAChBq7B,kBAIA+R,mBAAmBC,GACjBrtC,EAAK+sC,aAAeM,GAGtBC,uBAAuBD,GACrBrtC,EAAKgtC,iBAAmBK,GAO1B5Q,mBAAmBzrD,GACjBgvB,EAAK+nC,gBAAkB/2D,GAGzB4rD,iBAAiB5rD,GACfgvB,EAAKgoC,cAAgBh3D,GAGvB41D,YAAY51D,GACVgvB,EAAKykC,SAAWzzD,GAMlBu8D,mBAAmB,GAAW,IAATl2D,EAAQ,EAARA,EAAGoO,EAAK,EAALA,EACtBua,EAAKq7B,gBACLr7B,EAAKknC,gBAAkB7vD,EACvB2oB,EAAK+mC,gBAAkBthD,GAMzBw1C,QAAQ5kB,EAAOh/B,EAAGoO,GAChBua,EAAK0yB,OAASrc,EACdrW,EAAK6Y,UAAYxC,EACjBrW,EAAKooC,iBAAmB/wD,EACxB2oB,EAAKqoC,iBAAmB5iD,GAG1B+nD,gBAAgBn2D,EAAGoO,GACjBua,EAAKooC,iBAAmB/wD,EACxB2oB,EAAKqoC,iBAAmB5iD,GAO1BgoD,QAAQx7B,GACNjS,EAAKiS,KAAOA,GAGd02B,YAAYnpB,GACVxf,EAAK0Y,SAAW8G,GAGlBspB,YAAYtpB,GACVxf,EAAK/T,SAAWuzB,EAEZxf,EAAKuqC,aAAe,IACxBvqC,EAAKuqC,aAAe/qB,GAAOA,EAAIlsC,OAASksC,EAAIlsC,MAAMuR,MAAQ26B,EAAIlsC,MAAMuR,MAAQ,EAC5Emb,EAAKwqC,cAAgBhrB,GAAOA,EAAIlsC,OAASksC,EAAIlsC,MAAMyR,OAASy6B,EAAIlsC,MAAMyR,OAAS,IAIjFutB,YAAYvmB,KAIZoB,SAAsB,IAAfm/B,EAAc,wDAAJ,GACftsB,EAAKmI,UAAYnI,EAAKmI,SAAWmkB,EAAS,KAAO,IAGjD,IAAM1nC,EAAIob,EAAK3S,WACf2S,EAAK3S,WAAa2S,EAAK1S,YACvB0S,EAAK1S,YAAc1I,EACnB,IAAM8K,EAAKsQ,EAAKrQ,aAChBqQ,EAAKrQ,aAAeqQ,EAAKnQ,cACzBmQ,EAAKnQ,cAAgBH,EAErB,IAAM+4C,EAAQzoC,EAAK1S,YAAc0S,EAAK3S,WAGtC2S,EAAKrwB,QAAQ+D,SAAQ,SAAAqvC,GAAC,OAAIA,EAAE51B,OAAOm/B,MAGnCtsB,EAAK0tC,iBAAiB,CACpB7oD,MAAOD,EACPG,OAAQpB,KAAKsxB,MAAMwzB,EAAQ7jD,GAC3B+K,aAAcqQ,EAAKrQ,aACnBE,cAAemQ,EAAKnQ,iBAIxB69C,iBAAiB,GAA6D,IAA3D7oD,EAA0D,EAA1DA,MAAOE,EAAmD,EAAnDA,OAAQ4K,EAA2C,EAA3CA,aAAcE,EAA6B,EAA7BA,cAAe89C,EAAc,EAAdA,gBACxC1qD,IAAjB0M,IACFqQ,EAAKrQ,aAAeA,EACpBqQ,EAAKnQ,cAAgBA,GAGvBmQ,EAAK3S,WAAaxI,EAClBmb,EAAK1S,YAAcvI,EACnBib,EAAKgpC,aAAc,EAEnBhpC,EAAKrwB,QAAQ+D,SAAQ,SAAAqY,GACnBA,EAAM+1C,gBAAgBj9C,EAAQ8K,EAAc5K,EAAS8K,EAAehL,EAAOE,EAAQ4oD,MAErF3tC,EAAKwyB,KAAK9+C,SAAQ,SAAAqY,GAChBA,EAAM+1C,gBAAgBj9C,EAAQ8K,EAAc5K,EAAS8K,EAAehL,EAAOE,EAAQ4oD,OAIvF7L,gBAAgBvmC,GAAK,IAAD,EACqCA,EAAG0F,OAAlDpc,EADU,EACVA,MAAOE,EADG,EACHA,OAAQ4K,EADL,EACKA,aAAcE,EADnB,EACmBA,cACrCmQ,EAAKuqC,aAAe1lD,EACpBmb,EAAKwqC,cAAgBzlD,GAChBib,EAAKmI,SAAW,KAAO,MAAQ,GAElCnI,EAAK0tC,iBAAiB,CACpB7oD,MAAOE,EACPA,OAAQF,EACR8K,aAAcE,EACdA,cAAeF,IAGjBqQ,EAAK0tC,iBAAiB,CAAE7oD,QAAOE,SAAQ4K,eAAcE,kBAKvDrW,WAAWwmB,EAAK3E,WAAWuyC,cAAe,IAG5CpU,cAEE,IAAMqU,GAAe7tC,EAAK8iB,UAAY,IAAI5xC,QAAO,SAAA6xC,GAAC,OAAIA,EAAEzyC,KAAKk4C,SAAS,aAEtE,OAAiC,IADVxoB,EAAK4iB,qBACN5uC,QAAuC,IAAvB65D,EAAY75D,QAGpDqwD,SAASt4C,GACPiU,EAAKrwB,QAAQS,KAAK2b,GAElBiU,EAAK3E,WAAWutB,UAAU78B,GAC1BiU,EAAKsS,YAAYvmB,EAAM5Z,IACvB4Z,EAAMkhC,gBAIRiT,gBAAgB,GAAS,IAAD,oBAAP7oD,EAAO,KAAJoO,EAAI,KACtB,MAAO,EAAEpO,EAAI2oB,EAAKooC,kBAAoBpoC,EAAK6Y,WAAYpzB,EAAIua,EAAKqoC,kBAAoBroC,EAAK6Y,YAO3Fi1B,mBAAmB,GAAS,IAAD,oBAAPz2D,EAAO,KAAJoO,EAAI,KACzB,MAAO,CAACpO,EAAI2oB,EAAK6Y,UAAY7Y,EAAKooC,iBAAkB3iD,EAAIua,EAAK6Y,UAAY7Y,EAAKqoC,mBAoBhFjF,WAAW/sD,GACF,SAAAK,GACL,IAAMq3D,OAAkB9qD,IAARvM,EAAEW,EADR,EAEK2oB,EAAKkgC,gBAAgB6N,EAAUr3D,EAAI,CAACA,EAAEW,EAAGX,EAAE+O,IAFhD,oBAEHpO,EAFG,KAEAoO,EAFA,KAGJuoD,EAAW33D,EAAG03D,EAAU,CAAC12D,EAAGoO,GAAK,CAAEpO,IAAGoO,MACtCwoD,EAASjuC,EAAK8tC,mBAAmBC,EAAUC,EAAW,CAACA,EAAS32D,EAAG22D,EAASvoD,IAClF,OAAOsoD,EAAUE,EAAS,CAAE52D,EAAG42D,EAAO,GAAIxoD,EAAGwoD,EAAO,KASxDttB,SAAS97B,EAAOE,EAAQ4oD,GACtB3tC,EAAK0tC,iBAAiB,CAAE7oD,QAAOE,SAAQ4oD,gBAGzClqC,MAAMpzB,EAAMkrB,GAAe,IAAC,IAAD,qBAAR8b,EAAQ,iCAARA,EAAQ,mBACzB,EAAArX,EAAKqnC,mBAAkB5jC,MAAvB,SAA6BpzB,EAAMkrB,EAAG4/B,KAAO5/B,GAA7C,oBAAoDyE,EAAKkgC,gBAAgB7oB,OAM3E+S,cAAc7zC,EAAKlE,GACjB,IAAMrC,EAAQgwB,EAAKqnC,kBAAkBC,WAGhB,IAAjBt3D,EAAMgE,QAAgBuC,EAAIvF,MAAMq5C,QAClCrqB,EAAK3E,WAAWivB,MAAM55C,IAAI6F,EAAI83B,WAAW+b,cAAc7zC,GAKzDvG,EAAM0D,SAAQ,SAAAkjC,GAAC,OAAIA,EAAEwT,eAAiBxT,EAAEwT,cAAc7zC,EAAKlE,WAI3DutD,GAAaxd,QAAMuI,QAAQ,aAAcb,GAAUK,GAAOrG,GAAmB3B,IAE7E+rB,GAAW/vC,YAAO,QAAPA,CAAgBgwC,IAEjC7+D,EAASu7C,OAAO,QAAS+U,GAAYsO,IACrC5+D,EAASw7C,cAAc8U,ICtcvB,IAAMzV,GAAQ/H,QACXlyC,MAAM,kBAAmB,CACxBI,KAAM,YACNC,OAAQ6xC,QAAMyL,MAAK,kBAAMzL,QAAM0L,UAAUsgB,OAEzC54C,MAAO4sB,QAAM1+B,OACb0C,IAAKg8B,QAAM1+B,OAEXzN,KAAM,KAEPvG,OAAM,SAAAswB,GAAI,MAAK,CACd,aACE,OAAOA,EAAKzvB,QAEd,oBACE,OAAOyvB,EAAK8yB,OAAO,QAGtBxf,SAAQ,SAAAtT,GAAI,MAAK,CAChBmwB,gBACE91B,GAAMd,KAAKlB,YAAY2H,EAAK8yB,SAG9Bub,QAAQp4D,GACN+pB,EAAK/pB,KAAOA,GAGdy2C,YACE,IAAIz5C,EAAM,CACRjC,MAAO,CACLwkB,MAAOwK,EAAKxK,MACZpP,IAAK4Z,EAAK5Z,MAQd,MAJmC,QAA/B4Z,EAAKzvB,OAAOgkD,iBACdthD,EAAIjC,MAAJ,KAAoBgvB,EAAK/pB,MAGpBhD,OAIP6zB,GAAkBsb,QAAMuI,QAC5B,kBACAgH,GACAnG,GACAyE,GACA1E,GACApB,GACAqK,IAGFllD,EAASsiD,cAAc9qB,GAAiB,Q,yBC9BlCgjB,GAAW1H,QAAMlyC,MAAM,YAAa,CACxCG,KAAM+xC,QAAM2H,WACZ/4C,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAE7BqkB,UAAWlsB,QAAME,SAASF,QAAM8L,YAAY,CAAC,OAAQ,SAAS,kBAAOh3B,OAAOg+B,eAAiB,MAAQ,UAErGX,eAAgBnS,QAAME,SAASF,QAAM8L,YAAY,CAAC,OAAQ,KAAM,SAAS,kBACvEh3B,OAAOg+B,eAAiB,KAAO,UAGjCqZ,iBAAkBnsB,QAAME,SAASF,QAAM8H,SAAS,GAEhDkJ,eAAgBhR,QAAM4H,UAAU0K,GAAYrxC,OAI5C8tC,WAAY/O,QAAME,SAASF,QAAM8H,SAAS,GAE1CskB,YAAapsB,QAAME,SAASF,QAAM8L,YAAY,CAAC,SAAU,OAAQ,WAAY,cAAe,UAE5FxgC,SAAU00B,QAAME,SAASF,QAAM8L,YAAY,CAAC,OAAQ,SAAU,kBAAmB,UAG7E/D,GAAQ/H,QACXlyC,MAAM,YAAa,CAClBI,KAAM,OACNm+D,OAAQrsB,QAAME,SAASF,QAAM8H,SAAS,GACtC1iB,OAAQ4a,QAAME,SAASF,QAAM6H,OAAQ,IACrCmL,QAAShT,QAAME,SAASF,QAAM1+B,OAAQ,KAEvChU,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,IAAM8iB,EAAS9iB,EAAK8iB,SACpB,OAAOA,GAAUA,EAAO9uC,OAAS,GAGnC,iBACE,OAAOu1B,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC,WACE,OAAO0F,EAAK3E,WAAWmO,YAAY75B,QAAQuB,QAAO,SAAAyR,GAAC,OAAIA,EAAEpS,SAAWyvB,MAGtE8iB,OAAM,IACG9iB,EAAK3E,WAAW2xB,QAAQt8C,IAAIsvB,EAAK3vB,MAG1C4yC,eACE,IAAMH,EAAS9iB,EAAK8iB,SACpB,OAAOA,GAAUA,EAAO5xC,QAAO,SAAA6xC,GAAC,OAAIA,EAAE1P,YAAyB,WAAX0P,EAAEzyC,aAGzDgjC,SAAQ,SAAAtT,GAAI,MAAK,CAChB0uC,OAAOlvB,GACLxf,EAAK2uC,KAAOnvB,GAGd6V,cACEr1B,EAAKo1B,QAAUp1B,EAAKo1B,QAAU,GAGhCx0B,YAAY9F,GAGV,GAFAkF,EAAKwH,OAASgc,GAAYxjB,EAAKhvB,MAAO8pB,EAAMiE,KAAKilB,SAE1B,QAAnBhkB,EAAKsuC,UAAqB,CAC5B,IAAMnpB,EAAMnlB,EAAKwH,OACjB,IAAK,eAAezZ,KAAKo3B,GAAM,CAC7B,IAAMtB,EAAU,GAUhB,OATIsB,GACFtB,EAAQzzC,KAAR,eAAqB+0C,EAArB,oBACAtB,EAAQzzC,KAAR,mFAEAyzC,EAAQzzC,KAAR,8BAAoC4vB,EAAKhvB,MAAzC,mBAEEkmB,OAAOg+B,gBAAgBrR,EAAQ+qB,QAAR,qDAC3B1rB,GAAUhzB,MAAM2zB,EAAQ5vC,KAAI,SAAA2iC,GAAC,OAAI,2BAAIA,YACrC5W,EAAK6uC,YAAY,IAGnBC,MAAM3pB,GACH4pB,MAAK,SAAA97D,GACJ,IAAKA,EAAI+7D,GAAI,MAAM,IAAIj+D,MAAJ,UAAakC,EAAI+nB,OAAjB,YAA2B/nB,EAAIg8D,aAClD,OAAOh8D,EAAIgD,UAEZ84D,KAAK/uC,EAAK6uC,aACVK,OAAM,SAAAv3D,GACL,IAAMksC,EAAUyE,GAAShD,iBAAiB,CAAEJ,KAAMllB,EAAKhvB,MAAOkf,MAAO1Y,OAAOG,GAAIwtC,QAChFjC,GAAUhzB,MAAM2zB,EAAS,QACzB7jB,EAAK6uC,YAAY,YAGrB7uC,EAAK6uC,YAAY7uC,EAAKwH,SAI1BqnC,YAAY1oD,GACV6Z,EAAKyuC,QAAS,EACQ,WAAlBzuC,EAAKtS,WAAuBvH,EAAMnN,KAAKmN,IACrB,kBAAlB6Z,EAAKtS,WAA8BvH,EAAMkU,GAAM1G,SAAS7a,YAAYqN,IAExE6Z,EAAKwH,OAASrhB,EAEd6Z,EAAKuiB,cAAc7uC,SAAQ,YAA6B,IAA1B8b,EAAyB,EAAzBA,OAAQ6L,EAAiB,EAAjBA,WACpC7L,EAAO6+C,QAAQruC,EAAKwH,OAAOpwB,UAAUoY,EAAOkG,YAAalG,EAAOoG,YAChEoK,EAAKrwB,QAAQS,KAAKof,GAClB6L,EAAWutB,UAAUp5B,MAGvBwQ,EAAKuiB,cAAgB,IAGvBoN,cACE3vB,EAAKuiB,cAAgB,GAKO,SAAxBviB,EAAKu0B,iBACgB,QAAnBv0B,EAAKsuC,UAAqBtuC,EAAKu0B,eAAiB,KACxB,SAAnBv0B,EAAKsuC,YAAsBtuC,EAAKu0B,eAAiB,SAI9DxC,aAAar7C,GACX,IAAMiM,EAAImkB,GAAgB50B,OAAOwE,GAIjC,GAFAiM,EAAEkU,OAASngB,EAAEmgB,OAEU,QAAnBmJ,EAAKsuC,YAAuC,IAAhBtuC,EAAKyuC,OAQrC,OAHAzuC,EAAKrwB,QAAQS,KAAKuS,GAClBqd,EAAK3E,WAAWutB,UAAUjmC,GAEnBA,EAPLqd,EAAKuiB,cAAcnyC,KAAK,CAAEof,OAAQ7M,EAAG0Y,WAAY2E,EAAK3E,cAU1DutB,UAAUrzB,GACRA,EAAMC,MAAQD,EAAMG,YACpBH,EAAMnP,IAAMmP,EAAMK,UAElB,IAAMktB,EAAS9iB,EAAK4iB,qBACpB,GAAsB,IAAlBE,EAAO9uC,OAAX,CAEA,IAAM44C,EAAU9J,EAAO,GACjBtvB,EAAS,CAAE,CAACo5B,EAAQmC,WAAYnC,EAAQzL,kBACxCiO,EAAOpvB,EAAK3E,WAAWk3B,aAAah9B,EAAO/B,EAAQo5B,EAAS5sB,GAElE,OADAovB,EAAKv4B,OAAStB,EAAMsB,OACbu4B,IAQThF,cAAc7zC,EAAKlE,GACjB,IAAIsQ,EACArO,EAEEw9C,EAAK9xB,EAAK3E,WAAWivB,MAAM55C,IAAI6F,EAAI83B,WAGzC,GAFAyjB,EAAG1H,cAAc7zC,GAEZu7C,EAAGnG,WAAgC,WAAnBt5C,EAAU/B,KAA/B,CAP4B,MASLiG,EAAIvF,MAAnBwkB,EAToB,EASpBA,MAAOpP,EATa,EASbA,IAIf,GAFAzD,EAAIqd,EAAK8O,WAAW,CAAEpZ,YAAanf,EAAIvF,MAAMwkB,MAAOI,UAAWrf,EAAIvF,MAAMoV,MAErE/T,EAIF,GAHAiC,EAAIlC,EAAmBC,GAGnBsQ,GAAKtQ,EAAUs5C,UACjBhpC,EAAEmgC,OAAO1yC,KAAKkE,OACT,CAEL,IAAMI,EAAO,CACXk6B,IAAKr4B,EAAIpE,GACTy6B,SAA4B,OAAlBr2B,EAAIu2C,UAAqB,GAAKv2C,EAAIu2C,UAC5Cp3B,YAAaF,EACbI,UAAWxP,EACXoP,MAAO,GACPpP,IAAK,GACLqL,MAAOlb,EAAIkb,MACXg6B,SAAUl1C,EAAIk1C,SACdx1C,KAAM+pB,EAAKwH,OAAOpwB,UAAUoe,EAAOpP,GACnCiqB,cAAe95B,EAAI85B,cACnByS,OAAQ,CAACxuC,IAGXqO,EAAIqd,EAAK+xB,aAAar9C,GAS1B,OAAOiO,QAOPyrD,GAAYhsB,QAAMuI,QAAQ,YAAaa,GAAc1B,GAAUK,GAAOhI,IAEtEgtB,G,uKACM,IAAD,EACiB5/D,KAAKqE,MAArBhB,EADD,EACCA,KAAMkoB,EADP,EACOA,MAEd,OAAKloB,EAAK40B,OAEH,kBAAC4nC,GAAD,CAAkBt0C,MAAOA,EAAOloB,KAAMA,IAFpB,S,GAJHirB,aAUpBwxC,G,kDACJ,WAAYz7D,GAAQ,IAAD,8BACjB,cAAMA,IACD6hD,MAAQjiD,IAAMwrC,YAFF,E,uDAKP,IAAD,EACezvC,KAAKqE,MAArBhB,EADC,EACDA,KAAMkoB,EADL,EACKA,MAEV3U,EAAMq9B,GAAY5wC,EAAK5B,MAAO8pB,EAAMiE,KAAKilB,SAI7C,MAHsB,WAAlBpxC,EAAK8a,WAAuBvH,EAAMnN,KAAKmN,IACrB,kBAAlBvT,EAAK8a,WAA8BvH,EAAMkU,GAAM1G,SAAS7a,YAAYqN,IAEjEA,I,gCAGCxD,EAAG6S,EAAOpP,GAClB,IAAMD,EAAM5W,KAAK+/D,WACXC,EAAUppD,EAAI/O,UAAU,EAAGoe,GAC3B1L,EAAKnH,EAAEoV,aAEb,GAAIw3C,EAAQv7D,OAAS,EAAG,CACtB,IAAIw7D,EAAWD,EAAQE,YAAY,KAC/BC,EAAaH,EAAQE,YAAY,MAEjCxlC,EAAMulC,EAAWE,EAAaF,EAAWE,EAM7C,IAJa,IAATzlC,GACFngB,EAAGoM,SAASvT,EAAE8S,eAAgB,GAG5BwU,EAAM,EAAG,CAAC,IAAD,EACW5P,GAAMd,KAAKpB,iBAAiB5oB,KAAKkmD,MAAOxrB,EAAM,GAA5Dn4B,EADG,EACHA,KAAMuV,EADH,EACGA,IACdyC,EAAGoM,SAASpkB,EAAMuV,IAItB,IAAMsoD,EAAWxpD,EAAI/O,UAAUgP,EAAKD,EAAInS,QAExC,GAAI27D,EAAS37D,OAAS,EAAG,CACvB,IAGIi2B,EAHAulC,EAAWG,EAASx4D,QAAQ,KAC5Bu4D,EAAaC,EAASx4D,QAAQ,MAiBlC,IAboB,IAAhBu4D,IAAmBzlC,EAAMulC,IACX,IAAdA,IAAiBvlC,EAAMylC,GAEvBA,EAAa,GAAKF,EAAW,IAC/BvlC,EAAMulC,EAAWE,EAAaA,EAAaF,IAKhC,KAFbvlC,GAAY7jB,IAGV0D,EAAGqM,OAAOxT,EAAEgT,aAAchT,EAAEgT,aAAa3hB,QAGvCi2B,EAAM,EAAG,CAAC,IAAD,EACW5P,GAAMd,KAAKpB,iBAAiB5oB,KAAKkmD,MAAOxrB,EAAM,GAA5Dn4B,EADG,EACHA,KAAMuV,EADH,EACGA,IACdyC,EAAGqM,OAAOrkB,EAAMuV,EAAM,EAAIA,EAAM,EAAI,IAIxC,OAAOyC,I,iCAGEnH,GACT,IAAM/P,EAAOrD,KAAKqE,MAAMhB,KAGlB47D,EADQ57D,EAAKqwC,eAAe,GAAGlV,eAAe,GAC1BygC,aAAe57D,EAAK47D,YAE9C,GAAoB,WAAhBA,EAA0B,OAAO7rD,EANzB,MAQW0X,GAAMd,KAAK3B,YAAYroB,KAAKkmD,OAA3CjgC,EARI,EAQJA,MAAOpP,EARH,EAQGA,IAIf,MAAoB,SAAhBooD,EACKj/D,KAAKqgE,UAAUjtD,EAAG6S,EAAOpP,QADlC,I,+CAWuBmV,GACvB,IAAInmB,EAEFsgD,EAAS,GACTC,EAAiB,GACjBC,EAAY1+B,OAAOW,eAErB,GAAI+9B,EAAUC,YAAa,MAAO,GAElC,IAAMga,EAAsBt0C,EAAGu0C,OAE/B,IAAK16D,EAAI,EAAGA,EAAIwgD,EAAUE,WAAY1gD,IAAK,CACzC,IAAIuN,EAAIizC,EAAU99B,WAAW1iB,GAU7B,GARgC,QAA5BuN,EAAEgT,aAAagC,UACjBhV,EAAEwT,OAAOxT,EAAE8S,eAAgB9S,EAAE8S,eAAezhB,QAGzC67D,IACHltD,EAAIpT,KAAKwgE,WAAWptD,KAGlBA,EAAEqtD,YAAa,QAAQjiD,KAAKpL,EAAE1J,YAElC,IACE,IAAIod,EAAc0/B,aAAgBpzC,EAvB7BpT,KAuBqCkmD,OAE1Cn+B,GAAgB3U,GAEhB0T,EAAYQ,OAASlU,EAIrB,IAEM1M,EAFOY,MAAMoX,KAAKtL,EAAEstD,gBAAgBn6C,YAExBxd,QAAO,SAACK,EAAK7G,GAAN,OAAgB6G,GAAwB,OAAjB7G,EAAK8xB,QAAmB,KAAO9xB,EAAKo+D,eAAc,IAClG75C,EAAYpgB,KAAOA,EAEnB,IAAM8mD,EAAK1iC,GAAMd,KAAKhC,eApCjBhoB,KAoCqCkmD,MAAO9yC,EAAE8S,eAAgB9S,EAAE+S,aAC/Dy6C,EAAK91C,GAAMd,KAAKhC,eArCjBhoB,KAqCqCkmD,MAAO9yC,EAAEgT,aAAchT,EAAEiT,WAEnES,EAAYX,YAAcqnC,EAC1B1mC,EAAYT,UAAYu6C,EAIJ,OAAhB95C,EACFs/B,EAAevlD,KAAKuS,GAEpB+yC,EAAOtlD,KAAKimB,GAEd,MAAOxgB,KAQX,OAFA+/C,EAAUI,kBAEHN,I,8BAGDn6B,M,gCAIEA,GACR,IAAM3oB,EAAOrD,KAAKqE,MAAMhB,KACxB,GAAKA,EAAK27D,iBAAV,CAEA,IAAMzrB,EAASlwC,EAAKqwC,eACpB,GAAKH,GAA4B,IAAlBA,EAAO9uC,OAAtB,CAEA,IAAIiiD,EAAiB1mD,KAAK2mD,yBAAyB36B,GACnD,GAA8B,IAA1B06B,EAAejiD,OAAnB,CAGApB,EAAK6gD,aAAe,KAEpB,IAAM0C,EAAWvjD,EAAKg2C,UAAUqN,EAAe,IAC/C,GAAIE,EAAU,CACZ,IAAM79B,EAAQ69B,EAASjD,cACvBiD,EAAS9C,iBAAiB/6B,S,sCAK5B,IAAMxlB,EAAOvD,KAAKkmD,MACDlmD,KAAKqE,MAAdhB,KAEH4/C,KAAK9+C,SAAQ,SAASiP,GAAI,IAAD,IAI5B,eAAIA,EAAEmwC,cAAN,iBAAI,EAAW,UAAf,aAAI,EAAesD,aAAnB,CAEA,IAAMga,EAAW,SAAC79D,EAAImlB,GACpB,IAAIhS,EAAOgS,EAuBX,OAtBiB,SAAXQ,EAAWpmB,GACf,GAAsB,UAAlBA,EAAK6lB,SAAsB,CAC7B,GAAIjS,EAAO5T,EAAKkC,QAAU,EAAG,MAAO,CAAElC,OAAM4T,QAE5CA,GAAc5T,EAAKkC,OAGrB,GAAsB,OAAlBlC,EAAK6lB,SAAmB,CAC1B,GAAIjS,EAAO,EAAI,EAAG,MAAO,CAAE5T,OAAM4T,QAEjCA,GAAc,EAGhB,IAAK,IAAItQ,EAAI,EAAGA,GAAKtD,EAAKgkB,WAAW9hB,OAAQoB,IAAK,CAChD,IAAMiR,EAAIvU,EAAKgkB,WAAW1gB,GAC1B,GAAIiR,EAAG,CACL,IAAMpT,EAAMilB,EAAS7R,GACrB,GAAIpT,EAAK,OAAOA,IAKfilB,CAAS3lB,IAGZwqD,EAAKqT,EAASt9D,EAAM6P,EAAE6S,OACtB26C,EAAKC,EAASt9D,EAAM6P,EAAEyD,KAKtBmP,EAAQvgB,SAASq7D,cACvB96C,EAAMW,SAAS6mC,EAAGjrD,KAAMirD,EAAGr3C,MAC3B6P,EAAMY,OAAOg6C,EAAGr+D,KAAMq+D,EAAGzqD,MAEzB4R,GAAgB/B,GAEhB5S,EAAEkU,OAAStB,EAEX,IAAM+C,EAAQ3V,EAAEuwC,cAChBvwC,EAAE0wC,iBAAiB/6B,S,2CAKrB/oB,KAAK8mD,kB,0CAIL9mD,KAAK8mD,gBAEL,IAAM7W,EAAMjwC,KAAKkmD,MACX72B,EAAWrvB,KAAKqE,MAAMknB,MAAM8D,SAC9B4gB,GAAOA,EAAIrsB,WAAayL,GAC1B4gB,EAAIrsB,UAAUm9C,OAAO,mBAAoB1xC,EAASsH,mB,+BAI5C,IAAD,OACCtzB,EAASrD,KAAKqE,MAAdhB,KAER,IAAKA,EAAK67D,OAAQ,OAAO,KAEzB,IAAMtoD,EAAMvT,EAAK40B,OAAOtyB,MAAM,MAAMoD,QAAO,SAACrF,EAAK8vC,EAAG3tC,GAGlD,OAFIA,GAAGnC,EAAI7C,KAAK,wBAAIuC,IAAKyC,KACzBnC,EAAI7C,KAAK,0BAAMgnB,UAAWsC,KAAOgqB,MAAOX,IACjC9vC,IACN,IAEH,OACE,kBAAC,GAAD,CAAWL,KAAMA,GACf,yBACE4sC,IAAK,SAAAA,GACH,EAAKiW,MAAQjW,EACb5sC,EAAK87D,OAAOlvB,IAEdpoB,UAAWsC,KAAOiG,MAAQ,YAC1B22B,cAAa1jD,EAAKwiD,QAClBoB,UAAWjnD,KAAKinD,UAAUjlD,KAAKhC,OAE9B4W,Q,GA5QiB0X,aAmRtB0yC,GAAUpyC,YAAO,QAAPA,CAAgBnE,YAASm1C,KACnCC,GAAmBjxC,YAAO,QAAPA,CAAgBnE,YAASq1C,KAElD//D,EAASu7C,OAAO,OAAQujB,GAAWmC,IACnCjhE,EAASw7C,cAAcsjB,I,2CCnhBvB,SAASoC,GAAYn6D,GACnB,OAAO,SAASgC,GACd,OAAO+pC,QAAM4H,UAAU5H,QAAMiM,MAAMh4C,EAAGgC,MAI1C,SAASo4D,GAAOC,EAAQ76D,GACtB,OAAO,SAASwC,GACd,OAAO+pC,QAAM2L,MAAM,CACjB4iB,WAAY,SAAAC,GACV,GAAIv4D,EAAI8X,MAAK,SAAAhK,GAAG,OAAIyqD,EAAGtgE,OAAS6V,KAC9B,OAAOuqD,EAAOE,EAAGtgE,MAEjB,MAAMS,MAAM8E,EAAM+6D,EAAGtgE,UAO/B,IAAMugE,GAAYJ,GAAOnhE,EAASkC,cAAe,uBAuDjD,IAGe,IAAEs/D,WAvDjB,SAAoBz4D,GAClB,OAAO+pC,QAAM4H,UAAU5H,QAAMiM,MAAMwiB,GAAUx4D,MAsDlB04D,eA/C7B,WACE,IAAM93C,EAAO,CACX,CACE03C,WAAY,SAAAC,GACV,IAAKA,EAAI,OAAOxuB,QAAM4uB,aAAQ/tD,GAC9B,GAAI3T,EAASE,KAAKg5C,SAASooB,EAAGtgE,MAC5B,OAAOhB,EAASkC,cAAco/D,EAAGtgE,MAEjC,MAAMS,MAAM,sBAAwB6/D,EAAGtgE,QAI7ChB,EAAS0+C,aAGLj3B,EAAU,GAAGte,OAAO2gB,MAAM,GAAIH,GAEpC,OAAOmpB,QAAM2L,MAAM30B,MAAM,KAAMrC,IA8BYk6C,SAnD7C,SAAkB54D,GAChB,OAAO+pC,QAAM4H,UAAU5H,QAAM8L,YAAY,WAAY71C,KAkDA64D,OA3BvD,SAAgBp/D,EAAMswC,GACpB,IAD2B,EACrB+uB,EAAKl/D,kBAAQH,GADQ,cAEbswC,GAFa,IAE3B,4BAAqB,GAAI+uB,IAAzB,QAAmC,OAAO,GAFf,8BAI3B,OAAO,GAuBsDC,sBApB/D,SAA+Bt/D,EAAM6G,GAEnC,IAAIm7B,EAAS8X,oBAAU95C,GAElB+E,MAAMC,QAAQ6B,KAAMA,EAAM,CAACA,IAEhC,IANwC,iBAOtC,IAAMtI,EAAO4B,kBAAQ6hC,GAAQzjC,KAE7B,GAAIsI,EAAIwX,MAAK,SAAA1Z,GAAC,OAAIA,IAAMpG,KAAO,MAAM,CAAN,EAAOyjC,GAEtCA,EAAS8X,oBAAU9X,IALdA,GAAQ,CAAC,IAAD,wCAQf,OAAO,MAM6Eu9B,UAzDpEb,GAAYK,IAyDmES,WAF9Ed,GADAC,GAAOnhE,EAASgC,QAAS,0BCtE/BigE,GAAc,SAAAvgE,GAAK,OAAIA,EAAMsS,OAAO,IAEpCkuD,GAAkB,kBAAQt6C,OAAOu6C,QAAUv6C,OAAOu6C,OAAO5sD,OAAU,OAASqS,OAAOw6C,kBAAoB,IAEvGC,GAAe,SAAC9gE,GAAuB,IAAf2W,EAAc,uDAAR,IACzC,GAAI3W,EAAOmD,QAAUwT,EAAK,OAAO3W,EACjC,IAAI4X,EAAO,EACPg+B,GAAQ51C,EAAOmD,OAAS,IAAMwT,EAAM,GAExC,OAAO3W,EAAOK,QAAO,SAACgF,EAAGd,GACvB,QAAIA,EAAIqT,KACRA,GAAQg+B,GACD,OAIEmrB,GAAiB,SAACpiD,GAAuB,IAAD,EAAdxM,EAAc,uDAAN,EACvCK,GAAQ,UAAAmM,EAAOxY,aAAP,eAAcm0C,YAAa,OACzC,OAAO9wB,GAAMzI,OAAO1O,cAAcG,EAAOL,IAW9B6uD,GAAmB,SAAApuC,GAC9B,OAAKquC,KAASC,cACVtuC,EAAcquC,KAASC,YAAYzhE,OAASmzB,EACzC,CAAC,QAAS,QAAS,OAAO+kB,SAASspB,KAASC,YAAYzhE,QAmBpD0hE,GAAoB,SAAAzjD,GAAI,OAAI,IAAIrW,KAAKqW,GAAM0jD,kBClD3CC,GAAW,SAACj8D,GAA8B,IAGjDq0C,EAHyB6nB,EAAuB,uDAAX,OAEnCC,EAAQn8D,EAAKf,MAAM,MAGzB,GAAkB,SAAdi9D,IAAyBC,EAAM,GAAG5pB,SAAS2pB,GAC7C,MAAM,IAAIphE,MAAM,CAAC,mCAAD,OAAoCohE,EAApC,uBAA6DC,EAAM,KAAM/gE,KAAzE,OAIlB,GAAkB,SAAd8gE,GAAwBC,EAAMp+D,OAAS,EAAG,CAC5C,IAAMq+D,EAAaD,EAAM,GAAGz4C,OAAO5hB,MAAM,aACzC,IAAKs6D,EAAWr+D,OAAQ,MAAM,IAAIjD,MAAM,uBACxC,GAAIshE,EAAW1lC,MAAK,SAAAl2B,GAAC,OAAIA,IAAM47D,EAAW,MAAK,CAC7C,IAAM51C,EAAO5lB,MAAMoX,KAAK,IAAIqkD,IAAID,IAC7Bp+D,IAAIiF,IACJjF,KAAI,SAAA8uC,GAAC,iBAAQA,EAAR,QACL1xC,KAAK,MACR,MAAM,IAAIN,MACR,CAAC,2CAAD,OAC6C0rB,GAD7C,yDAGEprB,KAHF,OAOJ,GADA8gE,EAAYE,EAAW,GACnBD,EAAM,GAAGl9D,MAAMi9D,GAAWn+D,SAAWo+D,EAAM,GAAGl9D,MAAMi9D,GAAWn+D,OACjE,MAAM,IAAIjD,MACR,CAAC,wCAAD,iBAEYqhE,EAAM,IAFlB,iBAGYA,EAAM,IAHlB,6BAIwBD,GAJxB,yDAME9gE,KANF,OAUN,IAAMkD,EAAK,IAAIg+D,OACb,CAAC,gBAAD,aAEQJ,EAFR,mBAGQA,EAHR,YAGqBA,EAHrB,sBAISA,EAJT,MAKE9gE,KAAK,KACP,KAEI6D,EAAQ,SAAAe,GAAI,OAAIA,EAAK0jB,OAAO5hB,MAAMxD,IAElCihB,EAAQg9C,YAAYxjD,MAG1Bs7B,EAAQp1C,EAAMk9D,EAAM,IACpB,IAAMK,EAAav9D,EAAMk9D,EAAM,IAI1B9nB,EAAMooB,OAAM,SAACrsD,EAAGjR,GAAJ,OAAUwZ,MAAMvI,KAAOuI,MAAM6jD,EAAWr9D,OAIvDk1C,EAAQA,EAAMr2C,KAAI,SAACiC,EAAGd,GAAJ,OAAUoC,OAAOpC,OAHnCg9D,EAAMvsD,QACNykC,EAAQA,EAAMr2C,KAAI,SAAAoS,GAAC,OAAIA,EAAE1R,kBAK3B,IAhEoD,EA8EhDo7B,EACA36B,EAfEU,EAAS,GAhEqC,cAiEnCw0C,GAjEmC,IAiEpD,gCAASj6C,EAAT,QAAwByF,EAAOzF,GAAQ,IAjEa,8BAmEpD,GAAIi6C,EAAMt2C,SAAWkB,EAAMk9D,EAAM,IAAIp+D,OACnC,MAAM,IAAIjD,MACR,CAAC,sDAAD,mBAEcu5C,EAAMj5C,KAAK,MAFzB,qBAGW+gE,EAAM,GAHjB,2BAIiBD,EAJjB,OAKE9gE,KAAK,OA1EyC,oBAgFnC+gE,GAhFmC,IAgFpD,2BAAwB,CAAC,IAAhB1uB,EAAe,QAEtB,GAAKA,EAAK/pB,OAEV,IADAoW,EAAM76B,EAAMwuC,GACPtuC,EAAI,EAAGA,EAAI26B,EAAI/7B,OAAQoB,IAAK,CAC/B,IAAM+Q,GAAO4pB,EAAI36B,GACjBU,EAAOw0C,EAAMl1C,IAAIhF,KAAKwe,MAAMzI,GAAO4pB,EAAI36B,GAAK+Q,KAtFI,8BA4FpD,OAFA8J,QAAQk9B,IAAR,oBAAyBqlB,YAAYxjD,MAAQwG,EAA7C,QAEO,CAAC1f,EAAQw0C,IAQLqoB,GAAiB,SAAA3hE,GAC5B,GAAIuG,EAASvG,IAAuB,MAAbA,EAAM,GAC3B,IACE,OAAO4D,KAAKC,MAAM7D,GAClB,MAAO2G,IAGX,OAAO,GClHIi7D,GAAe,CAI1BC,SAAQ,CAAC/hE,EAAW2zC,KACX,CACL3zC,YACA2zC,QACAv0B,MAAO,iBAOX4iD,WAAU,CAAChiE,EAAW2zC,EAAOzzC,KACpB,CACLF,YACA2zC,QACAzzC,QACAkf,MAAO,oBAOX6iD,YAAW,CAACjiE,EAAW2zC,EAAOzzC,KACrB,CACLF,YACA2zC,QACAzzC,QACAkf,MAAO,sBAOX8iD,eAAc,CAACliE,EAAW2zC,EAAOzzC,EAAO6zC,KAC/B,CACL/zC,YACA2zC,QACAzzC,QACA6zC,YACA30B,MAAO,wBAOX+iD,sBAAqB,CAACniE,EAAW2zC,EAAOzzC,EAAO6zC,KACtC,CACL/zC,YACA2zC,QACAzzC,QACA6zC,YACA30B,MAAO,iBAIXgjD,cAAchjD,IACL,CACLA,MAAO,eACPlf,MAAOwG,OAAO0Y,GAAO5M,OAAO,EAAG,KAC/BmhC,MAAOjtC,OAAO0Y,EAAMogB,MACpBx/B,UAAW,KAIfqiE,aAAajjD,IACJ,CACLA,MAAO,cACPlf,MAAOwG,OAAO0Y,GAAO5M,OAAO,EAAG,KAC/BmhC,MAAOjtC,OAAO0Y,EAAMogB,MACpBx/B,UAAW,KAIfsiE,aAAaljD,EAAOi1B,EAAKkuB,GAAmD,IAAtCxvB,EAAqC,uDAA3ByE,GAAShD,iBAEvD,OADAr1B,QAAQk9B,IAAI,MAAOj9B,EAAOA,EAAMogB,MACzB,CACLpgB,MAAO,cACPlf,MAAO6yC,EAAQ,CAAEqB,KAAMmuB,EAAanjD,MAAO1Y,OAAO0Y,GAAQi1B,QAC1DV,MAAO4uB,EACPviE,UAAW,MAyDXwiE,GAAkB,SAAC3/D,EAAOzD,GAAW,IACjCG,EAASH,EAAMqjE,WAAfljE,KAGR,OAAIA,IAASA,EAAKmjE,qBAAiCvwD,IAAftP,EAAMtD,KACjCuiE,GAAaC,SAAS3iE,EAAMG,KAAM,QAGpC,MAWHojE,GAAoB,SAACh8C,EAASvnB,EAAOwjE,GAAc,IAAD,EACnBxjE,EAAMqjE,WAAjCI,EAD8C,EAC9CA,OAAQC,EADsC,EACtCA,eAEhB,GAAID,QAA6B1wD,IAAnBwU,EAAQk8C,OACpB,OAAOf,GAAaC,SAAS3iE,EAAMG,KAAM,UAG3C,IAAKonB,EAAQk8C,OAAQ,OAAO,KAE5B,IATsD,EAShDrpB,EAAQ7yB,EAAQk8C,OAAOz+D,MAAM,KATmB,cAWrCo1C,GAXqC,yBAW7Cj6C,EAX6C,QAa9CwjE,EAAgBH,EAASvjD,MAAK,SAAAvd,GAAI,OAAIA,EAAKvC,OAASA,KAE1D,YAAsB4S,IAAlB4wD,EACI,CAAN,EAAOjB,GAAaG,YAAY7iE,EAAMG,KAAM,SAAUA,IAGpDujE,GAAkBA,EAAeE,SAASD,EAAcjwC,SAAS5vB,OAC7D,CAAN,EAAO4+D,GAAaI,eAAe9iE,EAAMG,KAAM,SAAUwjE,EAAcjwC,QAASgwC,SADlF,GARF,2BAAwB,CAAC,IAAD,yCAX8B,8BAwBtD,OAAO,MASHG,GAAqB,SAACpgE,EAAOzD,EAAO8jE,GAIxC,IAHA,IAAMl+D,EAAS,GAGf,MAFmBlF,OAAOQ,KAAKlB,EAAMqjE,YAErC,eAA4B,CAAvB,IAAI5gE,EAAG,KACV,GAAKgB,EAAM4wB,eAAe5xB,KACtBqhE,EAAaxrB,SAAS71C,GAA1B,CACA,IAAM3B,EAAQ2C,EAAMhB,GACdshE,EAAgB/jE,EAAMqjE,WAAW5gE,EAAIgC,eAGR,IAFPs/D,EAAcH,SAAS9iE,EAAOijE,GAElCjgE,QAExB8B,EAAO1F,KAAKwiE,GAAaK,sBAAsB/iE,EAAMG,KAAMsC,EAAK3B,EAAOijE,KAGzE,OAAOn+D,GAWIo+D,GAAb,sGAKkBphE,GACd,IADoB,EACd4gE,EA9GU,SAAdS,EAAe/9D,GAAyB,IAAD,EAAlB09B,EAAkB,uDAAT,KAC5Bh+B,EAAS,GAD4B,cAGzBM,EAAKlD,UAHoB,IAG3C,2BAAiC,CAAC,IAAD,EAAxBS,EAAwB,QAGzBygE,EAAS,2BAAQzgE,GAAR,IAAemgC,OAAM,iBAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAQ3hC,UAAV,QAAgB,cAC7CiiE,EAAUlhE,SAEjB4C,EAAO1F,KAAKgkE,GAGRzgE,EAAMT,oBAAoB2D,OAC5Bf,EAAO1F,KAAP,MAAA0F,EAAM,aAASq+D,EAAYxgE,EAAOA,MAbK,8BAiB3C,OAAOmC,EA6FYq+D,CAAYrhE,GACvBuhE,EAAmB,CAAC,KAAM,WAAY,OAAQ,SAAU,kBACxDC,EAAmB,GAHL,cAKFZ,GALE,IAKpB,2BAA4B,CAAC,IAApB//D,EAAmB,QACpBzD,EAAQZ,EAASkC,cAAcmC,EAAMrD,MAErCikE,EAAiBjB,GAAgB3/D,EAAOzD,GACvB,OAAnBqkE,GAAyBD,EAAiBlkE,KAAKmkE,GAGnD,IAAMC,EAAmBf,GAAkB9/D,EAAOzD,EAAOwjE,GAChC,OAArBc,GAA2BF,EAAiBlkE,KAAKokE,GAErDF,EAAiBlkE,KAAjB,MAAAkkE,EAAgB,aAASP,GAAmBpgE,EAAOzD,EAAOmkE,MAfxC,8BAkBpB,OAAIC,EAAiBtgE,OACZsgE,EAAiBrgE,KAAI,SAAAic,GAAK,kCAC5BA,GAD4B,IAE/B20B,WA9BiBv0C,EA8BW4f,EAAM20B,UA7BjCv0C,EA3HkB,SAACA,GAA+B,IAAzBmkE,IAAwB,yDACpDryC,EAAc9xB,EACfokE,WACA38D,MAAM,mBACN1G,KAAK,IACL6D,MAAM,KAGT,IAAqB,IAAjBu/D,EAAwB,CAC1B,IAAMnrC,EAAQlH,EAAYjrB,QAAQ,SAC9BmyB,GAAS,GAAGlH,EAAYkuB,OAAOhnB,EAAO,GAG5C,OAAOlH,EA8GOuyC,CAAmBrkE,GAAM,GAAS,QADzB,IAAAA,KAkCd,OA9BX,KC1LeskE,GArCcxyB,QAC1BlyC,MAAM,IACNR,OAAM,SAAAswB,GAAI,MAAK,CACd,0BACE,MAAO,4BAGT,uBACE,MAAO,QAGVsT,SAAQ,SAAAtT,GAAI,MAAK,CAChB2vB,cACEn2C,WAAWwmB,EAAK60C,gBAGlB1kB,gBACEnwB,EAAK80C,eAGPA,cAAe,IAAD,EACNniE,EAAMqtB,EAAK+0C,oBACXx+D,EAAM,CAAEwoB,KAAI,UAAEwK,kBAAQvJ,GAAMjB,YAAhB,aAAE,EAAoB5sB,GAAItB,OAAQmvB,EAAKg1C,kBAEzDC,aAAaC,QAAQviE,EAAKiC,KAAKsrB,UAAU3pB,KAG3Cs+D,gBAAiB,IAAD,EACRM,EAASvgE,KAAKC,MAAMogE,aAAaG,QAAQp1C,EAAK+0C,sBAAwB,MAC5E,GAAKI,GAAUA,EAAOp2C,QAAP,UAAgBwK,kBAAQvJ,GAAMjB,YAA9B,aAAgB,EAAoB5sB,IAEnD,IADA,IAAMtB,EAASskE,EAAOtkE,QAAU,GAChC,MAAgBD,OAAOQ,KAAKP,GAA5B,eAAqC,CAAhC,IAAI8B,EAAG,KACVqtB,EAAKrtB,GAAO9B,EAAO8B,SCgBrBm3C,GAAW1H,QAAMlyC,MAAM,CAC3BmlE,OAAQ,GACRC,MAAO,GACPC,cAAenzB,QAAME,SAASF,QAAM6H,OAAQ,OAE5CurB,cAAepzB,QAAME,SAASF,QAAM8L,YAAYt9C,OAAOC,OAxB3C,CACZ4kE,UAAW,YACXC,WAAY,aACZC,eAAgB,iBAChBC,YAAa,cACbC,cAAe,gBACfC,kBAAmB,oBACnBC,gBAAiB,kBACjBC,oBAAqB,sBACrBC,YAAa,cACbC,eAAgB,iBAChBC,eAAgB,iBAChBC,aAAc,eACdC,YAAa,cACbZ,UAAW,YACXa,eAAgB,iBAChBC,gBAAiB,qBAQsD,aAEvExxD,OAAQq9B,QAAME,SAASF,QAAM6H,OAAQ,OAErCqB,YAAalJ,QAAME,SAASF,QAAM6H,OAAQ,KAC1CoB,YAAajJ,QAAME,SAASF,QAAM6H,OAAQ,WAE1CusB,OAAQp0B,QAAM6H,SAGVE,GAAQ/H,QACXlyC,MAAM,eAAgB,CACrBiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCnB,KAAM,UACN4C,SAAUujE,GAAM3F,WAAW,CAAC,UAAW,WAExCphE,OAAM,SAAAswB,GAAI,MAAK,CACd,aACE,OAAOy2C,GAAMrF,sBAAsBpxC,EAAM,oBAG3C,iBACE,IAAIw2C,EAASx2C,EAAKw2C,OAKlB,MAJI,QAAQzoD,KAAKyoD,KACfA,EAASx2C,EAAK8T,OAAO4iC,QAAQF,IAAWA,GAE1CA,EAASA,EAAO7hE,mBAKhBgiE,GAAev0B,QAAMuI,QAAQ,eAAgBR,GAAOL,GAAU3H,IAE9Dy0B,G,4MACJp3B,IAAMhsC,IAAMwrC,Y,EAUZ63B,OAAS,CAAC,EAAG,G,EAGbC,kBAAmB,E,EAEnBC,gBAAkB,K,EAGlBC,SAAW,G,EAOXjyD,QAAU,EAAKnR,MAAMhB,KAAKmS,O,EAE1B+a,MAAQ,CACNjb,MAAO,K,EAGToyD,YAAc,WACZ,IAAMpQ,EAAc,EAAKrnB,IAAIj3B,QAAQs+C,YACrC52C,QAAQk9B,IAAI,QAAS0Z,GAFH,IAGV17B,EAAW,EAAKv3B,MAAMhB,KAAKkhC,OAA3B3I,OACR,GAAI07B,EAAa,CACf,IAAMhiD,EAAQgiD,EAAc17B,EAAOzlB,KAAOylB,EAAOxlB,MACjD,EAAKsa,SAAS,CAAEpb,Y,EAIpBqyD,UAAY,SAACthB,EAAWuhB,GAAe,IAAD,EACfvhB,EAAU3hD,KAAI,SAAAoS,GAAC,OAAK,EAAK+wD,MAAM/wD,GAAG,MADnB,oBAC7BmP,EAD6B,KACtBpP,EADsB,KAEpC,MAAO,CAAEoP,QAAOpP,IAAK+wD,EAAY3hD,EAAQpP,I,EAG3CixD,wBAA0B,SAAAllE,GAAE,OAAI,WAC9B,IAAI0/D,GAAiB,QAAWC,KAASlc,UAAzC,CADoC,IAE5BF,EAAW,EAAK9hD,MAAhB8hD,OACA5hB,EAAW,EAAKlgC,MAAMhB,KAAtBkhC,OACF1+B,EAAIsgD,EAAO4hB,WAAU,SAAA/hD,GAAK,OAAIA,EAAMpjB,KAAOA,KACjD,GAAIiD,EAAI,EACN6a,QAAQC,MAAR,iBAAwB/d,EAAxB,uBADF,CAIA,IAAMwQ,EAAI+yC,EAAOtgD,GACXmiE,EAAQ,EAAKL,UAAUpF,KAASlc,UAAWjzC,EAAE60D,SAE/BD,EAAM/hD,QAAU7S,EAAE6S,OAAS+hD,EAAMnxD,MAAQzD,EAAEyD,KAE7D0tB,EAAOzY,WAAWo8C,gBAClB90D,EAAE0qC,iBAEFvZ,EAAO4jC,cAAcH,EAAOniE,O,EAOhCuiE,gBAAkB,WAAO,IAAD,EAIlB,EAAK/jE,MAFP8hD,EAFoB,EAEpBA,OACQ5hB,EAHY,EAGpBlhC,KAAQkhC,OAEJmP,EAAenP,EAAOmP,eACtB20B,EAAiB30B,GAAgBA,EAAajvC,OAEpD,IAAI69D,GAAiB,OAArB,CAEA,IAAKC,KAASlc,UAAW,CACvB,IAAMv+C,EAAIy6D,KAASA,KAASC,YAAY9wC,QAAQ,GAC1C42C,EAAY,EAAKA,UAGnBA,GAAal0D,KAAK4G,IAAIstD,EAAUxgE,EAAIA,GAAK,GAC3CiiB,aAAa,EAAKw+C,gBAClBhkC,EAAO4jC,cAAcG,EAAUtiD,MAAOmgC,EAAO1hD,OAAQ6jE,EAAU/0B,QAC/D,EAAK+0B,UAAY,KACjB,EAAKC,eAAiB,MACbF,IAET,EAAKC,UAAY,CACftiD,MAAO,EAAK2hD,UAAU,CAAC7/D,EAAGA,IAC1ByrC,OAAQG,EAAahvC,KAAI,SAAA8uC,GAAC,OAAIlxC,EAAUkxC,MACxC1rC,KAGF,EAAKygE,eAAiBt+D,YAAW,WAC/B,EAAKq+D,UAAY,KACjB,EAAKC,eAAiB,OACrB,MAKL,IAAM9mE,EAAQ,EAAKqG,EAAE0gE,OAAO1gE,GACtB1H,EAAU+lD,EAAOxkD,QAAO,SAAAyR,GAAC,OAAIA,EAAE6S,OAASxkB,GAAS2R,EAAEyD,KAAOpV,KAC1DgnE,EAAYroE,EAAQ2nE,WAAU,SAAA30D,GAAC,OAAIA,EAAE2X,YAAY,EACjD9K,EAAS7f,EAAQqoE,GAIvB,OAHAlkC,EAAOzY,WAAWo8C,qBAClBjoD,GAAUA,EAAO69B,iBAInB,IAAM79B,EAAS,EAAK0nD,UAAUpF,KAASlc,WACvC,EAAKqiB,aAAaC,KAAK,EAAKC,SAAU,MACjCP,GACL9jC,EAAO8U,UAAUp5B,EAAOgG,MAAOhG,EAAOpJ,O,EA+GxCgyD,cAAgB,SAAAC,GAAY,IAClBxzD,EAAU,EAAKib,MAAfjb,MACR,KAAIwzD,EAAU,GAAKA,EAAUxzD,GAA7B,CAFyB,MAGF,EAAKuyD,MAAMiB,GAHT,oBAGlBC,EAHkB,KAGXC,EAHW,KAIzB,EAAKC,QAAQtzB,KAAK,YAAlB,oBAA4C,EAAK7tC,EAAEihE,GAAS,GAA5D,QACA,EAAKG,YAAYxiE,KAAK,EAAKoxB,WAAWixC,IACtC,EAAKI,aAAaziE,KAAK,EAAK0iE,YAAYJ,GAAS,IAAM,EAAK3kE,MAAMhB,KAAK0iE,OACvE,EAAKsD,aAAa1zB,KAAK,KAAM,EAAKz/B,EAAE8yD,IACpC,EAAKC,QAAQtzB,KAAK,cAAemzB,EAAUxzD,EAAQ,IAAM,MAAQ,W,EAGnEg0D,cAAgB,WACd,IAAMT,EAAgB,EAAKA,cAE3B,EAAKI,QAAU,EAAKx6C,KAAK86C,OAAO,KAAK9hE,MAAM,iBAAkB,QAC7D,EAAK0hE,aAAe,EAAKF,QACtBM,OAAO,QACP5zB,KAAK,YAAa,IAClBA,KAAK,OAAQ,QAChB,EAAKuzB,YAAc,EAAKD,QACrBM,OAAO,QACP5zB,KAAK,IAAK,EAAKngC,OAAS,GACxBmgC,KAAK,YAAa,IAClBA,KAAK,OAAQ,QAChB,EAAK0zB,aAAe,EAAKJ,QACtBM,OAAO,UACP5zB,KAAK,KAAM,GACXA,KAAK,IAAK,GACVA,KAAK,SAAU,OACfA,KAAK,OAAQ,QAChB,EAAKszB,QACFM,OAAO,QACP5zB,KAAK,KAAM,EAAKngC,QAChBmgC,KAAK,KAAM,GACXA,KAAK,SAAU,QAMlB,EAAKlnB,KAAKqqB,GAAG,aAJb,WACE+vB,EAActG,KAASviE,MAAM,Q,EAMjCwpE,YAAc,WAAO,IACXnmE,EAAS,EAAKgB,MAAdhB,KACAiS,EAAU,EAAKib,MAAfjb,MACAsmB,EAAWv4B,EAAKkhC,OAAhB3I,OACF6tC,EAAW,EAAKj0D,OAASomB,EAAOoQ,IAChC11B,GAASslB,EAAOoQ,IACZ,EAAKvd,KACZi7C,UAAU,UACVvkE,KAAK,CAAC,IACNwkE,QACAJ,OAAO,KACP5zB,KAAK,QAAS,SACfA,KAAK,YAAP,sBAAmCr/B,EAAnC,MACGyxC,KACCwa,KACc,EAAKz6D,GAChB8hE,MAAMt0D,EAAQ,IACdm0D,SAASA,EAAW,IAExB1hB,MAAK,SAAA10C,GAAC,OAAIA,EAAEq2D,UAAU,WAAW5mD,YAGjCilC,MAAK,SAAA10C,GAAC,OACLA,EACGq2D,UAAU,SACV/zB,KAAK,iBAAkB,IACvB+zB,UAAU,WACVvkE,KAAK,CAAC,IACNwkE,QACAJ,OAAO,QACP5zB,KAAK,QAAS,UACdA,KAAK,SAAU,gBACfA,KAAK,KAAM8zB,EAAW,IACtB9zB,KAAK,KAAM8zB,EAAW7tC,EAAO6oB,Y,EAItColB,YAAc,WACZ,EAAKp7C,KACF86C,OAAO,KACPxhB,KACCwa,KACY,EAAKrsD,GACd4zD,WAAW,EAAKV,aAChBK,SAAS,IAEb1hB,MAAK,SAAA10C,GAAC,OAAIA,EAAE02D,OAAO,WAAWjnD,YAC9BilC,MAAK,SAAA10C,GAAC,OACLA,EACGk2D,OAAO,QACP5zB,KAAK,QAAS,SACdA,KAAK,YAAa,GAClBA,KAAK,KAAM,GACXA,KAAK,IAAK,GACVA,KAAK,OAAQ,gBACbA,KAAK,cAAe,OACpBjvC,KAAK,EAAKrC,MAAMhB,KAAK0iE,W,4DA/MhB5f,GAAwB,IAAhB6jB,EAAe,wDAC3B10D,EAAUtV,KAAKuwB,MAAfjb,MACFE,EAASxV,KAAKwV,OACZnS,EAASrD,KAAKqE,MAAdhB,KACFikE,EAAS,CACb,CAAC,EAAG,GACJ,CAAChyD,EAAOE,IAEJy0D,EAAe1H,OAAY+E,OAAOA,GAClCx/D,EAAI9H,KAAK8H,EAGXkiE,GACFhqE,KAAKkqE,SAASR,UAAU,UAAU5mD,SAGpC,IAAMqnD,EAAiBnqE,KAAKkqE,SAASR,UAAU,UAAUvkE,KAAKghD,GAAQ,SAAA/yC,GAAC,OAAIA,EAAExQ,MACvEwnE,EAAgBpqE,KAAK8nE,wBACrBe,EAAgB7oE,KAAK6oE,cACrBlB,EAAY3nE,KAAK2nE,UAGvBwC,EACGR,QACAJ,OAAO,KACP5zB,KAAK,QAAS,SACdA,KAAK,MAAM,SAAAviC,GAAC,sBAAa/P,EAAKT,GAAlB,YAAwBwQ,EAAExQ,OACtCynE,MAAK,SAASj3D,GACb,IAAM29C,EAAQwR,KAAUviE,MAClBypD,EAAQ8Y,OAAY+E,OAAOA,GACjC7d,EAAM3Q,GAAG,SAAS,WAChB,IAAIwpB,GAAiB,SAArB,CACA,IAAMgI,EAAU3C,EAAUpF,KAASlc,UAAWjzC,EAAE60D,SAChDgC,EAAatB,KAAK5X,EAAO,CAACjpD,EAAEwiE,EAAQrkD,OAAQne,EAAEwiE,EAAQzzD,KAAmB,GAAZzD,EAAE60D,UAC/DY,EAActG,KAASviE,MAAM,QAE/BypD,EAAM3Q,GAAG,MAAOsxB,EAAch3D,EAAExQ,KAChC6mD,EAAMsH,GAEF39C,EAAE60D,QAEJlX,EAAM2Y,UAAU,WAAWjiE,MAAM,iBAAkB,QAInDspD,EAAM2Y,UAAU,cAAcjiE,MAAM,iBAAkB,QAGxDspD,EAAM2Y,UAAU,YAAYjiE,MAAM,iBAAkB,aAEhCiM,IAAhBN,EAAEm3D,WAA4Bn3D,EAAEm3D,UAAU1jB,cAC5CzzC,EAAEm3D,UAAYxZ,EAAMgZ,OAAO,cAAcxnE,WAG5CioE,MAAML,GACNE,MAAK,SAASj3D,EAAGvN,GAChB,IAAMkrD,EAAQwR,KAAUviE,MAClBqmD,EAAY0K,EAAM2Y,UAAU,cAC5B51D,EAAQuuD,GAAejvD,GAC7B,GAAIA,EAAE60D,QAAS,CACb5hB,EACG1Q,KAAK,iBAAkBviC,EAAE2X,UAAY3X,EAAEi+B,YAAc,GAAM,IAC3DsE,KAAK,eAAgBviC,EAAE2X,UAAY3X,EAAEi+B,YAAc,EAAI,IACvDsE,KAAK,eAAgB,GACrBA,KAAK,SAAU7hC,GACf6hC,KAAK,OAAQ7hC,GAChB,IAAM22D,EAAK3iE,EAAEsL,EAAE6S,OACfgkD,EAAatB,KAAK5X,EAAO,CAAC0Z,EAAIA,EAAK,SAEnCpkB,EACG1Q,KAAK,iBAAkBviC,EAAE2X,UAAY3X,EAAEi+B,YAAc,GAAM,IAC3DsE,KAAK,eAAgBviC,EAAE2X,UAAY3X,EAAEi+B,YAAc,GAAM,IACzDsE,KAAK,SAAU7hC,GACf6hC,KAAK,OAAQ7hC,GAChBm2D,EAAatB,KAAK5X,EAAO,CAAC39C,EAAE6S,MAAO7S,EAAEyD,KAAKnS,IAAIoD,OAGpDqiE,EAAeO,OAAO5nD,W,2CAIlB9iB,KAAK4oE,SACP5oE,KAAK4oE,SAASc,UAAU,KAAK5mD,SAE7B9iB,KAAK4oE,SAAW5oE,KAAKyuB,KAAK86C,OAAO,KAAK5zB,KAAK,QAAS,aAGtD,IAAMkzB,EAAgB7oE,KAAK6oE,cACrBz4C,EAAQpwB,KAAK4oE,SACbjB,EAAY3nE,KAAK2nE,UACjB7/D,EAAI9H,KAAK8H,EACT2hD,EAASzpD,KAAK0oE,aAAenG,OAEhC+E,OAAO,CACN,CAAC,EAAG,GACJ,CAACtnE,KAAKuwB,MAAMjb,MAAOtV,KAAKwV,UAEzBsjC,GAAG,SAAS,WACX,IAAIwpB,GAAiB,UAAaC,KAASlc,UAA3C,CACA,IAAMikB,EAAU3C,EAAUpF,KAASlc,WACnCoD,EAAMkf,KAAKv4C,EAAO,CAACtoB,EAAEwiE,EAAQrkD,OAAQne,EAAEwiE,EAAQzzD,OAC/CgyD,EAActG,KAASviE,MAAM,QAE9B84C,GAAG,MAAO94C,KAAKooE,iBAElBpoE,KAAK4oE,SAAS7gB,KAAK/nD,KAAK0oE,gB,iCA0Gd,IAAD,SACoB1oE,KAAKqE,MAA1Bc,EADC,EACDA,KAAM9B,EADL,EACKA,KACRsnE,EAAQxlE,EAFL,EACW6Z,MAEd4rD,EAAMvnE,EAAKkhC,OAAOsmC,uBAuBxB7qE,KAAKyuB,KAAKqqB,GAAG,SAtBE,WACb,IAAM1wC,EAAIm6D,KACV,GAAKn6D,EAAEyjD,SAAYzjD,EAAE4rD,QAArB,CACA5rD,EAAEykB,iBAHiB,IAIX7G,EAAU,EAAK3hB,MAAf2hB,MACF8kD,EAAU9kD,EAAMthB,KAAI,SAAA0O,GAAC,OAAImvD,KAAeoI,EAAOv3D,MALlC,EAOPmvD,KAASA,KAAS7wC,QAAvB5pB,EAPY,qBAQbwN,EAAQ,EAAKxN,EAAEke,QAAQ,GAEvB8gB,EAAQ1yB,KAAK+D,IAAI,IAAM/P,EAAEkvC,OAAS,EAAK9hC,QAE7C,KAAIs1D,EAAQ,GAAKA,EAAQ,GANI,IAMyBhkC,EAAQ,GAA9D,CAEA,IAAMxwB,EAAQ0P,EAAM,GAAKA,EAAM,GACzB04C,EAAS,CACbtqD,KAAK6D,KAAK,EAAKqvD,OAAO,IAAKthD,EAAM,GAAM1P,EAAQwwB,EAAQh/B,EAAKwN,GAC5DlB,KAAK+D,KAAK,EAAKmvD,OAAO,GAAIthD,EAAM,GAAK1P,EAAQwwB,GAAS,EAAIh/B,EAAIwN,KAEhEs1D,EAAIlM,EAAQ53B,U,0CAMK,IAAD,OAClB,GAAK9mC,KAAKiwC,IAAIj3B,QAAd,CADkB,MAG0BhZ,KAAKqE,MAAzCc,EAHU,EAGVA,KAAM9B,EAHI,EAGJA,KAAM2iB,EAHF,EAGEA,MAAOhH,EAHT,EAGSA,KAAMioD,EAHf,EAGeA,OAHf,EAIkC5jE,EAAKkhC,OAAjDwmC,EAJU,EAIVA,OAAQjzC,EAJE,EAIFA,WAAY8D,EAJV,EAIUA,OAAQovC,EAJlB,EAIkBA,YAC9Bx1D,EAASxV,KAAKwV,OACpBxV,KAAKynE,SAAWuD,EAChB,IAAMC,EAAU,eAAW5nE,EAAKT,IAE1B+nE,EAAQxlE,EAAK6Z,GACb1d,EAAS6D,EAAK8hE,GACZiE,EAAWlrE,KAAKqE,MAAhB6mE,OAER,GAAK5pE,EAAL,CAWAtB,KAAKunE,iBAAmB2D,EAAOzmE,OAASw9D,KAAoBjiE,KAAKynE,SAC7DznE,KAAKunE,mBACPvnE,KAAKwnE,gBAAkBpF,GAAa8I,EAAQjJ,KAAoBjiE,KAAKynE,WAEvEznE,KAAKmrE,OAAS9nE,EAAKkhC,OAAO6mC,WAE1B,IAAMhC,EAAc7G,KAAUl/D,EAAK2iE,eACnChmE,KAAKopE,YAAcA,EACnBppE,KAAK83B,WAAaA,EAElB,IAAMw/B,EAAct3D,KAAKiwC,IAAIj3B,QAAQs+C,YAC/BhiD,EAAQgiD,EAAcA,EAAc17B,EAAOzlB,KAAOylB,EAAOxlB,MAAQpW,KAAKuwB,MAAMjb,MAGlFtV,KAAKuwB,MAAMjb,MAAQA,EAEnBtV,KAAKsnE,OAAS/E,KAAUoI,GAExB,IACM7iE,GADQijE,EAASxI,OAAiBA,QAGrC8I,OAAOrrE,KAAKsnE,QACZthD,MAAM,CAAC,EAAG1Q,IAEPY,EAAIqsD,OAEP8I,OAAO,CAAC9I,KAAOjhE,GAASihE,KAAOjhE,KAC/B0kB,MAAM,CAACxQ,EAASomB,EAAO3jB,IAAK2jB,EAAOzjB,MAStCnY,KAAK8H,EAAIA,EACT9H,KAAKkW,EAAIA,EACTlW,KAAKsrE,MAAQxjE,EAAE6mB,OACf3uB,KAAK6nE,MAVS,SAAAiB,GACZ,IAAMC,EAAQjhE,EAAE0gE,OAAOM,GACnBjjE,EAAI08D,KAAeoI,EAAO5B,GAE9B,OADI4B,EAAM9kE,GAAKkjE,EAAQA,EAAQ4B,EAAM9kE,EAAI,IAAIA,IACtC,CAAC8kE,EAAM9kE,GAAIvE,EAAOuE,KAQ3B7F,KAAKm0C,KAAOouB,OAETrsD,GAAE,SAAAiD,GAAC,OAAI,EAAKjD,EAAEiD,EAAE8tD,OAChBn/D,GAAE,SAAAqR,GAAC,OAAI,EAAKmyD,MAAMnyD,EAAE6F,OAEvBhf,KAAKurE,UAAYhJ,OAEdiJ,SAAQ,SAAAryD,GAAC,OAAIA,EAAE6F,IAASgH,EAAM,IAAM7M,EAAE6F,IAASgH,EAAM,MACrD9P,GAAE,SAAAiD,GAAC,OAAI,EAAKjD,EAAEiD,EAAE8tD,OAChBn/D,GAAE,SAAAqR,GAAC,OAAI,EAAKrR,EAAEqR,EAAE6F,OAGnB,IAAMyP,EAAO8zC,KACHviE,KAAKiwC,IAAIj3B,SAChBuwD,OAAO,OACP5zB,KAAK,UAAW,CAAC,EAAG,EAAGrgC,EAAQsmB,EAAOzlB,KAAOylB,EAAOxlB,MAAOZ,EAASomB,EAAOoQ,IAAMpQ,EAAO6oB,SACxFh9C,MAAM,UAAW,SACjB8hE,OAAO,KACP5zB,KAAK,YAAa,aAAe/Z,EAAOzlB,KAAO,IAAMylB,EAAOoQ,IAAM,KAErEvd,EACG86C,OAAO,YACP5zB,KAAK,KAAMs1B,GACX1B,OAAO,QACP5zB,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,SAAUngC,GACfmgC,KAAK,QAASrgC,GAGjBmZ,EACG86C,OAAO,QACP7iE,KAAKrD,EAAKyiE,QACVnwB,KAAK,KAAM,OACXA,KAAK,KAAM,OACXA,KAAK,cAAe,QACpBA,KAAK,YAAa,SAClBA,KAAK,KAAM,OACXA,KAAK,UAAW,IAEnB31C,KAAKyuB,KAAOA,EAEZ,IAAMg9C,EAAgBh9C,EAAK86C,OAAO,KAAK5zB,KAAK,YAAtB,gBAA4Cs1B,EAA5C,OACtBjrE,KAAK0wC,KAAO+6B,EACTlC,OAAO,QACPmC,MAAM1rE,KAAKunE,iBAAmBvnE,KAAKwnE,gBAAkB0D,GACrDv1B,KAAK,IAAK31C,KAAKm0C,MAElBn0C,KAAK2rE,MAAQF,EAAclC,OAAO,QAElCkC,EACG/B,UAAU,QACV/zB,KAAK,gBAAiB,sBACtBA,KAAK,OAAQ,QACbA,KAAK,eAAgBtyC,EAAK04C,aAAe,GACzCpG,KAAK,SAAUtyC,EAAKy4C,aAAe,aAEtC97C,KAAKspE,gBACLtpE,KAAK6pE,cACL7pE,KAAK4rE,oBAAoB5lD,GACzBhmB,KAAK6rE,qBACL7rE,KAAK8rE,WAGL9rE,KAAKkqE,SAAWz7C,EACb86C,OAAO,KACP5zB,KAAK,QAAS,WACdA,KAAK,YAHQ,gBAGcs1B,EAHd,OAKhBjrE,KAAK+rE,cAAc/rE,KAAKqE,MAAM8hD,QAE9Bx+B,OAAO8iB,iBAAiB,SAAUzqC,KAAK0nE,iBA3HvC,CACE,IAAM3sB,EAAQ15C,OAAOQ,KAAKsD,GAAMxD,QAAO,SAAAb,GAAI,OAAIA,IAASke,KAClDs1B,EAAO,WAAQ2yB,EAAR,mDAA0DlsB,EAAMj5C,KAC3E,MADW,+CAGbk4B,kBAAQ32B,GAAM4oB,gBAAgB+/C,UAAU,CAAC3I,GAAaO,aAAatvB,S,6CA0HrE3sB,OAAOijB,oBAAoB,SAAU5qC,KAAK0nE,e,0CAGxB1hD,GAClBhmB,KAAK8H,EAAEujE,OAAOrlD,GACd,IAAMhN,EAAUhZ,KAAK8H,EAAEke,QACjBimD,EAAMjsE,KAAKsrE,MAAMD,SAAS3mE,IAAI1E,KAAK8H,GACnCg/B,GAASmlC,EAAI,GAAKA,EAAI,KAAOjzD,EAAQ,GAAKA,EAAQ,IAClD7C,EAAO/B,KAAK6D,IAAI,EAAG7D,KAAK0K,MAAO9e,KAAKynE,UAAYzuD,EAAQ,GAAKizD,EAAI,KAAQA,EAAI,GAAKA,EAAI,MACtF71D,EAAQhC,KAAK6D,IAAI,EAAG7D,KAAK0K,MAAO9e,KAAKynE,UAAYzuD,EAAQ,GAAKizD,EAAI,KAAQA,EAAI,GAAKA,EAAI,MACvFtuD,EAAYsuD,EAAI,GAAKjzD,EAAQ,GACnC0H,QAAQk9B,IAAI,YAAa,CACvBznC,OACAC,QACA81D,QAAQ,aAAKlmD,GACbmmD,QAASnsE,KAAKsrE,MAAMD,SACpBe,OAAQpzD,EACRizD,MACAnlC,QACAnpB,YACA0uD,IAAKrsE,KAAKunE,mBAIZ,IAAM+E,EAAmBxlC,EAAQ9mC,KAAKynE,WAAaznE,KAAKunE,iBACpDvnE,KAAKwnE,iBAAmB8E,IAC1BtsE,KAAKunE,kBAAoBvnE,KAAKunE,iBAC1BvnE,KAAKunE,kBACPvnE,KAAK0wC,KAAKg7B,MAAM1rE,KAAKwnE,iBACrBxnE,KAAK0wC,KAAKiF,KAAK,IAAK31C,KAAKm0C,OAEzBn0C,KAAK0wC,KAAKiF,KAAK,YAAf,KAIA31C,KAAKunE,kBACPvnE,KAAK0wC,KAAKiF,KAAK,YAAf,oBAAyCh4B,EAAzC,qBAA+DmpB,EAA/D,QACA9mC,KAAK2rE,MAAMh2B,KAAK,IAAK,KAEjB31C,KAAKwnE,iBACPxnE,KAAK0wC,KAAKg7B,MAAM1rE,KAAKmrE,OAAOh1D,IAC5BnW,KAAK0wC,KAAKiF,KAAK,IAAK31C,KAAKurE,WACrBp1D,IAASC,GACXpW,KAAK2rE,MAAMD,MAAM1rE,KAAKmrE,OAAO/0D,IAC7BpW,KAAK2rE,MAAMh2B,KAAK,IAAK31C,KAAKurE,YAE1BvrE,KAAK2rE,MAAMh2B,KAAK,IAAK,MAGvB31C,KAAK0wC,KAAKiF,KAAK,IAAK31C,KAAKurE,WACzBvrE,KAAK2rE,MAAMh2B,KAAK,IAAK,KAIzB31C,KAAKwpE,gB,yCAGY+C,EAAWC,GAAY,IAChCxmD,EAAUhmB,KAAKqE,MAAf2hB,MACA1Q,EAAUtV,KAAKuwB,MAAfjb,MACJm3D,GAAe,EAEnB,GAAIn3D,IAAUk3D,EAAUl3D,MAAO,CAAC,IAAD,EACLtV,KAAKqE,MAArBhB,EADqB,EACrBA,KAAM2iB,EADe,EACfA,MACN4V,EAAWv4B,EAAKkhC,OAAhB3I,OACFpmB,EAASxV,KAAKwV,OACd+M,EAAMggD,KAAUviE,KAAKiwC,IAAIj3B,SAAS0wD,UAAU,OAElDnnD,EAAIozB,KAAK,UAAW,CAAC,EAAG,EAAGrgC,EAAQsmB,EAAOzlB,KAAOylB,EAAOxlB,MAAOZ,EAASomB,EAAOoQ,IAAMpQ,EAAO6oB,SAC5FzkD,KAAK8H,EAAEke,MAAM,CAAC,EAAG1Q,IACjBtV,KAAK6rE,qBACLtpD,EAAImnD,UAAU,iBAAiB/zB,KAAK,QAASrgC,GAE7CtV,KAAK4rE,oBAAoB5lD,GACzBhmB,KAAK6rE,qBACLY,GAAe,MACV,CACL,IAAMpB,EAASrrE,KAAK8H,EAAEujE,UACjBA,EAAO,MAAQrlD,EAAM,KAAOqlD,EAAO,MAAQrlD,EAAM,IACpDhmB,KAAK4rE,oBAAoB5lD,GAI7BhmB,KAAK+rE,cAAc/rE,KAAKqE,MAAM8hD,OAAQsmB,K,+BAOtC,OAHAzsE,KAAKqE,MAAM8hD,OAAOzhD,KAAI,SAAA0O,GAAC,aAAmBA,EAAE6S,MAAO7S,EAAEyD,IAAKzD,EAAE2X,SAAU3X,EAAEi+B,iBAA/B,UAA4Cj+B,EAAE3L,aAA9C,OAA4C,EAASm0C,cAC/E57C,KAAKqE,MAAM2hB,MAAMthB,IAAIw6B,QAE7B,yBAAKrX,UAAU,yBAAyBooB,IAAKjwC,KAAKiwC,U,GAhlBrChsC,IAAMqqB,WAolBxBo+C,GAAoBjiD,YAAS48C,IAsB7BsF,GAAaliD,aApBM,SAAC,GAAc,IAAZpnB,EAAW,EAAXA,KAC1B,OAAKA,EAAKkhC,OAAOkQ,QAOf,kBAACi4B,GAAD,CACE1tD,KAAM3b,EAAKkhC,OAAOqoC,UAClB3F,OAAQ5jE,EAAKwpE,WACbxpE,KAAMA,EACN8B,KAAM9B,EAAKkhC,OAAOkQ,QAClBy2B,OAAQ7nE,EAAKkhC,OAAOuoC,SACpB9mD,MAAO3iB,EAAKkhC,OAAOwoC,WACnB5mB,OAAQ9iD,EAAKkhC,OAAO0e,OAdS,QAqBnCljD,EAASu7C,OAAO,UAAW8rB,GAAcuF,ICvoBzC,IAAMpyB,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ/4C,MAAOoxC,QAAM6H,OACbqkB,UAAWlsB,QAAME,SAASF,QAAM8L,YAAY,CAAC,MAAO,SAAU,OAC9DquB,WAAY,GAEZC,IAAK,IACLC,WAAY,GACZC,kBAAmB,GACnBC,iBAAkB,GAElBC,UAAWx6B,QAAME,SAASF,QAAM8H,SAAS,GAEzCvI,OAAQS,QAAM4H,UAAU5H,QAAM6H,UAG1BE,GAAQ/H,QACXlyC,MAAM,kBAAmB,CACxBI,KAAM,aACN4C,SAAUujE,GAAM3F,WAAW,CAAC,UAAW,qBAAsB,OAAQ,cAErEjsD,MAAO,IACPsmB,OAAQiX,QAAM0M,OAAO,CAAEvT,IAAK,GAAI51B,MAAO,GAAIquC,OAAQ,GAAItuC,KAAM,GAAIgC,IAAK,GAAIF,IAAK,KAC/E80D,WAAYl6B,QAAMiM,MAAMjM,QAAM1+B,QAG9B2+B,aAAcD,QAAME,SAASF,QAAM1+B,OAAQ,KAE5CgoC,UAAS,SAAA1rB,GAAI,MAAK,CACjBtrB,KAAM,KACNmoE,aAAa,EACbC,YAAa,EACbzmC,MAAO,EACPqgC,QAAS,OAEVhnE,OAAM,SAAAswB,GAAI,MAAK,CACd,wBACE,OAAOA,EAAKwyB,KAAKv+C,KAAI,SAAA0O,GACnB,MAAO,CAACA,EAAE6S,MAAO7S,EAAEyD,SAIvB,YACE,OAAOmjB,kBAAQvJ,IAGjB,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC,WACE,OAAO0F,EAAK3E,WAAWmO,YAAY75B,QAAQuB,QAAO,SAAAyR,GAAC,OAAIA,EAAEpS,SAAWyvB,MAGtE,aACE,OAAOoJ,QAAQpJ,EAAKy8C,aAAgBz8C,EAAK08C,mBAAqB,WAAW3uD,KAAKiS,EAAK08C,kBAAkB,KAGvG,gBAEE,OAAQ18C,EAAKu8C,YAAc,OAAO5nE,eAGpC,kBACE,OAAOqrB,EAAKy8C,YAAcz8C,EAAKu8C,WAAazK,KAAa9xC,EAAKy8C,YAAchuC,QAG9EsuC,UAAUxuD,KAEA1Z,EADMmrB,EAAKg9C,aACLzuD,GAGhB,cACE,IAAKyR,EAAK68C,cAAgB78C,EAAKtrB,KAAM,OAAO,KAC5C,IAAIA,EAAOsrB,EAAKtrB,KAChB,GAAKsrB,EAAKu8C,YAIH,GAAIv8C,EAAKy8C,WAAY,CAC1B,IAAMQ,EAAavoE,EAAKsrB,EAAKm8C,WAAWloE,IAAI+rB,EAAK+8C,WACjDroE,EAAI,2BAAQA,GAAR,IAAc,CAACsrB,EAAKm8C,WAAYc,SANhB,CACpB,IAAMC,EAAgBtsE,OAAOC,OAAO6D,GAAM,GACpC2lE,EAAUxjE,MAAMoX,KAAK,CAAEja,OAAQkpE,EAAclpE,SAAU,SAACkC,EAAGd,GAAJ,OAAUA,KACvEV,EAAI,2BAAQA,GAAR,IAAc,CAACsrB,EAAKm8C,WAAY9B,IAKtC,OAAO3lE,GAGT,eACE,IAAMyoE,EAAMn9C,EAAKgkB,QACTm4B,EAAcn8C,EAAdm8C,UACR,IAAKgB,EAAK,OAAO,KAIjB,IAHA,IACMzoE,EAAO,GAEb,MAHa9D,OAAOQ,KAAK+rE,GAGzB,eACE,IADG,IAAIxqE,EAAG,KACDyC,EAAI,EAAGA,EAAI+nE,EAAIxqE,GAAKqB,OAAQoB,IAC9BV,EAAKU,GAGRV,EAAKU,GAAGzC,GAAOwqE,EAAIxqE,GAAKyC,GAFxBV,EAAKU,GAAK,CAAE,CAACzC,GAAMwqE,EAAIxqE,GAAKyC,IAIzB4qB,EAAKu8C,aAAY7nE,EAAKU,GAAG+mE,GAAa/mE,GAG/C,OAAOV,GAGT,kBACE,OAAO,IAGT,iBAEE,GAAIsrB,EAAK06C,OAAQ,OAAO16C,EAAK06C,OAM7B,IALA,IAAMjtD,EAAQuS,EAAKu6C,YACb7lE,EAAOsrB,EAAKq8C,SACZvkE,EAAQ6L,KAAK0K,MAAM3Z,EAAKV,OAASyZ,GACjCitD,EAAS,GAENtlE,EAAI,EAAGA,EAAIqY,EAAQ,EAAGrY,IAC7BslE,EAAOtlE,GAAKV,EAAKoD,MAAMA,EAAQ1C,EAAG0C,EAAQ1C,EAAI0C,EAAQ,GAIxD,OAFA4iE,EAAOtqE,KAAKsE,EAAKoD,MAAMA,GAAS2V,EAAQ,KACxCuS,EAAK06C,OAASA,EACPA,GAIT,gBAAiB,IAAD,EACRtpE,EAAI,UAAG4uB,EAAKgkB,eAAR,aAAG,EAAehkB,EAAKm8C,WACjC,OAAK/qE,EACE,CAACA,EAAK,GAAIA,EAAKA,EAAK4C,OAAS,IADlB,IAIpB,uBACE,MAAO,CACLsoE,WAAYt8C,EAAKs8C,WACjBc,aAAcp9C,EAAKo9C,aAEnB/mC,MAAOrW,EAAKqW,MAAQ,OAIxByM,OAAM,IACG9iB,EAAK3E,WAAW2xB,QAAQt8C,IAAIsvB,EAAK3vB,MAG1C4yC,eACE,IAAMH,EAAS9iB,EAAK8iB,SACpB,OAAOA,EAASA,EAAO5xC,QAAO,SAAA6xC,GAAC,OAAIA,EAAE1P,YAAkC,0BAApBphC,kBAAQ8wC,GAAG1yC,QAAoC,MAGpGg3B,WAAW9Y,GACT,IAAKyR,EAAKq9C,QAAS,CAAC,IACS9kB,EAAmBv4B,EAAtC08C,kBAA2BpC,EAAWt6C,EAAXs6C,OACZt6C,EAAKq9C,QAAb,SAAX9kB,EAAkCyZ,GAC7BzZ,EAAuB+hB,EAASxI,KAAcvZ,GAAUuZ,KAAUvZ,GACvD/gD,OAEtB,OAAOwoB,EAAKq9C,QAAQ9uD,QAIvB+kB,SAAQ,SAAAtT,GAAI,MAAK,CAChBs9C,QAAQ5oE,GACNsrB,EAAKtrB,KAAOA,EACZsrB,EAAK68C,aAAc,GAGrBU,eAAe7G,GACb12C,EAAK02C,QAAUA,GAGjB8G,eAAejoD,GACbyK,EAAK88C,YAAcvnD,GAGrBosC,SAAStrB,GACPrW,EAAKqW,MAAQA,GAGfonC,aACEz9C,EAAKqiB,aAAeriB,EAAKqiB,aAAe,GAG1Cq7B,eAAe/6D,GACb,IAAM4S,EAAK,aAAOyK,EAAKs8C,YACvB,KAAI35D,EAAE6S,OAASD,EAAM,IAAM5S,EAAEyD,KAAOmP,EAAM,IAA1C,CACA,IAAMooD,EAAcpoD,EAAM,GAAKA,EAAM,GAC/BqoD,EAAaj7D,EAAEyD,IAAMzD,EAAE6S,MACvBqoD,EAA2B,IAAbD,EACdE,GAAOD,EAAcD,GAAc,EACzC,GAAID,EAAcE,EAAa,CAC7B,IAAME,GAAUF,EAAcF,GAAe,EAC7CpoD,EAAM,IAAMwoD,EACZxoD,EAAM,IAAMwoD,EAGVp7D,EAAE6S,MAAQD,EAAM,KAClBA,EAAM,IAAMA,EAAM,IAAM5S,EAAE6S,MAAQsoD,GAClCvoD,EAAM,GAAK5S,EAAE6S,MAAQsoD,GAEnBn7D,EAAEyD,IAAMmP,EAAM,KAChBA,EAAM,IAAM5S,EAAEyD,IAAM03D,EAAMvoD,EAAM,GAChCA,EAAM,GAAK5S,EAAEyD,IAAM03D,GAGrBvoD,EAAM,GAAK5R,KAAK6D,IAAIwY,EAAKg+C,UAAU,GAAIzoD,EAAM,IAC7CA,EAAM,GAAK5R,KAAK+D,IAAIsY,EAAKg+C,UAAU,GAAIzoD,EAAM,IAE7CyK,EAAKi+C,SAAS1oD,EAAOyK,EAAKqW,MAAQ,QAGpC4nC,SAASC,GAAgB,IAAZ7nC,EAAW,uDAAH,EACR,OAAP6nC,IAEJl+C,EAAKo9C,aAAec,EACpBl+C,EAAKs8C,WAAa4B,EAClBl+C,EAAKw9C,eAAeU,EAAG,GAAKA,EAAG,IAC/Bl+C,EAAK2hC,SAAStrB,GACdrW,EAAKy9C,eAGPrD,qBAAoB,IACXhxB,KAASppB,EAAKi+C,SAAU,KAGjC7zB,cAAc7zC,EAAKlE,GAKjB,GAJIkE,EAAIvF,MAAMq5C,SACZrqB,EAAK3E,WAAWivB,MAAM55C,IAAI6F,EAAI83B,WAAW+b,cAAc7zC,GAGrD,qBAAsBA,EAAIvF,MAAO,CACnC,IAAM8xC,EAAS1wC,EAAmBC,GAClCywC,EAAOsH,cAAc7zC,GAErBypB,EAAK+xB,aAAax7C,EAAIvF,MAAMwkB,MAAOjf,EAAIvF,MAAMoV,IAAK,CAAC08B,IAEnD9iB,EAAKy9C,eAIT70B,UAAUpzB,EAAOpP,EAAK+3D,GACpB,IAAMr7B,EAAS9iB,EAAK4iB,qBACpB,GAAsB,IAAlBE,EAAO9uC,OAAX,CACA,IAAM44C,EAAU9J,EAAO,GACjBtvB,EAAS,CAAE,CAACo5B,EAAQmC,WAAYnC,EAAQzL,kBAK9C,OAFUnhB,EAAK3E,WAAWk3B,aAAa,CAAE/8B,QAAOpP,MAAKoxD,QAAShiD,IAAUpP,GAAOoN,EAAQo5B,EAAS5sB,KAKlG03C,cAAc0G,EAAWhpE,EAAG6tC,GAC1B,IAAMtgC,EAAIqd,EAAKwyB,KAAKp9C,GAChBipE,GAAa,EAEZ17D,GAIH07D,EAAa17D,EAAE6S,QAAU4oD,EAAU5oD,OAAS7S,EAAEyD,MAAQg4D,EAAUh4D,IAChEzD,EAAE27D,aAAaF,EAAU5oD,MAAO4oD,EAAUh4D,OAJ1C4Z,EAAK4oB,UAAUw1B,EAAU5oD,MAAO4oD,EAAUh4D,IAAK68B,GAC/Co7B,GAAa,GAKfA,GAAcr+C,EAAKy9C,cAGfc,aAAazjD,GAAO,4IAClBkpB,EAAUlpB,EAAMiE,KAAKilB,QAEJ,QAAnBhkB,EAAKsuC,UAHe,uBAIlBtuC,EAAKhvB,MACPgvB,EAAKs9C,QAAQt5B,EAAQutB,GAAYvxC,EAAKhvB,SAEtCgvB,EAAKs9C,QAAQt5B,GAPO,6BAYnBhkB,EAAKhvB,MAZc,uBAahB6yC,EAbgB,wCAa2B7jB,EAAK3vB,KAbhC,uDActByqB,EAAMU,gBAAgB+/C,UAAU,CAAC3I,GAAaO,aAAatvB,KAdrC,8BAiBlBsB,EAAMnB,EAAQutB,GAAYvxC,EAAKhvB,UACV,kBAARm0C,EAlBK,wBAmBhBtB,EAnBgB,gCAmBmB0tB,GAAYvxC,EAAKhvB,OAnBpC,2BAoBtB8pB,EAAMU,gBAAgB+/C,UAAU,CAAC3I,GAAaO,aAAatvB,KApBrC,kCAuBpB5tC,EAAO,GACPuoE,GAAO,EAxBa,oBA4BV1P,MAAM3pB,GA5BI,YA4BtBlyC,EA5BsB,QA6Bb+7D,GA7Ba,oBA8BD,MAAf/7D,EAAI+nB,OA9BY,wBA+BlBF,EAAMU,gBAAgB+/C,UAAU,CAC9B3I,GAAaQ,aAAb,UAA6BngE,EAAI+nB,OAAjC,YAA2C/nB,EAAIg8D,YAAc9pB,EAAKnlB,EAAKhvB,MAAOs3C,GAASlD,kBAhCvE,iCAoCd,IAAIr0C,MAAJ,UAAakC,EAAI+nB,OAAjB,YAA2B/nB,EAAIg8D,aApCjB,yBAsCTh8D,EAAIgD,OAtCK,QAsCtBA,EAtCsB,6DAwClBia,EAxCkB,KAyCjBjd,EAzCiB,4CA2CN67D,MAAM3pB,EAAK,CAAElT,KAAM,YA3Cb,SA2ClBh/B,EA3CkB,QA4CT+7D,IAAqB,IAAf/7D,EAAI+nB,SAAcwjD,GAAO,GA5CtB,mDA8ClBtuD,EAAK,KA9Ca,eAiDtB4K,EAAMU,gBAAgB+/C,UAAU,CAC9B3I,GAAaQ,aAAaljD,EAAOi1B,EAAKnlB,EAAKhvB,MAAOwtE,EAAOl2B,GAASjD,sBAAmBpiC,KAlDjE,2BAuDxB,IACMvO,EAAOi+D,GAAe18D,GACtBygE,EAAU,GACThiE,IACCy9D,EAAYnyC,EAAKw8C,KACR,QAAT,EAAArK,SAAA,eAAWn+D,QAAS,IAEtBm+D,EADgB,CAAE7sC,IAAK,KAAM,MAAO,KAAMm5C,MAAO,IAAKC,KAAM,OAAQC,MAAO,IAAKC,IAAK,KACjEzM,IAAcA,EAAU,IAJrC,EAMSD,GAASj8D,EAAMk8D,GANxB,oBAMRz9D,EANQ,KAMFgiE,EANE,MAQX12C,EAAKs9C,QAAQ5oE,GACbsrB,EAAKu9C,eAAe7G,GACpB12C,EAAKY,YAAY9F,GACjB,MAAOnjB,GACDksC,EADI,sCACqC,OAADlsC,QAAC,IAADA,OAAA,EAAAA,EAAGksC,UAAWlsC,EADlD,oBAC+DwtC,GACzErqB,EAAMU,gBAAgB+/C,UAAU,CAAC3I,GAAaO,aAAatvB,KAvErC,qEA2EpBjjB,YAAY9F,GAAO,oHAClBkF,EAAKgkB,QADa,gCAEfhkB,EAAKu+C,aAAazjD,GAFH,UAIjBpmB,EAAOsrB,EAAKgkB,QAJK,oDAMjBk2B,EAAQxlE,EAAKsrB,EAAKm8C,WAND,wBAQft4B,EAAU,CAAC,MAAD,OACR7jB,EAAKm8C,UADG,2GAGd9qE,KAAK,KACPypB,EAAMU,gBAAgB+/C,UAAU,CAAC3I,GAAaO,aAAatvB,KAZtC,+BAgBnB7jB,EAAKs8C,WAAWtoE,OAhBG,mDAiBvBgsB,EAAKi+C,SAAS,CAAC/D,EAAM,GAAIA,EAAMA,EAAMlmE,QAAU,KAjBxB,8CAoBzBu2C,iBA+CJ,IAAMs0B,GAAW7kD,aAAS,YAAiD,IAA9CpnB,EAA6C,EAA7CA,KAAM8B,EAAuC,EAAvCA,KAAM+lE,EAAiC,EAAjCA,OACjC9qE,GADkE,EAAzB4lB,MAAyB,EAAlBwqB,YACtCntC,EAAK4/C,MADmD,EA5B1E,WAAqB,IAAD,EACQh/C,IAAMyrC,SAAS,KADvB,oBACXp6B,EADW,KACJi6D,EADI,OAEMtrE,IAAMyrC,SAAS,MAFrB,oBAEXntC,EAFW,KAELitE,EAFK,KAIZv/B,EAAMhsC,IAAMwrE,aAAY,SAAAltE,GAC5BitE,EAAQjtE,KACP,IAkBH,OAhBA0B,IAAMyrE,iBAAgB,WACpB,GAAIntE,EAAM,CACR,IAAMotE,EAAU,kBAEdJ,EAAShtE,EAAK+0D,cAMhB,OAJAqY,IAEAhoD,OAAO8iB,iBAAiB,SAAUklC,GAE3B,WACLhoD,OAAOijB,oBAAoB,SAAU+kC,OAGxC,CAACptE,IAEG,CAAC0tC,EAAK36B,EAAO/S,GAMWqtE,GAFyC,oBAEjE3/B,EAFiE,KAE5D4/B,EAF4D,KAEjDttE,EAFiD,KAKhEq5B,EAA2Bv4B,EAA3Bu4B,OAAmBk0C,EAAQzsE,EAAnBupE,UACVt3D,EAAQu6D,EAAYj0C,EAAOzlB,KAAOylB,EAAOxlB,MAE3CvU,EAAOwB,EAAKM,SAASe,KAAI,SAAAwC,GAAC,OAAIA,EAAE2lE,cACpC,GAAIxpE,EAAK+pE,iBAAkB,CACzB,IAAM2C,EAAW1sE,EAAK+pE,iBACnBhoE,cACAO,MAAM,KACNjB,KAAI,SAAA5D,GAAI,MAAK,QAAQ0d,KAAK1d,GAAQuC,EAAK8jE,QAAQrmE,GAAQA,KACvDa,QAAO,SAAAquE,GAAE,OAAInuE,EAAKo3C,SAAS+2B,MAC1BD,EAAStrE,SAAQ5C,EAAOkuE,GAG9B,IAEME,EAAQhsE,IAAMisE,SACdC,EAAWlsE,IAAMisE,SACjBE,EAAYnsE,IAAMisE,SAClBG,EAAQpsE,IAAMisE,SACdI,EAAKrsE,IAAMisE,SAGXpoE,GADQzE,EAAK0nE,OAASxI,OAAiBA,QAC7B8I,OAAO9I,KAAUp9D,EAAK2qE,KAAO9pD,MAAM,CAAC,EAAG1Q,IAEjDs1D,EAAM3mE,IAAMwrE,YAAYpsE,EAAKwnE,uBAAwB,IAErD0F,EAAmB,CAAC,EAAGj7D,GAAS,GAChCk7D,EAAYvsE,IAAMisE,OAAOK,GA8C/B,IAAM9mB,EAAQ8Y,OAEX+E,OAAO,CACN,CAAC,EAAG,GACJ,CAAChyD,EA9Ee,MAgFjBwjC,GAAG,SAjDN,WACE,GAAIypB,KAASlc,YAAcic,GAAiB,WAAaA,GAAiB,SAAU,CAAC,IAAD,eACnEC,KAASlc,UAD0D,GAC7EnuC,EAD6E,KACzEmE,EADyE,KAE5E4B,EAAOuyD,EAAUx3D,QACjBy3D,EAAgBp0D,EAAKnE,EACvB+N,GAASne,EAAE0gE,OAAOtwD,GAClBrB,GAAO/O,EAAE0gE,OAAOnsD,GAEpB,GAAI4B,EAAK,KAAO/F,GAAM+F,EAAK,KAAO5B,QAG7B,GAAI4B,EAAK,KAAO/F,GAAM+F,EAAK,KAAO5B,GAAMjI,KAAK4G,IAAIy1D,EAbrC,IAaqE,KAAO,CAC3F,IAAMC,GAAOzqD,EAAQpP,GAAO,EAC5BoP,EAAQyqD,EAAMrtE,EAAKkqE,YAAc,EACjC12D,EAAM65D,EAAMrtE,EAAKkqE,YAAc,OAEtBkD,EAlBM,KAmBXxyD,EAAK,KAAO/F,EACdmE,EAAKjI,KAAK+D,IAAI7C,EAAO4C,EApBR,IAqBJ+F,EAAK,KAAO5B,IACrBnE,EAAK9D,KAAK6D,IAAI,EAAGoE,EAtBJ,KAyBfi0D,EAAGt3D,QAAQ+uC,KAAK0B,EAAMkf,KAAM,CAACzwD,EAAImE,KAEnCm0D,EAAUx3D,QAAU,CAACd,EAAImE,GACzBuuD,EAAI,CAAC3kD,EAAOpP,QAwBbiiC,GAAG,OApBN,WACE,IAAKypB,KAASlc,UAAW,CAEvB,IAAMsqB,EAASpO,KAASviE,MAAM,GACxBgmB,EAAQ3iB,EAAK0pE,WAAWroE,IAAIoD,GAC5B8oE,EAAQ5qD,EAAM,GAAKA,EAAM,IAAO,EAClCgiD,EAAQ,CAAC2I,EAASC,EAAMD,EAASC,GACjC5I,EAAM,GAAK,IAAGA,EAAQ,CAAC,EAAU,EAAP4I,IAC1B5I,EAAM,GAAK1yD,IAAO0yD,EAAQ,CAAC1yD,EAAe,EAAPs7D,EAAUt7D,IACjDg7D,EAAGt3D,QAAQ+uC,KAAK0B,EAAMkf,KAAMX,OAa1B6I,EAAW,SAAAztE,GACf,IAAM0tE,EAAUztE,EAAKM,SAASid,MAAK,SAAA1Z,GAAC,OAAIA,EAAE2lE,aAAezpE,KACnD0Q,EAAQg9D,EAAUA,EAAQh1B,YAAc,YACxC5lC,EAAIqsD,OAEP8I,OAAO,CAAC9I,KAAOp9D,EAAK/B,IAAOm/D,KAAOp9D,EAAK/B,MACvC4iB,MAAM,CAzFS,GAyFM4V,EAAO3jB,IAAK2jB,EAAOzjB,MAE3Ci4D,EAAUp3D,QACPuwD,OAAO,QACPmC,MAAMtJ,GAAa8I,EAAQjJ,OAC3BtsB,KAAK,QAAS,WACdA,KAAK,OAAQ,QACbA,KAAK,SAAU7hC,GACf6hC,KACC,IACA4sB,OAEGrsD,GAAE,SAAAiD,GAAC,OAAIjD,EAAEiD,EAAE/V,OACXooE,SAAQ,SAAAryD,GAAC,OAAIA,EAAE22D,MACfhoE,GAAE,SAAAqR,GAAC,OAAIrR,EAAEqR,EAAE22D,SAwFpB,OA5DA7rE,IAAM8rC,WAAU,WACTxtC,IAEL0tE,EAAMj3D,QAAUupD,KACNhgE,GACPgnE,OAAO,OACP5zB,KAAK,UAAW,CAAC,EAAG,EAAGrgC,EAAQsmB,EAAOzlB,KAAOylB,EAAOxlB,MAzIrC,GAyI0DwlB,EAAO6oB,SAChFh9C,MAAM,UAAW,SACjB8hE,OAAO,KACP5zB,KAAK,YAAa,aAAe/Z,EAAOzlB,KAAO,OAElDk6D,EAAMr3D,QAAUi3D,EAAMj3D,QAAQuwD,OAAO,KAAK5zB,KAAK,YAA/B,sBA9IE,GA8IF,MAEhBy6B,EAAUp3D,QAAUi3D,EAAMj3D,QAAQuwD,OAAO,KAAK5zB,KAAK,QAAS,YAE5Dw6B,EAASn3D,QAAUi3D,EAAMj3D,QAAQuwD,OAAO,KAAK5zB,KAAK,QAAS,WAE3D26B,EAAGt3D,QAAUi3D,EAAMj3D,QAChBuwD,OAAO,KACPxhB,KAAK0B,GACL1B,KAAK0B,EAAMkf,KAAM4H,GAEpBD,EAAGt3D,QAAQ+wD,OAAO,cAActiE,MAAM,YAAa,sBACnD6oE,EAAGt3D,QAAQ+wD,OAAO,cAActiE,MAAM,YAAa,wBAClD,CAAClF,IAEJ0B,IAAM8rC,WAAU,WACd,GAAIxtC,EAAM,CACRggE,KAAUhgE,GACPmnE,UAAU,OACV/zB,KAAK,UAAW,CAAC,EAAG,EAAGrgC,EAAQsmB,EAAOzlB,KAAOylB,EAAOxlB,MAjKvC,GAiK4DwlB,EAAO6oB,SAEnF2rB,EAAUp3D,QAAQ0wD,UAAU,QAAQ5mD,SAL5B,oBAMQjhB,GANR,IAMR,gCAASuB,EAAT,QAAsBytE,EAASztE,IANvB,8BAnCVitE,EAAMr3D,QAAQ+uC,KACZwa,KACcz6D,GACX8hE,MAAMt0D,EAAQ,IACdy7D,cAAc,IAyCjBT,EAAGt3D,QAAQ+uC,KAAK0B,GAAO1B,KAAK0B,EAAMkf,KAAMtlE,EAAK0pE,WAAWroE,IAAIoD,OAE7D,CAACwN,EAAO/S,IAGX0B,IAAM8rC,WAAU,WACd,GAAKugC,EAAGt3D,QAAR,CACA,IAAMgN,EAAQ3iB,EAAK0pE,WAAWroE,IAAIoD,GAClC,GAAIke,EAAM,GAAKA,EAAM,GAnJF,GAmJqB,CACtC,IAAM0qD,GAAO1qD,EAAM,GAAKA,EAAM,IAAM,EACpCA,EAAM,GAAK5R,KAAK6D,IAAI,EAAGy4D,EAAMM,GAC7BhrD,EAAM,GAAK5R,KAAK+D,IAAI7C,EAAOo7D,EAAMM,GAEnCR,EAAUx3D,QAAUgN,EACpBsqD,EAAGt3D,QAAQ+uC,KAAK0B,EAAMkf,KAAM3iD,MAC3B,CAAC3iB,EAAKyjC,QAET7iC,IAAM8rC,WAAU,WACdxtC,GA/EkB,SAAA4jD,GAClB,IAAM8qB,EAAad,EAASn3D,QAAQ0wD,UAAU,WAAWvkE,KAAKghD,GAC9D8qB,EACGtH,QACAJ,OAAO,QACP5zB,KAAK,QAAS,UACd60B,MAAMyG,GACNt7B,KAAK,IAAK,GACVA,KAAK,SAnHU,IAoHfA,KAAK,KAAK,SAAAviC,GAAC,OAAItL,EAAEsL,EAAE6S,UACnB0vB,KAAK,SAAS,SAAAviC,GAAC,OAAIgB,KAAK6D,IAvGN,EAuG0BnQ,EAAEsL,EAAEyD,KAAO/O,EAAEsL,EAAE6S,WAC3D0vB,KAAK,QAAQ,SAAAviC,GAAC,OAAIivD,GAAejvD,EAAGA,EAAE2X,SAAW,GAAM,OAC1DkmD,EAAWvG,OAAO5nD,SAmEVouD,CAAY9wE,MAGtBiD,EAAK4/C,KAAKv+C,KAAI,SAAA0O,GAAC,aAAmBA,EAAE6S,MAAO7S,EAAEyD,IAAKzD,EAAE2X,cAAnB,UAA6B3X,EAAE3L,aAA/B,OAA6B,EAASm0C,cAEhE,yBAAK/zB,UAAU,0BAA0BooB,IAAKA,OA0BjDkhC,GAAkBt+B,QAAMuI,QAAQ,kBAAmBxI,GAAYyyB,GAAsB9qB,GAAUK,IAC/Fw2B,GAAgBxiD,YAAO,QAAPA,CAAgBnE,aAxBT,SAAC,GAAoB,EAAlBc,MAAmB,IAAZloB,EAAW,EAAXA,KACrCqd,QAAQk9B,IAAI,KAAMv6C,EAAK0pE,WAAY1pE,GACnC,IAAM4sC,EAAMhsC,IAAMwrC,YASlB,OAPAxrC,IAAM8rC,WAAU,WACV1sC,GAAQA,EAAK0pE,WAAWtoE,SAC1BpB,EAAKguE,eAAiBphC,EAAIj3B,WAE3B,CAAC3V,EAAM4sC,IAGL5sC,EAAK0pE,WAAWtoE,QAAWpB,EAAK8B,KAGnC,yBAAK8qC,IAAKA,EAAKpoB,UAAU,kBACvB,kBAAC,GAAD,CAAWxkB,KAAMA,GACdq2D,EAAKl1D,eAAenB,GACrB,kBAACisE,GAAD,CAAUnqE,KAAM9B,EAAKoxC,QAASy2B,OAAQ7nE,EAAKypE,SAAUzpE,KAAMA,EAAM2iB,MAAO3iB,EAAK0pE,eANjC,SAepDhtE,EAASu7C,OAAO,aAAc61B,GAAiBC,IAC/CrxE,EAASw7C,cAAc41B,IChrBvB,IA6CeG,GA7CIz+B,QAAMlyC,MAAM,cAAcojC,SAAQ,SAAAtT,GAAI,MAAK,CAI5D8gD,aACgB9gD,EAAKmhB,kBAENnhB,EAAK1vB,OAAS0vB,EAAK6hB,OAC9B7hB,EAAK6Q,eAKTkwC,UAAUvtD,GAERA,EAAO2tB,iBAAiBztC,SAAQ,SAAAs6B,GAC9BhO,EAAKkvB,UAAUlhB,GAAGsE,aAAY,OAIlC8X,cAAc7zC,EAAKlE,GACjB2tB,EAAK6Q,cAEL,IAAMmwC,EAAazqE,EAAIvF,MAAMgvB,EAAK6hB,OAE7Bm/B,GAKDzqE,EAAIpE,KAAI6tB,EAAK4O,IAAMr4B,EAAIpE,IAE3B6uE,EAAWttE,SAAQ,SAAA6C,GACjB,IAAM0qE,EAAYjhD,EAAKkvB,UAAU34C,GAE5B0qE,EAKLA,EAAU3uC,aAAY,GAJpB4Q,GAAUhzB,MAAM,qBAAc8P,EAAK6hB,MAAnB,iBAA0Cm/B,OAV5D99B,GAAUhzB,MAAV,qBAA8B8P,EAAK6hB,MAAnC,WCqDSq/B,GAlFY9+B,QACxBlyC,QACAR,OAAM,SAAAswB,GAAI,MAAK,CACd,mBACE,OAAOipC,EAAKryD,qBAAqBopB,EAAMA,EAAKmhD,SAG9C,qBACE,OAAOnhD,EAAKohD,aAAalwE,QAAO,SAAAuF,GAAC,OAAmB,IAAfA,EAAE6jB,aAGzC0wB,mBAEE,IAAM+M,EAAM/3B,EAAKohD,aAAajxD,MAAK,SAAA1Z,GAAC,OAAmB,IAAfA,EAAE6jB,YAC1C,OAAOy9B,GAAOA,EAAIh7B,YAGpB,oBAEE,IAAMg7B,EAAM/3B,EAAKohD,aAAajxD,MAAK,SAAA1Z,GAAC,OAAmB,IAAfA,EAAE6jB,YAC1C,OAAOy9B,GAAOA,EAAIh7B,YAGpB,iBACE,OAAOiD,EAAK+N,eAAe/5B,OAAS,GAItC,iBACE,OAAOgsB,EAAK+N,eAAe/5B,OAAS,GAGtCmtC,eAAc,IACLnhB,EAAK+N,eAAe95B,KAAI,SAAAwC,GAAC,OAAKA,EAAE0yB,MAAQ1yB,EAAE0yB,MAAQ1yB,EAAEzF,SAI7D,sBACE,OAAOgvB,EAAK+N,eAAe78B,QAAO,SAAAuF,GAAC,OAAIA,EAAE0yB,SAAOl1B,KAAI,SAAAwC,GAAC,OAAIA,EAAE0yB,UAG7D6lB,oBAAkC,IAAhBC,EAAe,uDAAL,IAC1B,OAAOjvB,EAAKmhB,iBAAiB9vC,KAAK49C,IAGpCC,UAAUl+C,GACDgvB,EAAKohD,aAAajxD,MAAK,SAAA1Z,GAAC,OAAIA,EAAE0yB,QAAUn4B,GAASyF,EAAEzF,QAAUA,SAGvEsiC,SAAQ,SAAAtT,GAAI,MAAK,CAIhB6Q,cACE7Q,EAAKohD,aAAa1tE,SAAQ,SAAA+C,GAAC,OAAIA,EAAE67B,aAAY,OAG/C0Q,iBACE,IAAMvmB,EAAOuD,EAAKohD,aAAalwE,QAAO,SAAAuF,GAAC,OAAKA,EAAE4qE,eAE9C,OADI5kD,EAAKzoB,QAAQyoB,EAAK/oB,SAAQ,SAAA+C,GAAC,OAAIA,EAAE67B,aAAY,MAC1C7V,GAGT6kD,qBACE,IAAMC,EAAIvhD,EAAKohD,aAAajxD,MAAK,SAAA1Z,GAAC,OAAIA,EAAEuuB,WAGxC,OAFAu8C,GAAKA,EAAEC,iBAEAD,GAOTE,iBAAiBzwE,IACfgvB,EAAK6Q,cACA7/B,KACU6F,MAAMC,QAAQ9F,GAASA,EAAQ,CAACA,IACxCiD,KAAI,SAAA89B,GAAC,OAAI/R,EAAKkvB,UAAUnd,MAAIr+B,SAAQ,SAAAmV,GAAK,OAAIA,EAAMypB,aAAY,WC5D7DovC,GApBKt/B,QAAMlyC,MAAM,IAAIR,OAAM,SAAAswB,GAAI,MAAK,CAUjD,iBACE,OAAOA,EAAK1vB,MAId,gBACE,OAAO0vB,EAAK1vB,UCZVw5C,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,QAC9BqB,YAAalJ,QAAME,SAASF,QAAM6H,OAAQ,QAGtCE,GAAQ/H,QACXlyC,MAAM,CACLI,KAAM,UAEPZ,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,IAAM8iB,EAAS9iB,EAAK8iB,SACpB,OAAOA,GAAUA,EAAO9uC,OAAS,GAGnC,iBACE,OAAOu1B,kBAAQvJ,GAAMxE,gBAAgBlB,cAGxCgZ,SAAQ,SAAAtT,GAAI,MAAK,CAChB2vB,cACE,IAAMqJ,EAAQmU,GAAYj7D,SACpByvE,EAAQxU,GAAYj7D,SAG1B8mD,EAAM5B,SAAWp3B,EACjB2hD,EAAMvqB,SAAWp3B,EAEjBA,EAAKhwB,MAAQ,CACXgpD,MAAOA,EACP2oB,MAAOA,QAMTC,GAAax/B,QAAMuI,QAAQ,aAAcb,GAAUK,GAAOu3B,IAMhEpyE,EAASu7C,OAAO,QAAS+2B,IAJT,WACd,OAAO,QC5CT,IAuCeC,GAvCOz/B,QACnBlyC,MAAM,CACL2iE,SAAUzwB,QAAME,SAASF,QAAM8H,SAAS,GACxC43B,gBAAiB1/B,QAAM4H,UAAU5H,QAAM6H,UAExC3W,SAAQ,SAAAtT,GAAI,MAAK,CAChB8zC,WACE,GAAI9zC,EAAK2rB,UAAW,CAIlB,IAJkB,EAIZo2B,EAAY/hD,EAAK3E,WAAWivB,MAAM55C,IAAIsvB,EAAK2zC,QAJ/B,cAMFoO,EAAUvvB,MANR,IAMlB,2BAAgC,CAAC,IAAxB3jB,EAAuB,QACxBkU,EAAIlU,EAAI9X,QAAQ5G,MAAK,SAAA4yB,GAAC,OAAIA,EAAEzyC,OAAS0vB,EAAKywB,cAEhD,GAAIzwB,EAAKmvB,iBAAmBtgB,EAAIwgB,SAASrvB,EAAKmvB,gBAC5C,OAAO,EAGT,KAAI,OAACpM,QAAD,IAACA,OAAD,EAACA,EAAGi/B,UAIN,OAHAhiD,EAAK3E,WAAWiP,WAAWuE,GAC3B7O,EAAKiiD,iBAEE,GAjBO,oCAsBlB,IAAKjiD,EAAKwwB,WAER,OADAxwB,EAAKiiD,iBACE,EAIX,OAAO,O,qBCGPn4B,GAAW1H,QAAMlyC,MAAM,CAC3Bc,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAC7B3vB,SAAU8nB,QAAME,SAASF,QAAM8H,SAAS,GACxCg4B,UAAW9/B,QAAM4H,UAAU5H,QAAM6H,QACjC9gB,MAAOiZ,QAAM4H,UAAU5H,QAAM6H,QAC7BtI,OAAQS,QAAM4H,UAAU5H,QAAM6H,QAC9Bk4B,UAAW//B,QAAME,SAASF,QAAM8H,SAAS,GACzCk4B,WAAYhgC,QAAME,SAASF,QAAM6H,OAAQ,gBACzCh5B,KAAMmxB,QAAME,SAASF,QAAM6H,OAAQ,UACnCltB,WAAYqlB,QAAME,SAASoS,GAAYrxC,MAAOquC,IAC9CzmB,cAAemX,QAAME,SAASoS,GAAYrxC,MAAO,WACjDmrD,YAAapsB,QAAM4H,UAAU5H,QAAM8L,YAAY,CAAC,SAAU,OAAQ,WAAY,eAC9EjgB,gBAAiBmU,QAAM4H,UAAU5H,QAAM6H,UAInCE,GAAQ/H,QACXlyC,MAAM,CACLiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCnB,KAAM,QACN00B,QAASod,QAAME,SAASF,QAAM8H,SAAS,GACvC1iB,OAAQ4a,QAAME,SAASF,QAAM6H,OAAQ,MAEtCv6C,OAAM,SAAAswB,GAAI,MAAK,CACd,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC,gBACE,OAAOmU,OAAOzO,EAAKkiD,WAAaliD,EAAK8T,OAAOouC,YAG9CG,YAAW,IACOriD,EAAK3E,WAAWmO,YAAY75B,QAEvB2I,QAAO,SAACyqC,EAAGpgC,GAAJ,OAAUogC,EAAIpgC,EAAE0sC,SAASrvB,EAAKhvB,SAAQ,GAIpEqwE,UAAS,KACFrhD,EAAKmjB,WACHnjB,EAAKqiD,cAAgBriD,EAAKmjB,UAGnC,aACE,OAAOszB,GAAMrF,sBAAsBpxC,EAAM,CACvC,cACA,qBACA,uBACA,qBACA,sBACA,mBACA,uBACA,+BAILsT,SAAQ,SAAAtT,GAAI,MAAK,CAIhBwhD,iBAIE,IAAMhyD,EAASwQ,EAAK3E,WAAW6U,gBACzBoyC,EAAa9yD,GAAUA,EAAOskB,OAAOzjC,OAAS2vB,EAAK8T,OAAO6/B,OAChE,KAAInkD,IAA8B,IAApBA,EAAOi8B,WAAqB62B,IAGrCtiD,EAAK3E,WAAWqP,SAGrB,GAAK1K,EAAK1F,UAAa0F,EAAKqhD,YAA5B,CAKA,IAAM7tD,EAASwM,EAAK8T,OAKpB,KAAItkB,GAAU8yD,GACyB,IAAjC9uD,EAAOua,eAAe/5B,QAAgBgsB,EAAK1F,UADjD,CAKA,IAAK9G,EAAOua,eAAe/5B,SAAWgsB,EAAK1F,SAAU,CAEnD0F,EAAK3E,WAAW2xB,QACbt8C,IAAI8iB,EAAOmgD,QACXziE,QAAO,SAAAjB,GAAG,OAAIA,EAAIK,MAAQL,EAAIK,KAAKs/B,SAAS,WAAa3/B,EAAII,OAASmjB,EAAOnjB,QAC7EqD,SAAQ,SAAAzD,GAAG,OAAIA,EAAI4gC,aAAe5gC,EAAI4gC,iBAGzC,IAAM02B,EAAO32D,OAAOC,OAAOmvB,EAAK8T,OAAO9jC,OAAS,IAAI,GAChDu3D,GAAQA,EAAKvP,QAAQwR,qBAAuBjC,IAC9CA,EAAKvP,QAAQnnB,cACb02B,EAAKj1B,aAAY,IAOhB9e,EAAO+uD,oBACVviD,EAAKsS,aAAatS,EAAK1F,UAMrB9G,EAAO+uD,qBAIJviD,EAAK1F,SAIR9G,EAAOqd,eAHPrd,EAAOqd,cACP7Q,EAAKsS,aAAatS,EAAK1F,YAM3B9K,GAAU8yD,GAAc9yD,EAAOkgC,SAAS1vB,EAAK8T,cAnD3CoP,GAAUlB,QAAV,wBAAmChiB,EAAKhvB,MAAxC,sBAA2DgvB,EAAKmjB,UAAhE,cAsDJq/B,WAAWr8D,GACT6Z,EAAKgF,QAAU7e,GAOjBmsB,YAAYthC,GACVgvB,EAAK1F,SAAWtpB,GAGlBu5C,SAAQ,IACCvqB,EAAKwhD,iBAGdiB,uBAAuBt8D,GACjB6Z,EAAKjD,aAAe20B,KAA4B1xB,EAAKjD,WAAa2lD,KAAYC,WAAW,CAAEC,KAAMz8D,IAAO,KAG9GwpC,cACE3vB,EAAKyiD,uBAAuBziD,EAAKwH,QAAUxH,EAAKhvB,QAGlD4vB,YAAY9F,GACVkF,EAAKwH,OAASgc,GAAYxjB,EAAKhvB,MAAO8pB,EAAMiE,KAAKilB,UAAY,GAC7DhkB,EAAKyiD,uBAAuBziD,EAAKwH,aAIjCq7C,GAAazgC,QAAMuI,QAAQ,aAAcb,GAAUK,GAAOrG,IAE1Dg/B,GAAe3kD,YAAO,QAAPA,CACnBnE,aAAS,YAAsB,IAAnBpnB,EAAkB,EAAlBA,KAAMkoB,EAAY,EAAZA,MACVioD,EAAKnwE,EAAKmqB,WACViO,EAAa,CACjBg4C,gBAAiB,EACjBC,gBAAiBF,EACjB5rD,gBAAiBvkB,EAAK0nB,SAAWyoD,EAAK,UACtC1/D,MAAOzQ,EAAK0nB,SAAW1nB,EAAKq4B,cAAgB,UAC5CC,OAAQ,UACRC,OAAQ,OAaV,OAVKv4B,EAAKoyB,UACRgG,EAAU,QAAc,QAGtBp4B,EAAK0nB,WACP0Q,EAAWk4C,eAAiBH,EAC5B/3C,EAAWm4C,kBAAoBJ,EAC/B/3C,EAAWo4C,iBAAmBL,GAI9B,kBAAC,KAAD,CACEtoD,QAAS,SAAAc,GAEP,OADA3oB,EAAK4uE,kBACE,GAETxqE,MAAOg0B,EACP/Z,KAAMre,EAAKqe,MAEVre,EAAK40B,QACc,IAAnB50B,EAAKuvE,WAAsBvvE,EAAKu2B,OAC/B,0BAAMnyB,MAAOqjB,GAAMZ,YAAY7mB,EAAKwvE,aAApC,OAAwDxvE,EAAKu2B,QAE7DrO,EAAM8D,SAASE,gBAAkBhE,EAAM8D,SAAS8G,sBAChD5K,EAAM8D,SAASC,eACfjsB,EAAK+uC,QAAU,kBAAC,GAAD,SAAQ/uC,EAAK+uC,OAAb,UAMzBryC,EAASu7C,OAAO,QAASg4B,GAAYC,ICjNrC,IAAMh5B,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,QAE9B/X,OAAQkQ,QAAME,SAASF,QAAM8L,YAAY,CAAC,SAAU,aAAc,UAClEg0B,UAAW9/B,QAAM4H,UAAU5H,QAAM6H,QACjCo5B,WAAYjhC,QAAME,SAASF,QAAM8H,SAAS,GAG1C5b,WAAY8T,QAAM4H,UAAU5H,QAAM6H,UAQ9Bq5B,GAAalhC,QAAMlyC,MAAM,CAC7B0+B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAClCnB,KAAM,SACN4C,SAAUujE,GAAM3F,WAAW,CAAC,QAAS,SAAU,OAAQ,cAEvD9rC,QAASod,QAAME,SAASF,QAAM8H,SAAS,KAGnCC,GAAQ02B,GAAWnxE,OAAM,SAAAswB,GAAI,MAAK,CACtC,yBACE,MAAuB,WAAhBA,EAAKkS,YAEZoB,SAAQ,SAAAtT,GAAI,MAAK,CACnB8zC,WACE,IADS,EACHnkE,EAAUqwB,EAAK3E,WAAWmO,YAAY75B,QADnC,cAGKA,GAHL,IAGT,2BAAuB,CAAC,IAAD,EAAdgT,EAAc,sBACPA,EAAEmgC,QADK,IACrB,2BAAwB,CACtB,GADsB,QAChBzyC,OAAS2vB,EAAK3vB,KAClB,OAAO,GAHU,gCAHd,8BAYT,OADA6yC,GAAUlB,QAAQhiB,EAAK8hD,iBAAL,kBAAmC9hD,EAAK3vB,KAAxC,sBACX,OAILkzE,GAAcnhC,QAAMuI,QACxB,cACA24B,GACAx5B,GACAK,GACA03B,GACAX,GAAmBttE,MAAM,CAAEutE,OAAQ,eACnCO,IAGI8B,GAAYxpD,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACtBoE,EAAQ,CACZi6B,UAAW,MACXC,aAAc,MACd/T,QAAS,OACToO,eAAgB,aAChBnO,WAAY,SACZqmD,SAAU,OACV95B,WAAY,QAad,OAVK/2C,EAAKywE,aACRrsE,EAAK,cAAoB,SACzBA,EAAK,WAAiB,aACtBA,EAAK,UAAgB,KAGlBpE,EAAKoyB,UACRhuB,EAAK,QAAc,QAGd,yBAAKA,MAAOA,GAAQiyD,EAAKl1D,eAAenB,OAGjDtD,EAASu7C,OAAO,SAAU04B,GAAaC,ICxFvC,IAAM15B,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,UAG1By5B,GAAathC,QAAMlyC,MAAM,CAC7B0jE,eAAgB6C,GAAMxF,SAAS,CAAC,YAG5BqS,GAAalhC,QAAMlyC,MAAM,mBAAoB,CACjDI,KAAM,cACN4C,SAAUujE,GAAM3F,WAAW,CAAC,QAAS,SAAU,OAAQ,gBAGnD6S,GAAmBvhC,QAAMuI,QAC7B,mBACA44B,GACAD,GACA1B,GACA93B,GACA45B,GACA7C,GACAK,GAAmBttE,MAAM,CAAEutE,OAAQ,eACnCO,IAGIkC,GAAiB5pD,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACjC,OAAO,kBAAC4wE,GAAD,CAAW5wE,KAAMA,OAG1BtD,EAASu7C,OAAO,cAAe84B,GAAkBC,ICnDjD,IA0BeC,GA1BQzhC,QACpBlyC,MAAM,CACLy7C,UAAWvJ,QAAME,SAASF,QAAM8H,SAAS,GACzCiF,eAAgB/M,QAAM4H,UAAU5H,QAAM6H,UAEvCv6C,OAAM,SAAAswB,GAAI,MAAK,CACd8jD,mBACE,IAAK9jD,EAAK2rB,UAAW,OAAO,EAE5B,IAAMn8B,EAASwQ,EAAK3E,WAAW6U,gBAC/B,QAAK1gB,IAKDA,EAAOskB,OAAOzjC,OAAS2vB,EAAK2zC,SAGJ,OAAxB3zC,EAAKmvB,qBAAmDlsC,IAAxB+c,EAAKmvB,gBAChC3/B,EAAO6/B,SAASrvB,EAAKmvB,uBAKjC7b,SAAQ,SAAAtT,GAAI,MAAK,MC2CL+jD,GAnES3hC,QACrBlyC,MAAM,CACLo/C,YAAalN,QAAM4H,UAAU5H,QAAM6H,QACnCsF,YAAanN,QAAM4H,UAAU5H,QAAM6H,QACnCwF,gBAAiBrN,QAAM4H,UAAU5H,QAAM6H,QACvCkF,eAAgB/M,QAAM4H,UAAU5H,QAAM6H,UAEvCv6C,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,GAAIA,EAAKsvB,YAAa,CACpB,IAAM00B,EAAM,CACV,kBAAmB,YAA8B,IAAD,EAA1BpgD,EAA0B,EAA1BA,QAASqgD,EAAiB,EAAjBA,WACvB70B,EAAOpvB,EAAK3E,WAAW6U,gBAE7B,SAAKkf,GAASxrB,IAAW,UAAAwrB,EAAKthB,gBAAL,eAAeO,UAAUh+B,QAASuzB,MAIvDqgD,GAAmBA,EAAW/uE,MAAM,KAAKy3B,MAAK,SAAAoF,GAAC,OAAIqd,EAAKC,SAAStd,QAKvE,kBAAmB,YAA+B,IAA5BnO,EAA2B,EAA3BA,QAASsgD,EAAkB,EAAlBA,YAC7B,IAAKtgD,EAAS,CAAC,IAAD,gBACQ5D,EAAK3E,WAAWivB,MAAMz5C,UAD9B,IACZ,2BAAoD,CAAC,IAA5Cw5C,EAA2C,QAClD,GAAqB,YAAjBA,EAAQ/5C,MAAsB+5C,EAAQlJ,gBAAkBkJ,EAAQlJ,iBAAiBntC,OACnF,OAAO,GAHC,8BAMZ,OAAO,EAGT,IAAM/D,EAAM+vB,EAAK3E,WAAWivB,MAAM55C,IAAIkzB,GAEtC,QAAK3zB,IAEDi0E,EACsBA,EACrBhvE,MAAM,KACNjB,KAAI,SAAA89B,GAAC,OAAI9hC,EAAIi/C,UAAUnd,MACvBpF,MAAK,SAAAl2B,GAAC,OAAIA,GAAKA,EAAE6jB,YAIfrqB,EAAIojC,aAGb,qBAAsB,cAAGzP,QAAH,OAAkB5D,EAAK3E,WAAW6U,kBAG1D,GAAIt/B,OAAOQ,KAAK4yE,GAAKx7B,SAASxoB,EAAKsvB,aAOjC,OAAe,IANH00B,EAAIhkD,EAAKsvB,aAAa,CAChC1rB,QAAS5D,EAAKuvB,YACd20B,YAAalkD,EAAKyvB,gBAClBw0B,WAAYjkD,EAAKmvB,iBAOvB,OAAO,OAGV7b,SAAQ,SAAAtT,GAAI,MAAK,M,UCxCd8pB,GAAW1H,QAAMlyC,MAAM,CAC3BoqB,SAAU8nB,QAAME,SAASF,QAAM8H,SAAS,GACxC/gB,MAAOiZ,QAAM4H,UAAU5H,QAAM6H,QAC7Bj5C,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAC7BtI,OAAQS,QAAM4H,UAAU5H,QAAM6H,QAC9BjzC,MAAOorC,QAAM4H,UAAU5H,QAAM6H,UAGzBE,GAAQ/H,QACXlyC,MAAM,CACLI,KAAM,SACN00B,QAASod,QAAME,SAASF,QAAM8H,SAAS,GACvC1iB,OAAQ4a,QAAME,SAASF,QAAM6H,OAAQ,IAErC/2C,SAAUujE,GAAM3F,WAAW,CAAC,aAE7BphE,OAAM,SAAAswB,GAAI,MAAK,CACd,iBACE,IAAMkS,EAASlS,EAAK8T,OAAO5B,OAC3B,MAAkB,aAAXA,GAAoC,WAAXA,GAGlC,eAEE,OADAjiB,QAAQk9B,IAAIntB,EAAK8T,OAAOqwC,QACM,WAAvBnkD,EAAK8T,OAAOqwC,QAGrB,iBACE,OAAO56C,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC,aACE,OAAO3jB,0BAAgBqpB,EAAM0I,KAI/B24C,UAAS,KACA,MAGV/tC,SAAQ,SAAAtT,GAAI,MAAK,CAChBwhD,iBACE,IAAMn3B,EAAUrqB,EAAK8T,OAErBuW,EAAQk4B,oBAAsBl4B,EAAQ+5B,gBAEtCpkD,EAAKsS,aAAatS,EAAK1F,UAEvB+vB,EAAQg6B,gBAGV7B,WAAWr8D,GACT6Z,EAAKgF,QAAU7e,GAGjBmsB,YAAYnsB,GACV6Z,EAAK1F,SAAWnU,GAGlBokC,SAAQ,IACCvqB,EAAKwhD,qBAIZ8C,GAAcliC,QAAMuI,QAAQ,cAAeb,GAAUK,GAAOrG,IAE5DygC,G,uKACM,IAAD,EACiBh1E,KAAKqE,MAArBhB,EADD,EACCA,KAAMkoB,EADP,EACOA,MACV9jB,EAAQ,GAERpE,EAAKoE,QAAOA,EAAQiyD,EAAKlyD,aAAanE,EAAKoE,QAE1CpE,EAAKoyB,UACRhuB,EAAK,QAAc,QAGrB,IAAMwtE,GACH1pD,EAAM8D,SAASE,gBAAkBhE,EAAM8D,SAAS8G,sBACjD5K,EAAM8D,SAASC,eACfjsB,EAAK+uC,OAED/tC,EAAQ,CACZ2xB,QAAS3yB,EAAK0nB,SACd4E,SAAUtsB,EAAKkhC,OAAO2X,SACtBzqB,SAAU,SAAAzF,GACH3oB,EAAKyoB,WAAWqP,WACrB93B,EAAK4uE,iBACLjmD,EAAGkpD,YAAYxjD,OAAOyjD,UAI1B,GAAI9xE,EAAK+xE,WAAY,CACnB,IAAMC,EAASh0E,OAAOmnC,OAAO,CAAE5a,QAAS,OAAQC,WAAY,SAAU8T,aAAc,GAAKl6B,GAEzF,OACE,kBAAC,KAAKokB,KAAN,CAAWpkB,MAAO4tE,GAChB,kBAAC,KAAD,eAAUv0E,KAAMuC,EAAK40B,QAAY5zB,GAC9BhB,EAAK40B,OACLg9C,GAAc,kBAAC,GAAD,SAAQ5xE,EAAK+uC,OAAb,OAKrB,OACE,yBAAK3qC,MAAOA,GACV,kBAAC,KAAD,eAAOhG,MAAO4B,EAAK40B,OAAQxwB,MAAO,CAAEmmB,QAAS,eAAgB+T,aAAc,UAAet9B,GACvFhB,EAAK40B,OACLg9C,GAAc,kBAAC,GAAD,SAAQ5xE,EAAK+uC,OAAb,W,GA1CC9jB,aAkDtBgnD,GAAY1mD,YAAO,QAAPA,CAAgBnE,YAASuqD,KAE3Cj1E,EAASu7C,OAAO,SAAUy5B,GAAaO,I,ICnI/BpzC,GAAWC,KAAXD,OA0BFqY,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,QAE9Bo5B,WAAYjhC,QAAM4H,UAAU5H,QAAM8H,SAElChY,OAAQkQ,QAAME,SAASF,QAAM8L,YAAY,CAAC,SAAU,eAAgB,aAAc,UAElFi2B,OAAQ/hC,QAAME,SAASF,QAAM8L,YAAY,CAAC,SAAU,SAAU,aAAc,cAGxE/D,GAAQ/H,QACXlyC,MAAM,CACL0+B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAElCg6C,SAAUrJ,QAAME,SAASF,QAAM8H,SAAS,GACxCllB,QAASod,QAAME,SAASF,QAAM8H,SAAS,GAEvC55C,KAAM,UACN4C,SAAUujE,GAAM3F,WAAW,CAAC,SAAU,OAAQ,SAAU,gBAEzDphE,OAAM,SAAAswB,GAAI,MAAK,CACd,yBACE,MAAuB,WAAhBA,EAAKkS,QAAuC,iBAAhBlS,EAAKkS,QAG1C,iBACE,OAAO3I,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvCwoB,OAAM,IACG9iB,EAAK3E,WAAW2xB,QAAQt8C,IAAIsvB,EAAK3vB,MAG1C,wBACE,IAAMg6C,EAAUrqB,EAAKmhB,iBACrB,OAAIkJ,GAAWA,EAAQr2C,OAAe,CAAEq2C,WAEjC,MAGT,aACE,GAAIrqB,EAAK2rB,UAAW,CAClB,IAAMyD,EAAOpvB,EAAK3E,WAAW6U,gBAC7B,OAAKkf,EAEEpvB,EAAK3E,WAAWtE,QAAQ5G,MAAK,SAAAxN,GAAC,OAAIA,EAAE0rB,YAAcrO,GAAQrd,EAAEysC,OAASA,KAF1D,KAIpB,OAAOpvB,EAAK3E,WAAWtE,QAAQ5G,MAAK,SAAAxN,GAAC,OAAIA,EAAE0rB,YAAcrO,UAmB5DsT,SAAQ,SAAAtT,GAAI,MAAK,CAChB2vB,eAE0B,IAApB3vB,EAAKqjD,aAAqBrjD,EAAKmkD,OAAS,WACpB,IAApBnkD,EAAKqjD,aAAsBrjD,EAAKmkD,OAAS,aAG/C9uB,cACMr1B,EAAKlqB,OAAQkqB,EAAK8kD,UAAU9kD,EAAKlqB,OAAOg6B,WACvC9P,EAAK8kD,UAAU,KAGtB7C,gBACE/+B,GAAUlB,QAAQhiB,EAAK8hD,iBAAL,oBAAqC9hD,EAAK3vB,KAA1C,oBAGpB0wE,UAAU12B,GACRA,EAAQlJ,iBAAiBztC,SAAQ,SAAAs6B,GAC/BhO,EAAKkvB,UAAUlhB,GAAGsE,aAAY,OAKlCzB,gBAEA4wC,iBAAiBzwE,GACfgvB,EAAK8kD,UAAUjuE,MAAMC,QAAQ9F,GAASA,EAAQ,CAACA,KAIjDozE,gBACEpkD,EAAK+N,eAAer6B,SAAQ,SAAA+C,GAAC,OAAIA,EAAE67B,aAAY,OAGjDwyC,UAAUj0E,GACRmvB,EAAKohD,aAAa1tE,SAAQ,SAAAw+B,GAAM,OAAIA,EAAOI,YAAYzhC,EAAO23C,SAAStW,EAAO/I,OAAS+I,EAAO1K,aAIhG68C,eACE,GAAIrkD,EAAKlqB,OACPkqB,EAAKlqB,OAAOs5C,KAAKM,SAAS1vB,QAE1B,GAAIA,EAAK2rB,UAAW,CAClB,IAAMyD,EAAOpvB,EAAK3E,WAAW6U,gBAC7B,IAAKkf,EAAM,OAAO,KAClBA,EAAKM,SAAS1vB,QAEdA,EAAK3E,WAAWk3B,aAAa,GAAI,CAAElI,QAASrqB,EAAKmhB,kBAAoBnhB,EAAMA,EAAK2zC,SAKtFlxB,cACE,IAAM6H,EAAQtqB,EAAKmhB,iBAEnB,GAAImJ,GAASA,EAAMt2C,OAAQ,CACzB,IAAM2/D,EAAS3zC,EAAK2zC,QAAU3zC,EAAK3vB,KACnC,MAAO,CACL8B,GAAI6tB,EAAK4O,IACTP,UAAWrO,EAAK3vB,KAChBw8C,QAAS8mB,EACTrjE,KAAM0vB,EAAK1vB,KACXU,MAAO,CACLq5C,QAASC,MAMjBF,cAAc7zC,EAAKlE,GAGjB,GAFA2tB,EAAK6Q,eAEAt6B,EAAIvF,MAAMq5C,QAAS,MAAM,IAAIt5C,MAAM,mBAEpCwF,EAAIpE,KAAI6tB,EAAK4O,IAAMr4B,EAAIpE,IAE3B6tB,EAAKyrB,SAAWl1C,EAAIk1C,SAEpBl1C,EAAIvF,MAAMq5C,QAAQ32C,SAAQ,SAAAs6B,GACxB,IAAMkE,EAASlS,EAAKkvB,UAAUlhB,GAE9B,IAAKkE,EAAQ,MAAM,IAAInhC,MAAM,YAAci9B,GAE3CkE,EAAOI,aAAY,WAKrB5J,GAAe0Z,QAAMuI,QACzB,eACA+2B,GACA53B,GACAo3B,GAAmBttE,MAAM,CAAEutE,OAAQ,gBACnCU,GACAgC,GACAE,GACA55B,IAGI46B,GAAa/qD,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KAEvBoyE,EAAepyE,EAAKkxE,mBAAqB,GAAK,CAAE3mD,QAAS,QAM/D,OAJuB,IAAnBvqB,EAAKqyE,YACPD,EAAY,QAAc,QAI1B,yBAAKhuE,MAAK,2BARE,CAAEi6B,UAAW,MAAOC,aAAc,QAQnB8zC,IACR,WAAhBpyE,EAAKuxE,OACJ,kBAAC,KAAD,CACEntE,MAAO,CAAE6N,MAAO,QAChB7T,MAAO4B,EAAKm7B,eAAe95B,KAAI,SAAA+5B,GAAC,OAAIA,EAAExG,UACtCyK,KAAsB,aAAhBr/B,EAAKs/B,OAAwB,WAAa,GAChDlR,SAAU,SAAS7a,EAAK++D,GACtB,GAAIruE,MAAMC,QAAQqP,GAChBvT,EAAKwxE,gBACLj+D,EAAIzS,SAAQ,SAAAq+B,GAAC,OAAIn/B,EAAKs8C,UAAUnd,GAAGO,aAAY,MAC/C1/B,EAAKyxE,mBACA,CACL,IAAM5tE,EAAI7D,EAAKs8C,UAAU/oC,GACrB1P,GACFA,EAAE+qE,oBAKP5uE,EAAKwuE,aAAantE,KAAI,SAAAmB,GAAC,OACtB,kBAAC,GAAD,CAAQzC,IAAKyC,EAAEoyB,OAAQx2B,MAAOoE,EAAEoyB,QAC7BpyB,EAAEoyB,YAKT,kBAAC,KAAD,CAAM28C,OAAQvxE,EAAKuxE,QAASlb,EAAKl1D,eAAenB,QAMxDtD,EAASu7C,OAAO,UAAWniB,GAAcq8C,IClOzC,IAAMj7B,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,UAG1By5B,GAAathC,QAAMlyC,MAAM,CAC7B0jE,eAAgB6C,GAAMxF,SAAS,CAAC,gBAG5BqS,GAAalhC,QAChBlyC,MAAM,wBAAyB,CAC9BI,KAAM,aACN4C,SAAUujE,GAAM3F,WAAW,CAAC,QAAS,SAAU,OAAQ,gBAExDphE,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,IAAM8iB,EAAS9iB,EAAK8iB,SACpB,OAAOA,GAAUA,EAAO9uC,OAAS,GAGnC,wBACE,IAAMuC,EAAM,GAGZ,OAFAA,EAAIypB,EAAKywB,YAAczwB,EAAKmhB,iBAErB5qC,GAGT,iBACE,MAAO,mBAGT,gBACE,MAAO,kBAIP4uE,GAAc/iC,QAAMuI,QACxB+2B,GACA6B,GACAD,GACAx5B,GACA45B,GACA7C,GACAK,GAAmBttE,MAAM,CAAEutE,OAAQ,gBAG/BiE,GAAuBhjC,QAAMuI,QAAQ,uBAAwBw6B,IAE7DE,GAAqBrrD,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACrC,OAAO,kBAAC4wE,GAAD,CAAW5wE,KAAMA,OAG1BtD,EAASu7C,OAAO,kBAAmBu6B,GAAsBC,ICtDzD,IAAMv7B,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,QAE9BvnC,QAAS0/B,QAAME,SAASoS,GAAYn/B,QAAS,OAC7C41B,UAAW/I,QAAME,SAASoS,GAAYrxC,MAAO,WAE7CgoC,YAAajJ,QAAME,SAASoS,GAAYrxC,MAAO,WAC/CioC,YAAalJ,QAAME,SAASF,QAAM6H,OAAQ,OAGtCE,GAAQ/H,QACXlyC,MAAM,CACLI,KAAM,aAIPZ,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,IAAM8iB,EAAS9iB,EAAK8iB,SACpB,OAAOA,GAAUA,EAAO9uC,OAAS,GAGnC,iBACE,OAAOyiE,GAAMrF,sBAAsBpxC,EAAM,mBAG5CsT,SAAQ,SAAAtT,GAAI,MAAK,CAChBoqB,cAAc7zC,KAEdo5C,cACE,IAAM21B,EAAKnY,GAAej7D,SAC1BozE,EAAGluB,SAAWp3B,EAEdA,EAAKhwB,MAAQ,CAAEu1E,SAAUD,QAIzBE,GAAgBpjC,QAAMuI,QAAQ,gBAAiBb,GAAUK,GAAOu3B,IAMtEpyE,EAASu7C,OAAO,WAAY26B,IAJZ,WACd,OAAO,QCjCT,IAAM17B,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,UAG1By5B,GAAathC,QAAMlyC,MAAM,CAC7B0jE,eAAgB6C,GAAMxF,SAAS,CAAC,YAG5BqS,GAAalhC,QAChBlyC,MAAM,uBAAwB,CAC7BI,KAAM,iBACN4C,SAAUujE,GAAM3F,WAAW,CAAC,QAAS,SAAU,OAAQ,gBAExDphE,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,IAAM8iB,EAAS9iB,EAAK8iB,SACpB,OAAOA,GAAUA,EAAO9uC,OAAS,OAIjCmxE,GAAc/iC,QAAMuI,QACxB44B,GACAD,GACAkC,GACA17B,GACA45B,GACA7C,GACAK,GAAmBttE,MAAM,CAAEutE,OAAQ,eACnCO,IAGI+D,GAAsBrjC,QAAMuI,QAAQ,sBAAuBw6B,IAE3DO,GAAoB1rD,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACpC,OAAO,kBAAC4wE,GAAD,CAAW5wE,KAAMA,OAG1BtD,EAASu7C,OAAO,iBAAkB46B,GAAqBC,I,mCC1DjDC,GAAgBvjC,QACnBlyC,MAAM,CACLinB,gBAAiBirB,QAAME,SAASF,QAAM6H,OAAQ,eAC9Cj5C,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAC7BziB,OAAQ4a,QAAM4H,UAAU5H,QAAM6H,QAC9B3vB,SAAU8nB,QAAME,SAASF,QAAM8H,SAAS,GACxCjgB,IAAKmY,QAAM1+B,SAEZhU,OAAM,SAAAswB,GAAI,MAAK,MACfsT,SAAQ,SAAAtT,GAAI,MAAK,CAChB4lD,MAAMz/D,GACJ6Z,EAAK7I,gBAAkBhR,GAGzB0/D,OAAO57C,GACLjK,EAAKiK,IAAMA,GAGbqI,YAAYnsB,GACV6Z,EAAK1F,SAAWnU,OAoBhB2jC,GAAW1H,QAAMlyC,MAAM,CAC3B41E,KAAM1jC,QAAME,SAASF,QAAM8L,YAAY,CAAC,IAAK,MAAO,KACpD63B,SAAU3jC,QAAM4H,UAAU5H,QAAM8L,YAAY,CAAC,IAAK,OAElD83B,aAAc5jC,QAAM4H,UAAU5H,QAAM6H,QACpCg8B,WAAY7jC,QAAME,SAASF,QAAM8L,YAAY,CAAC,OAAQ,QAAS,UAAW,QAI1Eg4B,qBAAsB9jC,QAAM4H,UAAU5H,QAAM6H,QAE5C55C,KAAM+xC,QAAM4H,UAAU5H,QAAM6H,QAC5Bj5C,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,UAGzBE,GAAQ/H,QACXlyC,MAAM,CACLiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCnB,KAAM,OACNouB,OAAQ0jB,QAAME,SAASF,QAAM1+B,OAAQ,GAErC/T,QAASyyC,QAAMiM,MAAMs3B,MAGtBj2E,OAAM,SAAAswB,GAAI,MAAK,MACfsT,SAAQ,SAAAtT,GAAI,MAAK,CAChBmmD,YACEnmD,EAAKtB,OAASsB,EAAKtB,OAAS,GAG9BkqB,UAAUw9B,EAAMn8C,GACd,IAAM4E,EAAM82C,GAAczzE,OAAO,CAC/BlB,MAAOgvB,EAAKgmD,aACZ/7C,IAAKA,EACLzC,OAAQ4b,GAAiBpjB,EAAKgmD,aAAcI,EAAKn8C,MAGnDjK,EAAKrwB,QAAQS,KAAKy+B,IAGpBjO,YAAY9F,GACV,IAAM3U,EAAMi9B,GAAiBpjB,EAAKhvB,MAAO8pB,EAAMiE,KAAKilB,SAKpDhkB,EAAKrwB,QAAU,GACfwW,EAAIzS,SAAQ,SAACq+B,EAAG9H,GAAJ,OAAYjK,EAAK4oB,UAAUziC,EAAK8jB,MAE5C9jB,EAAIzS,SAAQ,SAACq+B,EAAG9H,GACd8H,EAAC,UAAgB9H,KAGnBjK,EAAKwH,OAASrhB,EACd6Z,EAAKmmD,aAGPE,UAAU,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAChBD,IAAaC,IAEbvmD,EAAKkmD,sBACPlmD,EAAKrwB,QAAQ22E,GAAUV,MAAM5lD,EAAKkmD,sBAGpClmD,EAAKrwB,QAAQ22E,GAAUh0C,aAAY,GAE/BtS,EAAKwH,SAAQxH,EAAKwH,OAASg/C,KAAUxmD,EAAKwH,OAAQ8+C,EAAUC,IAEhEvmD,EAAKrwB,QAAU62E,KAAUxmD,EAAKrwB,QAAS22E,EAAUC,GACjDvmD,EAAKmmD,cAGP1jC,cACE,IAAMxuC,EAAM,GAEZ+rB,EAAKwH,OAAO9zB,SAAQ,SAACq+B,EAAG9H,GACtBh2B,EAAI+rB,EAAKrwB,QAAQs6B,GAAKA,KAAO,GAAK,EAAIA,MAUxC,IAPA,IAAMw8C,EAAS71E,OAAOQ,KAAK6C,GACxBuW,MAAK,SAACrZ,EAAG0R,GAAJ,OAAU1R,EAAI0R,KACnB5O,KAAI,SAAS89B,GACZ,OAAO99B,EAAI89B,MAGTzX,EAAW,GACRllB,EAAI,EAAGA,EAAIxE,OAAOQ,KAAK6C,GAAKD,OAAQoB,IAC3CklB,EAAS0F,EAAKrwB,QAAQyF,GAAG60B,KAAOjK,EAAKrwB,QAAQyF,GAAGklB,SAAW,EAAI,EAGjE,MAAO,CACL+T,UAAWrO,EAAK3vB,KAChBw8C,QAAS7sB,EAAK3vB,KACdW,MAAO,CACL01E,QAASD,EACTnsD,SAAUA,KAKhB8vB,cAAc7zC,EAAKlE,GACjB,IAAMo0E,EAAS,GACT92E,EAAU,GACVg3E,EAAc,GAEpBpwE,EAAIvF,MAAM01E,QAAQhzE,SAAQ,SAACq+B,EAAG9H,GACxB08C,EAAY50C,GACd40C,EAAY50C,GAAG3hC,KAAK65B,GAEpB08C,EAAY50C,GAAK,CAAC9H,MAItBr5B,OAAOQ,KAAKu1E,GACTn8D,MAAK,SAACrZ,EAAG0R,GAAJ,OAAUA,EAAI1R,KACnBuC,SAAQ,SAAAq+B,GACO40C,EAAY50C,GACpBr+B,SAAQ,SAAAu2B,GACZt6B,EAAQS,KAAK4vB,EAAKrwB,QAAQs6B,IAC1Bw8C,EAAOr2E,KAAK4vB,EAAKwH,OAAOyC,UAI9Bt6B,EAAQ+D,SAAQ,SAACiP,EAAGsnB,GAAJ,OAAYtnB,EAAEkjE,OAAO57C,MAErCjK,EAAKwH,OAASi/C,EACdzmD,EAAKrwB,QAAUA,EAGfqwB,EAAKmmD,iBAILS,GAAYxkC,QAAMuI,QAAQ,YAAab,GAAUK,IAEjD08B,GAAaC,cAAe,kBAAM,yBAAK1vD,UAAU,mBAEvD,SAAS2vD,KACP,IACE,MAAqC,qBAAvB7vD,OAAOiY,cAA4E,IAA7C63C,UAAUC,UAAU9vE,QAAQ,YAChF,MAAOQ,GACP,OAAO,GAIX,IAAMuvE,GAAeC,cAAgB,YAAsB,IACrDC,EADkCx0E,EAAkB,EAAlBA,KAAM5B,EAAY,EAAZA,MAExC+1E,KACFK,EAAa,YAGf,IAAMnzE,EAAM,CACVgC,KAAM,SAAA87B,GAAC,OAAI,0BAAM3a,UAAWgwD,GAAar1C,EAAEvK,SAC3CxjB,MAAO,SAAA+tB,GAAC,OAAI,yBAAKhpB,IAAKgpB,EAAEvK,OAAQqhC,IAAI,MACpCwe,MAAO,SAAAt1C,GAAC,OAAI,2BAAOhpB,IAAKgpB,EAAEvK,WAG5B,OACE,yBACExwB,MAAO,CACL2mB,QAAS,MACT2pD,WAAY,OACZnqD,QAAS,OACTC,WAAY,SACZL,WAAY/rB,EAAMspB,SAAW1nB,EAAKszE,qBAAuB,eAE3D9uD,UAAWgwD,EACX3sD,QAAS,SAAAc,GASP,OARIvqB,EAAMspB,UACRtpB,EAAMshC,aAAY,GAClB1/B,EAAKuzE,cAELn1E,EAAMshC,aAAY,GAClB1/B,EAAKuzE,aAEP5qD,EAAGa,kBACI,IAGT,kBAACyqD,GAAD,MACC5yE,EAAIrB,EAAKqzE,WAAWtxE,eAAe3D,OAKpCu2E,GAAeC,cAAkB,YAAsB,IAAnB50E,EAAkB,EAAlBA,KAAMS,EAAY,EAAZA,MAC9C,OACE,kBAAC,IAAD,CAAMo0E,QAAM,GACTp0E,EAAMY,KAAI,SAACjD,EAAOs4B,GAAR,OACT,kBAAC49C,GAAD,CACEv0E,IAAG,eAAU22B,GACbA,MAAOA,EACPt4B,MAAOA,EACPqS,MAAOrS,EAAMmmB,gBACbvkB,KAAMA,EACN6nB,QAAS,SAAAc,cAsBbmsD,GAAUvpD,YAAO,QAAPA,CAAgBnE,aAfZ,SAAC,GAAoB,EAAlBc,MAAmB,IAAZloB,EAAW,EAAXA,KACtBgB,EAAQ,GAOd,OANImzE,KACFnzE,EAAK,WAAiB,IAEtBA,EAAK,SAAe,EAIpB,6BACE,kBAAC2zE,GAAD,eAAc7oD,OAAQ9rB,EAAK8rB,OAAQ9rB,KAAMA,EAAMS,MAAOT,EAAKjD,QAASg4E,UAAW/0E,EAAKyzE,WAAezyE,SAOzGtE,EAASu7C,OAAO,OAAQ+7B,GAAWc,IC9OnC,IAAM59B,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,QAC9B29B,eAAgBxlC,QAAM4H,UAAU5H,QAAM6H,QACtC49B,UAAWzlC,QAAM4H,UAAU5H,QAAM6H,QACjC69B,WAAY1lC,QAAM4H,UAAU5H,QAAM6H,UAG9BE,GAAQ/H,QACXlyC,MAAM,CACLI,KAAM,WACNgqB,SAAU8nB,QAAM4H,UAAU5H,QAAM8L,YAAY,CAAC,OAAQ,QAAS,YAE/Dx+C,OAAM,SAAAswB,GAAI,MAAK,CACd,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC,YACE,OAAO0F,EAAK2zC,OAAOz+D,MAAM,MAG3B,WACE,OAAO8qB,EAAK3E,WAAWivB,MAAM55C,IAAIsvB,EAAKsqB,MAAM,KAG9C,YACE,OAAOtqB,EAAK3E,WAAWivB,MAAM55C,IAAIsvB,EAAKsqB,MAAM,KAG9C,gBACE,MAAO,YAGT,aACE,OAAOtqB,EAAK3E,WAAWtE,QAAQ5G,MAAK,SAAAxN,GAAC,OAAIA,EAAE0rB,YAAcrO,UAG5DsT,SAAQ,SAAAtT,GAAI,MAAK,CAChBqkD,eAAgB,IACNvuE,EAAqBkqB,EAArBlqB,OAAQwkB,EAAa0F,EAAb1F,SACC,SAAbA,EACExkB,GAAQA,EAAOs5C,KAAKiB,aAAav6C,GAEjCA,EAAQA,EAAO45C,SAASp1B,GAE1B0F,EAAK3E,WAAWk3B,aAAa,GAAI,CAAEj4B,YAAY0F,EAAMA,EAAK3vB,OAKhEy0E,YAAyB,IAAfl/D,EAAc,uDAAR,OACdoa,EAAK1F,SAAW1U,EAChBoa,EAAKta,KAAKg9B,QAAQ,QAAiB,SAAR98B,EAAiBoa,EAAK+nD,WAAa,IAC9D/nD,EAAKra,MAAM+8B,QAAQ,QAAiB,UAAR98B,EAAkBoa,EAAK+nD,WAAa,KAGlEC,aACEhoD,EAAK8kD,UAA4B,SAAlB9kD,EAAK1F,SAAsB,OAAS,QACnD0F,EAAKqkD,gBAGP4D,cACEjoD,EAAK8kD,UAA4B,UAAlB9kD,EAAK1F,SAAuB,OAAS,SACpD0F,EAAKqkD,gBAGP10B,cAC4B,IAAtB3vB,EAAKsqB,MAAMt2C,QAAgBgsB,EAAKsqB,MAAM,KAAOtqB,EAAKsqB,MAAM,IAC1DpH,GAAUhzB,MAAV,mGAKF,IAAI0lC,EAAY,GAChB,GAAI51B,EAAK4nD,eAAgB,CACvB,IAAM7kC,EAAIkmB,EAAKlyD,aAAaipB,EAAK4nD,gBACjC,IAAK,IAAIj1E,KAAOowC,EACd6S,EAAUjjD,GAAOowC,EAAEpwC,QAGrBijD,EAAY,CACVz+B,gBAAiB,UACjBjQ,OAAQ,qBAIZ8Y,EAAK+nD,WAAanyB,GAGpBP,cACMr1B,EAAKlqB,OAAQkqB,EAAK8kD,UAAU9kD,EAAKlqB,OAAO9E,MAAMspB,UAC7C0F,EAAK8kD,aAGZoD,qBAEE1uE,YAAW,WAAO,IAAD,EACfwmB,EAAKta,KAAKg9B,QAAQ,UAAW1iB,EAAKgoD,YAClChoD,EAAKra,MAAM+8B,QAAQ,UAAW1iB,EAAKioD,aACnCjoD,EAAK8kD,UAAL,UAAe9kD,EAAKlqB,cAApB,aAAe,EAAa9E,MAAMspB,kBAKpC6tD,GAAgB/lC,QAAMuI,QAAQ,gBAAiBb,GAAU43B,GAAav3B,IAM5E76C,EAASu7C,OAAO,WAAYs9B,IAJR,WAClB,OAAO,QAIT74E,EAASw7C,cAAcq9B,ICtHvB,IAAMr+B,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,QAE9BvnC,QAAS0/B,QAAME,SAASoS,GAAYn/B,QAAS,OAC7C41B,UAAW/I,QAAME,SAASoS,GAAYrxC,MAAO,WAE7CioC,YAAalJ,QAAME,SAASF,QAAM6H,OAAQ,KAC1CoB,YAAajJ,QAAME,SAASoS,GAAYrxC,MAAO,WAE/C8gD,UAAW/hB,QAAME,SAASF,QAAM6H,OAAQ,SACxCma,WAAYhiB,QAAME,SAASF,QAAM6H,OAAQ,YAGrCy5B,GAAathC,QAAMlyC,MAAM,CAC7B0jE,eAAgB6C,GAAMxF,SAAS,CAAC,YAG5B9mB,GAAQ/H,QACXlyC,MAAM,CACLI,KAAM,UAGNk3B,OAAQ4a,QAAME,SAASF,QAAM6H,OAAQ,MAEtCv6C,OAAM,SAAAswB,GAAI,MAAK,CACd,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,cAGxCgZ,SAAQ,SAAAtT,GAAI,MAAK,CAChBoqB,kBAEAuF,cACE,IAAM+J,EAAOyT,GAAcj7D,SACrB6R,EAAYopD,GAAgBj7D,SAElCwnD,EAAKtC,SAAWp3B,EAChBjc,EAAUqzC,SAAWp3B,EAErBA,EAAKhwB,MAAQ,CACX0pD,KAAMA,QAMR0uB,GAAehmC,QAAMuI,QAAQ,eAAgB+2B,GAAa53B,GAAU45B,GAAYv5B,IAItF76C,EAASu7C,OAAO,UAAWu9B,IAFX,kBAAM,QC1CtB,IAAMt+B,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,UAG1By5B,GAAathC,QAAMlyC,MAAM,CAC7B0jE,eAAgB6C,GAAMxF,SAAS,CAAC,YAG5BqS,GAAalhC,QAAMlyC,MAAM,qBAAsB,CACnDI,KAAM,gBACN4C,SAAUujE,GAAM3F,WAAW,CAAC,QAAS,SAAU,OAAQ,gBAGnDqU,GAAc/iC,QAAMuI,QACxB44B,GACAD,GACA8E,GACAt+B,GACA45B,GACA7C,GACAK,GAAmBttE,MAAM,CAAEutE,OAAQ,eACnCO,IAGI2G,GAAqBjmC,QAAMuI,QAAQ,qBAAsBw6B,IAEzDmD,GAAmBtuD,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACnC,OAAO,kBAAC4wE,GAAD,CAAW5wE,KAAMA,OAG1BtD,EAASu7C,OAAO,gBAAiBw9B,GAAoBC,ICrDrD,IAAMC,GAAkBnmC,QACrBlyC,MAAM,CACLinB,gBAAiBirB,QAAME,SAASF,QAAM6H,OAAQ,eAC9Cj5C,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAC7BziB,OAAQ4a,QAAM4H,UAAU5H,QAAM6H,QAC9B3vB,SAAU8nB,QAAME,SAASF,QAAM8H,SAAS,GACxCjgB,IAAKmY,QAAM1+B,SAEZhU,OAAM,SAAAswB,GAAI,MAAK,MACfsT,SAAQ,SAAAtT,GAAI,MAAK,CAChB4lD,MAAMz/D,GACJ6Z,EAAK7I,gBAAkBhR,GAGzB0/D,OAAO57C,GACLjK,EAAKiK,IAAMA,GAGbqI,YAAYnsB,GACV6Z,EAAK1F,SAAWnU,OA4ChB2jC,GAAW1H,QAAMlyC,MAAM,CAC3B41E,KAAM1jC,QAAME,SAASF,QAAM8L,YAAY,CAAC,IAAK,MAAO,KACpD63B,SAAU3jC,QAAM4H,UAAU5H,QAAM8L,YAAY,CAAC,IAAK,OAGlD+3B,WAAY7jC,QAAME,SAASF,QAAM6H,OAAQ,QACzCw8B,OAAQrkC,QAAME,SAASF,QAAM8H,SAAS,GACtCs+B,SAAUpmC,QAAME,SAASF,QAAM8H,SAAS,GAExCg8B,qBAAsB9jC,QAAM4H,UAAU5H,QAAM6H,QAE5C55C,KAAM+xC,QAAM4H,UAAU5H,QAAM6H,QAC5Bj5C,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,UAGzBE,GAAQ/H,QACXlyC,MAAM,CACLiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCnB,KAAM,SACNouB,OAAQ0jB,QAAME,SAASF,QAAM1+B,OAAQ,GAErC/T,QAASyyC,QAAMiM,MAAMk6B,MAGtB74E,OAAM,SAAAswB,GAAI,MAAK,MACfsT,SAAQ,SAAAtT,GAAI,MAAK,CAChBmmD,YACEnmD,EAAKtB,OAASsB,EAAKtB,OAAS,GAG9B+pD,WAAWtiE,EAAK8jB,GACd,IAAM4E,EAAM05C,GAAgBr2E,OAAO,CACjClB,MAAOmV,EACP8jB,IAAKA,EACLzC,OAAQrhB,IAGV6Z,EAAKrwB,QAAQS,KAAKy+B,IAGpBw3C,UAAU,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAChBD,IAAaC,IAEbvmD,EAAKkmD,sBACPlmD,EAAKrwB,QAAQ22E,GAAUV,MAAM5lD,EAAKkmD,sBAGpClmD,EAAKrwB,QAAQ22E,GAAUh0C,aAAY,GAE/BtS,EAAKwH,SAAQxH,EAAKwH,OAASg/C,KAAUxmD,EAAKwH,OAAQ8+C,EAAUC,IAEhEvmD,EAAKrwB,QAAU62E,KAAUxmD,EAAKrwB,QAAS22E,EAAUC,GACjDvmD,EAAKmmD,cAGP1jC,YAAW,KACF,CACLpU,UAAWrO,EAAK3vB,KAChBw8C,QAAS7sB,EAAK3vB,KACdW,MAAO,CAELqC,MAAO2sB,EAAKrwB,QAAQsE,KAAI,SAAA0O,GAAC,OAAIA,EAAE3R,SAC/BspB,SAAU0F,EAAKrwB,QAAQsE,KAAI,SAAA0O,GAAC,OAAIA,EAAE2X,eAKxC8vB,cAAc7zC,EAAKlE,GACjBkE,EAAIvF,MAAMqC,MAAMK,SAAQ,SAACq+B,EAAG9H,GAC1BjK,EAAKyoD,WAAW12C,EAAG9H,MAGrBjK,EAAKmmD,iBAILuC,GAActmC,QAAMuI,QAAQ,cAAeb,GAAUK,IAErD08B,GAAaC,cAAe,kBAAM,yBAAK1vD,UAAU,mBAEvD,SAAS2vD,KACP,IACE,MAAqC,qBAAvB7vD,OAAOiY,cAA4E,IAA7C63C,UAAUC,UAAU9vE,QAAQ,YAChF,MAAOQ,GACP,OAAO,GAIX,IAAMuvE,GAAeC,cAAgB,YAAsB,IACrDC,EADkCx0E,EAAkB,EAAlBA,KAAM5B,EAAY,EAAZA,MAExC+1E,KACFK,EAAa,YAGf,IAAMnzE,EAAM,CACVgC,KAAM,SAAA87B,GAAC,OAAI,0BAAM3a,UAAWgwD,GAAar1C,EAAEvK,SAC3CxjB,MAAO,SAAA+tB,GAAC,OAAI,yBAAKhpB,IAAKgpB,EAAEvK,OAAQqhC,IAAI,MACpCwe,MAAO,SAAAt1C,GAAC,OAAI,2BAAOhpB,IAAKgpB,EAAEvK,WAG5B,OACE,yBACExwB,MAAO,CACL2mB,QAAS,MACT2pD,WAAY,OACZnqD,QAAS,OACTC,WAAY,SACZL,WAAY/rB,EAAMspB,SAAW1nB,EAAKszE,qBAAuB,eAE3D9uD,UAAWgwD,EACX3sD,QAAS,SAAAc,GASP,OARIvqB,EAAMspB,UACRtpB,EAAMshC,aAAY,GAClB1/B,EAAKuzE,cAELn1E,EAAMshC,aAAY,GAClB1/B,EAAKuzE,aAEP5qD,EAAGa,kBACI,IAGT,kBAAC,GAAD,MACCnoB,EAAIrB,EAAKqzE,WAAWtxE,eAAe3D,OAKpCu2E,GAAeC,cAAkB,YAAsB,IAAnB50E,EAAkB,EAAlBA,KAAMS,EAAY,EAAZA,MAC9C,OACE,kBAAC,IAAD,CAAMo0E,QAAM,GACTp0E,EAAMY,KAAI,SAACjD,EAAOs4B,GAAR,OACT,kBAAC,GAAD,CACE32B,IAAG,eAAU22B,GACbA,MAAOA,EACPt4B,MAAOA,EACPqS,MAAOrS,EAAMmmB,gBACbvkB,KAAMA,EACN6nB,QAAS,SAAAc,cAsBbotD,GAAYxqD,YAAO,QAAPA,CAAgBnE,aAfZ,SAAC,GAAoB,EAAlBc,MAAmB,IAAZloB,EAAW,EAAXA,KACxBgB,EAAQ,GAOd,OANImzE,KACFnzE,EAAK,WAAiB,IAEtBA,EAAK,SAAe,EAIpB,6BACE,kBAAC,GAAD,eAAc8qB,OAAQ9rB,EAAK8rB,OAAQ9rB,KAAMA,EAAMS,MAAOT,EAAKjD,QAASg4E,UAAW/0E,EAAKyzE,WAAezyE,SAOzGtE,EAASu7C,OAAO,SAAU69B,GAAaC,I,cCzMjC7+B,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,QAE9B2+B,UAAWxmC,QAAME,SAASF,QAAM6H,OAAQ,KACxC3qB,KAAM8iB,QAAME,SAASF,QAAM6H,OAAQ,QACnCh5B,KAAMmxB,QAAME,SAASF,QAAM6H,OAAQ,UACnC4+B,aAAczmC,QAAME,SAASF,QAAM6H,OAAQ,KAE3CtI,OAAQS,QAAM4H,UAAU5H,QAAM6H,UAG1BE,GAAQ/H,QACXlyC,MAAM,CACL0+B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAClCnB,KAAM,SACN69C,OAAQ/L,QAAM4H,UAAU5H,QAAM1+B,UAE/BhU,OAAM,SAAAswB,GAAI,MAAK,CACd,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC6mB,eAAc,IACLnhB,EAAKmuB,OAGd,wBACE,IAAMA,EAASnuB,EAAKmhB,iBACpB,OAAKgN,EACE,CAAEA,UADW,MAItB,iBACE,OAAOnuB,EAAKmuB,OAAS,GAGvB,aACE,GAAInuB,EAAK2rB,UAAW,CAClB,IAAMyD,EAAOpvB,EAAK3E,WAAW6U,gBAC7B,OAAKkf,EAEEpvB,EAAK3E,WAAWtE,QAAQ5G,MAAK,SAAAxN,GAAC,OAAIA,EAAE0rB,YAAcrO,GAAQrd,EAAEysC,OAASA,KAF1D,KAIpB,OAAOpvB,EAAK3E,WAAWtE,QAAQ5G,MAAK,SAAAxN,GAAC,OAAIA,EAAE0rB,YAAcrO,UAG5DsT,SAAQ,SAAAtT,GAAI,MAAK,CAChBgvB,kBAAiB,IACRhvB,EAAKmuB,OAAS,QAGvB4yB,UAAUxqE,GACRypB,EAAK8oD,UAAUvyE,EAAI43C,SAGrBkH,cACMr1B,EAAKlqB,OAAQkqB,EAAKmuB,OAASnuB,EAAKlqB,OAAOg6B,UACtC9P,EAAKmuB,OAAS,MAGrBtd,gBAEAi4C,UAAU93E,GAGR,GAFAgvB,EAAKmuB,OAASn9C,EAEVgvB,EAAKlqB,OACPkqB,EAAKlqB,OAAOs5C,KAAKM,SAAS1vB,QAE1B,GAAIA,EAAK2rB,UAAW,CAClB,IAAMyD,EAAOpvB,EAAK3E,WAAW6U,gBAC7B,IAAKkf,EAAM,OAAO,KAClBA,EAAKM,SAAS1vB,QAEdA,EAAK3E,WAAWk3B,aAAa,GAAI,CAAEpE,OAAQn9C,GAASgvB,EAAMA,EAAK2zC,SAKrE8N,iBAAiBzwE,GACfgvB,EAAKmuB,OAASn9C,GAGhBixE,gBACE/+B,GAAUlB,QAAQhiB,EAAK8hD,iBAAL,kBAAmC9hD,EAAK3vB,KAAxC,oBAGpB04E,gBACM/oD,EAAKmuB,QAAU1f,OAAOzO,EAAK4oD,WAC7B5oD,EAAK8oD,UAAU,GAEX9oD,EAAKmuB,OAAS,EAChBnuB,EAAK8oD,UAAU9oD,EAAKmuB,OAAS,GAE7BnuB,EAAK8oD,UAAU,IAKrBv+B,SAAQ,IACCvqB,EAAK+oD,gBAGdtmC,cACE,GAAIziB,EAAKmuB,OAAQ,CACf,IAAMwlB,EAAS3zC,EAAK2zC,QAAU3zC,EAAK3vB,KACnC,MAAO,CACL8B,GAAI6tB,EAAK4O,IACTP,UAAWrO,EAAK3vB,KAChBw8C,QAAS8mB,EACTrjE,KAAM0vB,EAAK1vB,KACXU,MAAO,CACLm9C,OAAQnuB,EAAKmuB,WAMrB/D,cAAc7zC,EAAKlE,GACbkE,EAAIpE,KAAI6tB,EAAK4O,IAAMr4B,EAAIpE,IAE3B6tB,EAAKmuB,OAAS53C,EAAIvF,MAAMm9C,YAIxB66B,GAAc5mC,QAAMuI,QAAQ,cAAe+2B,GAAa53B,GAAUK,GAAO03B,GAAegC,IAExFoF,GAAY9qD,YAAO,QAAPA,CAChBnE,aAAS,YAAsB,IACzBkvD,EADMt2E,EAAkB,EAAlBA,KAAMkoB,EAAY,EAAZA,MAGE,UAAdloB,EAAKqe,KACPi4D,EAAW,GACY,WAAdt2E,EAAKqe,KACdi4D,EAAW,GACY,UAAdt2E,EAAKqe,OACdi4D,EAAW,IAGb,IAAMlE,EAAepyE,EAAKkxE,mBAAqB,GAAK,CAAE3mD,QAAS,QAE/D,OACE,yBAAKnmB,MAAOguE,GACV,kBAAC,KAAD,CACEmE,UAAW,kBAAC7sD,EAAA,EAAD,CAActlB,MAAO,CAAEyoC,SAAUypC,KAC5Cl4E,MAAO4B,EAAKu7C,OACZ1gC,MAAOghB,OAAO77B,EAAKg2E,WACnBz2C,aAAc1D,OAAO77B,EAAKi2E,cAC1B7nD,SAAUpuB,EAAKk2E,YAEhBhuD,EAAM8D,SAASE,gBAAkBhE,EAAM8D,SAASC,eAAiBjsB,EAAK+uC,QACrE,yBAAK3qC,MAAO,CAAEyoC,SAAU,QAAxB,IAAmC7sC,EAAK+uC,OAAxC,UAOVryC,EAASu7C,OAAO,SAAUm+B,GAAaC,ICxKvC,IAAMn/B,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,QAE9BvnC,QAAS0/B,QAAME,SAASoS,GAAYn/B,QAAS,OAC7C41B,UAAW/I,QAAME,SAASoS,GAAYrxC,MAAO,WAE7CioC,YAAalJ,QAAME,SAASF,QAAM6H,OAAQ,KAC1CoB,YAAajJ,QAAME,SAASoS,GAAYrxC,MAAO,WAC/C+nC,YAAahJ,QAAME,SAASoS,GAAYn/B,QAAS,OAEjD2zC,UAAW9mB,QAAME,SAASF,QAAM8H,SAAS,KAGrCC,GAAQ/H,QACXlyC,MAAM,CACLI,KAAM,cAEPZ,OAAM,SAAAswB,GAAI,MAAK,CACd,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,cAGxCgZ,SAAQ,SAAAtT,GAAI,MAAK,CAChBoqB,kBAEAuF,cACE,IAAMljC,EAAO0gD,GAAWj7D,OAAO,CAAEk3E,YAAa,OAC9C38D,EAAK2qC,SAAWp3B,EAEhBA,EAAKhwB,MAAQ,CAAEyc,KAAMA,QAIrB48D,GAAiBjnC,QAAMuI,QAAQ,iBAAkB+2B,GAAa53B,GAAUK,IAM9E76C,EAASu7C,OAAO,YAAaw+B,IAJb,WACd,OAAO,QC5BT,IAAMv/B,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,UAG1By5B,GAAathC,QAAMlyC,MAAM,CAC7B0jE,eAAgB6C,GAAMxF,SAAS,CAAC,YAG5BqS,GAAalhC,QAAMlyC,MAAM,uBAAwB,CACrD0+B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAClCnB,KAAM,kBACN4C,SAAUujE,GAAM3F,WAAW,CAAC,QAAS,SAAU,OAAQ,gBAGnDqU,GAAc/iC,QAAMuI,QACxB44B,GACAD,GACA+F,GACAv/B,GACA45B,GACA7C,GACAK,GAAmBttE,MAAM,CAAEutE,OAAQ,eACnCO,IAGI4H,GAAuBlnC,QAAMuI,QAAQ,uBAAwBw6B,IAE7DoE,GAAqBvvD,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACrC,OAAO,kBAAC4wE,GAAD,CAAW5wE,KAAMA,OAG1BtD,EAASu7C,OAAO,kBAAmBy+B,GAAsBC,IC1CzD,IAAMz/B,GAAW1H,QAAMlyC,MAAM,CAC3Bc,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAC7B9gB,MAAOiZ,QAAM4H,UAAU5H,QAAM6H,QAC7BtI,OAAQS,QAAM4H,UAAU5H,QAAM6H,UAG1BE,GAAQ/H,QACXlyC,MAAM,CACLiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCnB,KAAM,WACNk3B,OAAQ4a,QAAME,SAASF,QAAM6H,OAAQ,MAEtCv6C,OAAM,SAAAswB,GAAI,MAAK,CACd,kBAEE,OADU4rB,oBAAUA,oBAAU5rB,IACrB3vB,UAGZijC,SAAQ,SAAAtT,GAAI,MAAK,CAChBvF,UACE,IAAM/jB,EAAIk1C,oBAAUA,oBAAU5rB,IAE1BtpB,EAAE8yE,YAAY9yE,EAAE8yE,WAAWxpD,EAAKhvB,QAGtCu5C,SAAQ,IACCvqB,EAAKvF,cAIZgvD,GAAgBrnC,QAAMuI,QAAQ,gBAAiBb,GAAUK,GAAOrG,IAEhE4lC,GAAkBvrD,YAAO,QAAPA,CACtBnE,aAAS,YAAsB,IAAnBpnB,EAAkB,EAAlBA,KAAMkoB,EAAY,EAAZA,MACVioD,EAAK,CACT5rD,gBAAiBvkB,EAAK0nB,SAAW1nB,EAAKmqB,WAAa,UACnD1Z,MAAOzQ,EAAK0nB,SAAW1nB,EAAKq4B,cAAgB,UAC5CC,OAAQ,UACRC,OAAQ,OAGV,OACE,kBAAC,KAAD,CACE1Q,QAAS,SAAAc,GAEP,OADA3oB,EAAK6nB,WACE,GAETzjB,MAAO+rE,GAENnwE,EAAKu2B,MAAQv2B,EAAKu2B,MAAQv2B,EAAK40B,OAC/B1M,EAAM8D,SAASE,gBAAkBhE,EAAM8D,SAASC,eAAiBjsB,EAAK+uC,QAAU,kBAAC,GAAD,SAAQ/uC,EAAK+uC,OAAb,UAMzFryC,EAASu7C,OAAO,WAAY4+B,GAAeC,I,yBC3CrC5/B,I,OAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,WAG1BE,GAAQ/H,QACXlyC,MAAM,CACL0+B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAElCg6C,SAAUrJ,QAAME,SAASF,QAAM8H,SAAS,GAExC55C,KAAM,WACN4C,SAAUujE,GAAM3F,WAAW,CAAC,aAE7BphE,OAAM,SAAAswB,GAAI,MAAK,CACd,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC,iBACE,OAAO,GAGT,gBACE,MAAO,YAGT,aACE,GAAI0F,EAAK2rB,UAAW,CAClB,IAAMyD,EAAOpvB,EAAK3E,WAAW6U,gBAC7B,OAAKkf,EAEEpvB,EAAK3E,WAAWtE,QAAQ5G,MAAK,SAAAxN,GAAC,OAAIA,EAAE0rB,YAAcrO,GAAQrd,EAAEysC,OAASA,KAF1D,KAIpB,OAAOpvB,EAAK3E,WAAWtE,QAAQ5G,MAAK,SAAAxN,GAAC,OAAIA,EAAE0rB,YAAcrO,UAG5DsT,SAAQ,SAAAtT,GAIP,IAAI1F,EAAW,GAEf,MAAO,CACL+6B,cACmB/6B,EAAb0F,EAAKlqB,OAAmBkqB,EAAKlqB,OAAOg6B,UACxB,IAGlBqR,eAAc,IACL7mB,EAGT0G,SAASlvB,EAAMyzB,GAGb,GAFAjL,EAAWiL,EAAQtxB,KAAI,SAAA8uC,GAAC,OAAIA,EAAE9C,QAE1BjgB,EAAKlqB,OACPkqB,EAAKlqB,OAAOs5C,KAAKM,SAAS1vB,QAE1B,GAAIA,EAAK2rB,UAAW,CAClB,IAAMyD,EAAOpvB,EAAK3E,WAAW6U,gBAC7B,IAAKkf,EAAM,OAAO,KAClBA,EAAKM,SAAS1vB,QAEdA,EAAK3E,WAAWk3B,aAAa,GAAI,CAAE1D,SAAUv0B,GAAY0F,EAAMA,EAAK2zC,SAK1Ez7C,SAASplB,GACP,IAAME,EAAY,SAAZA,EAAqBlB,GAAqB,IAAf63E,EAAc,uDAAJ,GACnC9gE,EAAQ/W,EAAKd,MACbivC,EAAI,uBAAO0pC,GAAP,CAAgB9gE,IACpBtS,EAAM,CACVsS,QACAo3B,OAIA1a,QAASjL,EAASqS,MAAK,SAAAj2B,GAAC,OAAIA,EAAE1C,QAAU0C,EAAEA,EAAE1C,OAAS,KAAO6U,WAAU5F,GAOxE,OAJInR,EAAKoB,WACPqD,EAAIrD,SAAWpB,EAAKoB,SAASe,KAAI,SAAAoS,GAAC,OAAIrT,EAAUqT,EAAG45B,OAG9C1pC,GAGT,OAAOM,MAAMC,QAAQhE,GAAQA,EAAKmB,KAAI,SAAAoS,GAAC,OAAIrT,EAAUqT,MAAMrT,EAAUF,QAKvE82E,GAAgBxnC,QAAMuI,QAAQ,gBAAiB+2B,GAAa53B,GAAUK,GAAO45B,IAE7E8F,GAAc7vD,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KAG9B,OACE,yBAAKoE,MAAK,eAHE,CAAEi6B,UAAW,MAAOC,aAAc,SAI5C,kBAAC,KAAD,CAAoBx8B,KAAM9B,EAAKslB,SAAStlB,EAAKM,UAAW8tB,SAAUpuB,EAAKouB,SAAU8oD,uBAAqB,QAK5Gx6E,EAASu7C,OAAO,WAAY++B,GAAeC,I,kECxInCr6C,GAAcC,KAAdD,UAEKu6C,GAAb,4MACEjqD,MAAQ,CACNkqD,SAAS,EACTjlE,OAAQ,EACR/T,MAAO,EAAK4C,MAAMqC,MAJtB,EAOE8oC,QAAUvrC,IAAMwrC,YAPlB,EAQEirC,SAAWz2E,IAAMwrC,YARnB,EAUEkrC,aAAe,WAAO,IAAD,MACbnlE,GAAS,YAAKg6B,QAAQx2B,eAAb,eAAsB0M,WAAW6xC,eAAgB,EAChE,EAAK7mC,SAAS,CAAE+pD,SAAS,EAAMjlE,WAG/B,eAAKnR,OAAMu2E,sBAAX,iBAEA3wE,WAAW,EAAKgmE,QAjBpB,EAoBEA,MAAQ,WACN,IAAM4K,EAAQ,EAAKH,SAAS1hE,QACxB6hE,IAAOA,EAAMC,eAAiB,EAAKvqD,MAAM9uB,MAAMgD,SAtBvD,EAyBEs2E,WAAa,SAAAN,GACX,EAAK/pD,SAAS,CAAE+pD,aA1BpB,EA6BEt6B,SAAW,SAAA1+C,GACT,EAAKivB,SAAS,CAAEjvB,WA9BpB,EAiCEu5E,OAAS,WACP,EAAK76B,SAAS,EAAK97C,MAAMqC,MACzB,EAAKq0E,YAAW,IAnCpB,EAsCEE,KAAO,WACL,EAAK52E,MAAMotB,SAAS,EAAKlB,MAAM9uB,OAC/B,EAAKs5E,YAAW,IAxCpB,EA2CEG,aAAerhC,MAAS,WAAO,IAAD,EAEtBrkC,IAAU,YAAKklE,SAAS1hE,eAAd,eAAuBmiE,eAAgB,GADvC,EAEZ3lE,GAAUA,IAAW,EAAK+a,MAAM/a,QAClC,EAAKkb,SAAS,CAAElb,aAEjB,KAjDL,2DAmDgB,IAAD,SAC8DxV,KAAKqE,MADnE,IACHwjB,iBADG,MACS,GADT,OACa4J,SADb,EACuB2pD,SADvB,EACiC10E,KADjC,EACuC8qB,aADvC,MAC8C,EAD9C,EACoDntB,EADpD,oEAEerE,KAAKuwB,MAAvB/a,EAFG,EAEHA,OAAQ/T,EAFL,EAEKA,MAEV45E,EAAa,CACjBxzD,UAAW,aAAesC,KAAO0wD,MACjCpzE,MAAO+N,EAAS,CAAEA,UAAW,KAC7B8lE,WAAW,EACXrrC,IAAKjwC,KAAK06E,SACVj5E,QACA85E,OAAQv7E,KAAKi7E,KACbxpD,SAAU,SAAArpB,GACR,EAAK+3C,SAAS/3C,EAAEspB,OAAOjwB,OACvB,EAAKy5E,gBAEPM,UAAW,SAAApzE,GAAM,IACPhF,EAAkBgF,EAAlBhF,IAAKi0C,EAAajvC,EAAbivC,SACD,UAARj0C,GAEY,KAATouB,GAAc6lB,KACjBjvC,EAAEykB,iBACFzkB,EAAEg2C,kBACF,EAAK68B,QAEU,WAAR73E,GACT,EAAK43E,WAKX,OACE,kBAAC,GAAD,iBAAe32E,EAAf,CAAsBwjB,UAAWA,EAAY,gCAAkCsC,KAAOswD,UACnFjpD,EAAO,EAAI,6BAAc6pD,GAAiB,0BAAWA,GACtD,kBAAC,IAAD,CAASpwD,MAAM,uBACb,kBAACwwD,GAAA,EAAD,CAAe5zD,UAAW,uCAAyCsC,KAAOw/C,MAAOz+C,QAASlrB,KAAKi7E,WArFzG,mCA2FgB,IAAD,EACoCj7E,KAAKqE,MAA5CotB,EADG,EACHA,SAAU2pD,EADP,EACOA,SAAU10E,EADjB,EACiBA,KAASrC,EAD1B,+CAGX,OACE,oCACE,kBAAC,GAAcA,EACb,0BAAM4rC,IAAKjwC,KAAKwvC,SAAU9oC,GACzB+qB,GAAY,kBAACiqD,GAAA,EAAD,CAAcxwD,QAASlrB,KAAK26E,aAAc9yD,UAAU,yBAElEuzD,GAAY,kBAAC3tD,EAAA,EAAD,CAAgB5F,UAAWsC,KAAOwxD,OAAQzwD,QAASkwD,OApGxE,+BA0GI,OAAOp7E,KAAKuwB,MAAMkqD,QAAUz6E,KAAK47E,aAAe57E,KAAK67E,iBA1GzD,GAAgC53E,IAAMqqB,WCWhCssB,IAFgB1a,KAAdD,UAEM4S,QACXlyC,MAAM,sBAAuB,CAC5BiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCm9B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAClCnB,KAAM,iBAENk3B,OAAQ4a,QAAM6H,SAGfv6C,OAAM,SAAAswB,GAAI,MAAK,CACd,aACE,OAAOrpB,0BAAgBqpB,EAAM4I,KAE/B,oBACE,OAAO5zB,SAASqyC,cAAT,0BAA0CrnB,EAAK7tB,UAGzDmhC,SAAQ,SAAAtT,GAAI,MAAK,CAChB0vB,SAASvpC,GACP6Z,EAAKwH,OAASrhB,EACd6Z,EAAK8T,OAAO9S,iBAIZsG,GAAsB8a,QAAMuI,QAChC,sBACAgH,GACAnG,GACAD,GACApB,IAyDIkhC,GAAoBrxD,aAtDI,SAAC,GAAc,IAAZpnB,EAAW,EAAXA,KACzB4D,EAAU,CAACkjB,KAAOsW,MAClBsJ,EAAS,GACPxF,EAAWlhC,EAAXkhC,OACAwZ,EAAiB16C,EAAKyoB,WAAtBiyB,aAEJA,GACF92C,EAAQpG,KAAKspB,KAAOyiB,UAGlBvpC,EAAK0nB,SACP9jB,EAAQpG,KAAKspB,KAAOY,UACX1nB,EAAKguC,aACdpqC,EAAQpG,KAAKspB,KAAOknB,aAGlB9M,EAAOpJ,WACT4O,EAAOtY,SAAW,SAAAroB,GAChB/F,EAAK88C,SAAS/2C,KAIlB,IAAI2yE,EAAW,GAmBf,OAlBIx3C,EAAO6X,UACTrS,EAAOqxC,SAAW,kBAAM/3E,EAAKkhC,OAAOzhB,OAAOzf,IAE3C04E,EAAW,CACT/gD,YAAa,WACP+iB,GACF16C,EAAK43B,cAAa,IAGtBC,WAAY,WAEN6iB,GACF16C,EAAK43B,cAAa,KAOxB,yCAAS8gD,EAAT,CAAmBl0D,UAAWsC,KAAOqW,IAAKw7C,cAAY,oBACpD,kBAAC,GAAD,eACEp5E,GAAE,yBAAoBS,EAAKT,IAC3BilB,UAAW5gB,EAAQnF,KAAK,KACxB0vB,KAAM+S,EAAO/S,KACb9qB,KAAMrD,EAAK40B,QACP8R,QAQZhqC,EAASu7C,OAAO,iBAAkBvjB,GAAqB+jD,I,IC3F/CvqD,GAAa0qD,KAAb1qD,SAsBFgpB,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,QAC9BwhC,YAAarpC,QAAME,SAASF,QAAM8H,SAAS,GAC3CrhC,MAAOu5B,QAAME,SAASF,QAAM6H,OAAQ,IACpCj5C,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAC7BlpB,KAAMqhB,QAAME,SAASF,QAAM6H,OAAQ,KACnCyhC,iBAAkBtpC,QAAME,SAASF,QAAM8H,SAAS,GAChD3Y,YAAa6Q,QAAM4H,UAAU5H,QAAM6H,QACnC0hC,eAAgBvpC,QAAM4H,UAAU5H,QAAM6H,QACtCvf,SAAU0X,QAAME,SAASF,QAAM8H,SAAS,KAGpCC,GAAQ/H,QACXlyC,MAAM,CACLI,KAAM,WACNX,QAASyyC,QAAMiM,MAAM/mB,IAErBE,OAAQ4a,QAAME,SAASF,QAAM6H,OAAQ,IACrC/2C,SAAUujE,GAAM3F,WAAW,CAAC,eAE7BphE,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,MAAO,QAGT,iBACE,OAAOA,EAAKrwB,QAAQqE,OAAS,GAG/B,qBACE,OAAOgsB,EAAKrwB,QAAQqE,QAGtB,iBACE,OAAOu1B,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC,iBACE,GAAI0F,EAAK2rD,eAAgB,CACvB,IAAM32C,EAAMlyB,SAASkd,EAAK2rD,gBAC1B,OAAO3rD,EAAK4rD,eAAiB52C,EAE7B,OAAO,GAIX,wBACE,OAAKhV,EAAKrwB,QAAQqE,OACX,CAAEiC,KAAM+pB,EAAKmhB,kBADa,MAInCA,eAAc,IACLnhB,EAAKrwB,QAAQsE,KAAI,SAAA0O,GAAC,OAAIA,EAAE6kB,UAGjC,aACE,GAAIxH,EAAK2rB,UAAW,CAClB,IAAMyD,EAAOpvB,EAAK3E,WAAW6U,gBAC7B,OAAKkf,EAEEpvB,EAAK3E,WAAWtE,QAAQ5G,MAAK,SAAAxN,GAAC,OAAIA,EAAE0rB,YAAcrO,GAAQrd,EAAEysC,OAASA,KAF1D,KAIpB,OAAOpvB,EAAK3E,WAAWtE,QAAQ5G,MAAK,SAAAxN,GAAC,OAAIA,EAAE0rB,YAAcrO,UAG5DsT,SAAQ,SAAAtT,GAAI,MAAK,CAChB6rD,uBACE,IAAMC,EAAQ9rD,EAAKrwB,QAAQsE,KAAI,SAAA8uC,GAAC,OAAIA,EAAEvb,UACtC,GAAqB,IAAjBskD,EAAM93E,OAEV,MAAO,CAAEiC,KAAM61E,IAGjBz2B,cAAe,IAAD,EACZr1B,EAAKyhD,iBAAL,UAAsBzhD,EAAKlqB,cAA3B,aAAsB,EAAag6B,YAGrCmyC,gBACE/+B,GAAUlB,QAAQhiB,EAAK8hD,iBAAL,kCAAmD9hD,EAAK3vB,KAAxD,oBAGpBy0E,UAAU9zE,IACO6F,MAAMC,QAAQ9F,GAASA,EAAQ,CAACA,IACxC0C,SAAQ,SAAAq+B,GAAC,OAAI/R,EAAK+xB,aAAahgB,OAGxC0vC,iBAAiBzwE,GACfgvB,EAAKrwB,QAAU,GACfqB,GAASgvB,EAAK8kD,UAAU9zE,IAG1B0+C,SAAS1+C,GACPgvB,EAAKwH,OAASx2B,GAGhBqhB,OAAO7C,GACL,IAAM8Z,EAAQtJ,EAAKrwB,QAAQwH,QAAQqY,GAC/B8Z,EAAQ,IACZtJ,EAAKrwB,QAAQ2gD,OAAOhnB,EAAO,GAC3BiT,kBAAQ/sB,GACRwQ,EAAKgB,aAGP+/C,UAAUxqE,GACRypB,EAAKrwB,QAAU4G,EAAI5G,QAAQsE,KAAI,SAAA0O,GAAC,OAAI9Q,EAAU8Q,OAGhDopE,mBACE/rD,EAAKrwB,QAAU,IAGjBoiD,aAAa97C,EAAM24B,GACjB,IAAMjsB,EAAI2kB,GAAoBp1B,OAAO,CAAE08B,IAAKA,EAAKpH,OAAQvxB,IAGzD,OAFA+pB,EAAKrwB,QAAQS,KAAKuS,GAEXA,GAGTqe,WACE,GAAIhB,EAAKlqB,OACPkqB,EAAKlqB,OAAOs5C,KAAKM,SAAS1vB,QAE1B,GAAIA,EAAK2rB,UAAW,CAClB,IAAMyD,EAAOpvB,EAAK3E,WAAW6U,gBAC7B,IAAKkf,EAAM,OAAO,KAClBA,EAAKM,SAAS1vB,QAEdA,EAAK3E,WAAWk3B,aAAa,GAAI,CAAEt8C,KAAM+pB,EAAKmhB,kBAAoBnhB,EAAMA,EAAK2zC,SAKnFqY,QAAQ/1E,EAAM24B,GACZ5O,EAAK+xB,aAAa97C,EAAM24B,GACxB5O,EAAKgB,YAGP8/C,aACM9gD,EAAKwH,QAAUxH,EAAKwH,OAAOxzB,SAC7BgsB,EAAKgsD,QAAQhsD,EAAKwH,QAClBxH,EAAKwH,OAAS,KAKlBykD,gBACEjsD,EAAK8gD,cAGPoL,WAAWj2E,GACTsmC,kBAAQtmC,IAGVuzE,WAAWx4E,GACTgvB,EAAK0vB,SAAS1vB,EAAKwH,OAASx2B,IAG9ByxC,cACE,GAAKziB,EAAKrwB,QAAQqE,OAAlB,CAEA,IAAM2/D,EAAS3zC,EAAK2zC,QAAU3zC,EAAK3vB,KAWnC,MAVa,CACX8B,GAAI6tB,EAAK4O,IACTP,UAAWrO,EAAK3vB,KAChBw8C,QAAS8mB,EACTrjE,KAAM,WACNU,MAAO,CACLiF,KAAM+pB,EAAKrwB,QAAQsE,KAAI,SAAA0O,GAAC,OAAIA,EAAE6kB,cAOpC4iB,cAAc7zC,EAAKlE,GAAY,IACvB4D,EAASM,EAAIvF,MAAbiF,KACDY,MAAMC,QAAQb,KAAOA,EAAO,CAACA,IAElCA,EAAKvC,SAAQ,SAAAkjC,GAAC,OAAI5W,EAAKgsD,QAAQp1C,EAAGrgC,EAAIpE,YAItCy2B,GAAgBwZ,QAAMuI,QAC1B,gBACA+2B,GACA53B,GACAK,GACArG,GACA+9B,GACAgC,IAGIsI,GAAcnyD,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACxBmuB,EAAOje,SAASlQ,EAAKmuB,MAErBntB,EAAQ,CACZvD,KAAMuC,EAAKvC,KACXW,MAAO4B,EAAK40B,OACZzG,KAAMnuB,EAAKmuB,KACX3J,UAAW,YACXvO,MAAOjW,EAAKiW,MACZ0oB,YAAa3+B,EAAK2+B,YAClBvQ,SAAU,SAAAzF,GAAO,IACPvqB,EAAUuqB,EAAG0F,OAAbjwB,MACR4B,EAAK88C,SAAS1+C,KAId+vB,EAAO,IAETntB,EAAMm3E,UAAY,SAAApzE,GACF,UAAVA,EAAEhF,KAAmBgF,EAAEivC,UAAYh0C,EAAK64E,aAAe74E,EAAK40B,SAC9D7vB,EAAEykB,iBACFzkB,EAAEg2C,kBACF/6C,EAAKo5E,QAAQp5E,EAAK40B,QAClB50B,EAAK88C,SAAS,OAKf98C,EAAKyoB,WAAWqP,WAAU92B,EAAK,UAAe,GAEnD,IAAMoxE,EAAepyE,EAAKkxE,mBAAqB,GAAK,CAAE3mD,QAAS,QAEzDivD,EAAiBx5E,EAAKyoB,WAAWqP,UAAqB,IAAT3J,GAAenuB,EAAKy5E,iBACjEC,EAAY,GAKlB,OAJIF,IAAeE,EAAS,aAAmB,GAE/CtH,EAAY,UAAgB,MAG1B,yBAAKhuE,MAAOguE,GACT/b,EAAKl1D,eAAenB,GAEpBA,EAAK25E,YACJ,kBAAC,KAAD,CACEp7C,SAAU,SAAA5V,GAMR,OALI3oB,EAAK64E,aAAe74E,EAAK40B,SAC3B50B,EAAKo5E,QAAQp5E,EAAK40B,QAClB50B,EAAK88C,SAAS,MAGT,IAGT,kBAAC,KAAKt0B,KAAN,CAAWpkB,MAAOs1E,GACN,IAATvrD,EAAa,kBAAC,KAAUntB,GAAY,kBAACktB,GAAaltB,GAClDw4E,GACC,kBAAC,KAAKhxD,KAAN,KACE,kBAAC,IAAD,CAAQpkB,MAAO,CAAEi6B,UAAW,QAAU3gC,KAAK,UAAUkhC,SAAS,UAA9D,UAST5+B,EAAKjD,QAAQqE,OAAS,GACrB,yBAAKgD,MAAO,CAAEk6B,aAAc,QACzBt+B,EAAKjD,QAAQsE,KAAI,SAAA2iC,GAAC,OACjB,kBAACy0C,GAAD,CAAmB14E,IAAKikC,EAAEzkC,GAAIS,KAAMgkC,YAQhDtnC,EAASu7C,OAAO,WAAYjiB,GAAeujD,IClR3C,IAAMriC,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,QAE9BvnC,QAAS0/B,QAAME,SAASF,QAAM6H,OAAQ,OACtCkB,UAAW/I,QAAM4H,UAAU5H,QAAM6H,QAEjCrL,YAAawD,QAAME,SAASF,QAAM1+B,OAAQ,GAC1CknD,YAAaxoB,QAAME,SAASF,QAAM6H,OAAQ,aAGtCq5B,GAAalhC,QAChBlyC,MAAM,yBAA0B,CAC/B0+B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAClCnB,KAAM,mBACN4C,SAAUujE,GAAM3F,WAAW,CAAC,SAAU,QAAS,aAEhDphE,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,IAAM8iB,EAAS9iB,EAAK8iB,SACpB,OAAOA,GAAUA,EAAO9uC,OAAS,GAGnC8uC,OAAM,IACG9iB,EAAK3E,WAAW2xB,QAAQt8C,IAAIsvB,EAAK3vB,MAG1C4yC,eACE,IAAMH,EAAS9iB,EAAK8iB,SACpB,OAAOA,EAASA,EAAO5xC,QAAO,SAAAuF,GAAC,OAAqB,IAAjBA,EAAE48B,cAAuB,UAI5D8W,GAAQ02B,GAAWjtE,MAAM,CAAEiuC,MAAO,qBAAsBnyC,OAAM,SAAAswB,GAAI,MAAK,CAC3E,yBACE,MAAuB,WAAhBA,EAAKkS,YAIVizC,GAAc/iC,QAAMuI,QACxB44B,GACAD,GACAx5B,GACAK,GACA03B,GACAX,GAAmBttE,MAAM,CAAEutE,OAAQ,eACnCO,IAGI8K,GAAwBpqC,QAAMuI,QAAQ,wBAAyBw6B,IAE/DsH,GAAsBzyD,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACtC,OAAO,kBAAC4wE,GAAD,CAAW5wE,KAAMA,OAG1BtD,EAASu7C,OAAO,mBAAoB2hC,GAAuBC,ICjE3D,IAAM3iC,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,QAE9BvnC,QAAS0/B,QAAME,SAASoS,GAAYn/B,QAAS,OAC7C41B,UAAW/I,QAAME,SAASoS,GAAYrxC,MAAO,WAE7CioC,YAAalJ,QAAME,SAASF,QAAM6H,OAAQ,KAC1CoB,YAAajJ,QAAME,SAASoS,GAAYrxC,MAAO,WAC/C+nC,YAAahJ,QAAME,SAASoS,GAAYn/B,QAAS,OAEjD2zC,UAAW9mB,QAAME,SAASF,QAAM8H,SAAS,KAGrCC,GAAQ/H,QACXlyC,MAAM,CACLI,KAAM,YAEPZ,OAAM,SAAAswB,GAAI,MAAK,CACd,gBACE,IAAM8iB,EAAS9iB,EAAK8iB,SACpB,OAAOA,GAAUA,EAAO9uC,OAAS,GAGnC,iBACE,OAAOu1B,kBAAQvJ,GAAMxE,gBAAgBlB,cAGxCgZ,SAAQ,SAAAtT,GAAI,MAAK,CAChB2vB,cACE,IAAM+8B,EAAUvf,GAAcj7D,OAAO,CAAEk3E,YAAa,OACpDsD,EAAQt1B,SAAWp3B,EAEnBA,EAAKhwB,MAAQ,CAAE08E,QAASA,QAIxBC,GAAevqC,QAAMuI,QAAQ,eAAgBb,GAAUK,GAAOu3B,IAMpEpyE,EAASu7C,OAAO,UAAW8hC,IAJX,WACd,OAAO,QChCT,IAAM7iC,GAAW1H,QAAMlyC,MAAM,CAC3BG,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,UAG1Bq5B,GAAalhC,QAAMlyC,MAAM,qBAAsB,CACnDI,KAAM,gBACN4C,SAAUujE,GAAM3F,WAAW,CAAC,QAAS,SAAU,OAAQ,gBAGnDqU,GAAc/iC,QAAMuI,QACxB44B,GACAD,GACAqJ,GACA7iC,GACA+2B,GACAK,GAAmBttE,MAAM,CAAEutE,OAAQ,eACnCO,IAGIkL,GAAqBxqC,QAAMuI,QAAQ,qBAAsBw6B,IAEzD0H,GAAmB7yD,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACnC,OAAO,kBAAC4wE,GAAD,CAAW5wE,KAAMA,OAG1BtD,EAASu7C,OAAO,gBAAiB+hC,GAAoBC,ICjCrD,IAAM/iC,GAAW1H,QAAMlyC,MAAM,CAC3BgiC,OAAQkQ,QAAME,SAASF,QAAM8L,YAAY,CAAC,SAAU,aAAc,cAQ9Do1B,GAAalhC,QAChBlyC,MAAM,CACLiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCm9B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAClCnB,KAAM,YACN4C,SAAUujE,GAAM3F,WAAW,CAAC,YAAa,eAE1CphE,OAAM,SAAAswB,GAAI,MAAK,CACd8R,YAAW,IACF9R,EAAK9sB,SAAShC,QAAO,SAAAuF,GAAC,OAAmB,IAAfA,EAAE6jB,YAGrC6mB,eAAc,IACLnhB,EAAK8R,cAAc79B,KAAI,SAAAwC,GAAC,OAAIA,EAAEzF,SAGvCqhC,aAAarhC,GACJgvB,EAAK9sB,SAASid,MAAK,SAAA1Z,GAAC,OAAIA,EAAEzF,QAAUA,SAG9CsiC,SAAQ,SAAAtT,GAAI,MAAK,CAChB6Q,cACE7Q,EAAK9sB,SAASe,KAAI,SAAAwC,GAAC,OAAIA,EAAE67B,aAAY,WAIrCw6C,GAAiB1qC,QAAMuI,QAAQ,iBAAkB24B,GAAYx5B,GAAU43B,IAM7EpyE,EAASu7C,OAAO,YAAaiiC,IAJR,WACnB,OAAO,QCrCT,IAAMhjC,GAAW1H,QAAMlyC,MAAM,CAC3Bc,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAC7BltB,WAAYqlB,QAAME,SAASoS,GAAYrxC,MAAOquC,MAG1CvH,GAAQ/H,QACXlyC,MAAM,CACLiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrC6oB,SAAU8nB,QAAME,SAASF,QAAM8H,SAAS,GACxC55C,KAAM,aAEPgjC,SAAQ,SAAAtT,GAAI,MAAK,CAChBsS,YAAYthC,GACVgvB,EAAK1F,SAAWtpB,OAIhB+7E,GAAgB3qC,QAAMuI,QAAQ,gBAAiBb,GAAUK,IAM/D76C,EAASu7C,OAAO,WAAYkiC,IAJJ,WACtB,OAAO,Q,mCCxCYC,G,uKAEjB,IACIC,EACAp9C,EACArhB,EAHA0+D,EAAa,UAAMxzD,KAAOiG,OAkC9B,OA7BIpwB,KAAKqE,MAAMq5E,OACbA,EAAO,kBAAC,KAAD,CAAK5pE,MAAM,QAAQ9T,KAAKqE,MAAMq5E,OAGnC19E,KAAKqE,MAAMmvE,KACblzC,EAAUtgC,KAAKqE,MAAMmvE,IAGnBxzE,KAAKqE,MAAM0mB,WACb4yD,EAAa,UAAMA,EAAN,YAAuBxzD,KAAOyzD,gBAC3CF,EACE,6BACE,kBAAC,KAAD,CAAK5pE,MAAM,WAAX,qBAIA9T,KAAKqE,MAAMq5E,OACbA,EACE,yBAAK71D,UAAWsC,KAAOzpB,KACrB,kBAAC,KAAD,CAAKoT,MAAM,WAAW9T,KAAKqE,MAAMq5E,SAMrC19E,KAAKqE,MAAM4a,OACbA,EAAO,0BAAM4I,UAAWsC,KAAOlL,MAAOjf,KAAKqE,MAAM4a,OAIjD,yBAAK4I,UAAW81D,EAAel2E,MAAO,CAAE+lB,WAAY8S,EAAShrB,MAAO,cAAeuoE,SAAU,SAC3F,0BAAMh2D,UAAWsC,KAAOrpB,MAAOd,KAAKqE,MAAMvD,KAA1C,SACA,uBAAG+mB,UAAWsC,KAAOzjB,MAAO1G,KAAKqE,MAAMqC,MACtCuY,EACAy+D,O,GAzC+Bz5E,IAAMqqB,WCaxCwvD,GAAUjrC,QAAMlyC,MAAM,CAC1BG,KAAM+xC,QAAM6H,OACZh0C,KAAMmsC,QAAM6H,OACZ3vB,SAAU8nB,QAAME,SAASF,QAAM8H,SAAS,GACxC17B,KAAM4zB,QAAME,SAASF,QAAM6H,OAAQ,IACnCgjC,KAAM7qC,QAAME,SAASF,QAAM6H,OAAQ,MAG/BH,GAAW1H,QAAMlyC,MAAM,CAC3Bc,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAC7B55C,KAAM+xC,QAAM4H,UAAU5H,QAAM6H,UAiB9B,IAAME,GAAQ/H,QACXlyC,MAAM,CACLiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCnB,KAAM,SACNoE,KAAM0tC,QAAMnuC,IAAIo5E,MAEjB39E,OAAM,SAAAswB,GAAI,MAAK,CACd,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,cAGxCgZ,SAAQ,SAAAtT,GAAI,OAzBf,SAAuBA,GACrB,MAAO,CACLoqB,cAAc7zC,GACRA,EAAIvF,MAAMq5C,SACZrqB,EAAK3E,WAAWivB,MAAM55C,IAAI6F,EAAI83B,WAAW+b,cAAc7zC,GAGrDA,EAAIvF,MAAMiF,MACZ+pB,EAAK3E,WAAWivB,MAAM55C,IAAI6F,EAAI83B,WAAW+b,cAAc7zC,KAiB5C+2E,CAActtD,MAE3ButD,GAAcnrC,QAAMuI,QAAQ,cAAeb,GAAUK,IAErDqjC,GAAgBrvD,YAAO,QAAPA,CACpBnE,aAAS,YAAsB,IAAnBc,EAAkB,EAAlBA,MAAOloB,EAAW,EAAXA,KACjB,IAAKkoB,EAAMiE,OAASjE,EAAMiE,KAAKilB,QAC7B,OAAO,kBAAC,KAAD,MAGT,IAAIluC,EAAS,GACTzF,EAAOuC,EAAK5B,MA2BhB,MAzBuB,MAAnBX,EAAK8S,OAAO,KACd9S,EAAOA,EAAKiT,OAAO,IAGrBwX,EAAMiE,KAAKilB,QAAQ3zC,GAAMqD,SAAQ,SAACd,EAAMob,GACtC,IAAI6hB,EAEAj9B,EAAKvC,OACPw/B,EAAU3sB,GAAcE,GAAcxQ,EAAKvC,MAAO,KAGpDyF,EAAO1F,KACL,kBAAC,GAAD,CACEuC,IAAKqb,EACL3d,KAAMuC,EAAKvC,KACX48E,KAAMr6E,EAAKq6E,KACXh3E,KAAMrD,EAAKqD,KACXqkB,SAAU1nB,EAAK0nB,SACf9L,KAAM5b,EAAK4b,KACXrc,GAAIS,EAAKT,GACT4wE,GAAIlzC,QAMR,6BACE,yBACE74B,MAAO,CACLmmB,QAAS,OACTsmD,SAAU,SACVgK,UAAW,QACXC,UAAW,SACX1+C,aAAc,OACdiC,UAAW,SAGZn7B,GAEH,kBAAC,KAAD,CAASo5B,QAAQ,SAMzB5/B,EAASu7C,OAAO,SAAU0iC,GAAaC,IC1FvC,IAAMrjC,GAAQ/H,QAAMlyC,MAAM,CACxBI,KAAM,SACN2gB,KAAMmxB,QAAME,SAASF,QAAM6H,OAAQ,KACnCjzC,MAAOorC,QAAM4H,UAAU5H,QAAM6H,QAC7BziB,OAAQ4a,QAAME,SAASF,QAAM6H,OAAQ,IACrCj5C,MAAOoxC,QAAME,SAASF,QAAM6H,OAAQ,IACpC7Z,UAAWgS,QAAME,SAASF,QAAM8H,SAAS,KAGrCyjC,GAAcvrC,QAAMuI,QAAQ,cAAeR,GAAOrG,IAElD8pC,GAAY5zD,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACtBqe,EAAOnO,SAASlQ,EAAKqe,MACrBja,EAAQpE,EAAKoE,MAAQiyD,EAAKlyD,aAAanE,EAAKoE,OAAS,CAAEm0B,OAAQ,UAMrE,OAJKn0B,EAAMyoC,UAAYxuB,EAAO,IAC5Bja,EAAMyoC,SAAoB,IAATxuB,EAAa,QAAU,SAIxC,kBAAC,KAAW48D,MAAZ,CAAkBz9C,UAAWx9B,EAAKw9B,UAAW09C,MAAO78D,EAAMja,MAAOA,GAC9DpE,EAAK40B,WAKZl4B,EAASu7C,OAAO,SAAU8iC,GAAaC,ICrCvC,IAAMzjC,GAAQ/H,QACXlyC,MAAM,CACLI,KAAM,QACNU,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,UAG9Bv6C,OAAM,SAAAswB,GAAI,MAAK,CACd,aACE,GAAKA,EAAKhvB,MAAV,CAEA,IAAM8pB,EAAQyO,kBAAQvJ,GAChB7Z,EAAM6Z,EAAKhvB,MAAMsS,OAAO,GAC9B,OAAOwX,EAAMiE,KAAKilB,QAAQ79B,SAI1B4nE,GAAa3rC,QAAMuI,QAAQ,aAAcR,IAEzC6jC,GAAW7vD,YAAO,QAAPA,CACfnE,aAAS,YAAsB,IAAnBc,EAAkB,EAAlBA,MAAOloB,EAAW,EAAXA,KACb5B,EAAQ4B,EAAK40B,OAEZx2B,GACC8pB,EAAMiE,OAAM/tB,EAAQ8pB,EAAMiE,KAAKilB,SAQrC/zB,QAAQk9B,IAAIv6C,EAAK40B,QACjBvX,QAAQk9B,IAAIv8C,OAAOQ,KAAKJ,IAExB,IAAM+zB,EAAan0B,OAAOQ,KAAKJ,GAAOiD,KAAI,SAAAgS,GACxC,IAAIE,EAAMnV,EAAMiV,GAIhB,MAFmB,kBAARE,IAAkBA,EAAMvR,KAAKsrB,UAAU/Z,IAE3C,CAAE7V,KAAM2V,EAAGjV,MAAOmV,MAG3B,OAAO,kBAAC,KAAD,CAAOouB,UAAQ,EAACxP,WAAYA,EAAYF,QAhB/B,CACd,CAAErK,MAAO,OAAQsK,UAAW,QAC5B,CAAEtK,MAAO,QAASsK,UAAW,UAckCmpD,WAAY,CAAEC,kBAAkB,SAIrG5+E,EAASu7C,OAAO,QAASkjC,GAAYC,IC7BrC,IAAMlkC,GAAW1H,QAAMlyC,MAAM,CAC3Bi+E,UAAW/rC,QAAME,SAASF,QAAM6H,OAAQ,IACxC9sB,QAASilB,QAAME,SAASF,QAAM6H,OAAQ,SACtCjzC,MAAOorC,QAAM4H,UAAU5H,QAAM6H,UAGzBE,GAAQ/H,QACXlyC,MAAM,CACLiC,GAAIiwC,QAAM2H,WACVz5C,KAAM,OACN4C,SAAUujE,GAAM3F,WAAW,CACzB,OACA,SACA,SACA,QACA,QACA,WACA,UACA,SACA,SACA,SACA,YACA,UACA,UACA,WACA,QACA,kBACA,gBACA,gBACA,iBACA,cACA,kBACA,mBACA,OACA,QACA,QACA,YACA,aACA,YACA,OACA,SACA,WACA,WACA,QACA,QACA,YACA,aAGHphE,OAAM,SAAAswB,GAAI,MAAK,CACd,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,cAIrC8zD,GAAYhsC,QAAMuI,QAAQ,YAAab,GAAUK,GAAO45B,IAExDsK,GAAUr0D,aAAS,YAAsB,IAAnBpnB,EAAkB,EAAlBA,KACtBoE,GADwC,EAAZ8jB,MACpB,IAcZ,MAZqB,WAAjBloB,EAAKuqB,UACPnmB,EAAQ,CAAEmmB,QAAS,eAAgBE,YAAa,SAG9CzqB,EAAKoE,QACPA,EAAQiyD,EAAKlyD,aAAanE,EAAKoE,SAGV,IAAnBpE,EAAKqyE,YACPjuE,EAAK,QAAc,QAInB,yBAAKogB,UAAWxkB,EAAKu7E,UAAWn3E,MAAOA,GACpCiyD,EAAKl1D,eAAenB,OAK3BtD,EAASu7C,OAAO,OAAQujC,GAAWC,IC7FnC,IAAMlkC,GAAQ/H,QAAMlyC,MAAM,CACxBI,KAAM,QACNU,MAAOoxC,QAAME,SAASF,QAAM6H,OAAQ,MAEhCqkC,GAAalsC,QAAMuI,QAAQ,aAAcR,IAEzCokC,GAAWv0D,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KAC3B,OAAO,2BAAO6jD,wBAAyB,CAAEC,OAAQ9jD,EAAK5B,YAGxD1B,EAASu7C,OAAO,QAASyjC,GAAYC,ICCrC,IAAMzkC,GAAW1H,QAAMlyC,MAAM,CAC3Bs+E,cAAepsC,QAAME,SAASF,QAAM8H,SAAS,GAE7CukC,QAASrsC,QAAME,SAASF,QAAM8H,SAAS,GAEvC3Y,YAAa6Q,QAAME,SAASF,QAAM6H,OAAQ,gBAC1CykC,UAAWtsC,QAAME,SAASF,QAAM6H,OAAQ,KACxCtI,OAAQS,QAAM4H,UAAU5H,QAAM6H,UAG1BE,GAAQ/H,QACXlyC,MAAM,CACLI,KAAM,SACNk3B,OAAQ4a,QAAM4H,UAAU5H,QAAM6H,QAC9B55C,KAAM+xC,QAAM2H,WACZ4pB,OAAQvxB,QAAM4H,UAAU5H,QAAM6H,UAE/Bv6C,OAAM,SAAAswB,GAAI,MAAK,CACd,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,UAGvC,YACE,OAAO0F,EAAK3E,WAAWivB,MAAM55C,IAAIsvB,EAAK2zC,aAGzCrgC,SAAQ,SAAAtT,GAAI,MAAK,CAChB2uD,cACE,IAAI39E,EAAQgvB,EAAKwH,OACXonD,EAAM5uD,EAAK6uD,MAAMzN,aAEnB3yC,OAAOzO,EAAK0uD,WAAa19E,EAAMgD,OACjC46E,EAAI19E,QAAO,SAAAquE,GAAE,OAAKA,EAAGv6C,WAAStxB,SAAQ,SAAA6rE,GAAE,OAAIA,EAAGiD,YAAW,OAIvDxiD,EAAKwuD,gBAAex9E,EAAQA,EAAM2D,eAEvCi6E,EAAIl7E,SAAQ,SAAA6rE,GACV,IAAIuP,EAAQvP,EAAG/3C,OACVxH,EAAKwuD,gBAAeM,EAAQA,EAAMn6E,gBAET,IAA1Bm6E,EAAM33E,QAAQnG,GAAeuuE,EAAGiD,YAAW,GAC1CjD,EAAGiD,YAAW,QAIvBuM,cAAcp3E,GAAI,IACV3G,EAAU2G,EAAEspB,OAAZjwB,MACNgvB,EAAKwH,OAASx2B,EAEdgvB,EAAK2uD,eAGPpkC,SAAQ,KACFvqB,EAAK2uC,MACP3uC,EAAK2uC,KAAK6Q,SAGL,GAGTwP,YAAYxvC,GACVxf,EAAK2uC,KAAOnvB,GAGdyvC,qBACmBjvD,EAAK6uD,MAAMvN,sBACZthD,EAAKyuD,UACnBzuD,EAAKwH,OAAS,GACdxH,EAAK2uD,oBAKPO,GAAc9sC,QAAMuI,QAAQ,cAAeR,GAAOL,GAAUhG,IAE5DqrC,GAAYn1D,aAAS,YAAe,IAAZpnB,EAAW,EAAXA,KACtB3C,EAAM2C,EAAKi8E,MAEjB,OAAoC,IAAhC5+E,EAAIK,KAAK6G,QAAQ,YAAqD,IAAjClH,EAAIK,KAAK6G,QAAQ,WAA0B,KAGlF,kBAAC,KAAD,CACEqoC,IAAK,SAAAA,GACH5sC,EAAKo8E,YAAYxvC,IAEnBxuC,MAAO4B,EAAK40B,OACZvW,KAAK,QAEL+P,SAAUpuB,EAAKm8E,cACfK,aAAcx8E,EAAKq8E,mBACnB19C,YAAa3+B,EAAK2+B,iBAKxBjiC,EAASu7C,OAAO,SAAUqkC,GAAaC,I,8CCtH1BE,GAAiBlxD,YAAO,QAAPA,CAC5BnE,aAAS,YAAwB,IAArBc,EAAoB,EAApBA,MAAOw0D,EAAa,EAAbA,OAGjB,OAFAr/D,QAAQk9B,IAAIzzB,MAGV,yBAAKtC,UAAU,aACZk4D,EAAOr7E,KAAI,SAACic,EAAOoZ,GAClB,OACE,0BACE32B,IAAG,gBAAW22B,GACdlS,UAAWsC,KAAO,YAClB+8B,wBAAyB,CAAEC,OAAQ64B,iBAAOz0D,GAAOwtB,SAASp4B,EAAMA,OAAOA,cCyB/Es/D,G,8KAEF,OAAO,kBAAC,IAAD,CAAQx0D,OAAO,UAAUR,MAAO+0D,iBAAOhgF,KAAKqE,MAAMknB,OAAOwtB,SAASlE,S,2CAIzE,OAAO,kBAAC,IAAD,CAAQppB,OAAO,UAAUR,MAAO+0D,iBAAOhgF,KAAKqE,MAAMknB,OAAOwtB,SAASjE,iB,6CAIzE,OAAO,kBAAC,IAAD,CAAQrpB,OAAO,UAAUR,MAAO+0D,iBAAOhgF,KAAKqE,MAAMknB,OAAOwtB,SAAShE,iB,uCAIzE,OAAO,kBAAC,IAAD,CAAQtpB,OAAO,UAAUR,MAAO+0D,iBAAOhgF,KAAKqE,MAAMknB,OAAOwtB,SAAS/D,c,wDAIzE,OACE,kBAAC,GAAD,KACE,kBAAC8qC,GAAD,CAAgBC,OAAQ//E,KAAKqE,MAAMknB,MAAMU,gBAAgBi0D,gB,qCAM7D,OAAO,kBAAC,IAAD,CAAQnwD,KAAM,kBAAC,IAAD,CAAMrO,KAAK,c,iCAGvB1a,GACT,OAAmB,IAAfA,EAAIvC,OAAqB,kBAAC,GAAD,CAASqnB,WAAY9kB,EAAI,IAAK,CAAC0yD,EAAK32D,WAAWiE,EAAI,GAAGzD,QAGjF,yBAAKskB,UAAU,gBACZ7gB,EAAItC,KAAI,SAAAwC,GAAC,OACR,yBAAK2gB,UAAU,WACb,kBAAC,GAAD,CAASiE,WAAY5kB,GAAI,CAACwyD,EAAK32D,WAAWmE,EAAE3D,e,gCAO5CA,EAAMgoB,EAAOzP,EAAIuT,GACzB,OACE,qCACIvT,EAAG87C,wBAA0B97C,EAAG+7C,uBAChC,kBAAC,GAAD,CAAS/rC,WAAYhQ,EAAGiP,SAAUlD,UAAWwH,EAASwH,gBAAkB,GAAK1M,KAAOg2D,QAAU,eAC5F,yBAAK14E,MAAO,CAAE8nC,SAAU,aACrBmqB,EAAK32D,WAAWQ,GAChBvD,KAAK0xC,gBAAgB51B,EAAGiP,WAE1BQ,EAAMgB,aAAa,aAAe,kBAAC6zD,GAAD,CAAU/8E,KAAMyY,EAAGiP,YAGzDjP,EAAG87C,uBAAyB53D,KAAKqgF,uBACjCvkE,EAAG+7C,uBAAyB73D,KAAKsgF,0B,6CAMtC,OAAOtgF,KAAKugF,WAAWvgF,KAAKqE,MAAMknB,MAAMU,gBAAgBiC,e,6CAIxD,OAAOluB,KAAKugF,WAAWvgF,KAAKqE,MAAMknB,MAAMU,gBAAgB6F,e,sCAG1C0uD,GACd,IAAMj1D,EAAQi1D,EAAc97C,cAC5B,OAAO,kBAAC,GAAD,CAAkBthC,IAAKlB,IAAiBqpB,MAAOA,M,+BAItD,IACQA,EADKvrB,KACUqE,MAAfknB,MACFzP,EAAKyP,EAAMU,gBACX1oB,EAAOuY,EAAGiP,UAAYjP,EAAGiP,SAASxnB,KAChC8rB,EAAa9D,EAAb8D,SAER,GAAI9D,EAAMk1D,UAAW,OANRzgF,KAMoB0gF,eAEjC,GAAIn1D,EAAMo1D,OAAQ,OARL3gF,KAQiB4gF,uBAE9B,GAAIr1D,EAAMs1D,SAAU,OAVP7gF,KAUmB8gF,iBAEhC,GAAIv1D,EAAMw1D,eAAgB,OAZb/gF,KAYyBghF,gBAEtC,IAAKz9E,EAAM,OAdEvD,KAcUihF,qBAEvB,IAAMC,EAAW7xD,EAAS6D,WAAa/I,KAAOg3D,SAAWh3D,KAAOi3D,OAC1DC,EAAWhyD,EAASwH,gBAAkB1M,KAAOm3D,UAAYn3D,KAAOo3D,OAChEC,EAASnyD,EAASwH,gBAAkB1M,KAAOs3D,QAAUt3D,KAAOwiC,KAElE,OACE,yBAAK9kC,UAAWq5D,EAAW,cACzB,kBAACQ,GAAD,CAAUn2D,MAAOA,IACjB,kBAAC,IAAD,CAAUA,MAAOA,GACf,6BACGA,EAAMgB,aAAa,UAAY,kBAACo1D,GAAD,CAAOp2D,MAAOA,IAE7CA,EAAMuH,oBACL,kBAAC,GAAD,KACE,yBAAKo0B,wBAAyB,CAAEC,OAAQ57B,EAAMsH,gBASlD,yBAAKhL,UAAWw5D,EAAW,cACN,OAAlBvlE,EAAGokE,WACAlgF,KAAK4hF,UAAUr+E,EAAMgoB,EAAOzP,EAAIuT,GAChCrvB,KAAK6hF,kCACT,yBAAKh6D,UAAW25D,EAAS,YACtBj2D,EAAMgB,aAAa,qBAAuBhB,EAAM8D,SAAS6H,sBACxD,kBAAC,GAAD,CAAa3L,MAAOA,IAErBA,EAAMgB,aAAa,qBAAuBhB,EAAM8D,SAAS+H,sBACxD,kBAAC,GAAD,CAAa7L,MAAOA,IAErBA,EAAMgB,aAAa,iBAAmBzQ,EAAG87C,wBAA0B97C,EAAG+7C,uBACrE,kBAACiqB,GAAD,CAAYv2D,MAAOA,QAM5BA,EAAMgB,aAAa,UAAY,kBAACw1D,GAAD,CAAOx2D,MAAOA,S,GAnIpC+C,aAyIH7D,eAASw1D,ICxKlBrlC,GAAQ/H,QACXlyC,MAAM,wBAAyB,CAC9BiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GACrCm9B,IAAKwT,QAAME,SAASF,QAAM6H,OAAQx4C,GAClCnB,KAAM,mBACNC,OAAQ6xC,QAAMyL,MAAK,kBAAMzL,QAAM0L,UAAU4yB,OAEzClrD,MAAO4sB,QAAM2L,MAAM3L,QAAM1+B,OAAQ0+B,QAAM6H,QACvC7jC,IAAKg8B,QAAM2L,MAAM3L,QAAM1+B,OAAQ0+B,QAAM6H,QACrCutB,SAAS,IAEV9nE,OAAM,SAAAswB,GAAI,MAAK,CACd,aACE,OAAOA,EAAKzvB,QAGd,iBACE,OAAOg5B,kBAAQvJ,GAAMxE,gBAAgBlB,UAEvC,oBACE,OAAO0F,EAAK85C,eAGfxmC,SAAQ,SAAAtT,GAAI,MAAK,CAChBuxD,UAAUtgE,GACR+O,EAAK5Z,IAAM4Z,EAAK5Z,IAAM6K,GAGxBugE,SAASvgE,GACP+O,EAAKxK,MAAQwK,EAAKxK,MAAQvE,GAG5BwgE,YAAYxgE,GACV+O,EAAK5Z,IAAM4Z,EAAK5Z,IAAM6K,GAGxBygE,WAAWzgE,GACT+O,EAAKxK,MAAQwK,EAAKxK,MAAQvE,GAG5Bg8B,eAIEroB,GAAOX,OAAO,QAAQ,kBAAMjE,EAAKwxD,SAHrB,OAGoC,+BAChD5sD,GAAOX,OAAO,SAAS,kBAAMjE,EAAKuxD,UAJtB,OAIsC,gCAClD3sD,GAAOX,OAAO,YAAY,kBAAMjE,EAAK0xD,WALzB,OAK0C,+BACtD9sD,GAAOX,OAAO,aAAa,kBAAMjE,EAAKyxD,YAN1B,OAM4C,gCAExD7sD,GAAOX,OAAO,cAAc,kBAAMjE,EAAKwxD,SAP1BG,QAQb/sD,GAAOX,OAAO,eAAe,kBAAMjE,EAAKuxD,UAR3BI,QASb/sD,GAAOX,OAAO,kBAAkB,kBAAMjE,EAAK0xD,WAT9BC,QAUb/sD,GAAOX,OAAO,mBAAmB,kBAAMjE,EAAKyxD,YAV/BE,QAYb3xD,EAAK8T,OAAO4pC,eAAe19C,IAG7BysB,4BACYzsB,EAAKgJ,aAIfhJ,EAAK8T,OAAO2pC,cAGdrwB,sBACE,CACE,OACA,QACA,YACA,aACA,KACA,WACA,OACA,aACA,UACA,gBACA,YACA,mBACA15C,SAAQ,SAAAf,GAAG,OAAIiyB,GAAOd,UAAUnxB,MAElCqtB,EAAK8T,OAAO2pC,cAGda,aAAa9oD,EAAOpP,GAClB4Z,EAAKxK,MAAQA,EACbwK,EAAK5Z,IAAMA,GAGbupC,cAC4B,kBAAf3vB,EAAKxK,QAEdwK,EAAKxK,MAAQwK,EAAK8T,OAAOipC,UAAU/8C,EAAKxK,OACxCwK,EAAK5Z,IAAM4Z,EAAK8T,OAAOipC,UAAU/8C,EAAK5Z,OAI1CsmC,UAAUE,EAASr8C,GAEjB,IAAMgoD,EAASv4B,EAAK8T,OAAO2oC,WAAa3K,KAAc9xC,EAAK8T,OAAO2oC,YAAchuC,OAShF,MARU,CACRz9B,MAAO,CACLwkB,MAAO+iC,EAAOv4B,EAAKxK,OACnBpP,IAAKmyC,EAAOv4B,EAAK5Z,KACjBoxD,QAASx3C,EAAKw3C,eAQlBrwC,GAAwBib,QAAMuI,QAClC,wBACAgH,GACAnG,GACAyE,GACA1E,GACApB,IAGF76C,EAASu7C,OAAO,mBAAoB1jB,IAAuB,eAC3D73B,EAASsiD,cAAczqB,GAAuB,cCrH9C,IAAMyqD,GAAiBxvC,QAAM2L,MAC3B9mB,GACAuB,GACAT,GACAf,GACAG,GACAiB,GACAP,GACAJ,GACAH,GACAR,ICvBI+qD,GAAgBzvC,QACnBlyC,MAAM,gBAAiB,CACtBuiC,MAAO2P,QAAM0L,UAAU8jC,IACvBl/C,MAAO0P,QAAM0L,UAAU8jC,MAExBt+C,SAAQ,SAAAtT,GAAI,MAAK,CAChBwT,kBACMxT,EAAKyS,QAAUzS,EAAK0S,MACtB1S,EAAKyS,MAAMe,mBAEXxT,EAAKyS,MAAMe,kBACXxT,EAAK0S,MAAMc,wBAKJ4O,WACZlyC,MAAM,qBAAsB,CAC3B4hF,eAAgB1vC,QAAMiM,MAAMwjC,MAE7Bv+C,SAAQ,SAAAtT,GAAI,MAAK,CAChB+xD,kBAAiB,CAACt/C,EAAOC,IAClBA,EAME1S,EAAK8xD,eAAe3hE,MAAK,SAAAyhB,GAC9B,OAAOA,EAAGa,MAAMtgC,KAAOsgC,EAAMtgC,IAAMy/B,EAAGc,MAAMvgC,KAAOugC,EAAMvgC,MANlD6tB,EAAK8xD,eAAe3hE,MAAK,SAAAyhB,GAC9B,OAAOA,EAAGa,MAAMtgC,KAAOsgC,EAAMtgC,IAAMy/B,EAAGc,MAAMvgC,KAAOsgC,EAAMtgC,MAS/D6/E,iBAAiBv/C,EAAOC,GACtB,IAAI1S,EAAK+xD,kBAAkBt/C,EAAOC,GAAlC,CAEA,IAAMd,EAAKigD,GAAc3/E,OAAO,CAC9BugC,MAAOA,EACPC,MAAOA,IAKT,OAFA1S,EAAK8xD,eAAeljB,QAAQh9B,GAErBA,IAGTrB,oBAAoBqB,GAClB2K,kBAAQ3K,IAGVqgD,wBAAwBngF,GAEtB,IAAM8/B,EAAK5R,EAAK+xD,kBAAkBjgF,GAE9B8/B,GAAI5R,EAAKuQ,oBAAoBqB,QCtDxBwQ,WACZlyC,MAAM,cAAe,CACpBsa,KAAM43B,QAAME,SAASF,QAAM8L,YAAY,CAAC,OAAQ,UAAW,QAC3DviB,UAAWyW,QAAME,SAASF,QAAM8L,YAAY,CAAC,MAAO,SAAU,QAE9DoS,MAAOle,QAAME,SAASF,QAAM8L,YAAY,CAAC,OAAQ,UAAW,QAE5D/9C,KAAMiyC,QAAME,SAASF,QAAM8L,YAAY,CAAC,UAAW,WAAY,aAEhEx+C,OAAM,SAAAswB,GAAI,MAAK,CACd,iBACE,OAAO4rB,oBAAU5rB,IAGnB,cACE,OAAOnpB,MAAMoX,KAAK+R,EAAK3E,WAAWxrB,MAAMgB,UAAUK,QAAO,SAAAk+C,GAAI,OAAKA,EAAK8iC,mBAGzE,oBAOE,MANc,CACZ1jE,KAAM,SAAA2jE,GAAM,OAAKA,EAASnyD,EAAKrwB,QAAU,aAAIqwB,EAAKrwB,SAASgnB,WAC3DlF,MAAO,SAAA0gE,GAAM,OAAI,aAAInyD,EAAKrwB,SAAS6a,KAAK2nE,EAAS,SAAChhF,EAAG0R,GAAJ,OAAUA,EAAE4O,MAAQtgB,EAAEsgB,OAAQ,SAACtgB,EAAG0R,GAAJ,OAAU1R,EAAEsgB,MAAQ5O,EAAE4O,UAGlFuO,EAAKxV,MAAyB,SAAnBwV,EAAK2L,YAIvCkB,OAAOulD,GAOL,IAAM/5E,EAAM2nB,EAAKyJ,cACXrzB,EAAO,GACXs6D,EAAS,GAsBX,OApBAr4D,EAAI3E,SAAQ,SAACnB,EAAI03B,GACfymC,EAAOn+D,EAAGJ,IAAMigF,EAAO7/E,EAAI03B,GAC3BymC,EAAOn+D,EAAGJ,IAAV,KAAwBI,EACxBm+D,EAAOn+D,EAAGJ,IAAV,SAA4B,MAG9BvB,OAAOQ,KAAKs/D,GAAQh9D,SAAQ,SAAAf,GAC1B,IAAMJ,EAAKm+D,EAAO/9D,GACdi8B,EAAMr8B,EAAE,KAASq6B,SACrB,GAAIgC,EAAK,CACP,IAAIkF,EAAS48B,EAAO9hC,GAEpB,GADKkF,IAAQA,EAAS48B,EAAO,GAAD,OAAI9hC,EAAJ,YAAW5O,EAAK3E,WAAWlpB,MACnD2hC,EAEF,YADAA,EAAO5gC,SAAS9C,KAAKmC,GAIzB6D,EAAKhG,KAAKmC,MAGL6D,GAGT21B,aAAaqmD,GAEX,IAAM5+D,EAAS,GACTvf,EAAM,GACZ+rB,EAAKrwB,QAAQ+D,SAAQ,SAAAiP,GACnB,IAAMqrB,EAAIrrB,EAAEmrB,SACZ,GAAIE,EAAG,CACL,IAAM1T,EAAW0T,EAAED,eACnBzT,GACEA,EAAS5mB,SAAQ,SAAAqvC,GACfvvB,EAAOuvB,EAAEvb,QAAUub,EACfA,EAAEvb,UAAUvzB,EAAKA,EAAI8uC,EAAEvb,QAAQp3B,KAAKuS,GACnC1O,EAAI8uC,EAAEvb,QAAU,CAAC7kB,UAM9B,IAAIsnB,EAAM,EAQV,OAPar5B,OAAOQ,KAAKoiB,GAAQvf,KAAI,SAAAo+E,GACnC,IAAM9/E,EAAK6/E,EAAO5+D,EAAO6+D,GAAQpoD,GAAK,GAGtC,OAFA13B,EAAE,SAAe0B,EAAIo+E,GAAOp+E,KAAI,SAAA0O,GAAC,OAAIyvE,EAAOzvE,EAAGsnB,QAExC13B,UAMZ+gC,SAAQ,SAAAtT,GAAI,MAAK,CAChB4oB,UAAUp5B,GACRwQ,EAAKrwB,QAAQS,KAAKof,GAClB+/D,iBAAOvvD,GAAMsyD,eAAe9iE,IAG9B+iE,kBACyB,QAAnBvyD,EAAK2L,UAAqB3L,EAAK2L,UAAY,OAC1C3L,EAAK2L,UAAY,OAGxBL,QAAQn7B,GACN6vB,EAAK7vB,KAAOA,GAGds7B,QAAQjhB,GACFwV,EAAKxV,OAASA,EAChBwV,EAAKuyD,mBAELvyD,EAAK2L,UAAY,OACjB3L,EAAKxV,KAAOA,GAEdwV,EAAKwyD,eAGPC,SAASnyB,GACPtgC,EAAKsgC,MAAQA,GAOfvvB,aAAavhB,GACX,IAAMnX,EAAM2nB,EAAKrwB,QAGXuD,EAAW8sB,EAAK2O,iBAAiBnf,EAAOrd,IAC9Ce,GAAYA,EAASQ,SAAQ,SAAAiP,GAAC,OAAIA,EAAEirB,YAAYpe,EAAOod,aAEvD,IAAK,IAAIx3B,EAAI,EAAGA,EAAIiD,EAAIrE,OAAQoB,IAC1BiD,EAAIjD,KAAOoa,GACbnX,EAAIi4C,OAAOl7C,EAAG,GAIlBm6E,iBAAOvvD,GAAM0yD,eAAeljE,GAC5BwQ,EAAKwyD,eAGP/kD,aAAat7B,GACJ6tB,EAAKrwB,QAAQwgB,MAAK,SAAAxN,GAAC,OAAIA,EAAExQ,KAAOA,KAGzC28B,WAAW38B,GACF6tB,EAAKrwB,QAAQwgB,MAAK,SAAAxN,GAAC,OAAIA,EAAExQ,KAAOA,KAGzCw8B,iBAAiBx8B,GACR6tB,EAAKrwB,QAAQuB,QAAO,SAAAyR,GAAC,OAAIA,EAAEiqB,WAAaz6B,KAGjDw9C,cACEgjC,kBAAQ3yD,GAAM,SAAA4yD,GACM,QAAbA,EAAMC,IAA6B,WAAbD,EAAMC,KAAyD,IAArCD,EAAM3yC,KAAK9oC,QAAQ,cACtE6oB,EAAKwyD,iBAGTxyD,EAAK7vB,KAAO6vB,EAAK3E,WAAWP,MAAM8D,SAAS0H,uBAAyB,SAAW,WAIjFksD,cAEe5tD,GAAOJ,UACDtzB,QAAO,SAAA+U,GAAC,OAA2B,IAAvBA,EAAE9O,QAFlB,iBAITzD,SAAQ,SAAAuS,GAAC,OAAI2e,GAAOd,UAAU7d,MAEpC+Z,EAAKyJ,cAAc/1B,SAAQ,SAACiP,EAAG0D,GAC7Bue,GAAOX,OAPM,cAOW5d,EAAI,IAAI,WAC9B2Z,EAAK6Q,cACLluB,EAAEsqC,qBAMNroB,GAAOX,OAAO,gBAAgB,cAAU,oBAM1C4M,cACE7Q,EAAK3E,WAAWwV,eAGlBlD,iBACE3N,EAAKrwB,QAAQ+D,SAAQ,SAAAiP,GAAC,OAAIA,EAAE6nB,cAAa,OAG3CsoD,aAAc,IACJnjF,EAAYqwB,EAAZrwB,QACFs6B,EAAMjK,EAAKrwB,QAAQ2nE,WAAU,SAAA30D,GAAC,OAAIA,EAAE2X,aACjC,IAAT2P,GAAct6B,EAAQs6B,GAAKijB,iBAE3B,IAAMzkC,EAA4B,cAArB9Y,EAAQs6B,EAAM,GAAqBt6B,EAAQs6B,EAAM,GAAKt6B,EAAQ,GAE3E8Y,GAAQA,EAAKwkC,oBC9Lb8lC,GAAqB3wC,QAAMuI,QAC/B,qBACAsF,GACA7N,QACGlyC,MAAM,CACLK,OAAQ6xC,QAAMyL,MAAK,kBAAMzL,QAAM0L,UAAU1L,QAAM2L,MAAN,MAAA3L,QAAK,aAAU9yC,EAAS2+C,oBACjEikC,gBAAgB,IAEjB5+C,SAAQ,SAAAtT,GAAI,MAAK,CAChB0sB,UAAW,iBAAO,SAiCTsmC,GA7BF5wC,QAAM2L,MACjB,CACE4iB,WAAWC,GAET,GAAIA,EAAGqiB,UAAW,OAAOriB,EAAGqiB,UAAU3iF,KACtC,GAAIsgE,EAAG5/D,OAASJ,OAAOC,OAAO+/D,EAAG5/D,OAAOgD,QAAU,EAAG,OAAO++E,GAE5D,IAAMG,EAAatiB,EAAGrgE,OAAOF,MAAQugE,EAAGrgE,OAElCN,EAAMinB,OAAOi8D,IAAI33D,gBAAgB8uB,MAAM55C,IAAIwiF,GAE3CjiF,EAAY3B,EAAS8jF,kBAAkBnjF,EAAIK,KAAMsgE,GAEvD,OAAK3/D,EAAU+C,OACRouC,QAAM2L,MAAN,MAAA3L,QAAK,aAAUnxC,GAAV,QAAqB8hF,MADHA,KAIlC9rD,GACAH,GACAE,GACAG,GACAM,GACAW,GACAL,GACAF,GACAW,GACAuqD,IC3CIxgD,GAAW6P,QACdlyC,MAAM,WAAY,CACjBiC,GAAIiwC,QAAME,SAASF,QAAM2H,WAAYt4C,GAErCghC,MAAO2P,QAAM0L,UAAUklC,IACvBtgD,MAAO0P,QAAM0L,UAAUklC,IAEvB7/C,UAAWiP,QAAME,SAASF,QAAM8L,YAAY,CAAC,OAAQ,QAAS,OAAQ,SAGtErc,UAAWuQ,QAAM4H,UAAU8iC,IAE3B94C,SAAUoO,QAAME,SAASF,QAAM8H,SAAS,KAEzCx6C,OAAM,SAAAswB,GAAI,MAAK,CACd,aACE,OAAOrpB,0BAAgBqpB,EAAMqzD,KAG/B,mBACE,IAAM1wE,EAAIqd,EAAK6R,UACf,OAAOlvB,GAAKA,EAAEzP,UAAYyP,EAAEzP,SAASc,OAAS,OAGjDs/B,SAAQ,SAAAtT,GAAI,MAAK,CAChB4vB,cACE,IACMn5C,EADO8yB,kBAAQvJ,GACNxE,gBAAgBlB,SAG3BuX,EAAY,KAChBp7B,EAAE5D,cAAa,SAASf,GACtB,GAAkB,cAAdA,EAAKxB,KAEP,OADAuhC,EAAY//B,E5IpCO,U4IyCL,OAAd+/B,IACF7R,EAAK6R,UAAYhgC,EAAUggC,KAI/BoB,kBACE,IAAMvqB,EAAI,CAAC,OAAQ,QAAS,MACxBuhB,EAAMvhB,EAAE4uD,WAAU,SAAA1kE,GAAI,OAAIA,IAASotB,EAAKmT,cAE5ClJ,GAAY,IACDvhB,EAAE1U,SAAQi2B,EAAM,GAE3BjK,EAAKmT,UAAYzqB,EAAEuhB,IAGrBuJ,kBACMxT,EAAKyS,QAAUzS,EAAK0S,MACtB1S,EAAKyS,MAAMe,mBAEXxT,EAAKyS,MAAMe,kBACXxT,EAAK0S,MAAMc,oBAIfI,aACE5T,EAAKgU,UAAYhU,EAAKgU,UAGxBP,mBAAsC,wDAElCzT,EAAK8T,OAAOtJ,aAAaxK,GAEzBA,EAAK8T,OAAOw/C,uBAKdD,GAAgBjxC,QACnBlyC,MAAM,gBAAiB,CACtBqjF,WAAYnxC,QAAMiM,MAAM9b,IACxB4B,gBAAiBiO,QAAME,SAASF,QAAM8H,SAAS,GAC/CtJ,YAAawB,QAAM4H,UAAU5H,QAAMoxC,cAAcjhD,OAElD7iC,OAAM,SAAAswB,GAAI,MAAK,CACd,gBAIE,OAAOA,EAAKuzD,WAAWriF,QAAO,SAAAyR,GAAC,OAAI6vB,4BAAiB,kBAAM7vB,EAAE8vB,UAAUD,4BAAiB,kBAAM7vB,EAAE+vB,iBAGlGY,SAAQ,SAAAtT,GAAI,MAAK,CAChByzD,cAAchhD,EAAOC,GACnB,IAAMghD,EAAMjhD,EAAMtgC,IAAMsgC,EAClBkhD,GAAW,OAALjhD,QAAK,IAALA,OAAA,EAAAA,EAAOvgC,KAAMugC,EAEzB,OAAKihD,EAME3zD,EAAK6R,UAAU3gC,QAAO,SAAA0gC,GAC3B,OAAOA,EAAGa,MAAMtgC,KAAOuhF,GAAO9hD,EAAGc,MAAMvgC,KAAOwhF,KANvC3zD,EAAK6R,UAAU3gC,QAAO,SAAA0gC,GAC3B,OAAOA,EAAGa,MAAMtgC,KAAOuhF,GAAO9hD,EAAGc,MAAMvgC,KAAOuhF,MASpDE,aAAY,CAACnhD,EAAOC,IACX1S,EAAKyzD,cAAchhD,EAAOC,GAAO1+B,OAAS,EAGnDu5C,YAAY9a,EAAOC,GACjB,IAAI1S,EAAK4zD,aAAanhD,EAAOC,GAA7B,CAEA,IAAMd,EAAKW,GAASrgC,OAAO,CAAEugC,QAAOC,UAKpC,OAFA1S,EAAKuzD,WAAWnjF,KAAKwhC,GAEdA,IAGTmC,eAAenC,GACb2K,kBAAQ3K,IAGVoe,mBAAmBl+C,GAEjB,IAAM8/B,EAAK5R,EAAKyzD,cAAc3hF,GAC9B8/B,EAAG59B,QAAU49B,EAAGl+B,QAAQssB,EAAK+T,iBAG/B3T,oBAAmB,IACVJ,EAAK6R,UAAU59B,KAAI,SAAA0O,GACxB,IAAMogC,EAAI,CACR8wC,QAASlxE,EAAE8vB,MAAMziB,QACjB8jE,MAAOnxE,EAAE+vB,MAAM1iB,QACf1f,KAAM,WACN6iC,UAAWxwB,EAAEwwB,WAKf,OAFIxwB,EAAEkvB,YAAWkR,EAAC,OAAapgC,EAAEkvB,UAAUsP,kBAEpC4B,KAIXgxC,oBAAoBthD,EAAOC,EAAOS,EAAW3f,GAC3C,IAAMoe,EAAK5R,EAAKutB,YAAY9a,EAAOC,GACnCd,EAAGuB,UAAYA,EAEXvB,EAAGC,WAAare,GAClBA,EAAO9f,SAAQ,SAAAs6B,GACb,IAAMrrB,EAAIivB,EAAGC,UAAUQ,aAAarE,GAChCrrB,GAAGA,EAAE2vB,aAAY,OAI3B8B,oBACEpU,EAAKmU,iBAAmBnU,EAAKmU,iBAG/B3J,aAAa2R,GACXnc,EAAK4gB,YAAczE,GAGrBm3C,kBACEtzD,EAAK4gB,YAAc,UAIVyyC,MC3DAW,GAnHO5xC,QACnBlyC,MAAM,gBAAiB,CACtBgyB,QAAS,EACT+xD,WAAY,GACZC,kBAAmB9xC,QAAME,SAASF,QAAM8H,SAAS,GAEjDiqC,WAAY,IAEbzoC,UAAS,SAAA1rB,GAAI,MAAK,CACjBsB,QAAS,GACTa,UAAU,MAEXzyB,OAAM,SAAAswB,GAAI,MAAK,CACd,cACE,OAAOA,EAAKkC,QAAU,GAExB,cACE,OAAOlC,EAAKkC,QAAUlC,EAAKsB,QAAQttB,OAAS,OAG/Cs/B,SAAQ,SAAAtT,GACP,IAAIo0D,EACAC,EACAC,EAAiB,IAAIhiB,IAEzB,SAASiiB,IACPD,EAAe5gF,SAAQ,SAAA8gF,GAAO,OAAIA,OAGpC,MAAO,CACLz6B,SACE/5B,EAAKmC,UAAW,GAGlBo4B,WACEv6B,EAAKmC,UAAW,EAChBnC,EAAKy0D,aAGPA,YACEz0D,EAAK00D,aAAa1iF,sBAAYoiF,KAGhCt6C,SAAS06C,IACPF,EAAejhE,IAAImhE,GACZ,WACLF,EAAepJ,OAAOsJ,KAI1BE,aAAaC,GACP30D,EAAKmC,WACLnC,EAAKk0D,kBAIPl0D,EAAKk0D,mBAAoB,GAK3Bl0D,EAAKsB,QAAQgvB,OAAOtwB,EAAKkC,QAAU,GACnClC,EAAKsB,QAAQlxB,KAAKukF,GAClB30D,EAAKkC,QAAUlC,EAAKsB,QAAQttB,OAAS,KAGvC4gF,SACE50D,EAAKsB,QAAU,CAACtvB,sBAAYoiF,IAC5Bp0D,EAAKkC,QAAU,EACflC,EAAKm0D,WAAa,EAClBI,KAGF5kC,cAAe,IAAD,OAGZ,KAFAykC,EAAcp0D,EAAKi0D,WAAaY,sBAAY70D,EAAMA,EAAKi0D,YAAc1E,iBAAOvvD,GAAMo0D,aAGhF,MAAM,IAAIrjF,MACR,+HAGJsjF,EAAmBS,qBAAWV,GAAa,SAAAriF,GAAQ,OAAI,EAAK2iF,aAAa3iF,MAE7C,IAAxBiuB,EAAKsB,QAAQttB,QACfgsB,EAAKy0D,YAGPz0D,EAAKm0D,WAAan0D,EAAKkC,SAGzBiuB,gBACEkkC,KAGF3yD,OACE1B,EAAKrvB,IAAIqvB,EAAKkC,QAAU,IAG1BL,OACE7B,EAAKrvB,IAAIqvB,EAAKkC,QAAU,IAG1BvxB,IAAIs5B,GACFjK,EAAKkC,QAAU+H,EACfjK,EAAKk0D,mBAAoB,EACzBa,wBAAcX,EAAap0D,EAAKsB,QAAQ2I,IACxCsqD,KAGFxyD,QACE/B,EAAKrvB,IAAIqvB,EAAKm0D,iBC9GhBa,GAAkB,CACtBC,OAAQ/gB,GACRghB,OAAQ,CACNphB,SAAQ,IACC,KAMAqhB,GAAavkF,OAAOQ,KAAK4jF,IAAiB18E,QAAO,SAACrF,EAAKgT,GAAN,mBAAC,eAAiBhT,GAAlB,IAAuB,CAACgT,GAAIA,MAAM,IAE1FmvE,GAAYhzC,QAAM2L,MAAM3L,QAAM6H,OAAQ7H,QAAMiM,MAAMjM,QAAM6H,SAEjDorC,GAAkBjzC,QAC5BlyC,MAAM,CACLY,UAAWsxC,QAAM6H,OACjBxF,MAAOrC,QAAM6H,OACb/5B,MAAOkyB,QAAM6H,OACbj5C,MAAOoxC,QAAM4H,UAAU5H,QAAM6H,QAC7BpF,UAAWzC,QAAM4H,UAAUorC,MAE5B1lF,OAAM,SAAAswB,GAAI,MAAK,CACd,iBAAkB,IAAD,EACf,OAAO,GAACA,EAAKlvB,UAAWkvB,EAAKykB,MAAOzkB,EAAK9P,MAAO8P,EAAKhvB,QAClDyH,OADI,QACM,CAACunB,EAAK6kB,YAChB3zC,QAAO,SAAAqB,GAAE,OAAW,OAAPA,KACblB,KAAK,UAIDikF,GAAb,iDAEEC,UAAY,IAAIjjB,IAFlB,6DAImB14B,GACf,OAAKrqC,KAAKgmF,UAAUC,IAAI57C,KACtBrqC,KAAKgmF,UAAUliE,IAAIumB,IACZ,KAPb,0CAYsBA,GAClB,QAAIrqC,KAAKgmF,UAAUC,IAAI57C,KACrBrqC,KAAKgmF,UAAUrK,OAAOtxC,IACf,KAfb,+BAyBW67C,EAAe/gF,GAAO,IAId,EAJa,OACtBghF,EAAYV,GAAgBS,GAC9BnG,EAAS,GAEToG,EACFpG,GAAS,UAACoG,EAAU5hB,SAASp/D,UAApB,QAA6B,IAAIT,KAAI,SAAA0hF,GAC5C,IACE,OAAON,GAAgBnjF,OAAOyjF,GAC9B,MAAO9/E,GAEP,MADAoa,QAAQk9B,IAAI,CAAEwoC,kBACR9/E,MAIVoa,QAAQC,MAAR,6BAAoCulE,IAGtCj8E,YAAW,WACT,GAAI81E,EAAOt7E,OAAQ,CAAC,IAAD,gBACI,EAAKuhF,WADT,IACjB,2BAAqC,EACnC37C,EADmC,SAC1B01C,IAFM,kCAKlB,OAhDP,KCfM10D,GAAawnB,QAChBlyC,MAAM,aAAc,CACnBiC,GAAIiwC,QAAM2H,WAKV5uB,GAAIinB,QAAM4H,UAAU5H,QAAM6H,QAE1B3vB,SAAU8nB,QAAME,SAASF,QAAM8H,SAAS,GACxC55C,KAAM8xC,QAAM8L,YAAY,CAAC,aAAc,eAEvCtyB,YAAawmB,QAAME,SAASF,QAAM6H,OAAQ5vB,GAAMb,MAAM3K,kBACtD8M,WAAYymB,QAAM4H,UAAU5H,QAAM6H,QAClCpuB,UAAWumB,QAAME,SAASF,QAAM6H,OAAQ,SAExC2rC,WAAYxzC,QAAME,SAASF,QAAMlqC,KAAM,IAAIA,MAC3C29E,SAAUzzC,QAAM4H,UAAU5H,QAAM1+B,QAEhCyW,OAAO,EAEPF,WAAYmoB,QAAMgM,MAAMhM,QAAM6H,QAG9BhvB,aAAcmnB,QAAME,SAASF,QAAM8H,SAAS,GAC5CxrB,OAAQ0jB,QAAME,SAASF,QAAM8H,SAAS,GACtChvB,iBAAkBknB,QAAME,SAASF,QAAM8H,SAAS,GAChD4rC,YAAa1zC,QAAME,SAASF,QAAM8H,SAAS,GAE3C/tB,SAAUimB,QAAME,SAASF,QAAM8H,SAAS,GACxCnuB,SAAS,EAETuF,QAAS8gB,QAAME,SAAS0xC,GAAe,CAAEC,WAAY,aAErD8B,SAAU3zC,QAAME,SAASF,QAAM8H,SAAS,GAExCxf,SAAU0X,QAAME,SAASF,QAAM8H,SAAS,GAExCoD,aAAclL,QAAME,SAASF,QAAM8H,SAAS,GAC5CjW,cAAemO,QAAME,SAAS+wC,GAAe,CAC3CxhD,UAAW,KAGbb,kBAAmBoR,QAAME,SAASF,QAAM8H,SAAS,GACjD8rC,mBAAoB5zC,QAAME,SAAS2zC,GAAoB,CACrDnE,eAAgB,KAGlBjiF,MAAOuyC,QAAMnuC,IAAI++E,IAEjBxpD,YAAa4Y,QAAME,SAAS4zC,GAAa,CACvCvmF,QAAS,KAGXugC,gBAAiBkS,QAAM4H,UAAU5H,QAAMoxC,cAAc5B,OAEtDuE,oBAAmB,SAAAvlB,GAElB,OADAA,EAAGz2C,MAAQiP,QAAQwnC,EAAGz2C,OACfy2C,KAERlhE,OAAM,SAAAswB,GAAI,MAAK,CACd,YACE,OAAOuJ,kBAAQvJ,IAGjB,WACE,OAAO4rB,oBAAU5rB,EAAM,IAGzB,WACE,OAAOA,EAAKvD,KAAK3pB,MAGnB,YACE,OAAOktB,EAAKvD,KAAK6tB,OAGnB,cACE,OAAOtqB,EAAKvD,KAAKuwB,SAGnB,cACE,OAAOn2C,MAAMoX,KAAK+R,EAAKsqB,MAAMz5C,UAAUK,QAAO,SAAAjB,GAAG,OAAKA,EAAI0jE,WAG5D,cACE,IAAM58C,EAAU,GAEhB,OADAiJ,EAAKnwB,MAAM6D,SAAQ,SAAAvC,GAAC,OAAIA,EAAE4lB,QAAQrjB,SAAQ,SAAAiP,GAAC,OAAIoU,EAAQ3mB,KAAKuS,SACrDoU,OAGV20B,UAAS,SAAA1rB,GAAI,MAAK,CACjB9F,SAAU,OAEXoZ,SAAQ,SAAAtT,GAAI,MAAK,CAChB4tC,gBACE5tC,EAAKsB,QAAQszD,SACb50D,EAAKo2D,UAAYp2D,EAAKo2D,SAAS7L,UAGjC8L,QAAQlwE,GACN6Z,EAAK0K,SAAWvkB,GAGlBkW,eAAerrB,GACbgvB,EAAK7D,SAAWnrB,EAChBu+E,iBAAOvvD,GAAMs2D,cAAct2D,EAAKlF,MAAOkF,EAAMhvB,IAG/CulF,mBACEv2D,EAAK9E,kBAAmB,GAG1Bs7D,eAAexlF,GACbgvB,EAAK81D,YAAc9kF,GAGrBgyD,YAAY78C,GACV6Z,EAAK+1D,SAAW5vE,GAGlBswE,kBAAkBzlF,GAChBgvB,EAAK7E,GAAKnqB,GAGZ4/B,qBAAqBzqB,GACnB6Z,EAAKgR,kBAAoB7qB,GAG3BuwE,mBAAmB5kF,KAInBw4B,WAAW8kB,GACLpvB,EAAKkQ,kBAAoBkf,IAE7BpvB,EAAK6Q,cACL7Q,EAAKkQ,gBAAkBkf,EAIvBA,EAAKnC,cAAgBmC,EAAKnC,eAC1BmC,EAAKunC,cAAcjjF,SAAQ,SAAAzD,GAAG,uBAAIA,EAAIwxE,wBAAR,aAAI,OAAAxxE,OAAuBgT,MACzDmsC,EAAKr4B,QAAQrjB,SAAQ,SAAAiP,GAAC,0BAAI,EAAAA,EAAE0rB,WAAUozC,wBAAhB,aAAI,SAA+B9+D,EAAEmtB,gBAG7D8mD,aAAaxnC,GACPpvB,EAAKkQ,kBAAoBkf,GAE7BpvB,EAAK6Q,eAGP4mC,gBAAiB,IAAD,EACR3lE,EAAOkuB,EAAKkQ,gBACbp+B,IAGLA,EAAK6kF,cAAcjjF,SAAQ,SAAAzD,GAAG,uBAAIA,EAAIg8E,qBAAR,aAAI,OAAAh8E,MAElC+vB,EAAKkQ,gBAAkB,KAEvB,UAAAp+B,EAAKs7C,2BAAL,cAAAt7C,KAGF+kF,iBACE72D,EAAKsqB,MAAM52C,SAAQ,SAAAzD,GAAG,OAAIA,EAAI4gC,aAAe5gC,EAAI4gC,kBAMnDA,cAAsC,IAC9BimD,EAD6B,yDACG92D,EAAKlF,MAAM8D,SAASkH,mBAE1D9F,EAAKy3C,gBACAqf,GAAY92D,EAAK62D,kBAGxBv8B,WAAWlL,GACT7S,kBAAQ6S,IAGV1e,kBAAkB+B,GAChBzS,EAAK+2D,aAAetkD,EACpBzS,EAAKstB,cAAe,EAEpBt4C,SAASkd,KAAKlb,MAAMk0B,OAASwmB,IAG/BlE,mBACEx4C,SAASkd,KAAKlb,MAAMk0B,OAASwmB,GAE7B1xB,EAAK+2D,aAAe,KACpB/2D,EAAKstB,cAAe,EAEpBttB,EAAKwJ,YAAYmE,kBAGnB8G,mBAAmD,IAAD,0DAAJ,IAA3BuiD,sBAA+B,SAC1CrnF,EAAYqwB,EAAKwJ,YAAjB75B,SAEiB,IAAnBqnF,IAA0BrnF,EAAUA,EAAQuB,QAAO,SAAAyR,GAAC,OAAmB,IAAfA,EAAE8oC,aAE9D97C,EAAQ+D,SAAQ,SAAAiP,GAAC,OAAIA,EAAEouB,mBAGzB6X,UAAU/Z,GACR7O,EAAKwJ,YAAYqH,aAAY,GAEzB7Q,EAAKstB,eACPttB,EAAKutB,YAAY1e,GACjB7O,EAAKwtB,qBAITypC,gBAAgBznE,GACdA,EAAOszB,QACLtzB,EAAOszB,OAAOpvC,SAAQ,SAAAqvC,GACpB,IAAMm0C,EAAcl3D,EAAKsqB,MAAM55C,IAAIqyC,EAAE1yC,MACrC6mF,EAAYrmD,aAAeqmD,EAAYrmD,cACvCqmD,EAAYnW,UAAUh+B,OAI5Bo0C,kBAAkB3nE,GAChBA,EAAOszB,QACLtzB,EAAOszB,OAAOpvC,SAAQ,SAAAqvC,GACpB,IAAMm0C,EAAcl3D,EAAKsqB,MAAM55C,IAAIqyC,EAAE1yC,MACrC6mF,EAAYrmD,aAAeqmD,EAAYrmD,cACvCqmD,EAAYnL,kBAAoBmL,EAAYnL,uBAIlDx+B,YAAY1e,GACV7O,EAAKiU,cAAcsZ,YAAYvtB,EAAK+2D,aAAcloD,IAGpDmjD,iBAAiB3hD,GACfrQ,EAAKg2D,mBAAmBhE,oBAG1Ble,WACE,IAAI9E,GAAK,EAYT,OAVAhvC,EAAKntB,cAAa,SAASf,GACzB,IAAsB,IAAlBA,EAAK+gE,WAEI,KADX7D,EAAKl9D,EAAKgiE,YAGR,OADA9E,GAAK,E/IrQY,U+I2QhBA,GAGTn8D,aAAaE,GACJk2D,EAAKp2D,aAAamtB,EAAKltB,KAAMC,GAMtC+tE,aACE9gD,EAAKntB,cAAa,SAAAf,GACZA,GAAQA,EAAKgvE,YACfhvE,EAAKgvE,gBAIT9gD,EAAKwtB,mBACLxtB,EAAK6Q,eAOPE,aAAavhB,GACXwQ,EAAKiU,cAAc+b,mBAAmBxgC,GAClB,kBAAhBA,EAAOlf,MACToxD,iBAAOlyC,GAGT+sB,kBAAQ/sB,IAGV+gC,WAAWnB,GACT7S,kBAAQ6S,IAIVhsB,gBACEpD,EAAK6Q,cACL7Q,EAAKsqB,MAAM52C,SAAQ,SAAAzD,GAAG,OAAIA,EAAIolD,aAAeplD,EAAIolD,iBACjDr1B,EAAKnwB,MAAM6D,SAAQ,SAAA07C,GAAI,OAAIA,EAAK3C,2BAA6B2C,EAAK3C,gCAGpE2qC,YAAYl9D,GACV8F,EAAK9F,SAAL,2BAAqB8F,EAAK9F,UAAaA,IAGzCQ,cACE,IAAM28D,EAAUr3D,EAAK7F,OAChBk9D,GAAYr3D,EAAK9F,SAASC,SAC/B6F,EAAKo2D,SAAS7c,QACdv5C,EAAKs3D,gBACDD,IAASr3D,EAAK9F,SAASC,MAAQ6F,EAAKI,uBACxCJ,EAAKyU,iBAAiB,CAAEuiD,gBAAgB,IACpCK,GACFr3D,EAAKK,sBAAsBL,EAAK9F,SAASpkB,QACzCkqB,EAAK7F,OAAQ,IAEb6F,EAAKK,sBAAsBL,EAAK9F,SAASC,OACzC6F,EAAK7F,OAAQ,GAEf6F,EAAKoD,gBACLpD,EAAKu3D,kBAGDA,cAAN,IAAsB,0GACfhI,iBAAOvvD,GAAMw3D,cADE,oDAEF,eAAdx3D,EAAK1vB,KAFW,iEAMd+I,GAAM,GANQ,WAQhB2mB,EAAKo2D,SARW,wBASlBp2D,EAAKo2D,SAAS7L,SACdvqD,EAAKo2D,SAASqB,QAAS,EAVL,2BAcpBxnE,QAAQiyB,KAAK,wBAGbliB,EAAKo2D,SAAWhtC,MACd,SAAAr3C,GACE,IAAIiuB,EAAKo2D,SAASqB,OAAlB,CAEA,IAAM3hF,EAASkqB,EAAKI,uBAEfJ,EAAK7E,IAAOrlB,EAAO9B,UAExBgsB,EAAK03D,UAAS,GACd13D,EAAK9F,SAASC,MAAQrkB,EAEtBkqB,EAAKlF,MAAM68D,YAAY33D,GAAM+uC,KAAK/uC,EAAK43D,kBAEzC,IACA,CAAEC,SAAS,IAGb/C,qBAAW90D,EAAKnwB,MAAOmwB,EAAKo2D,UAlCR,8CAqCtBkB,gBACOt3D,EAAKo2D,WACVp2D,EAAKo2D,SAASqB,QAAS,EACvBz3D,EAAKo2D,SAAS7L,WAGhBp6B,gBACEnwB,EAAKo2D,UAAYp2D,EAAKo2D,SAAS7L,QAAUvqD,EAAKo2D,SAAS7L,UAGzDmN,SAASI,GACP93D,EAAK7F,MAAQ29D,GAGfF,eACE53D,EAAK/F,WAAaI,GAAMb,MAAM3K,kBAGhCkpE,YACO/3D,EAAKo2D,WACVp2D,EAAKo2D,SAAS7L,SACdvqD,EAAK7F,OAAQ,EACb6F,EAAK/F,gBAAahX,EAClB+c,EAAK9F,SAASC,WAAQlX,IAGxB2sC,cACE5vB,EAAKntB,cAAa,SAAAf,GAchB,GATIA,EAAKo2E,oBAAoBp2E,EAAKo2E,qBAS9Bp2E,GAAQA,EAAKu1D,gBAAiB,CAChC,IAAMr3D,EAAQ8B,EAAKu1D,kBACbvkB,EAAS9iB,EAAKgtB,QAAQt8C,IAAIoB,EAAKzB,MAErCyyC,GAAUA,EAAOpvC,SAAQ,SAAAqvC,GAAC,OAAI/yC,EAAMgoF,oBAAoBj1C,UAI5D/iB,EAAKsB,QAAQwY,SAAS9Z,EAAKoD,eAC3BpD,EAAKu3D,iBAGP5nC,cACM3vB,EAAK/E,eAAiB+E,EAAK9E,mBAC7B8E,EAAK41D,WAAa,IAAI19E,OAI1B+/E,eACErzD,GAAOT,YAEP,IAAI+zD,EAAY,EACZC,EAAY,KACZC,EAAM,cACN9zD,EAAO8zD,EAIXp4D,EAAKntB,cAAa,SAAAf,GACZA,GAAQA,EAAKy4C,UAAYz4C,EAAK6vC,QAChC/c,GAAOX,OAAOnyB,EAAK6vC,OAAQ7vC,EAAKy4C,cAAUtnC,EAAWnR,EAAKumF,gBAI9Dr4D,EAAKntB,cAAa,SAAAf,IAGZA,GAASA,EAAK6vC,QAAyB,UAAd7vC,EAAKxB,MAAkC,cAAdwB,EAAKxB,OACrD4nF,EAAY,EAAG5zD,EAAO8zD,EAAM,KAAOF,EAAY,GAC9CC,EAAYrmF,EAEjBA,EAAK6vC,OAASrd,EACdM,GAAOX,OAAOK,EAAMxyB,EAAKy4C,SAAU,iBAEnC2tC,QAIJl4D,EAAKntB,cAAa,SAAAf,GAIhB,GAAIA,GAAQA,EAAKy4C,WAAaz4C,EAAK6vC,OAAQ,CACzC,IAAMrd,EAAOM,GAAOR,WAEpB,IAAKE,EAAM,OAEXxyB,EAAK6vC,OAASrd,EACdM,GAAOX,OAAOnyB,EAAK6vC,OAAQ7vC,EAAKy4C,cAIhC4tC,GAAaD,EAAY,IAC3BC,EAAUx2C,OAASy2C,EAAM,KACzBxzD,GAAOX,OAAOk0D,EAAUx2C,OAAQw2C,EAAU5tC,UAC1C3lB,GAAOd,UAAUs0D,IAcnBxzD,GAAOf,SAAS,aAGlB0uB,aAAa+lC,EAAWC,EAAa3rC,EAASr8C,GAC5C,IAAMuF,EAAS,CACbu4B,UAAWue,EAAQv8C,KAEnBw8C,QAASt8C,EACTD,KAAMs8C,EAAQ6D,WACdz/C,MAAOunF,GAGHnpC,EAAOpvB,EAAKnwB,MAAM2oF,IAAX,yBACXrmF,GAAIV,IACJlB,UAEG+nF,GAJQ,IAMXtnF,MAAOsnF,EACPvhE,QAAS,CAACjhB,MAcZ,OAXIkqB,EAAKlF,MAAM8D,SAASoH,kBACjBopB,EAAK8iC,gBAGR14E,YAAW,kBAAM0wB,kBAAQklB,IAASpvB,EAAKsK,WAAW8kB,MAIhDxC,EAAQt8C,KAAKk4C,SAAS,WAAWxoB,EAAK6Q,aAAY,GAGjDue,GAGThvB,oBAAmB,IACVJ,EAAKjJ,QACT9iB,KAAI,SAAA0O,GAAC,OAAIA,EAAE+pC,eACXx7C,OAAOk4B,SACP3wB,OAAOunB,EAAKiU,cAAc7T,uBAK/Bq4D,oBAAoBrgC,IAClBA,EAAK1kD,SAAQ,SAAA6C,GACM,eAAbA,EAAIjG,OAAuBiG,EAAIjG,KAAO,sBAErC8nD,GAMT/3B,sBAAsB+3B,GACpB,IACE,IAAIsgC,EAAgBtgC,EAES,kBAAlBsgC,IACTA,EAAgB9jF,KAAKC,MAAM6jF,IAG7BA,EAAgB14D,EAAKy4D,oBAAoBC,GAEzC14D,EAAK24D,sBAAwBD,EAE7BA,EAAchlF,SAAQ,SAAA6C,GACpB,GAAoB,aAAhBA,EAAG,KAAyB,CAAC,IACvBpE,EAA6BoE,EAA7BpE,GAAInB,EAAyBuF,EAAzBvF,MAAOV,EAAkBiG,EAAlBjG,KAASoE,EADE,aACO6B,EADP,uBAGxBqiF,EAAM,UAAMzmF,GAAMV,IAAZ,YAA+BuuB,EAAK7tB,IAC1C0mF,EAAQ,UAAMnkF,EAAK25B,UAAX,YAAwBuqD,GAElCxpC,EAAOpvB,EAAKnwB,MAAMa,IAAIkoF,GACrBxpC,IACHA,EAAOpvB,EAAKnwB,MAAM2oF,IAAX,qCACLrmF,GAAIymF,EACJroF,OAAQmE,EAAKm4C,SACVn4C,GACA1D,GAJE,IAKLA,YAIJo+C,EAAKgB,UAAL,2BAAoB17C,GAApB,IAA0BvC,GAAI0mF,EAAUvoF,OAAMU,eAIlDgvB,EAAKjJ,QAAQ7lB,QAAO,SAAAyR,GAAC,OAAIA,EAAEysC,KAAK8iC,kBAAgBx+E,SAAQ,SAAAiP,GAAC,0BAAI,EAAAA,EAAE0rB,WAAUozC,wBAAhB,aAAI,SAA+B9+D,EAAEmtB,cAE9F4oD,EAAchlF,SAAQ,SAAA6C,GACA,aAAhBA,EAAG,MACLypB,EAAKiU,cAAc8/C,oBAAnB,UACKx9E,EAAIs9E,QADT,YACoB7zD,EAAK7tB,IADzB,UAEKoE,EAAIu9E,MAFT,YAEkB9zD,EAAK7tB,IACrBoE,EAAI48B,UACJ58B,EAAIid,WAIV,MAAO7b,GACPsY,QAAQC,MAAMvY,GACdqoB,EAAKvD,KAAK8+C,UAAU,CAAC3I,GAAaO,aAAax7D,WAKxCyqC,WACZlyC,MAAM,kBAAmB,CACxBoqB,SAAU8nB,QAAM4H,UAAU5H,QAAM0L,UAAUlzB,KAE1C9nB,KAAM2jE,GAAM1F,iBACZzmB,MAAOlI,QAAMnuC,IAAImuC,QAAM0L,UAAU2oB,GAAM1F,mBACvC/jB,QAAS5K,QAAMnuC,IAAImuC,QAAMiM,MAAMjM,QAAM0L,UAAU2oB,GAAM1F,oBAErDtzC,YAAa2kB,QAAMiM,MAAMzzB,IACzByG,YAAa+gB,QAAMiM,MAAMzzB,IAEzBusC,sBAAuB/kB,QAAME,SAASF,QAAM8H,SAAS,GACrDkd,sBAAuBhlB,QAAME,SAASF,QAAM8H,SAAS,GAErDulC,WAAYrtC,QAAM4H,UAAU5H,QAAMiM,MAAMgnC,OAEzC3lF,OAAM,SAAAswB,GAAI,MAAK,CACd,YACE,OAAOuJ,kBAAQvJ,QAGlBsT,SAAQ,SAAAtT,GACP,SAAS84D,IACH94D,EAAKmnC,uBAAyBnnC,EAAKonC,uBACjCpnC,EAAK1F,WACP0F,EAAK1F,SAASuW,cACd7Q,EAAK1F,SAASA,UAAW,GAG3B0F,EAAKvC,YAAY/pB,SAAQ,SAAA+C,GACvBA,EAAEi0B,UAAW,MAGfjP,EAAiBuE,EAAKvC,YAAY,GAAGtrB,IAyBzC,SAAS4mF,EAAW5mF,EAAIsqB,GAJtBuD,EAAKmnC,uBAAwB,EAC7BnnC,EAAKonC,uBAAwB,EAMzBpnC,EAAK1F,WACP0F,EAAK1F,SAASuW,cACd7Q,EAAK1F,SAASA,UAAW,GAI3B,IAAM7jB,EAAIgmB,EAAKtM,MAAK,SAAA1Z,GAAC,OAAIA,EAAEtE,KAAOA,GAAMsE,EAAE0kB,KAAO3jB,OAAOrF,OAAQsqB,EAAK,GACrE,OAAKhmB,GACLA,EAAE6jB,UAAW,EACb0F,EAAK1F,SAAW7jB,EAChBA,EAAE2sB,gBAEK3sB,GALQ,KAYjB,SAASglB,EAAiBtpB,GACxB,IAAK6tB,EAAKvC,YAAYzpB,OAAQ,OAAO,KADT,IAGpBsmB,EAAa0F,EAAb1F,SACF7jB,EAAIsiF,EAAW5mF,EAAI6tB,EAAKvC,aAO9B,OALAhnB,EAAEi0B,UAAW,EACbj0B,EAAEwhF,eAEF1I,iBAAOvvD,GAAMg5D,mBAAmBviF,EAAG6jB,GAE5B7jB,EA0BT,SAASwiF,EAASl5D,GAChB,IAAIC,EAAKltB,KAAT,CAGA,IAAMomF,EAAYjwB,EAAK/0D,YAAY6rB,GAC7Bo5D,EAAa7pF,EAASkC,cAAc0nF,EAAU5oF,MAE9C29C,EAAc3+C,EAAS2+C,cAAch6C,KAAI,SAAA3D,GAAI,OAAIA,EAAKD,KAAKkF,QAAQ,QAAS,IAAIZ,iBAChF/E,EAAU,GAEhBowB,EAAK8zC,SAASqhB,GAAWF,OAAQiE,GAEjC,IACEl5D,EAAKltB,KAAOqmF,EAAWjnF,OAAOgnF,GAC9B,MAAOvhF,GAIP,OAHAsY,QAAQC,MAAMvY,GACdqoB,EAAKu7C,UAAU,CAAC3I,GAAaO,aAAax7D,KAElCqoB,EAAKltB,KAAOs7E,GAAUl8E,OAAO,CAAEC,GAAI,UA+B7C,OA5BA82D,EAAKp2D,aAAamtB,EAAKltB,MAAM,SAAAhB,IAC3B,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAMzB,QACR2vB,EAAKsqB,MAAMkuC,IAAI1mF,GACXm8C,EAAYzF,SAAS12C,EAAKxB,OAAOV,EAAQQ,KAAK0B,EAAKzB,UAM3D44D,EAAKp2D,aAAamtB,EAAKltB,MAAM,SAAAhB,GAO3B,GANqBA,EAAKzB,OAAS49C,EAAYzF,SAAS12C,EAAKxB,QAExCwB,EAAK6hE,QAA6B,IAAnB/jE,EAAQoE,SAC1ClC,EAAK6hE,OAAS/jE,EAAQ,IAGpBkC,GAAQA,EAAK6hE,OAAQ,CACvB,IAAMxtD,EAAM6Z,EAAKgtB,QAAQt8C,IAAIoB,EAAK6hE,QAC9BxtD,EACFA,EAAI/V,KAAK0B,EAAKzB,MAEd2vB,EAAKgtB,QAAQr8C,IAAImB,EAAK6hE,OAAQ,CAAC7hE,EAAKzB,OAIpC2vB,EAAKlF,MAAMiE,MAAQjtB,EAAK8uB,aAAa9uB,EAAK8uB,YAAYZ,EAAKlF,UAG1DkF,EAAKltB,MAGd,SAASsmF,EAAQthD,GAAU,IAAD,EACC9X,EAAKlF,MAAtBu+D,EADgB,EAChBA,KAAMt5D,EADU,EACVA,OAETC,EAAKltB,MAAMmmF,EAASl5D,GAEzB,IAAM5E,EAAK2c,EAAQ3c,IAAM2c,EAAQ3lC,GAG7BL,EAAI,yBACNmpB,cAAc,GAEX6c,GAHG,IAMN3lC,GAAIV,EAAc,GAElB0pB,GAAIA,GAAM3jB,OAAO2jB,GACjBroB,KAAMktB,EAAKltB,OAMb,OAHIumF,KAAU,cAAevnF,KAAOA,EAAI,UAAgBunF,EAAKC,aAGtD1+D,GAAW1oB,OAAOJ,GAsD3B,IAAMynF,EAAe,SAAAjK,GACnBtvD,EAAKu7C,UAAU+T,IAiCjB,MAAO,CACL3/B,YAdkB,WAClB3vB,EAAKw5D,WAAa,IAAIlE,GACtBt1D,EAAKw5D,WAAWC,iBAAiBF,IAajCppC,cAVoB,WACpBnwB,EAAKw5D,WAAWE,oBAAoBH,IAWpCI,4BA/OF,WACE35D,EAAKmnC,uBAAyBnnC,EAAKmnC,sBAE/BnnC,EAAKmnC,wBAAuBnnC,EAAKonC,uBAAwB,GAE7D0xB,KA2OAc,4BAxPF,WACE55D,EAAKonC,uBAAyBpnC,EAAKonC,sBAE/BpnC,EAAKonC,wBAAuBpnC,EAAKmnC,uBAAwB,GAE7D2xB,KAqPAG,WAEAY,cA9FF,WAAsC,IAAf/hD,EAAc,uDAAJ,GAC/BA,EAAQpN,UAAW,EACnBoN,EAAQxnC,KAAO,aAEf,IAAMsC,EAAOwmF,EAAQthD,GAGrB,OAFA9X,EAAKqB,YAAYutC,QAAQh8D,GAElBA,GAwFP0qB,cArFF,WAAsC,IAAfwa,EAAc,uDAAJ,GAC/BA,EAAQxnC,KAAO,aAEf,IAAMsC,EAAOwmF,EAAQthD,GAIrB,OAHAllC,EAAKwkF,YAAY,CAAEthF,OAAQgiC,EAAQhiC,OAAQqkB,MAAO2d,EAAQ3d,QAC1D6F,EAAKvC,YAAYmxC,QAAQh8D,GAElBA,GA+EPowB,4BA5EF,SAAqC82D,GAEnC,IAAM/2C,EAAI+2C,EAAWnB,sBAAsB1kF,KAAI,SAAA0O,GAAC,sBAAUA,MACpDlM,EAAIupB,EAAK1C,cAAc,CAAErC,cAAc,EAAMnlB,OAAQitC,IAErDt5B,EAAM,GAsBZ,OAnBAs5B,EAAErvC,SAAQ,SAAAiP,GACR,GAAI,OAAQA,EAAG,CACb,IAAMxQ,EAAKwQ,EAAExQ,GAAGoD,QAAQ,OAAb,WAAyBkB,EAAEtE,KACtCsX,EAAI9G,EAAExQ,IAAMA,EACZwQ,EAAExQ,GAAKA,MAIX4wC,EAAErvC,SAAQ,SAAAiP,GACJA,EAAEmqC,YACArjC,EAAI9G,EAAEmqC,WAAYnqC,EAAEmqC,UAAYrjC,EAAI9G,EAAEmqC,WAErCnqC,EAAEmqC,UAAY,SAIvBrxB,EAAiBhlB,EAAEtE,IACnBsE,EAAE4pB,sBAAsB0iB,GAEjBtsC,GAmDP8kE,UA3CgB,SAAA+T,GAAW,IAAD,EACpB7lE,EAAM,GAENswE,EAAY,iCAAK/5D,EAAKyvD,kBAAV,QAAwB,IAAxB,aAAgCH,IAAQh3E,QAAO,SAACrF,EAAKid,GACrE,IAAM/d,EAAK+d,EAAM65B,WAOjB,OALItgC,EAAItS,QAAQhF,GAAM,IACpBsX,EAAIrZ,KAAK+B,GACTc,EAAI7C,KAAK8f,IAGJjd,IACN,IAEH+sB,EAAKyvD,WAAasK,GA8BlBjmB,SAlBe,SAAC2hB,EAAe/gF,GAC/BsrB,EAAKw5D,WAAW1lB,SAAS2hB,EAAe/gF,IAmBxC+mB,mBACAqH,iBA3MF,SAA0B3wB,GAGxB,OAFU4mF,EAAW5mF,EAAI6tB,EAAKqB,cA4M9B3E,iBAvMF,SAA0BrB,GACxBk0D,iBAAOvvD,GAAMg6D,mBAAmBh6D,EAAKlF,MAAOO,GAK5CkhB,kBAAQlhB,GAER2E,EAAK1F,SAAW,KAIZ0F,EAAKvC,YAAYzpB,OAAS,GAC5BgsB,EAAKvE,iBAAiBuE,EAAKvC,YAAY,GAAGtrB,SC9rBnC8nF,GAbM73C,QAClBlyC,MAAM,UAAW,CAIhBiC,GAAIiwC,QAAM83C,mBAEXxqF,OAAM,SAAAswB,GAAI,MAAK,CACd,UACE,OAAO4rB,oBAAU5rB,QC4KRm6D,GA/KO/3C,QACnBlyC,MAAM,gBAAiB,CAItB2uB,cAAeujB,QAAME,SAASF,QAAM8H,SAAS,GAI7CkwC,mBAAoBh4C,QAAME,SAASF,QAAM8H,SAAS,GAIlDprB,eAAgBsjB,QAAME,SAASF,QAAM8H,SAAS,GAE9CxkB,oBAAqB0c,QAAME,SAASF,QAAM8H,SAAS,GAKnDpkB,oBAAoB,EAGpBE,mBAAmB,EAEnBvD,WAAY2f,QAAME,SAASF,QAAM8H,SAAS,GAE1C9jB,gBAAiBgc,QAAME,SAASF,QAAM8H,SAAS,GAE/CmwC,cAAej4C,QAAME,SACnBF,QAAM8L,YAAY,CApCO,yBACD,0BADC,0BAwC3Bga,cAAe9lB,QAAME,SAASF,QAAM8H,SAAS,GAE7CowC,eAAgBl4C,QAAME,SAASF,QAAM8H,SAAS,GAE9CtkB,WAAYwc,QAAME,SAASF,QAAM8H,SAAS,GAE1ChkB,iBAAiB,EAEjBO,qBAAsB2b,QAAME,SAASF,QAAM8H,SAAS,GAEpDvjB,qBAAsByb,QAAME,SAASF,QAAM8H,SAAS,KAGrDx6C,OAAM,SAAAswB,GAAI,MAAK,CACd,iBACE,OAAOuJ,kBAAQvJ,GAAMxE,gBAAgBlB,UAEvC,6BACE,MAzDwB,0BAyDjB0F,EAAKq6D,mBAGf/mD,SAAQ,SAAAtT,GAAI,MAAK,CAChB2vB,cAEE,IAEE,IADyBz4B,OAAjB+9C,aACW,OACnB,MAAOt9D,GACP,OAGF,IAAM4iF,EAAQ,uBAGRC,EAAMvlB,aAAaG,QAAQmlB,GACjC,GAAIC,EAAK,CACP,IAAMC,EAAM7lF,KAAKC,MAAM2lF,GACR,kBAARC,GACG,OAARA,GACA7pF,OAAOQ,KAAKqpF,GAAK/mF,SAAQ,SAAAuS,GACnBA,KAAK+Z,IAAMA,EAAK/Z,GAAKw0E,EAAIx0E,OAKnC6uE,qBAAW90D,GAAM,SAAA+8B,GACfkY,aAAaC,QAAQqlB,EAAO3lF,KAAKsrB,UAAU68B,QAQ/Cl3B,mBACE7F,EAAK4F,YAAc5F,EAAK4F,WAExBvL,GAAMd,KAAKxG,sBAAsBiN,EAAK4F,aASxCO,wBACEnG,EAAKkG,iBAAmBlG,EAAKkG,gBAI7BlxB,SAAS0lF,iBAAiB,aAAahnF,SAAQ,SAAAuC,GAAI,OAAIA,EAAKkd,UAAUm9C,OAAO,wBAG/EvqC,2BACE/F,EAAK8F,oBAAsB9F,EAAK8F,oBAGlCG,0BACEjG,EAAKgG,mBAAqBhG,EAAKgG,mBAGjCO,uBACEvG,EAAKq6D,cA1HmB,0BA2HtBr6D,EAAKq6D,cA5HkB,yBACD,wBA6HxBr6D,EAAK3E,WAAWmO,YAAY8B,QAAQtL,EAAKsG,uBAAyB,SAAW,YAG/Eq0D,iBACE36D,EAAKs6D,gBAAkBt6D,EAAKs6D,gBAG9B90D,gBACExF,EAAKnB,eAAiBmB,EAAKnB,cACvBmB,EAAKnB,cACP+F,GAAOf,SAAS,YAEhBe,GAAOf,SAAS,aAOpB+2D,qBACE56D,EAAKo6D,oBAAsBp6D,EAAKo6D,oBAMlC30D,iBACEzF,EAAKlB,gBAAkBkB,EAAKlB,gBAG9B8D,mBACE5C,EAAKyC,YAAczC,EAAKyC,YAG1B4D,iBACErG,EAAKoG,iBAAmBpG,EAAKoG,iBAG/By0D,gBACE76D,EAAKkoC,eAAiBloC,EAAKkoC,eAG7BviC,sBACE3F,EAAK0F,qBAAuB1F,EAAK0F,qBAGnCgB,yBACE1G,EAAKyG,sBAAwBzG,EAAKyG,sBAGpCG,yBACE5G,EAAK2G,sBAAwB3G,EAAK2G,0BC/KlCm0D,GAAY14C,QAAMlyC,MAAM,CAC5B6qF,OAAQ34C,QAAME,SAASF,QAAM8H,SAAS,GACtC8wC,SAAU54C,QAAM6H,OAChBgxC,SAAU74C,QAAM6H,OAChB2W,GAAIxe,QAAM6H,SAqCGixC,GA/BG94C,QACflyC,MAAM,OAAQ,CACbiC,GAAIiwC,QAAM4H,UAAU5H,QAAM1+B,QAC1BglC,KAAMtG,QAAME,SAASF,QAAM8H,SAAS,GACpCixC,KAAM/4C,QAAM4H,UAAU8wC,IAKtBpmF,KAAM0tC,QAAM4H,UAAU5H,QAAM6H,UAE7Bv6C,OAAM,SAAAswB,GAAI,MAAK,CACd,UACE,OAAO4rB,oBAAU5rB,IAOnB,cACE,OAAIo7D,GAAUznE,SAASjc,aAAasoB,EAAKtrB,MAChCE,KAAKC,MAAMmrB,EAAKtrB,MACO,kBAAdsrB,EAAKtrB,KACdsrB,EAAKtrB,KAEL,UCfA2mF,GAvBGj5C,QACflyC,MAAM,YAAa,CAIlBirB,GAAIinB,QAAM4H,UAAU5H,QAAMkS,SAI1BgnC,UAAWl5C,QAAM4H,UAAU5H,QAAM6H,QAIjCsxC,SAAUn5C,QAAM4H,UAAU5H,QAAM6H,UAEjCv6C,OAAM,SAAAswB,GAAI,MAAK,CACd,kBACE,OAAIA,EAAKs7D,WAAat7D,EAAKu7D,SAAgB,GAAN,OAAUv7D,EAAKs7D,UAAf,YAA4Bt7D,EAAKu7D,UAE/D,QCZEn5C,WACZlyC,MAAM,WAAY,CAIjB6vB,OAAQqiB,QAAM6H,OAKdlrB,KAAMqjB,QAAM4H,UAAUwxC,IAEtBj7D,QAAS6hB,QAAM4H,UAAUyxC,IAKzBC,WAAYt5C,QAAMiM,MAAMjM,QAAM6H,QAK9BhrB,QAASmjB,QAAME,SAASF,QAAM8H,SAAS,GAKvC1uB,gBAAiB4mB,QAAME,SAASq5C,GAAiB,CAC/Cl+D,YAAa,GACb4D,YAAa,KAMfg4D,KAAMj3C,QAAM4H,UAAU4xC,IAKtBC,MAAOz5C,QAAME,SAASF,QAAM8H,SAAS,GAKrCtrB,SAAUwjB,QAAME,SAAS2uC,GAAU,IAKnC7uD,YAAaggB,QAAM4H,UAAU5H,QAAM6H,QAMnChlB,gBAAiBmd,QAAME,SAASF,QAAM8H,SAAS,GAK/C7nB,mBAAoB+f,QAAME,SAASF,QAAM8H,SAAS,GAIlD8lC,UAAW5tC,QAAME,SAASF,QAAM8H,SAAS,GAIzC/qB,cAAc,EAId+wD,OAAQ9tC,QAAME,SAASF,QAAM8H,SAAS,GAItCkmC,SAAUhuC,QAAME,SAASF,QAAM8H,SAAS,GAIxComC,eAAgBluC,QAAME,SAASF,QAAM8H,SAAS,KAE/Cx6C,OAAM,SAAAswB,GAAI,MAAK,CAId,YACE,OAAOuvD,iBAAOvvD,GAAM87D,WAGvBxoD,SAAQ,SAAAtT,GA0KP,SAAS+7D,EAAUl4C,GAA4B,IAAnBvzC,EAAkB,uDAAX,UACjC4yC,GAAU5yC,GAAMuzC,GAmBlB,SAASm4C,EAAqB3lF,GAA6C,IAAzC4lF,EAAwC,uDAAvB,sBACjDj8D,EAAKk8D,SAAS,CAAE/8D,cAAc,IAC9B,IAAMlsB,EAAMoD,IAGZiD,QAAQ6iF,KAAK,CAAC7iF,QAAQkiE,IAAI,CAACvoE,EAAKoG,GAAM,OAAQA,GAAM,OACjD61D,OAAM,SAAAr5D,GAAG,OAAIkmF,GAAa,OAAHlmF,QAAG,IAAHA,OAAA,EAAAA,EAAKguC,UAAWhuC,GAAOomF,MAC9CltB,MAAK,kBAAM/uC,EAAKk8D,SAAS,CAAE/8D,cAAc,OAkE9C,MAAO,CACL+8D,SAzPF,SAAkBE,GAWhB,IAVA,IAUA,MAVc,CACZ,kBACA,qBACA,YACA,eACA,SACA,WACA,kBAGF,gBAAK,IAAI/1E,EAAC,KAAeA,KAAK+1E,IAAOp8D,EAAK3Z,GAAK+1E,EAAM/1E,MA+OrDg2E,aAnOF,SAAsBhsF,GACpB,OAAO2vB,EAAK07D,WAAWtrF,KAAKC,IAmO5ByrB,aAxOF,SAAsBzrB,GACpB,YAAiD4S,IAA1C+c,EAAK07D,WAAWvrE,MAAK,SAAA/a,GAAC,OAAI/E,IAAS+E,MAyO1Cu6C,YA/NF,WAEEz4B,OAAOi8D,IAAMnzD,EAKb4E,GAAOX,OAAO,aAAcjE,EAAKR,iBAAkB,iBAK/CQ,EAAKlE,aAAa,SAAS8I,GAAOX,OAAO,aAAcjE,EAAKX,SAAU,eAKtEW,EAAKlE,aAAa,WAAW8I,GAAOX,OAAO,YAAajE,EAAKN,iBAAkB,iBAKnFkF,GAAOX,OACL,kBACA,WACuBjE,EAAKxE,gBAAlBlB,SACCma,qBAEX,sBAIF7P,GAAOX,OACL,KACA,WACE,IAAMxtB,EAAIupB,EAAKxE,gBAAgBlB,SAC3B7jB,GAAKA,EAAEy5B,kBAAoBz5B,EAAE62C,cAC/B72C,EAAEi6B,kBAAkBj6B,EAAEy5B,mBAG1B,2CAIFtL,GAAOX,OAAO,KAAK,WACjB,IAAMxtB,EAAIupB,EAAKxE,gBAAgBlB,SAC3B7jB,IAAMA,EAAE62C,cACV72C,EAAEo6B,iBAINjM,GAAOX,OAAO,KAAK,WACjB,IAAMxtB,EAAIupB,EAAKxE,gBAAgBlB,SAC3B7jB,GAAKA,EAAEy5B,kBAAoBz5B,EAAE62C,cAC/B72C,EAAEy5B,gBAAgBrF,kBAItBjG,GAAOX,OAAO,UAAU,WAAY,IAC1B3C,EAAYtB,EAAKxE,gBAAgBlB,SAAjCgH,QACRA,GAAWA,EAAQG,SAAWH,EAAQI,UAGxCkD,GAAOX,OAAO,gBAAgB,WAAY,IAChC3C,EAAYtB,EAAKxE,gBAAgBlB,SAAjCgH,QACRA,GAAWA,EAAQM,SAAWN,EAAQO,UAGxC+C,GAAOX,OACL,UACA,WACE,IAAMxtB,EAAIupB,EAAKxE,gBAAgBlB,SAC3B7jB,GAAKA,EAAE62C,aACT72C,EAAE+2C,mBACO/2C,GAAKA,EAAEy5B,iBAChBz5B,EAAE+yB,YAAYqH,gBAGlB,uCAGFjM,GAAOX,OACL,aACA,WACE,IAAMxtB,EAAIupB,EAAKxE,gBAAgBlB,SAC3B7jB,GAAKA,EAAEy5B,iBACTz5B,EAAEy5B,gBAAgBa,iBAGtB,0BAGFnM,GAAOX,OACL,WACA,WACE,IAAMxtB,EAAIupB,EAAKxE,gBAAgBlB,SAC/B7jB,GAAKA,EAAE+yB,YAAYspD,eAErB,2BAGFvD,iBAAOvvD,GAAMs8D,kBAAkBt8D,IA2H/BmB,WApHF,SAAoBo7D,GACdA,IAAeliE,GAAM1G,SAASpc,SAASglF,EAAW7nF,QACpD6nF,EAAU,2BACLA,GADK,IAER7nF,KAAME,KAAKsrB,UAAUq8D,EAAW7nF,SAGpCsrB,EAAKjB,KAAOy8D,GAAKtpF,OAAOqqF,IA8GxBr7D,aA3GF,SAAsBnB,GACpB,IAAM1U,EAAK2U,EAAKxE,gBAChBwE,EAAKD,OAASA,EACd1U,EAAG4tE,SAASj5D,EAAKD,SAyGjBS,WAxCF,WACER,EAAKxE,gBAAkBmgE,GAAgBzpF,OAAO,CAAEurB,YAAa,MAwC7D2D,gBA7BF,YAAwD,IAA7B3D,EAA4B,EAA5BA,YAAa4D,EAAe,EAAfA,YAChChW,EAAK2U,EAAKxE,gBAChBnQ,EAAG4tE,SAASj5D,EAAKD,QAIN,OAAXsB,QAAW,IAAXA,KAAa3tB,SAAQ,SAAAgD,GACnB,IAAMH,EAAM8U,EAAGwuE,cAAcnjF,GAC7B2U,EAAGoQ,iBAAiBllB,EAAIpE,IACxBoE,EAAI8pB,sBAAsB3pB,EAAEZ,WAEnB,OAAX2nB,QAAW,IAAXA,KAAa/pB,SAAQ,SAAC+C,EAAGrB,GACvB,IAAMmB,EAAM8U,EAAGiS,cAAc7mB,GAC7B4U,EAAGoQ,iBAAiBllB,EAAIpE,IACxBoE,EAAI8pB,sBAAsB5pB,EAAE0jB,OAAS1jB,EAAEX,QACvCS,EAAIq3D,oBAgBNvuC,SAlDF,WACE28D,GAAqB,kBAAMzM,iBAAOvvD,GAAMw8D,WAAWx8D,KAAO,iCAkD1D23D,YAlGF,SAAqBlhF,GACnB,OAAO,IAAI6C,SAAQ,SAAAC,GACjB,IAAMlD,EAAKk5E,iBAAOvvD,GAAMw3D,cACxB,IAAKnhF,EAAI,OAAOkD,IAChB,IAAMtG,EAAMoD,EAAG2pB,EAAMvpB,GACjBxD,GAAOA,EAAI87D,KAAM97D,EAAI87D,KAAKx1D,GACzBA,EAAQtG,OA6FfusB,iBA5EF,WACEvP,QAAQk9B,IAAI,gBACZ,IAAM12C,EAAIupB,EAAKxE,gBAAgBlB,SAC/B7jB,EAAEqqE,aAEGrqE,EAAEq9D,aAEPr9D,EAAE8/E,mBACF9/E,EAAEshF,YACFiE,GAAqB,kBAAMzM,iBAAOvvD,GAAMy8D,mBAAmBz8D,EAAMvpB,QAoEjEipB,iBAjEF,WACEzP,QAAQk9B,IAAI,gBACZ,IAAM12C,EAAIupB,EAAKxE,gBAAgBlB,SAC/B7jB,EAAEqqE,aAEGrqE,EAAEq9D,aAEPr9D,EAAEshF,YACFxI,iBAAOvvD,GAAM08D,mBAAmB18D,EAAMvpB,IACrCA,EAAEykB,kBAAoBzkB,EAAE8/E,qBA0DzBwF,YACAv5D,eApRF,WACExC,EAAKiF,iBAAmBjF,EAAKiF,iBAoR7B3C,kBA9QF,WACEtC,EAAKqC,oBAAsBrC,EAAKqC,wBCjEvB,QACb23D,mBAtCF,aAuCE1H,eAnBF,aAoBEI,eAfF,aAgBE4D,cAXF,aAYEgG,kBA3BF,aA4BEE,WAtCF,aAuCEC,mBAtDF,aAuDEE,WAnCF,aAoCED,mBAnDF,aAoDE1D,mBAZF,SAA4B39D,EAAYuhE,MC4BzB,ICpEXC,GAGIC,GDiEO,CAAEC,QAzEjB,SAAiBh+D,GACf,OAAIA,GAAQA,EAAKrqB,KACR,2BACFqqB,GADL,IAEErqB,KAAME,KAAKsrB,UAAUnB,EAAKrqB,QAIvBqqB,GAiEiBi+D,SA9D1B,SAAkBj+D,GAIhB,MAAO,CACLtB,YAJkBsB,GAAQA,EAAKtB,YAAcsB,EAAKtB,YAAc,KAKhE4D,YAJkBtC,GAAQA,EAAKsC,YAActC,EAAKsC,YAAc,OA4DhC47D,YAjDpC,SAAqBxlE,GACnB,IAAMllB,EAAKyC,SAAS4V,cAAc,OAE9B9X,EAAOkC,SAASkoF,eAAezlE,GAKnC,OAHA3kB,EAAKkf,UAAY,GACjBlf,EAAKmf,YAAY1f,GAEVA,GAyCwC4qF,qBAlCjD,SAA8B7jD,GAE5B,IAAM8jD,EAAO9jD,EAAO9Z,kBAAoB8Z,EAAOmjD,mBACzCY,EAAO/jD,EAAO5Z,kBAAoB4Z,EAAOojD,mBACzCY,EAAOhkD,EAAO5c,kBAAoB4c,EAAO0gD,mBA2B/C,MAzBgB,CAQd8B,MAAO,SAAAxnF,GAAC,OAAI2b,QAAQk9B,IAAI74C,IACxBg0C,SAAS,2BAAMi1C,IAAajkD,EAAOgP,UAGnCm0C,mBAAoBnjD,EAAOmjD,mBAAqBW,EAAOI,GAASf,mBAChEC,mBAAoBpjD,EAAOojD,mBAAqBW,EAAOG,GAASd,mBAChE1C,mBAAoB1gD,EAAO0gD,mBAAqBsD,EAAOE,GAASxD,mBAChEwC,WAAYljD,EAAOkjD,WAAaljD,EAAOkjD,WAAagB,GAAShB,WAC7DhF,cAAel+C,EAAOk+C,eAAiBgG,GAAShG,cAChDmF,WAAYrjD,EAAOqjD,YAAca,GAASb,WAC1CL,kBAAmBhjD,EAAOgjD,mBAAqBkB,GAASlB,kBACxDhK,eAAgBh5C,EAAOg5C,gBAAkBkL,GAASlL,eAClDI,eAAgBp5C,EAAOo5C,gBAAkB8K,GAAS9K,eAClD4D,cAAeh9C,EAAOg9C,eAAiBkH,GAASlH,cAChD0C,mBAAoB1/C,EAAO0/C,oBAAsBwE,GAASxE,sBCzD5D6D,GAAc,SAASplE,EAASqgB,GAC9B,IAAIwB,EAASxB,EAETwB,EAAOxB,SAAWwB,EAAOxB,QAAQ2lD,aAAYvmE,OAAOg+B,gBAAiB,GAErE5b,GAAUA,EAAOva,OACnBua,EAAOva,KAAO+9D,GAAYC,QAAQzjD,EAAOva,OAM3C,IAAM2+D,EAAMC,GAASzrF,OAAOonC,EAAQwjD,GAAYK,qBAAqB7jD,IAUrE,OALAokD,EAAIt8D,gBAAgB07D,GAAYE,SAAS1jD,EAAOva,OAEhDmoB,IAAS02C,OAAO,kBAAC,GAAD,CAAK9iE,MAAO4iE,IAASZ,GAAYG,YAAYxlE,IAE7DP,OAAOi8D,IAAMuK,EACNA,GAgDXxmE,OAAO2lE,YAAcA,GAENA,c,mBCpFfztF,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,OAAS,uBAAuB,OAAS,uBAAuB,IAAM,oBAAoB,UAAY,0BAA0B,IAAM,oBAAoB,KAAO,uB,mBCAjND,EAAOC,QAAU,CAAC,WAAa,6BAA6B,KAAO,uBAAuB,QAAU,0BAA0B,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,yBAAyB,QAAU,0BAA0B,SAAW,2BAA2B,KAAO,uBAAuB,oBAAoB,sC,mBCAxVD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,wBAAwB,SAAW,4BAA4B,MAAQ,yBAAyB,YAAc,+BAA+B,OAAS,0BAA0B,QAAU,2BAA2B,gBAAkB,mCAAmC,SAAW,4BAA4B,UAAY,gC","file":"static/js/main.a19c73ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"global_link__Ob-I9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-divider-horizontal\":\"App_ant-divider-horizontal__Fovgn\",\"ant-divider-with-text-center\":\"App_ant-divider-with-text-center__k94K1\",\"ant-divider-with-text-left\":\"App_ant-divider-with-text-left__3ZsEx\",\"ant-divider-with-text-right\":\"App_ant-divider-with-text-right__1V7OB\",\"ls-renderall\":\"App_ls-renderall__6uj2C\",\"ls-fade\":\"App_ls-fade__2aRob\",\"fadeInOpacity\":\"App_fadeInOpacity__2el0u\",\"htx-highlight\":\"App_htx-highlight__cYbGr\",\"htx-no-label\":\"App_htx-no-label__37xuh\",\"htx-highlight-last\":\"App_htx-highlight-last__3tlHS\",\"htx-yoyo\":\"App_htx-yoyo__22Lfq\",\"ant-modal-confirm-error\":\"App_ant-modal-confirm-error__2n_EC\",\"ant-list-item-action\":\"App_ant-list-item-action__2oF1i\",\"segment\":\"App_segment__3H61n\",\"editor\":\"App_editor__CIAJZ\",\"editorfs\":\"App_editorfs__1aruF\",\"menu\":\"App_menu__X-A5N\",\"menubsp\":\"App_menubsp__2F6jW\",\"content\":\"App_content__11LHs\",\"common\":\"App_common__QaThK\",\"commonbsp\":\"App_commonbsp__1qe04\",\"pins\":\"App_pins__3EECJ\",\"pinsright\":\"App_pinsright__3RQmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Styles_block__1NSsm\",\"divider\":\"Styles_divider__2clc_\",\"button\":\"Styles_button__1aTsI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-divider-horizontal\":\"Controls_ant-divider-horizontal__3POBd\",\"ant-divider-with-text-center\":\"Controls_ant-divider-with-text-center__1hYa2\",\"ant-divider-with-text-left\":\"Controls_ant-divider-with-text-left__1r-Lg\",\"ant-divider-with-text-right\":\"Controls_ant-divider-with-text-right__3RoCh\",\"ls-renderall\":\"Controls_ls-renderall__2Kj-I\",\"ls-fade\":\"Controls_ls-fade__3obEE\",\"fadeInOpacity\":\"Controls_fadeInOpacity__KWKby\",\"htx-highlight\":\"Controls_htx-highlight__FSi_2\",\"htx-no-label\":\"Controls_htx-no-label__257YF\",\"htx-highlight-last\":\"Controls_htx-highlight-last__3aDLg\",\"htx-yoyo\":\"Controls_htx-yoyo__1YbO2\",\"ant-modal-confirm-error\":\"Controls_ant-modal-confirm-error__16b1J\",\"task\":\"Controls_task__2FuYQ\",\"container\":\"Controls_container__LTeAA\",\"block\":\"Controls_block__21XER\",\"wrapper\":\"Controls_wrapper__1Zdbo\",\"rewrite\":\"Controls_rewrite__bRxtr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Dialog_block__2f1HI\",\"block_selected\":\"Dialog_block_selected__cGeTu\",\"name\":\"Dialog_name__27hAU\",\"tag\":\"Dialog_tag__1o6ny\",\"date\":\"Dialog_date__33g0a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mark\":\"TextAreaRegion_mark__3ph3F\",\"selected\":\"TextAreaRegion_selected__3Q440\",\"highlighted\":\"TextAreaRegion_highlighted__3xJod\",\"relation\":\"TextAreaRegion_relation__30wW3\",\"delete\":\"TextAreaRegion_delete__2mF_2\",\"row\":\"TextAreaRegion_row__2xFM5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-divider-horizontal\":\"Panel_ant-divider-horizontal__15Mt3\",\"ant-divider-with-text-center\":\"Panel_ant-divider-with-text-center__2U1CW\",\"ant-divider-with-text-left\":\"Panel_ant-divider-with-text-left__1GH5P\",\"ant-divider-with-text-right\":\"Panel_ant-divider-with-text-right__2Lpc0\",\"ls-renderall\":\"Panel_ls-renderall__3CWt5\",\"ls-fade\":\"Panel_ls-fade__3W0tw\",\"fadeInOpacity\":\"Panel_fadeInOpacity__z086F\",\"htx-highlight\":\"Panel_htx-highlight__1tuyA\",\"htx-no-label\":\"Panel_htx-no-label__2SJ2M\",\"htx-highlight-last\":\"Panel_htx-highlight-last__2Cuel\",\"htx-yoyo\":\"Panel_htx-yoyo__2osrK\",\"ant-modal-confirm-error\":\"Panel_ant-modal-confirm-error__3l0SX\",\"container\":\"Panel_container__3AO29\",\"block__controls\":\"Panel_block__controls__psq4W\",\"block\":\"Panel_block__2d3Uq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ImageView_block__3BAO-\",\"divider\":\"ImageView_divider__1Hcuk\",\"button\":\"ImageView_button__3H1Aa\",\"container\":\"ImageView_container__AOBmH\",\"rotated\":\"ImageView_rotated__2CLwY\",\"filler\":\"ImageView_filler__c-NII\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"HtxTextBox_input__1WT88\",\"editing\":\"HtxTextBox_editing__2Wu58\",\"enter\":\"HtxTextBox_enter__1Vbyn\",\"delete\":\"HtxTextBox_delete__J_jjZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltitle\":\"Tools_tooltitle__2lRz7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"node\":\"Node_node__38uoJ\",\"minimal\":\"Node_minimal__3sbyt\",\"alias\":\"Node_alias__VPI6D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Hint_main__1Svrz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Text_block__1VM-S\",\"line\":\"Text_line__2JZG0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ls-error\":\"TreeValidation_ls-error__3bzOW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-divider-horizontal\":\"Segment_ant-divider-horizontal__fFYLB\",\"ant-divider-with-text-center\":\"Segment_ant-divider-with-text-center__mspm2\",\"ant-divider-with-text-left\":\"Segment_ant-divider-with-text-left__Q56jn\",\"ant-divider-with-text-right\":\"Segment_ant-divider-with-text-right__2WzMV\",\"ls-renderall\":\"Segment_ls-renderall__1yjaW\",\"ls-fade\":\"Segment_ls-fade__112CU\",\"fadeInOpacity\":\"Segment_fadeInOpacity__2TAdJ\",\"htx-highlight\":\"Segment_htx-highlight__sgrxU\",\"htx-no-label\":\"Segment_htx-no-label__33-yV\",\"htx-highlight-last\":\"Segment_htx-highlight-last__2T5Nz\",\"htx-yoyo\":\"Segment_htx-yoyo__F5J3m\",\"ant-modal-confirm-error\":\"Segment_ant-modal-confirm-error__fiuik\",\"block\":\"Segment_block__1fyeG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"badge\":\"SimpleBadge_badge__QESA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"Waveform_progress__32S1p\",\"wave\":\"Waveform_wave__1AcCy\",\"menu\":\"Waveform_menu__2ssfW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Completions_buttons__278SL\",\"skipped\":\"Completions_skipped__1PMvh\",\"completioncard\":\"Completions_completioncard__1t9j4\",\"completion\":\"Completions_completion__o7RMd\",\"completion_selected\":\"Completions_completion_selected__3qnRj\",\"title\":\"Completions_title__1sVK7\",\"titlespace\":\"Completions_titlespace__2vePz\",\"itembtns\":\"Completions_itembtns__1iGrZ\",\"draftbtn\":\"Completions_draftbtn__s2IBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"play\":\"AudioPlus_play__FZgJl\"};","/**\n * Class for register View\n */\nclass _Registry {\n  constructor() {\n    this.tags = [];\n    this.models = {};\n    this.views = {};\n    this.regions = [];\n    this.objects = [];\n    // list of available areas per object type\n    this.areas = new Map();\n\n    this.views_models = {};\n\n    this.tools = {};\n  }\n\n  addTag(tag, model, view) {\n    this.tags.push(tag);\n    this.models[tag] = model;\n    this.views[tag] = view;\n    this.views_models[model.name] = view;\n  }\n\n  addRegionType(type, object, detector) {\n    this.regions.push(type);\n    if (detector) type.detectByValue = detector;\n    const areas = this.areas.get(object);\n    if (areas) areas.push(type);\n    else this.areas.set(object, [type]);\n  }\n\n  regionTypes() {\n    return this.regions;\n  }\n\n  addObjectType(type) {\n    this.objects.push(type);\n  }\n\n  objectTypes() {\n    return this.objects;\n  }\n\n  modelsArr() {\n    return Object.values(this.models);\n  }\n\n  getViewByModel(modelName) {\n    const view = this.views_models[modelName];\n\n    if (!view) throw new Error(\"No view for model: \" + modelName);\n\n    return view;\n  }\n\n  getViewByTag(tag) {\n    return this.views[tag];\n  }\n\n  getAvailableAreas(object, value) {\n    const available = this.areas.get(object);\n    if (!available) return [];\n    if (value) {\n      for (let model of available) {\n        if (model.detectByValue && model.detectByValue(value)) return [model];\n      }\n    }\n    return available.filter(a => !a.detectByValue);\n  }\n\n  getTool(name) {\n    const model = this.tools[name];\n    if (!model) {\n      const models = Object.keys(this.tools);\n      throw new Error(\"No model registered for tool: \" + name + \"\\nAvailable models:\\n\\t\" + models.join(\"\\n\\t\"));\n    }\n\n    return model;\n  }\n\n  addTool(name, model) {\n    this.tools[name] = model;\n  }\n\n  /**\n   * Get model\n   * @param {string} tag\n   * @return {import(\"mobx-state-tree\").IModelType}\n   */\n  getModelByTag(tag) {\n    const model = this.models[tag];\n\n    if (!model) {\n      const models = Object.keys(this.models);\n      throw new Error(\"No model registered for tag: \" + tag + \"\\nAvailable models:\\n\\t\" + models.join(\"\\n\\t\"));\n    }\n\n    return model;\n  }\n}\n\nconst Registry = new _Registry();\n\nRegistry.getTool = Registry.getTool.bind(Registry);\nRegistry.getModelByTag = Registry.getModelByTag.bind(Registry);\n\nexport default Registry;\n","import nanoid from \"nanoid\";\n\n/**\n * Unique hash generator\n * @param {number} lgth\n */\nexport function guidGenerator(lgth) {\n  let uniqueID = nanoid(10);\n\n  if (lgth) {\n    uniqueID = nanoid(lgth);\n  }\n\n  return uniqueID;\n}\n","import { getType, getSnapshot } from \"mobx-state-tree\";\nimport { guidGenerator } from \"../utils/unique\";\n\n/**\n * TODO: refactor\n */\nexport { guidGenerator };\n\n/**\n * Helper function to detect HTX Component\n * @param {any} component\n * @param {string} name\n * @returns {boolean}\n */\nexport function isHtx(component, name) {\n  return typeof component.type === \"function\" && component.type.name === \"Htx\" + name;\n}\n\n/**\n * Clone node with new ID\n * @param {*} node\n */\nexport function cloneNode(node) {\n  const snapshot = getSnapshot(node);\n  const snapshotRandomId = getType(node).create({\n    ...snapshot,\n    id: guidGenerator(),\n  });\n  return snapshotRandomId;\n}\n\n/**\n *\n * @param {*} fromModel\n */\nexport function restoreNewsnapshot(fromModel) {\n  const snapshot = getSnapshot(fromModel);\n\n  /**\n   * Need to modify ID\n   */\n  const modifySnapshot = getType(fromModel).create({\n    ...snapshot,\n    id: guidGenerator(),\n  });\n\n  /**\n   * Update state\n   */\n  return modifySnapshot;\n}\n","import React from \"react\";\nimport { getType, getParentOfType } from \"mobx-state-tree\";\nimport xml2js from \"xml2js\";\n\nimport Registry from \"./Registry\";\nimport { guidGenerator } from \"./Helpers\";\n\nexport const TRAVERSE_SKIP = \"skip\";\nexport const TRAVERSE_STOP = \"stop\";\n\n/**\n * Clone React Tree\n * @param {*} items\n * @param {*} attrs\n */\nfunction cloneReactTree(items, attrs) {\n  let clone = null;\n  clone = function(children) {\n    const res = [];\n\n    React.Children.forEach(children, function(child) {\n      let el;\n\n      if (child.props) {\n        let moreProps = {};\n\n        if (typeof attrs === \"function\") {\n          moreProps = attrs(child);\n        } else if (typeof attrs === \"object\") {\n          moreProps = attrs;\n        }\n\n        el = React.cloneElement(child, moreProps, clone(child.props.children));\n      } else {\n        el = child;\n      }\n\n      res.push(el);\n    });\n\n    return res;\n  };\n\n  return clone(items);\n}\n\n/**\n * Function to convert CSS string to object\n * @param {string} style\n * @returns {object}\n */\nfunction cssConverter(style) {\n  if (!style) return null;\n\n  let result = {},\n    attributes = style.split(\";\"),\n    firstIndexOfColon,\n    i,\n    key,\n    value;\n\n  for (i = 0; i < attributes.length; i++) {\n    firstIndexOfColon = attributes[i].indexOf(\":\");\n    key = attributes[i].substring(0, firstIndexOfColon);\n    value = attributes[i].substring(firstIndexOfColon + 1);\n\n    key = key.replace(/ /g, \"\");\n    if (key.length < 1) {\n      continue;\n    }\n\n    if (value[0] === \" \") {\n      value = value.substring(1);\n    }\n\n    if (value[value.length - 1] === \" \") {\n      value = value.substring(0, value.length - 1);\n    }\n\n    var ukey = key.replace(/(-.)/g, x => x[1].toUpperCase());\n\n    result[ukey] = value;\n  }\n\n  return result;\n}\n\n/**\n *\n * @param {*} attrs\n */\nfunction attrsToProps(attrs) {\n  const props = {};\n\n  if (!attrs) return props;\n\n  for (let item of Object.keys(attrs)) {\n    /**\n     * Convert node of Tree to boolean value\n     */\n    if (item !== \"value\" && (attrs[item] === \"true\" || attrs[item] === \"false\")) {\n      props[item.toLowerCase()] = JSON.parse(attrs[item]);\n    } else {\n      props[item.toLowerCase()] = attrs[item];\n    }\n  }\n\n  return props;\n}\n\n/**\n *\n * @param {string} html\n */\nfunction treeToModel(html) {\n  /**\n   * Remove all line breaks from a string\n   * @param {string}\n   * @returns {string}\n   */\n  function removeAllBreaks(data) {\n    return data.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n  }\n\n  /**\n   * Edit all self closing tags from XML View\n   * TODO: Fix bug: if the value of <Choice /> or another tag contains \"/>\" function return error\n   * @param {string} data\n   * @returns {string}\n   */\n  function editSelfClosingTags(data) {\n    let split = data.split(\"/>\");\n    let newData = \"\";\n\n    for (let i = 0; i < split.length - 1; i++) {\n      let edsplit = split[i].split(\"<\");\n      newData += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\n    }\n\n    return newData + split[split.length - 1];\n  }\n\n  // TODO: this code shall be replaced with a proper XML tree\n  // rendering, as of right now, problem is that xml2js doesn't\n  // support that with the additional attributes used to parse the\n  // tree.\n  let htseen = -1;\n  const hypertexts = (function() {\n    let m;\n    const res = [];\n    const re = /<HyperText.*?>(.*?)<\\/HyperText>/gi;\n    do {\n      m = re.exec(html);\n      if (m) {\n        res.push(m[1]);\n      }\n    } while (m);\n\n    return res;\n  })();\n\n  function findHT(node) {\n    htseen = htseen + 1;\n    return hypertexts[htseen];\n  }\n\n  /**\n   * Generate new node\n   * @param {object} node\n   */\n  function addNode(node) {\n    if (!node.$$) return null;\n\n    // if it's a hypertext process the children differently, that's\n    // done for convenience. value attribute takes precedence if present\n    if (node[\"#name\"].toLowerCase() === \"hypertext\") {\n      return node.$ && \"value\" in node.$ ? node.$[\"value\"] : findHT(node);\n    }\n\n    let text = null;\n    const res = [];\n\n    for (let chld of node.$$) {\n      if (chld[\"#name\"] !== \"__text__\") {\n        const data = buildData(chld);\n        const children = addNode(chld);\n\n        if (children) {\n          if (typeof children === \"string\") data[\"value\"] = children;\n          else data.children = children;\n        }\n\n        res.push(data);\n      } else {\n        text = chld._;\n      }\n    }\n\n    return res.length === 0 ? text : res;\n  }\n\n  /**\n   * Generate obj with main data\n   */\n  function buildData(node) {\n    const data = attrsToProps(node.$);\n    const type = node[\"#name\"].toLowerCase();\n\n    /**\n     * Generation id of node\n     */\n    data[\"id\"] = guidGenerator();\n\n    /**\n     * Build type name\n     */\n    data[\"type\"] = type;\n    data[\"tagName\"] = node[\"#name\"];\n\n    return data;\n  }\n\n  const htmlWithotBreaks = removeAllBreaks(html);\n  const htmlSelfClosingTags = editSelfClosingTags(htmlWithotBreaks);\n  let document;\n\n  // it's actually a sync function, but there is no sync interface\n  // because of some backwards compat\n  xml2js.parseString(\n    htmlSelfClosingTags,\n    {\n      explicitChildren: true,\n      preserveChildrenOrder: true,\n      charsAsChildren: true,\n    },\n    function(err, result) {\n      document = result;\n    },\n  );\n\n  const root = buildData(Object.values(document)[0]);\n  root.children = addNode(Object.values(document)[0]);\n\n  return root;\n}\n\n/**\n * Render items of tree\n * @param {*} el\n */\nfunction renderItem(el) {\n  const typeName = getType(el).name;\n  const View = Registry.getViewByModel(typeName);\n\n  if (!View) {\n    throw new Error(`No view for model: ${typeName}`);\n  }\n\n  return <View key={guidGenerator()} item={el} />;\n}\n\n/**\n *\n * @param {*} item\n */\nfunction renderChildren(item) {\n  if (item && item.children && item.children.length) {\n    return item.children.map(el => {\n      return renderItem(el);\n    });\n  } else {\n    return null;\n  }\n}\n\n/**\n *\n * @param {*} name\n * @param {*} tree\n */\nfunction findInterface(name, tree) {\n  let fn;\n  fn = function(node) {\n    if (getType(node).name === name) return node;\n\n    if (node.children) {\n      for (let chld of node.children) {\n        const res = fn(chld);\n        if (res) return res;\n      }\n    }\n  };\n\n  return fn(tree);\n}\n\n/**\n *\n * @param {*} obj\n * @param {*} classes\n */\nfunction findParentOfType(obj, classes) {\n  for (let c of classes) {\n    try {\n      const p = getParentOfType(obj, c);\n      if (p) return p;\n    } catch (err) {}\n  }\n\n  return null;\n}\n\n/**\n *\n * @param {*} obj\n * @param {*} classes\n */\nfunction filterChildrenOfType(obj, classes) {\n  const res = [];\n  if (!Array.isArray(classes)) classes = [classes];\n\n  traverseTree(obj, function(node) {\n    for (let c of classes) {\n      if (getType(node).name === c) res.push(node);\n    }\n  });\n\n  return res;\n}\n\nfunction traverseTree(root, cb) {\n  let visitNode;\n\n  visitNode = function(node) {\n    const res = cb(node);\n    if (res === TRAVERSE_SKIP) return;\n    if (res === TRAVERSE_STOP) return TRAVERSE_STOP;\n\n    if (node.children) {\n      for (let chld of node.children) {\n        const visit = visitNode(chld);\n        if (visit === TRAVERSE_STOP) return TRAVERSE_STOP;\n      }\n    }\n  };\n\n  visitNode(root);\n}\n\nexport default {\n  cloneReactTree,\n  renderItem,\n  renderChildren,\n  treeToModel,\n  findInterface,\n  findParentOfType,\n  filterChildrenOfType,\n  cssConverter,\n  traverseTree,\n};\n","/**\n * Internal helper to check if parameter is a string\n * @param {*} value\n * @returns {boolean}\n */\nexport const isString = value => {\n  return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Internal helper to check if string is empty\n * @param {*} value\n * @returns {boolean}\n */\nexport const isStringEmpty = value => {\n  if (!isString(value)) {\n    return false;\n  }\n\n  return value.length === 0;\n};\n\n/**\n * Internal helper to check if string is JSON\n * @param {string} value\n * @returns {boolean}\n */\nexport const isStringJSON = value => {\n  if (isString(value)) {\n    try {\n      JSON.parse(value);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Check if text is url\n * @param {*} i\n * @param {*} text\n */\nexport function getUrl(i, text) {\n  const stringToTest = text.slice(i);\n  const myRegexp = /^(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/g; // eslint-disable-line no-useless-escape\n  const match = myRegexp.exec(stringToTest);\n\n  return match && match.length ? match[1] : \"\";\n}\n\n/**\n * Convert MS to Time String\n * Example: 2000 -> 00:00:02\n * @param {number} ms\n * @returns {string}\n */\nexport function toTimeString(ms) {\n  if (typeof ms === \"number\") {\n    return new Date(ms).toUTCString().match(/(\\d\\d:\\d\\d:\\d\\d)/)[0];\n  }\n}\n\nexport function flatten(arr) {\n  return arr.reduce(function(flat, toFlatten) {\n    return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n  }, []);\n}\n\nexport function hashCode(str) {\n  var hash = 0;\n  if (str.length === 0) {\n    return hash + \"\";\n  }\n  for (var i = 0; i < str.length; i++) {\n    var char = str.charCodeAt(i);\n    hash = (hash << 5) - hash + char;\n    hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash + \"\";\n}\n\nexport function atobUnicode(str) {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return decodeURIComponent(\n    atob(str)\n      .split(\"\")\n      .map(function(c) {\n        return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n      })\n      .join(\"\"),\n  );\n}\n\n/**\n * Makes string safe to use inside dangerouslySetInnerHTML\n * @param {string} unsafe\n */\nexport function escapeHtml(unsafe) {\n  return unsafe\n    .replace(/&/g, \"&amp;\")\n    .replace(/</g, \"&lt;\")\n    .replace(/>/g, \"&gt;\")\n    .replace(/\"/g, \"&quot;\")\n    .replace(/'/g, \"&#039;\");\n}\n\n/**\n * Convert any value to an array\n * @template T\n * @param {T} value\n * @returns {T[]}\n */\nexport function wrapArray(value) {\n  return [].concat(...[value]);\n}\n\nexport function delay(ms = 0) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","let gradients = [\n  \"#c22525\",\n  \"#c13025\",\n  \"#bf3b24\",\n  \"#be4624\",\n  \"#bc5124\",\n  \"#bb5b23\",\n  \"#ba6623\",\n  \"#b87023\",\n  \"#b77a22\",\n  \"#b58422\",\n  \"#b48d22\",\n  \"#b39722\",\n  \"#b1a021\",\n  \"#b0aa21\",\n  \"#aaae21\",\n  \"#9ead20\",\n  \"#93ab20\",\n  \"#87aa20\",\n  \"#7ca91f\",\n  \"#71a71f\",\n  \"#66a61f\",\n  \"#5ba41e\",\n  \"#51a31e\",\n  \"#46a21e\",\n  \"#3ca01e\",\n  \"#329f1d\",\n  \"#289d1d\",\n  \"#1e9c1d\",\n  \"#1c9a24\",\n  \"#1c992d\",\n  \"#1c992d\",\n];\n\nlet colorNames = {\n  aliceblue: \"#f0f8ff\",\n  antiquewhite: \"#faebd7\",\n  aqua: \"#00ffff\",\n  aquamarine: \"#7fffd4\",\n  azure: \"#f0ffff\",\n  beige: \"#f5f5dc\",\n  bisque: \"#ffe4c4\",\n  black: \"#000000\",\n  blanchedalmond: \"#ffebcd\",\n  blue: \"#0000ff\",\n  blueviolet: \"#8a2be2\",\n  brown: \"#a52a2a\",\n  burlywood: \"#deb887\",\n  cadetblue: \"#5f9ea0\",\n  chartreuse: \"#7fff00\",\n  chocolate: \"#d2691e\",\n  coral: \"#ff7f50\",\n  cornflowerblue: \"#6495ed\",\n  cornsilk: \"#fff8dc\",\n  crimson: \"#dc143c\",\n  cyan: \"#00ffff\",\n  darkblue: \"#00008b\",\n  darkcyan: \"#008b8b\",\n  darkgoldenrod: \"#b8860b\",\n  darkgray: \"#a9a9a9\",\n  darkgreen: \"#006400\",\n  darkkhaki: \"#bdb76b\",\n  darkmagenta: \"#8b008b\",\n  darkolivegreen: \"#556b2f\",\n  darkorange: \"#ff8c00\",\n  darkorchid: \"#9932cc\",\n  darkred: \"#8b0000\",\n  darksalmon: \"#e9967a\",\n  darkseagreen: \"#8fbc8f\",\n  darkslateblue: \"#483d8b\",\n  darkslategray: \"#2f4f4f\",\n  darkturquoise: \"#00ced1\",\n  darkviolet: \"#9400d3\",\n  deeppink: \"#ff1493\",\n  deepskyblue: \"#00bfff\",\n  dimgray: \"#696969\",\n  dodgerblue: \"#1e90ff\",\n  firebrick: \"#b22222\",\n  floralwhite: \"#fffaf0\",\n  forestgreen: \"#228b22\",\n  fuchsia: \"#ff00ff\",\n  gainsboro: \"#dcdcdc\",\n  ghostwhite: \"#f8f8ff\",\n  gold: \"#ffd700\",\n  goldenrod: \"#daa520\",\n  gray: \"#808080\",\n  green: \"#008000\",\n  greenyellow: \"#adff2f\",\n  honeydew: \"#f0fff0\",\n  hotpink: \"#ff69b4\",\n  indianred: \"#cd5c5c\",\n  indigo: \"#4b0082\",\n  ivory: \"#fffff0\",\n  khaki: \"#f0e68c\",\n  lavender: \"#e6e6fa\",\n  lavenderblush: \"#fff0f5\",\n  lawngreen: \"#7cfc00\",\n  lemonchiffon: \"#fffacd\",\n  lightblue: \"#add8e6\",\n  lightcoral: \"#f08080\",\n  lightcyan: \"#e0ffff\",\n  lightgoldenrodyellow: \"#fafad2\",\n  lightgrey: \"#d3d3d3\",\n  lightgreen: \"#90ee90\",\n  lightpink: \"#ffb6c1\",\n  lightsalmon: \"#ffa07a\",\n  lightseagreen: \"#20b2aa\",\n  lightskyblue: \"#87cefa\",\n  lightslategray: \"#778899\",\n  lightsteelblue: \"#b0c4de\",\n  lightyellow: \"#ffffe0\",\n  lime: \"#00ff00\",\n  limegreen: \"#32cd32\",\n  linen: \"#faf0e6\",\n  magenta: \"#ff00ff\",\n  maroon: \"#800000\",\n  mediumaquamarine: \"#66cdaa\",\n  mediumblue: \"#0000cd\",\n  mediumorchid: \"#ba55d3\",\n  mediumpurple: \"#9370d8\",\n  mediumseagreen: \"#3cb371\",\n  mediumslateblue: \"#7b68ee\",\n  mediumspringgreen: \"#00fa9a\",\n  mediumturquoise: \"#48d1cc\",\n  mediumvioletred: \"#c71585\",\n  midnightblue: \"#191970\",\n  mintcream: \"#f5fffa\",\n  mistyrose: \"#ffe4e1\",\n  moccasin: \"#ffe4b5\",\n  navajowhite: \"#ffdead\",\n  navy: \"#000080\",\n  oldlace: \"#fdf5e6\",\n  olive: \"#808000\",\n  olivedrab: \"#6b8e23\",\n  orange: \"#ffa500\",\n  orangered: \"#ff4500\",\n  orchid: \"#da70d6\",\n  palegoldenrod: \"#eee8aa\",\n  palegreen: \"#98fb98\",\n  paleturquoise: \"#afeeee\",\n  palevioletred: \"#d87093\",\n  papayawhip: \"#ffefd5\",\n  peachpuff: \"#ffdab9\",\n  peru: \"#cd853f\",\n  pink: \"#ffc0cb\",\n  plum: \"#dda0dd\",\n  powderblue: \"#b0e0e6\",\n  purple: \"#800080\",\n  rebeccapurple: \"#663399\",\n  red: \"#ff0000\",\n  rosybrown: \"#bc8f8f\",\n  royalblue: \"#4169e1\",\n  saddlebrown: \"#8b4513\",\n  salmon: \"#fa8072\",\n  sandybrown: \"#f4a460\",\n  seagreen: \"#2e8b57\",\n  seashell: \"#fff5ee\",\n  sienna: \"#a0522d\",\n  silver: \"#c0c0c0\",\n  skyblue: \"#87ceeb\",\n  slateblue: \"#6a5acd\",\n  slategray: \"#708090\",\n  snow: \"#fffafa\",\n  springgreen: \"#00ff7f\",\n  steelblue: \"#4682b4\",\n  tan: \"#d2b48c\",\n  teal: \"#008080\",\n  thistle: \"#d8bfd8\",\n  tomato: \"#ff6347\",\n  turquoise: \"#40e0d0\",\n  violet: \"#ee82ee\",\n  wheat: \"#f5deb3\",\n  white: \"#ffffff\",\n  whitesmoke: \"#f5f5f5\",\n  yellow: \"#ffff00\",\n  yellowgreen: \"#9acd32\",\n};\n\n/**\n * Convert HEX to RGBA\n * @param {string} hex 3 digits + # or 6 digits + #\n * @param {number?} opacity From 0 to 1\n */\nexport function hexToRGBA(hex, opacity) {\n  let r = 0,\n    g = 0,\n    b = 0;\n\n  let a = 0.3;\n\n  if (typeof parseInt(opacity) === \"number\") {\n    a = opacity;\n  }\n\n  /**\n   * If HEX = 3\n   */\n  if (hex && hex.length === 4) {\n    r = \"0x\" + hex[1] + hex[1];\n    g = \"0x\" + hex[2] + hex[2];\n    b = \"0x\" + hex[3] + hex[3];\n\n    /**\n     * If HEX = 6\n     */\n  } else if (hex && hex.length === 7) {\n    r = \"0x\" + hex[1] + hex[2];\n    g = \"0x\" + hex[3] + hex[4];\n    b = \"0x\" + hex[5] + hex[6];\n  }\n\n  const result = `rgba(${+r}, ${+g}, ${+b}, ${a})`;\n\n  return result;\n}\n\n/**\n * Color to RGBA\n * @param {*} value\n */\nexport function colorToRGBA(value, alpha) {\n  if (typeof value === \"string\" && typeof colorNames[value.toLowerCase()] !== undefined) {\n    const hexColor = colorNames[value.toLowerCase()];\n    return hexToRGBA(hexColor, alpha);\n  }\n\n  return value;\n}\n\n/**\n * Convert color to RGB(A)\n * @param {*} value\n * @param {number} alpha\n */\nexport function convertToRGBA(value, alpha) {\n  if (value.charAt(0) === \"#\") {\n    return hexToRGBA(value, alpha);\n  } else {\n    return colorToRGBA(value, alpha);\n  }\n}\n\n/**\n * Convert string to HEX color\n * @param {string} str\n */\nexport function stringToColor(str) {\n  let hash = 0;\n\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = \"#\";\n\n  for (let i = 0; i < 3; i++) {\n    let value = (hash >> (i * 8)) & 0xff;\n    color += (\"00\" + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n\n/**\n * Change alpha channel of RGBA\n * @param {string} rgba\n * @param {number} alpha from 0 to 1\n */\nexport function rgbaChangeAlpha(rgba, alpha) {\n  return rgba.replace(/[\\d\\.]+\\)$/g, `${alpha})`); // eslint-disable-line no-useless-escape\n}\n\n// given number from 0.00 to 1.00 return a color from red to green\nexport function getScaleGradient(number) {\n  return gradients[Math.ceil(number * 30)];\n}\n","// import { MagicWand } from \"magic-wand-js\";\n// Magic Wand (Fuzzy Selection Tool) for Javascript\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2014, Ryasnoy Paul (ryasnoypaul@gmail.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice avnd this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nconst MagicWand = (function() {\n  var lib = {};\n\n  /** Create a binary mask on the image by color threshold\n   * Algorithm: Scanline flood fill (http://en.wikipedia.org/wiki/Flood_fill)\n   * @param {Object} image: {Uint8Array} data, {int} width, {int} height, {int} bytes\n   * @param {int} x of start pixel\n   * @param {int} y of start pixel\n   * @param {int} color threshold\n   * @param {Uint8Array} mask of visited points (optional)\n   * @return {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   */\n  lib.floodFill = function(image, px, py, colorThreshold, mask) {\n    var c,\n      x,\n      newY,\n      el,\n      xr,\n      xl,\n      dy,\n      dyl,\n      dyr,\n      checkY,\n      data = image.data,\n      w = image.width,\n      h = image.height,\n      bytes = image.bytes, // number of bytes in the color\n      maxX = -1,\n      minX = w + 1,\n      maxY = -1,\n      minY = h + 1,\n      i = py * w + px, // start point index in the mask data\n      result = new Uint8Array(w * h), // result mask\n      visited = new Uint8Array(mask ? mask : w * h); // mask of visited points\n\n    if (visited[i] === 1) return null;\n\n    i = i * bytes; // start point index in the image data\n    var sampleColor = [data[i], data[i + 1], data[i + 2], data[i + 3]]; // start point color (sample)\n\n    var stack = [{ y: py, left: px - 1, right: px + 1, dir: 1 }]; // first scanning line\n    do {\n      el = stack.shift(); // get line for scanning\n\n      checkY = false;\n      for (x = el.left + 1; x < el.right; x++) {\n        dy = el.y * w;\n        i = (dy + x) * bytes; // point index in the image data\n\n        if (visited[dy + x] === 1) continue; // check whether the point has been visited\n        // compare the color of the sample\n        c = data[i] - sampleColor[0]; // check by red\n        if (c > colorThreshold || c < -colorThreshold) continue;\n        c = data[i + 1] - sampleColor[1]; // check by green\n        if (c > colorThreshold || c < -colorThreshold) continue;\n        c = data[i + 2] - sampleColor[2]; // check by blue\n        if (c > colorThreshold || c < -colorThreshold) continue;\n\n        checkY = true; // if the color of the new point(x,y) is similar to the sample color need to check minmax for Y\n\n        result[dy + x] = 1; // mark a new point in mask\n        visited[dy + x] = 1; // mark a new point as visited\n\n        xl = x - 1;\n        // walk to left side starting with the left neighbor\n        while (xl > -1) {\n          dyl = dy + xl;\n          i = dyl * bytes; // point index in the image data\n          if (visited[dyl] === 1) break; // check whether the point has been visited\n          // compare the color of the sample\n          c = data[i] - sampleColor[0]; // check by red\n          if (c > colorThreshold || c < -colorThreshold) break;\n          c = data[i + 1] - sampleColor[1]; // check by green\n          if (c > colorThreshold || c < -colorThreshold) break;\n          c = data[i + 2] - sampleColor[2]; // check by blue\n          if (c > colorThreshold || c < -colorThreshold) break;\n\n          result[dyl] = 1;\n          visited[dyl] = 1;\n\n          xl--;\n        }\n        xr = x + 1;\n        // walk to right side starting with the right neighbor\n        while (xr < w) {\n          dyr = dy + xr;\n          i = dyr * bytes; // index point in the image data\n          if (visited[dyr] === 1) break; // check whether the point has been visited\n          // compare the color of the sample\n          c = data[i] - sampleColor[0]; // check by red\n          if (c > colorThreshold || c < -colorThreshold) break;\n          c = data[i + 1] - sampleColor[1]; // check by green\n          if (c > colorThreshold || c < -colorThreshold) break;\n          c = data[i + 2] - sampleColor[2]; // check by blue\n          if (c > colorThreshold || c < -colorThreshold) break;\n\n          result[dyr] = 1;\n          visited[dyr] = 1;\n\n          xr++;\n        }\n\n        // check minmax for X\n        if (xl < minX) minX = xl + 1;\n        if (xr > maxX) maxX = xr - 1;\n\n        newY = el.y - el.dir;\n        if (newY >= 0 && newY < h) {\n          // add two scanning lines in the opposite direction (y - dir) if necessary\n          if (xl < el.left) stack.push({ y: newY, left: xl, right: el.left, dir: -el.dir }); // from \"new left\" to \"current left\"\n          if (el.right < xr) stack.push({ y: newY, left: el.right, right: xr, dir: -el.dir }); // from \"current right\" to \"new right\"\n        }\n        newY = el.y + el.dir;\n        if (newY >= 0 && newY < h) {\n          // add the scanning line in the direction (y + dir) if necessary\n          if (xl < xr) stack.push({ y: newY, left: xl, right: xr, dir: el.dir }); // from \"new left\" to \"new right\"\n        }\n      }\n      // check minmax for Y if necessary\n      if (checkY) {\n        if (el.y < minY) minY = el.y;\n        if (el.y > maxY) maxY = el.y;\n      }\n    } while (stack.length > 0);\n\n    return {\n      data: result,\n      width: image.width,\n      height: image.height,\n      bounds: {\n        minX: minX,\n        minY: minY,\n        maxX: maxX,\n        maxY: maxY,\n      },\n    };\n  };\n\n  /** Apply the gauss-blur filter to binary mask\n   * Algorithms: http://blog.ivank.net/fastest-gaussian-blur.html\n   * http://www.librow.com/articles/article-9\n   * http://elynxsdk.free.fr/ext-docs/Blur/Fast_box_blur.pdf\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   * @param {int} blur radius\n   * @return {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   */\n  lib.gaussBlur = function(mask, radius) {\n    var i,\n      k,\n      k1,\n      x,\n      y,\n      val,\n      start,\n      end,\n      n = radius * 2 + 1, // size of the pattern for radius-neighbors (from -r to +r with the center point)\n      s2 = radius * radius,\n      wg = new Float32Array(n), // weights\n      total = 0, // sum of weights(used for normalization)\n      w = mask.width,\n      h = mask.height,\n      data = mask.data,\n      minX = mask.bounds.minX,\n      maxX = mask.bounds.maxX,\n      minY = mask.bounds.minY,\n      maxY = mask.bounds.maxY;\n\n    // calc gauss weights\n    for (i = 0; i < radius; i++) {\n      var dsq = (radius - i) * (radius - i);\n      var ww = Math.exp(-dsq / (2.0 * s2)) / (2 * Math.PI * s2);\n      wg[radius + i] = wg[radius - i] = ww;\n      total += 2 * ww;\n    }\n    // normalization weights\n    for (i = 0; i < n; i++) {\n      wg[i] /= total;\n    }\n\n    var result = new Uint8Array(w * h), // result mask\n      endX = radius + w,\n      endY = radius + h;\n\n    //walk through all source points for blur\n    for (y = minY; y < maxY + 1; y++)\n      for (x = minX; x < maxX + 1; x++) {\n        val = 0;\n        k = y * w + x; // index of the point\n        start = radius - x > 0 ? radius - x : 0;\n        end = endX - x < n ? endX - x : n; // Math.min((((w - 1) - x) + radius) + 1, n);\n        k1 = k - radius;\n        // walk through x-neighbors\n        for (i = start; i < end; i++) {\n          val += data[k1 + i] * wg[i];\n        }\n        start = radius - y > 0 ? radius - y : 0;\n        end = endY - y < n ? endY - y : n; // Math.min((((h - 1) - y) + radius) + 1, n);\n        k1 = k - radius * w;\n        // walk through y-neighbors\n        for (i = start; i < end; i++) {\n          val += data[k1 + i * w] * wg[i];\n        }\n        result[k] = val > 0.5 ? 1 : 0;\n      }\n\n    return {\n      data: result,\n      width: w,\n      height: h,\n      bounds: {\n        minX: minX,\n        minY: minY,\n        maxX: maxX,\n        maxY: maxY,\n      },\n    };\n  };\n\n  /** Create a border index array of boundary points of the mask with radius-neighbors\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   * @param {int} blur radius\n   * @param {Uint8Array} visited: mask of visited points (optional)\n   * @return {Array} border index array of boundary points with radius-neighbors (only points need for blur)\n   */\n  function createBorderForBlur(mask, radius, visited) {\n    var x,\n      i,\n      j,\n      y,\n      k,\n      k1,\n      k2,\n      w = mask.width,\n      h = mask.height,\n      data = mask.data,\n      visitedData = new Uint8Array(data),\n      minX = mask.bounds.minX,\n      maxX = mask.bounds.maxX,\n      minY = mask.bounds.minY,\n      maxY = mask.bounds.maxY,\n      len = w * h,\n      temp = new Uint8Array(len), // auxiliary array to check uniqueness\n      border = [], // only border points\n      x0 = Math.max(minX, 1),\n      x1 = Math.min(maxX, w - 2),\n      y0 = Math.max(minY, 1),\n      y1 = Math.min(maxY, h - 2);\n\n    if (visited && visited.length > 0) {\n      // copy visited points (only \"black\")\n      for (k = 0; k < len; k++) {\n        if (visited[k] === 1) visitedData[k] = 1;\n      }\n    }\n\n    // walk through inner values except points on the boundary of the image\n    for (y = y0; y < y1 + 1; y++)\n      for (x = x0; x < x1 + 1; x++) {\n        k = y * w + x;\n        if (data[k] === 0) continue; // \"white\" point isn't the border\n        k1 = k + w; // y + 1\n        k2 = k - w; // y - 1\n        // check if any neighbor with a \"white\" color\n        if (\n          visitedData[k + 1] === 0 ||\n          visitedData[k - 1] === 0 ||\n          visitedData[k1] === 0 ||\n          visitedData[k1 + 1] === 0 ||\n          visitedData[k1 - 1] === 0 ||\n          visitedData[k2] === 0 ||\n          visitedData[k2 + 1] === 0 ||\n          visitedData[k2 - 1] === 0\n        ) {\n          //if (visitedData[k + 1] + visitedData[k - 1] +\n          //    visitedData[k1] + visitedData[k1 + 1] + visitedData[k1 - 1] +\n          //    visitedData[k2] + visitedData[k2 + 1] + visitedData[k2 - 1] === 8) continue;\n          border.push(k);\n        }\n      }\n\n    // walk through points on the boundary of the image if necessary\n    // if the \"black\" point is adjacent to the boundary of the image, it is a border point\n    if (minX === 0) for (y = minY; y < maxY + 1; y++) if (data[y * w] === 1) border.push(y * w);\n\n    if (maxX === w - 1) for (y = minY; y < maxY + 1; y++) if (data[y * w + maxX] === 1) border.push(y * w + maxX);\n\n    if (minY === 0) for (x = minX; x < maxX + 1; x++) if (data[x] === 1) border.push(x);\n\n    if (maxY === h - 1) for (x = minX; x < maxX + 1; x++) if (data[maxY * w + x] === 1) border.push(maxY * w + x);\n\n    var result = [], // border points with radius-neighbors\n      start,\n      end,\n      endX = radius + w,\n      endY = radius + h,\n      n = radius * 2 + 1; // size of the pattern for radius-neighbors (from -r to +r with the center point)\n\n    len = border.length;\n    // walk through radius-neighbors of border points and add them to the result array\n    for (j = 0; j < len; j++) {\n      k = border[j]; // index of the border point\n      temp[k] = 1; // mark border point\n      result.push(k); // save the border point\n      x = k % w; // calc x by index\n      y = (k - x) / w; // calc y by index\n      start = radius - x > 0 ? radius - x : 0;\n      end = endX - x < n ? endX - x : n; // Math.min((((w - 1) - x) + radius) + 1, n);\n      k1 = k - radius;\n      // walk through x-neighbors\n      for (i = start; i < end; i++) {\n        k2 = k1 + i;\n        if (temp[k2] === 0) {\n          // check the uniqueness\n          temp[k2] = 1;\n          result.push(k2);\n        }\n      }\n      start = radius - y > 0 ? radius - y : 0;\n      end = endY - y < n ? endY - y : n; // Math.min((((h - 1) - y) + radius) + 1, n);\n      k1 = k - radius * w;\n      // walk through y-neighbors\n      for (i = start; i < end; i++) {\n        k2 = k1 + i * w;\n        if (temp[k2] === 0) {\n          // check the uniqueness\n          temp[k2] = 1;\n          result.push(k2);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /** Apply the gauss-blur filter ONLY to border points with radius-neighbors\n   * Algorithms: http://blog.ivank.net/fastest-gaussian-blur.html\n   * http://www.librow.com/articles/article-9\n   * http://elynxsdk.free.fr/ext-docs/Blur/Fast_box_blur.pdf\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   * @param {int} blur radius\n   * @param {Uint8Array} visited: mask of visited points (optional)\n   * @return {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   */\n  lib.gaussBlurOnlyBorder = function(mask, radius, visited) {\n    var border = createBorderForBlur(mask, radius, visited), // get border points with radius-neighbors\n      ww,\n      dsq,\n      i,\n      j,\n      k,\n      k1,\n      x,\n      y,\n      val,\n      start,\n      end,\n      n = radius * 2 + 1, // size of the pattern for radius-neighbors (from -r to +r with center point)\n      s2 = 2 * radius * radius,\n      wg = new Float32Array(n), // weights\n      total = 0, // sum of weights(used for normalization)\n      w = mask.width,\n      h = mask.height,\n      data = mask.data,\n      minX = mask.bounds.minX,\n      maxX = mask.bounds.maxX,\n      minY = mask.bounds.minY,\n      maxY = mask.bounds.maxY,\n      len = border.length;\n\n    // calc gauss weights\n    for (i = 0; i < radius; i++) {\n      dsq = (radius - i) * (radius - i);\n      ww = Math.exp(-dsq / s2) / Math.PI;\n      wg[radius + i] = wg[radius - i] = ww;\n      total += 2 * ww;\n    }\n    // normalization weights\n    for (i = 0; i < n; i++) {\n      wg[i] /= total;\n    }\n\n    var result = new Uint8Array(data), // copy the source mask\n      endX = radius + w,\n      endY = radius + h;\n\n    //walk through all border points for blur\n    for (i = 0; i < len; i++) {\n      k = border[i]; // index of the border point\n      val = 0;\n      x = k % w; // calc x by index\n      y = (k - x) / w; // calc y by index\n      start = radius - x > 0 ? radius - x : 0;\n      end = endX - x < n ? endX - x : n; // Math.min((((w - 1) - x) + radius) + 1, n);\n      k1 = k - radius;\n      // walk through x-neighbors\n      for (j = start; j < end; j++) {\n        val += data[k1 + j] * wg[j];\n      }\n      if (val > 0.5) {\n        result[k] = 1;\n        // check minmax\n        if (x < minX) minX = x;\n        if (x > maxX) maxX = x;\n        if (y < minY) minY = y;\n        if (y > maxY) maxY = y;\n        continue;\n      }\n      start = radius - y > 0 ? radius - y : 0;\n      end = endY - y < n ? endY - y : n; // Math.min((((h - 1) - y) + radius) + 1, n);\n      k1 = k - radius * w;\n      // walk through y-neighbors\n      for (j = start; j < end; j++) {\n        val += data[k1 + j * w] * wg[j];\n      }\n      if (val > 0.5) {\n        result[k] = 1;\n        // check minmax\n        if (x < minX) minX = x;\n        if (x > maxX) maxX = x;\n        if (y < minY) minY = y;\n        if (y > maxY) maxY = y;\n      } else {\n        result[k] = 0;\n      }\n    }\n\n    return {\n      data: result,\n      width: w,\n      height: h,\n      bounds: {\n        minX: minX,\n        minY: minY,\n        maxX: maxX,\n        maxY: maxY,\n      },\n    };\n  };\n\n  /** Create a border mask (only boundary points)\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   * @return {Object} border mask: {Uint8Array} data, {int} width, {int} height, {Object} offset\n   */\n  lib.createBorderMask = function(mask) {\n    var x,\n      y,\n      k,\n      k1,\n      k2,\n      w = mask.width,\n      h = mask.height,\n      data = mask.data,\n      minX = mask.bounds.minX,\n      maxX = mask.bounds.maxX,\n      minY = mask.bounds.minY,\n      maxY = mask.bounds.maxY,\n      rw = maxX - minX + 1, // bounds size\n      rh = maxY - minY + 1,\n      result = new Uint8Array(rw * rh), // reduced mask (bounds size)\n      x0 = Math.max(minX, 1),\n      x1 = Math.min(maxX, w - 2),\n      y0 = Math.max(minY, 1),\n      y1 = Math.min(maxY, h - 2);\n\n    // walk through inner values except points on the boundary of the image\n    for (y = y0; y < y1 + 1; y++)\n      for (x = x0; x < x1 + 1; x++) {\n        k = y * w + x;\n        if (data[k] === 0) continue; // \"white\" point isn't the border\n        k1 = k + w; // y + 1\n        k2 = k - w; // y - 1\n        // check if any neighbor with a \"white\" color\n        if (\n          data[k + 1] === 0 ||\n          data[k - 1] === 0 ||\n          data[k1] === 0 ||\n          data[k1 + 1] === 0 ||\n          data[k1 - 1] === 0 ||\n          data[k2] === 0 ||\n          data[k2 + 1] === 0 ||\n          data[k2 - 1] === 0\n        ) {\n          //if (data[k + 1] + data[k - 1] +\n          //    data[k1] + data[k1 + 1] + data[k1 - 1] +\n          //    data[k2] + data[k2 + 1] + data[k2 - 1] === 8) continue;\n          result[(y - minY) * rw + (x - minX)] = 1;\n        }\n      }\n\n    // walk through points on the boundary of the image if necessary\n    // if the \"black\" point is adjacent to the boundary of the image, it is a border point\n    if (minX === 0) for (y = minY; y < maxY + 1; y++) if (data[y * w] === 1) result[(y - minY) * rw] = 1;\n\n    if (maxX === w - 1)\n      for (y = minY; y < maxY + 1; y++) if (data[y * w + maxX] === 1) result[(y - minY) * rw + (maxX - minX)] = 1;\n\n    if (minY === 0) for (x = minX; x < maxX + 1; x++) if (data[x] === 1) result[x - minX] = 1;\n\n    if (maxY === h - 1)\n      for (x = minX; x < maxX + 1; x++) if (data[maxY * w + x] === 1) result[(maxY - minY) * rw + (x - minX)] = 1;\n\n    return {\n      data: result,\n      width: rw,\n      height: rh,\n      offset: { x: minX, y: minY },\n    };\n  };\n\n  /** Create a border index array of boundary points of the mask\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height\n   * @return {Array} border index array boundary points of the mask\n   */\n  lib.getBorderIndices = function(mask) {\n    var x,\n      y,\n      k,\n      k1,\n      k2,\n      w = mask.width,\n      h = mask.height,\n      data = mask.data,\n      border = [], // only border points\n      x1 = w - 1,\n      y1 = h - 1;\n\n    // walk through inner values except points on the boundary of the image\n    for (y = 1; y < y1; y++)\n      for (x = 1; x < x1; x++) {\n        k = y * w + x;\n        if (data[k] === 0) continue; // \"white\" point isn't the border\n        k1 = k + w; // y + 1\n        k2 = k - w; // y - 1\n        // check if any neighbor with a \"white\" color\n        if (\n          data[k + 1] === 0 ||\n          data[k - 1] === 0 ||\n          data[k1] === 0 ||\n          data[k1 + 1] === 0 ||\n          data[k1 - 1] === 0 ||\n          data[k2] === 0 ||\n          data[k2 + 1] === 0 ||\n          data[k2 - 1] === 0\n        ) {\n          //if (data[k + 1] + data[k - 1] +\n          //    data[k1] + data[k1 + 1] + data[k1 - 1] +\n          //    data[k2] + data[k2 + 1] + data[k2 - 1] === 8) continue;\n          border.push(k);\n        }\n      }\n\n    // walk through points on the boundary of the image if necessary\n    // if the \"black\" point is adjacent to the boundary of the image, it is a border point\n    for (y = 0; y < h; y++) if (data[y * w] === 1) border.push(y * w);\n\n    for (x = 0; x < w; x++) if (data[x] === 1) border.push(x);\n\n    k = w - 1;\n    for (y = 0; y < h; y++) if (data[y * w + k] === 1) border.push(y * w + k);\n\n    k = (h - 1) * w;\n    for (x = 0; x < w; x++) if (data[k + x] === 1) border.push(k + x);\n\n    return border;\n  };\n\n  /** Create a compressed mask with a \"white\" border (1px border with zero values) for the contour tracing\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   * @return {Object} border mask: {Uint8Array} data, {int} width, {int} height, {Object} offset\n   */\n  function prepareMask(mask) {\n    var x,\n      y,\n      w = mask.width,\n      data = mask.data,\n      minX = mask.bounds.minX,\n      maxX = mask.bounds.maxX,\n      minY = mask.bounds.minY,\n      maxY = mask.bounds.maxY,\n      rw = maxX - minX + 3, // bounds size +1 px on each side (a \"white\" border)\n      rh = maxY - minY + 3,\n      result = new Uint8Array(rw * rh); // reduced mask (bounds size)\n\n    // walk through inner values and copy only \"black\" points to the result mask\n    for (y = minY; y < maxY + 1; y++)\n      for (x = minX; x < maxX + 1; x++) {\n        if (data[y * w + x] === 1) result[(y - minY + 1) * rw + (x - minX + 1)] = 1;\n      }\n\n    return {\n      data: result,\n      width: rw,\n      height: rh,\n      offset: { x: minX - 1, y: minY - 1 },\n    };\n  }\n\n  /** Create a contour array for the binary mask\n   * Algorithm: http://www.sciencedirect.com/science/article/pii/S1077314203001401\n   * @param {Object} mask: {Uint8Array} data, {int} width, {int} height, {Object} bounds\n   * @return {Array} contours: {Array} points, {bool} inner, {int} label\n   */\n  lib.traceContours = function(mask) {\n    var m = prepareMask(mask),\n      contours = [],\n      label = 0,\n      w = m.width,\n      w2 = w * 2,\n      h = m.height,\n      src = m.data,\n      dx = m.offset.x,\n      dy = m.offset.y,\n      dest = new Uint8Array(src), // label matrix\n      i,\n      j,\n      x,\n      y,\n      k,\n      k1,\n      c,\n      inner,\n      dir,\n      first,\n      second,\n      current,\n      previous,\n      next,\n      d;\n\n    // all [dx,dy] pairs (array index is the direction)\n    // 5 6 7\n    // 4 X 0\n    // 3 2 1\n    var directions = [\n      [1, 0],\n      [1, 1],\n      [0, 1],\n      [-1, 1],\n      [-1, 0],\n      [-1, -1],\n      [0, -1],\n      [1, -1],\n    ];\n\n    for (y = 1; y < h - 1; y++)\n      for (x = 1; x < w - 1; x++) {\n        k = y * w + x;\n        if (src[k] === 1) {\n          for (i = -w; i < w2; i += w2) {\n            // k - w: outer tracing (y - 1), k + w: inner tracing (y + 1)\n            if (src[k + i] === 0 && dest[k + i] === 0) {\n              // need contour tracing\n              inner = i === w; // is inner contour tracing ?\n              label++; // label for the next contour\n\n              c = [];\n              dir = inner ? 2 : 6; // start direction\n              current = previous = first = { x: x, y: y };\n              second = null;\n              while (true) {\n                dest[current.y * w + current.x] = label; // mark label for the current point\n                // bypass all the neighbors around the current point in a clockwise\n                for (j = 0; j < 8; j++) {\n                  dir = (dir + 1) % 8;\n\n                  // get the next point by new direction\n                  d = directions[dir]; // index as direction\n                  next = { x: current.x + d[0], y: current.y + d[1] };\n\n                  k1 = next.y * w + next.x;\n                  if (src[k1] === 1) {\n                    // black boundary pixel\n                    dest[k1] = label; // mark a label\n                    break;\n                  }\n                  dest[k1] = -1; // mark a white boundary pixel\n                  next = null;\n                }\n                if (next === null) break; // no neighbours (one-point contour)\n                current = next;\n                if (second) {\n                  if (\n                    previous.x === first.x &&\n                    previous.y === first.y &&\n                    current.x === second.x &&\n                    current.y === second.y\n                  ) {\n                    break; // creating the contour completed when returned to original position\n                  }\n                } else {\n                  second = next;\n                }\n                c.push({ x: previous.x + dx, y: previous.y + dy });\n                previous = current;\n                dir = (dir + 4) % 8; // next dir (symmetrically to the current direction)\n              }\n\n              if (next != null) {\n                c.push({ x: first.x + dx, y: first.y + dy }); // close the contour\n                contours.push({ inner: inner, label: label, points: c }); // add contour to the list\n              }\n            }\n          }\n        }\n      }\n\n    return contours;\n  };\n\n  /** Simplify contours\n   * Algorithms: http://psimpl.sourceforge.net/douglas-peucker.html\n   * http://neerc.ifmo.ru/wiki/index.php?title=%D0%A3%D0%BF%D1%80%D0%BE%D1%89%D0%B5%D0%BD%D0%B8%D0%B5_%D0%BF%D0%BE%D0%BB%D0%B8%D0%B3%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B9_%D1%86%D0%B5%D0%BF%D0%B8\n   * @param {Array} contours: {Array} points, {bool} inner, {int} label\n   * @param {float} simplify tolerant\n   * @param {int} simplify count: min number of points when the contour is simplified\n   * @return {Array} contours: {Array} points, {bool} inner, {int} label, {int} initialCount\n   */\n  lib.simplifyContours = function(contours, simplifyTolerant, simplifyCount) {\n    var lenContours = contours.length,\n      result = [],\n      i,\n      j,\n      k,\n      c,\n      points,\n      len,\n      resPoints,\n      lst,\n      stack,\n      ids,\n      maxd,\n      maxi,\n      dist,\n      r1,\n      r2,\n      r12,\n      dx,\n      dy,\n      pi,\n      pf,\n      pl;\n\n    // walk through all contours\n    for (j = 0; j < lenContours; j++) {\n      c = contours[j];\n      points = c.points;\n      len = c.points.length;\n\n      if (len < simplifyCount) {\n        // contour isn't simplified\n        resPoints = [];\n        for (k = 0; k < len; k++) {\n          resPoints.push({ x: points[k].x, y: points[k].y });\n        }\n        result.push({ inner: c.inner, label: c.label, points: resPoints, initialCount: len });\n        continue;\n      }\n\n      lst = [0, len - 1]; // always add first and last points\n      stack = [{ first: 0, last: len - 1 }]; // first processed edge\n\n      do {\n        ids = stack.shift();\n        if (ids.last <= ids.first + 1) {\n          // no intermediate points\n          continue;\n        }\n\n        maxd = -1.0; // max distance from point to current edge\n        maxi = ids.first; // index of maximally distant point\n\n        for (\n          i = ids.first + 1;\n          i < ids.last;\n          i++ // bypass intermediate points in edge\n        ) {\n          // calc the distance from current point to edge\n          pi = points[i];\n          pf = points[ids.first];\n          pl = points[ids.last];\n          dx = pi.x - pf.x;\n          dy = pi.y - pf.y;\n          r1 = Math.sqrt(dx * dx + dy * dy);\n          dx = pi.x - pl.x;\n          dy = pi.y - pl.y;\n          r2 = Math.sqrt(dx * dx + dy * dy);\n          dx = pf.x - pl.x;\n          dy = pf.y - pl.y;\n          r12 = Math.sqrt(dx * dx + dy * dy);\n          if (r1 >= Math.sqrt(r2 * r2 + r12 * r12)) dist = r2;\n          else if (r2 >= Math.sqrt(r1 * r1 + r12 * r12)) dist = r1;\n          else dist = Math.abs((dy * pi.x - dx * pi.y + pf.x * pl.y - pl.x * pf.y) / r12);\n\n          if (dist > maxd) {\n            maxi = i; // save the index of maximally distant point\n            maxd = dist;\n          }\n        }\n\n        if (maxd > simplifyTolerant) {\n          // if the max \"deviation\" is larger than allowed then...\n          lst.push(maxi); // add index to the simplified list\n          stack.push({ first: ids.first, last: maxi }); // add the left part for processing\n          stack.push({ first: maxi, last: ids.last }); // add the right part for processing\n        }\n      } while (stack.length > 0);\n\n      resPoints = [];\n      len = lst.length;\n      lst.sort(function(a, b) {\n        return a - b;\n      }); // restore index order\n      for (k = 0; k < len; k++) {\n        resPoints.push({ x: points[lst[k]].x, y: points[lst[k]].y }); // add result points to the correct order\n      }\n      result.push({ inner: c.inner, label: c.label, points: resPoints, initialCount: c.points.length });\n    }\n\n    return result;\n  };\n\n  return lib;\n})();\n\nexport function getImageData(img) {\n  var canvas = document.createElement(\"canvas\");\n  canvas.width = img.width;\n  canvas.height = img.height;\n  var ctx = canvas.getContext(\"2d\");\n  ctx.drawImage(img, 0, 0);\n  return ctx.getImageData(0, 0, img.width, img.height);\n}\n\nexport function calcBorder(imageData, width, height, x, y, threshold, simple) {\n  const blurRadius = 5;\n  const simplifyTolerant = 5;\n  const simplifyCount = 50;\n\n  let parentPoints = [];\n  let image = {\n    data: imageData,\n    width: width,\n    height: height,\n    bytes: 4,\n  };\n\n  let mask = MagicWand.floodFill(image, x, y, threshold, null, true);\n  mask = MagicWand.gaussBlurOnlyBorder(mask, blurRadius);\n\n  var cs = MagicWand.traceContours(mask);\n\n  cs = MagicWand.simplifyContours(cs, simplifyTolerant, simplifyCount);\n\n  if (cs.length > 0) {\n    if (simple) {\n      return cs[0].points;\n    }\n    for (var j = 0, icsl = cs[0].points.length; j < icsl; j++) {\n      parentPoints.push([cs[0].points[j].x, cs[0].points[j].y]);\n    }\n    return parentPoints;\n  } else {\n    return false;\n  }\n}\n","import Konva from \"konva\";\n\nexport function reverseCoordinates(r1, r2) {\n  let r1X = r1.x,\n    r1Y = r1.y,\n    r2X = r2.x,\n    r2Y = r2.y,\n    d;\n\n  if (r1X > r2X) {\n    d = Math.abs(r1X - r2X);\n    r1X = r2X;\n    r2X = r1X + d;\n  }\n\n  if (r1Y > r2Y) {\n    d = Math.abs(r1Y - r2Y);\n    r1Y = r2Y;\n    r2Y = r1Y + d;\n  }\n  /**\n   * Return the corrected rect\n   */\n  return { x1: r1X, y1: r1Y, x2: r2X, y2: r2Y };\n}\n\n/**\n * Transform RGBA Canvas to Binary Matrix\n * @param {object} canvas\n * @param {object} shape\n */\nexport function canvasToBinaryMatrix(canvas, shape) {\n  let currentLayer = canvas.stageRef.getLayers().filter(layer => layer.attrs.id === shape.id);\n\n  let canv = currentLayer[0].canvas.context;\n\n  let initialArray = canv.getImageData(0, 0, canv.canvas.width, canv.canvas.height);\n\n  let binaryMatrix = [];\n\n  for (\n    let i = 0;\n    i < canvas.stageRef.bufferCanvas.context.canvas.width * canvas.stageRef.bufferCanvas.context.canvas.height * 4;\n    i += 4\n  ) {\n    let alpha = initialArray.data[i + 0];\n    let r = initialArray.data[i + 1];\n    let g = initialArray.data[i + 2];\n    let b = initialArray.data[i + 3];\n\n    if (alpha > 0 || r > 0 || g > 0 || b > 0) {\n      binaryMatrix.push(1);\n    } else {\n      binaryMatrix.push(0);\n    }\n  }\n\n  return binaryMatrix;\n}\n\n/**\n * Apply transform to rect and calc bounding box around it\n * @param {{ x: number, y: number, width: number, height: number }} rect\n * @param {Konva.Transform} transform\n */\nexport function getBoundingBoxAfterTransform(rect, transform) {\n  const points = [\n    { x: rect.x, y: rect.y },\n    { x: rect.x + rect.width, y: rect.y },\n    { x: rect.x + rect.width, y: rect.y + rect.height },\n    { x: rect.x, y: rect.y + rect.height },\n  ];\n  let minX, minY, maxX, maxY;\n  points.forEach(point => {\n    var transformed = transform.point(point);\n    if (minX === undefined) {\n      minX = maxX = transformed.x;\n      minY = maxY = transformed.y;\n    }\n    minX = Math.min(minX, transformed.x);\n    minY = Math.min(minY, transformed.y);\n    maxX = Math.max(maxX, transformed.x);\n    maxY = Math.max(maxY, transformed.y);\n  });\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY,\n  };\n}\n\n/**\n * Apply changes to rect (shift to (x, y) and rotate) and calc bounding box around it\n * @param {{ x: number, y: number, width: number, height: number }} rect\n * @param {{ x: number, y: number }} shiftPoint\n * @param {number} degRotation\n */\nexport function getBoundingBoxAfterChanges(rect, shiftPoint, degRotation = 0) {\n  const transform = new Konva.Transform();\n  transform.translate(shiftPoint.x, shiftPoint.y);\n  transform.rotate((degRotation * Math.PI) / 180);\n  return getBoundingBoxAfterTransform(rect, transform);\n}\n\n/**\n * Crop rect to fit into canvas with given dimensions\n * @param {{ x: number, y: number, width: number, height: number }} rect\n * @param {number} stageWidth\n * @param {number} stageHeight\n */\nexport function fixRectToFit(rect, stageWidth, stageHeight) {\n  let { x, y, width, height } = rect;\n\n  if (x < 0) {\n    width += x;\n    x = 0;\n  } else if (x + width > stageWidth) {\n    width = stageWidth - x;\n  }\n\n  if (y < 0) {\n    height += y;\n    y = 0;\n  } else if (y + height > stageHeight) {\n    height = stageHeight - y;\n  }\n\n  return { x, y, width, height };\n}\n","/**\n * Run Length Encode\n * @param {array} arr\n */\nfunction RLEencode(arr) {\n  var encoding = [];\n  var prev, count, i;\n\n  for (count = 1, prev = arr[0], i = 1; i < arr.length; i++) {\n    if (arr[i] !== prev) {\n      encoding.push(count, prev);\n      count = 1;\n      prev = arr[i];\n    } else count++;\n  }\n\n  encoding.push(count, prev);\n\n  return encoding;\n}\n\n/**\n * Run Length Decode\n * @param {array} arr\n */\nfunction RLEdecode(encoded) {\n  let uncompressed = new Uint8ClampedArray();\n  let test = [];\n\n  encoded.forEach((el, ind) => {\n    if (ind % 2 === 0) {\n      uncompressed.push(Array.from(new Array(1 + el).join(encoded[ind + 1])));\n    }\n  });\n\n  uncompressed.flat(2).forEach(el => test.push(parseInt(el)));\n  return test;\n}\n\nexport { RLEencode, RLEdecode };\n","function checkISO(value) {\n  let regExpISO = /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/;\n\n  return regExpISO.test(value);\n}\n\n/**\n * Helper function to convert ms -> HHMMSS\n * @param {number} ms\n * @returns {string}\n */\nexport function msToHMS(ms) {\n  // 1- Convert to seconds:\n  var seconds = ms / 1000;\n  // 2- Extract hours:\n  var hours = parseInt(seconds / 3600); // 3,600 seconds in 1 hour\n  seconds = seconds % 3600; // seconds remaining after extracting hours\n  // 3- Extract minutes:\n  var minutes = parseInt(seconds / 60); // 60 seconds in 1 minute\n  // 4- Keep only seconds not extracted to minutes:\n  seconds = Math.floor(seconds); // % 60;\n\n  return hours + \":\" + minutes + \":\" + seconds;\n}\n\n/**\n * Helper function to pretty date\n */\nexport function prettyDate(time) {\n  if (typeof time !== \"string\" && !time instanceof Date && !checkISO(time)) return;\n\n  let date = new Date(time),\n    diff = (new Date().getTime() - date.getTime()) / 1000,\n    day_diff = Math.floor(diff / 86400);\n\n  if (isNaN(day_diff) || day_diff < 0) return;\n\n  return (\n    (day_diff === 0 &&\n      ((diff < 60 && \"just now\") ||\n        (diff < 120 && \"1 minute ago\") ||\n        (diff < 3600 && Math.floor(diff / 60) + \" minutes ago\") ||\n        (diff < 7200 && \"1 hour ago\") ||\n        (diff < 86400 && Math.floor(diff / 3600) + \" hours ago\"))) ||\n    (day_diff === 1 && \"Yesterday\") ||\n    (day_diff < 7 && day_diff + \" days ago\") ||\n    (day_diff < 31 && Math.ceil(day_diff / 7) + \" weeks ago\") ||\n    day_diff + \" days ago\"\n  );\n}\n\n/**\n * Helper function to get current timezone\n */\nexport function currentISODate() {\n  let tzOffest = new Date().getTimezoneOffset() * 60000;\n  let localISOTime = new Date(Date.now() - tzOffest).toISOString().slice(0, -1);\n\n  return localISOTime;\n}\n","import Konva from \"konva\";\nimport { encode, decode } from \"@thi.ng/rle-pack\";\n\nimport * as Colors from \"./colors\";\n\n// given the imageData object returns the DOM Image with loaded data\nfunction imageData2Image(imagedata) {\n  var canvas = document.createElement(\"canvas\");\n  var ctx = canvas.getContext(\"2d\");\n  canvas.width = imagedata.width;\n  canvas.height = imagedata.height;\n  ctx.putImageData(imagedata, 0, 0);\n\n  var image = new Image();\n  image.src = canvas.toDataURL();\n  return image;\n}\n\n// given the RLE array returns the DOM Image element with loaded image\nfunction RLE2Region(rle, image) {\n  const nw = image.naturalWidth,\n    nh = image.naturalHeight;\n\n  var canvas = document.createElement(\"canvas\");\n  var ctx = canvas.getContext(\"2d\");\n  canvas.width = nw;\n  canvas.height = nh;\n\n  const newdata = ctx.createImageData(nw, nh);\n  newdata.data.set(decode(rle));\n\n  ctx.putImageData(newdata, 0, 0);\n\n  var new_image = new Image();\n  new_image.src = canvas.toDataURL();\n  return new_image;\n}\n\n// given the brush region return the RLE encoded array\nfunction Region2RLE(region, image, lineOpts) {\n  const nw = image.naturalWidth,\n    nh = image.naturalHeight;\n\n  const layer = Konva.stages[0].findOne(`#${region.cleanId}`);\n  if (!layer) {\n    console.error(`Layer #${region.id} was not found on Stage`);\n    return [];\n  }\n  // hide labels on regions and show them later\n  layer.find(\".region-label\").hide();\n  Konva.stages[0].drawScene();\n  // resize to original size\n  const canvas = layer.toCanvas({ pixelRatio: nw / image.stageWidth });\n  const ctx = canvas.getContext(\"2d\");\n\n  // get the resulting raw data and encode into RLE format\n  const data = ctx.getImageData(0, 0, nw, nh);\n  layer.find(\".region-label\").show();\n  Konva.stages[0].drawScene();\n  const rle = encode(data.data, data.data.length);\n\n  return rle;\n}\n\nfunction brushSizeCircle(size) {\n  var canvas = document.createElement(\"canvas\");\n  var ctx = canvas.getContext(\"2d\");\n  canvas.width = size * 4 + 8;\n  canvas.height = size * 4 + 8;\n\n  ctx.beginPath();\n  ctx.arc(size / 2 + 4, size / 2 + 4, size / 2, 0, 2 * Math.PI, false);\n\n  ctx.lineWidth = 2;\n  ctx.strokeStyle = \"white\";\n  ctx.stroke();\n\n  return canvas.toDataURL();\n}\n\nfunction encodeSVG(data) {\n  var externalQuotesValue = \"single\";\n\n  function getQuotes() {\n    const double = `\"`;\n    const single = `'`;\n\n    return {\n      level1: externalQuotesValue === \"double\" ? double : single,\n      level2: externalQuotesValue === \"double\" ? single : double,\n    };\n  }\n\n  var quotes = getQuotes();\n\n  function addNameSpace(data) {\n    if (data.indexOf(\"http://www.w3.org/2000/svg\") < 0) {\n      data = data.replace(/<svg/g, `<svg xmlns=${quotes.level2}http://www.w3.org/2000/svg${quotes.level2}`);\n    }\n\n    return data;\n  }\n\n  data = addNameSpace(data);\n  var symbols = /[\\r\\n%#()<>?[\\\\\\]^`{|}]/g;\n\n  // Use single quotes instead of double to avoid encoding.\n  if (externalQuotesValue === \"double\") {\n    data = data.replace(/\"/g, \"'\");\n  } else {\n    data = data.replace(/'/g, '\"');\n  }\n\n  data = data.replace(/>\\s{1,}</g, \"><\");\n  data = data.replace(/\\s{2,}/g, \" \");\n\n  // var resultCss = `background-image: url();`;\n\n  var escaped = data.replace(symbols, encodeURIComponent);\n  return `${quotes.level1}data:image/svg+xml,${escaped}${quotes.level1}`;\n}\n\nconst labelToSVG = (function() {\n  const SVG_CACHE = {};\n\n  function calculateTextWidth(text) {\n    const svg = document.createElement(\"svg\");\n    const svgText = document.createElement(\"text\");\n    svgText.style = \"font-size: 9.5px; font-weight: bold; color: red; fill: red; font-family: Monaco\";\n    svgText.innerHTML = text;\n\n    svg.appendChild(svgText);\n    document.body.appendChild(svg);\n\n    const textLen = svg.getBoundingClientRect().width;\n    svg.remove();\n\n    return textLen;\n  }\n\n  return function({ label, score }) {\n    let cacheKey = label;\n    if (score !== null) cacheKey = cacheKey + score;\n\n    if (cacheKey in SVG_CACHE) return SVG_CACHE[cacheKey];\n\n    let width = 0;\n    const items = [];\n\n    if (score !== null && score !== undefined) {\n      const fillColor = Colors.getScaleGradient(score);\n      items.push(`<rect x=\"0\" y=\"0\" rx=\"2\" ry=\"2\" width=\"24\" height=\"14\" style=\"fill:${fillColor};opacity:0.5\" />`);\n      items.push(`<text x=\"3\" y=\"10\" style=\"font-size: 8px; font-family: Monaco\">${score.toFixed(2)}</text>`);\n      width = width + 26;\n    }\n\n    if (label) {\n      items.push(\n        `<text x=\"${width}\" y=\"11\" style=\"font-size: 9.5px; font-weight: bold; font-family: Monaco\">${label}</text>`,\n      );\n      width = width + calculateTextWidth(label) + 2;\n    }\n\n    const res = `<svg height=\"16\" width=\"${width}\">${items.join(\"\")}</svg>`;\n    const enc = encodeSVG(res);\n\n    SVG_CACHE[cacheKey] = enc;\n    return enc;\n  };\n})();\n\nexport default {\n  imageData2Image,\n  Region2RLE,\n  RLE2Region,\n  brushSizeCircle,\n  labelToSVG,\n};\n","import insertAfter from \"insert-after\";\nimport * as Checkers from \"./utilities\";\nimport Canvas from \"./canvas\";\n\nfunction toggleLabelsAndScores(show) {\n  const els = document.getElementsByClassName(\"htx-highlight\");\n  Array.from(els).forEach(el => {\n    let foundCls = null;\n    Array.from(el.classList).forEach(cls => {\n      if (cls.indexOf(\"htx-label-\") !== -1) foundCls = cls;\n    });\n\n    if (foundCls !== null) {\n      if (show) el.classList.remove(\"htx-no-label\");\n      else el.classList.add(\"htx-no-label\");\n    }\n  });\n}\n\nconst labelWithCSS = (function() {\n  const cache = {};\n\n  return function(node, { labels, score }) {\n    const labelsStr = labels ? labels.join(\",\") : \"\";\n    const clsName = Checkers.hashCode(labelsStr + score);\n\n    let cssCls = \"htx-label-\" + clsName;\n    cssCls = cssCls.toLowerCase();\n\n    if (cssCls in cache) return cache[cssCls];\n\n    node.setAttribute(\"data-labels\", labelsStr);\n\n    const resSVG = Canvas.labelToSVG({ label: labelsStr, score: score });\n    const svgURL = `url(${resSVG})`;\n\n    createClass(`.${cssCls}:after`, `content:${svgURL}`);\n\n    cache[clsName] = true;\n\n    return cssCls;\n  };\n})();\n\n// work directly with the html tree\nfunction createClass(name, rules) {\n  var style = document.createElement(\"style\");\n  style.type = \"text/css\";\n  document.getElementsByTagName(\"head\")[0].appendChild(style);\n  if (!(style.sheet || {}).insertRule) (style.styleSheet || style.sheet).addRule(name, rules);\n  else style.sheet.insertRule(name + \"{\" + rules + \"}\", 0);\n}\n\nfunction documentForward(node) {\n  if (node.firstChild) return node.firstChild;\n\n  while (!node.nextSibling) {\n    node = node.parentNode;\n    if (!node) return null;\n  }\n\n  return node.nextSibling;\n}\n\nfunction isTextNode(node) {\n  const TEXT_NODE = 3;\n  return node.nodeType === TEXT_NODE;\n}\n\nfunction firstLeaf(node) {\n  while (node.hasChildNodes()) node = node.firstChild;\n  return node;\n}\n\n/* Find the last leaf node. */\nfunction lastLeaf(node) {\n  while (node.hasChildNodes()) node = node.lastChild;\n\n  return node;\n}\n\nfunction getNextNode(node) {\n  if (node.firstChild) return node.firstChild;\n  while (node) {\n    if (node.nextSibling) return node.nextSibling;\n    node = node.parentNode;\n  }\n}\n\nfunction getNodesInRange(range) {\n  var start = range.startContainer;\n  var end = range.endContainer;\n  var commonAncestor = range.commonAncestorContainer;\n  var nodes = [];\n  var node;\n\n  // walk parent nodes from start to common ancestor\n  for (node = start.parentNode; node; node = node.parentNode) {\n    nodes.push(node);\n    if (node === commonAncestor) break;\n  }\n  nodes.reverse();\n\n  // walk children and siblings from start until end is found\n  for (node = start; node; node = getNextNode(node)) {\n    nodes.push(node);\n    if (node === end) break;\n  }\n\n  return nodes;\n}\n\nfunction documentReverse(node) {\n  if (node.lastChild) return node.lastChild;\n\n  while (!node.previousSibling) {\n    node = node.parentNode;\n    if (!node) return null;\n  }\n\n  return node.previousSibling;\n}\n\nfunction splitText(node, offset) {\n  let tail = node.cloneNode(false);\n  tail.deleteData(0, offset);\n  node.deleteData(offset, node.length - offset);\n  return insertAfter(tail, node);\n}\n\nfunction normalizeBoundaries(range) {\n  let { startContainer, startOffset, endContainer, endOffset } = range;\n  let node, next, last, start, end;\n\n  // Move the start container to the last leaf before any sibling boundary,\n  // guaranteeing that any children of the container are within the range.\n  if (startContainer.childNodes.length && startOffset > 0) {\n    startContainer = lastLeaf(startContainer.childNodes[startOffset - 1]);\n    startOffset = startContainer.length || startContainer.childNodes.length;\n  }\n\n  // Move the end container to the first leaf after any sibling boundary,\n  // guaranteeing that any children of the container are within the range.\n  if (endOffset < endContainer.childNodes.length) {\n    endContainer = firstLeaf(endContainer.childNodes[endOffset]);\n    endOffset = 0;\n  }\n\n  // Any TextNode in the traversal is valid unless excluded by the offset.\n  function isTextNodeInRange(node) {\n    if (!isTextNode(node)) return false;\n    if (node === startContainer && startOffset > 0) return false;\n    if (node === endContainer && endOffset === 0) return false;\n    return true;\n  }\n\n  // Find the start TextNode.\n  // The guarantees above provide that a document order traversal visits every\n  // Node in the Range before visiting the last leaf of the end container.\n  node = startContainer;\n  next = node => (node === last ? null : documentForward(node));\n  last = lastLeaf(endContainer);\n  while (node && !isTextNodeInRange(node)) node = next(node);\n  start = node;\n\n  // Find the end TextNode.\n  // Similarly, a reverse document order traversal visits every Node in the\n  // Range before visiting the first leaf of the start container.\n  node = endContainer;\n  next = node => (node === last ? null : documentReverse(node));\n  last = firstLeaf(startContainer);\n  while (node && !isTextNodeInRange(node)) node = next(node);\n  end = node;\n\n  range.setStart(start, 0);\n  range.setEnd(end, end.length);\n}\n\nfunction highlightRange(normedRange, cssClass, cssStyle) {\n  if (typeof cssClass === \"undefined\" || cssClass === null) {\n    cssClass = \"htx-annotation\";\n  }\n\n  const allNodes = getNodesInRange(normedRange._range);\n  const textNodes = allNodes.filter(n => isTextNode(n));\n\n  var white = /^\\s*$/;\n\n  var nodes = textNodes; // normedRange.textNodes(),\n\n  let start = 0;\n  if (normedRange._range.startOffset === nodes[start].length) start++;\n\n  let nlen = nodes.length;\n  if (nlen > 1 && nodes[nodes.length - 1].length !== normedRange._range.endOffset) nlen = nlen - 1;\n\n  const results = [];\n  for (var i = start, len = nlen; i < len; i++) {\n    var node = nodes[i];\n    if (!white.test(node.nodeValue)) {\n      var hl = window.document.createElement(\"span\");\n      hl.style.backgroundColor = cssStyle.backgroundColor;\n\n      hl.className = cssClass;\n      node.parentNode.replaceChild(hl, node);\n      hl.appendChild(node);\n\n      results.push(hl);\n    }\n  }\n\n  return results;\n}\n\nfunction splitBoundaries(range) {\n  let { startContainer, startOffset, endContainer, endOffset } = range;\n\n  if (isTextNode(endContainer)) {\n    if (endOffset > 0 && endOffset < endContainer.length) {\n      endContainer = splitText(endContainer, endOffset);\n      range.setEnd(endContainer, 0);\n    }\n  }\n\n  if (isTextNode(startContainer)) {\n    if (startOffset > 0 && startOffset < startContainer.length) {\n      if (startContainer === endContainer) {\n        startContainer = splitText(startContainer, startOffset);\n        range.setEnd(startContainer, endOffset - startOffset);\n      } else {\n        startContainer = splitText(startContainer, startOffset);\n      }\n      range.setStart(startContainer, 0);\n    }\n  }\n}\n\nconst toGlobalOffset = (container, element, len) => {\n  let pos = 0;\n  const count = node => {\n    if (node === element) {\n      return pos;\n    }\n    if (node.nodeName === \"#text\") pos = pos + node.length;\n    if (node.nodeName === \"BR\") pos = pos + 1;\n\n    for (var i = 0; i <= node.childNodes.length; i++) {\n      const n = node.childNodes[i];\n      if (n) {\n        const res = count(n);\n        if (res !== undefined) return res;\n      }\n    }\n  };\n\n  return len + count(container);\n};\n\nconst mainOffsets = element => {\n  var range = window\n    .getSelection()\n    .getRangeAt(0)\n    .cloneRange();\n  let start = range.startOffset;\n  let end = range.endOffset;\n\n  let passedStart = false;\n  let passedEnd = false;\n\n  const traverse = node => {\n    if (node.nodeName === \"#text\") {\n      if (node !== range.startContainer && !passedStart) start = start + node.length;\n      if (node === range.startContainer) passedStart = true;\n\n      if (node !== range.endContainer && !passedEnd) end = end + node.length;\n      if (node === range.endContainer) passedEnd = true;\n    }\n\n    if (node.nodeName === \"BR\") {\n      if (!passedStart) start = start + 1;\n\n      if (!passedEnd) end = end + 1;\n    }\n\n    if (node.childNodes.length > 0) {\n      for (var i = 0; i <= node.childNodes.length; i++) {\n        const n = node.childNodes[i];\n\n        if (n) {\n          const res = traverse(n);\n          if (res) return res;\n        }\n      }\n    }\n  };\n\n  traverse(element);\n\n  return { start: start, end: end };\n};\n\nconst findIdxContainer = (el, globidx) => {\n  let len = globidx;\n\n  const traverse = node => {\n    if (!node) return;\n\n    if (node.nodeName === \"#text\") {\n      if (len - node.length <= 0) return node;\n      else len = len - node.length;\n    } else if (node.nodeName === \"BR\") {\n      len = len - 1;\n    } else if (node.childNodes.length > 0) {\n      for (var i = 0; i <= node.childNodes.length; i++) {\n        const n = node.childNodes[i];\n\n        if (n) {\n          const res = traverse(n);\n          if (res) return res;\n        }\n      }\n    }\n  };\n\n  const node = traverse(el);\n\n  return { node, len };\n};\n\nfunction removeSpans(spans) {\n  var norm = [];\n\n  if (spans) {\n    spans.forEach(span => {\n      while (span.firstChild) span.parentNode.insertBefore(span.firstChild, span);\n\n      norm.push(span.parentNode);\n      span.parentNode.removeChild(span);\n    });\n  }\n\n  norm.forEach(n => n.normalize());\n}\n\nexport {\n  toggleLabelsAndScores,\n  labelWithCSS,\n  removeSpans,\n  mainOffsets,\n  findIdxContainer,\n  toGlobalOffset,\n  highlightRange,\n  splitBoundaries,\n  normalizeBoundaries,\n  createClass,\n};\n","/**\n * Returns a function, that, as long as it continues to be invoked,\n * will not be triggered. The function will be called after it\n * stops being called for N milliseconds. If `immediate` is passed,\n * trigger the function on the leading edge, instead of the trailing.\n *\n * @param {function} func\n * @param {number} wait\n * @param {boolean} immediate\n */\nexport function debounce(func, wait, immediate) {\n  let timeout;\n\n  return function() {\n    const context = this,\n      args = arguments;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n","import * as Checkers from \"./utilities\";\nimport * as Colors from \"./colors\";\nimport * as Floodfill from \"./floodfill\";\nimport * as Image from \"./image\";\nimport * as RLe from \"./rle\";\nimport * as UDate from \"./date\";\nimport * as HTML from \"./html\";\nimport { debounce } from \"./debounce\";\nimport { guidGenerator } from \"./unique\";\nimport { styleToProp } from \"./styles\";\n\nexport default { Image, HTML, Checkers, Colors, UDate, guidGenerator, debounce, styleToProp, RLe, Floodfill };\n","/**\n * Parses a string of inline styles into a JavaScript object with casing for React\n *\n * @see TemplateEngine via MIT Licensed https://github.com/NervJS/taro/blob/master/packages/taro-components-rn/src/utils/index.ts\n *\n * @param {string} styles\n * @returns {Object}\n */\nexport function styleToProp(styles) {\n  if (!styles) return null;\n  return styles\n    .split(\";\")\n    .filter(style => style.split(\":\")[0] && style.split(\":\")[1])\n    .map(style => [\n      style\n        .split(\":\")[0]\n        .trim()\n        .replace(/-./g, c => c.substr(1).toUpperCase()),\n      style\n        .split(\":\")\n        .slice(1)\n        .join(\":\")\n        .trim(),\n    ])\n    .reduce(\n      (styleObj, style) => ({\n        ...styleObj,\n        [style[0]]: style[1],\n      }),\n      {},\n    );\n}\n","import React, { Component } from \"react\";\nimport { Card, Button, Tooltip, Badge, List, Popconfirm } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { StarOutlined, DeleteOutlined, ForwardOutlined, WindowsOutlined, PlusOutlined } from \"@ant-design/icons\";\n\nimport Utils from \"../../utils\";\nimport styles from \"./Completions.module.scss\";\n\nexport const DraftPanel = observer(({ item }) => {\n  if (!item.draftSaved && !item.versions.draft) return null;\n  const saved = item.draft && item.draftSaved ? ` saved ${Utils.UDate.prettyDate(item.draftSaved)}` : \"\";\n  if (!item.selected) {\n    if (!item.draft) return null;\n    return <div>draft{saved}</div>;\n  }\n  if (!item.versions.result || !item.versions.result.length) {\n    return <div>{saved ? `draft${saved}` : \"not submitted draft\"}</div>;\n  }\n  return (\n    <div>\n      <Tooltip placement=\"topLeft\" title={item.draft ? \"switch to submitted result\" : \"switch to current draft\"}>\n        <Button type=\"link\" onClick={item.toggleDraft} className={styles.draftbtn}>\n          {item.draft ? \"draft\" : \"submitted\"}\n        </Button>\n      </Tooltip>\n      {saved}\n    </div>\n  );\n});\n\nconst Completion = observer(({ item, store }) => {\n  let removeHoney = () => (\n    <Tooltip placement=\"topLeft\" title=\"Unset this result as a ground truth\">\n      <Button\n        size=\"small\"\n        type=\"primary\"\n        onClick={ev => {\n          ev.preventDefault();\n          item.setGroundTruth(false);\n        }}\n      >\n        <StarOutlined />\n      </Button>\n    </Tooltip>\n  );\n\n  let setHoney = () => (\n    <Tooltip placement=\"topLeft\" title=\"Set this result as a ground truth\">\n      <Button\n        size=\"small\"\n        type=\"primary\"\n        ghost={true}\n        onClick={ev => {\n          ev.preventDefault();\n          item.setGroundTruth(true);\n        }}\n      >\n        <StarOutlined />\n      </Button>\n    </Tooltip>\n  );\n\n  /**\n   * Default badge for saved completions\n   */\n  let badge = <Badge status=\"default\" />;\n\n  /**\n   *\n   */\n  let completionID;\n\n  /**\n   * Title of card\n   */\n  if (item.userGenerate && !item.sentUserGenerate) {\n    completionID = <span className={styles.title}>New completion</span>;\n  } else {\n    if (item.pk) {\n      completionID = <span className={styles.title}>ID {item.pk}</span>;\n    } else if (item.id) {\n      completionID = <span className={styles.title}>ID {item.id}</span>;\n    }\n  }\n\n  /**\n   * Badge for processing of user generate completion\n   */\n  if (item.userGenerate) {\n    badge = <Badge status=\"processing\" />;\n  }\n\n  /**\n   * Badge for complete of user generate completion\n   */\n  if (item.userGenerate && item.sentUserGenerate) {\n    badge = <Badge status=\"success\" />;\n  }\n\n  const btnsView = () => {\n    const confirm = () => {\n      // ev.preventDefault();\n      // debugger;\n      item.list.deleteCompletion(item);\n    };\n\n    return (\n      <div className={styles.buttons}>\n        {/* @todo check for honeypot/ground truth interface */}\n        {true && (item.honeypot ? removeHoney() : setHoney())}\n        &nbsp;\n        {store.hasInterface(\"completions:delete\") && (\n          <Tooltip placement=\"topLeft\" title=\"Delete selected completion\">\n            <Popconfirm\n              placement=\"bottomLeft\"\n              title={\"Please confirm you want to delete this completion\"}\n              onConfirm={confirm}\n              okText=\"Delete\"\n              okType=\"danger\"\n              cancelText=\"Cancel\"\n            >\n              <Button size=\"small\" danger style={{ background: \"transparent\" }}>\n                <DeleteOutlined />\n              </Button>\n            </Popconfirm>\n          </Tooltip>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <List.Item\n      key={item.id}\n      className={item.selected ? `${styles.completion} ${styles.completion_selected}` : styles.completion}\n      onClick={ev => {\n        !item.selected && store.completionStore.selectCompletion(item.id);\n      }}\n    >\n      <div className={styles.completioncard}>\n        <div>\n          <div className={styles.title}>\n            {badge}\n            {completionID}\n          </div>\n          Created\n          <i>{item.createdAgo ? ` ${item.createdAgo} ago` : ` ${Utils.UDate.prettyDate(item.createdDate)}`}</i>\n          {item.createdBy ? ` by ${item.createdBy}` : null}\n          <DraftPanel item={item} />\n        </div>\n        {/* platform uses was_cancelled so check both */}\n        {store.hasInterface(\"skip\") && (item.skipped || item.was_cancelled) && (\n          <Tooltip placement=\"topLeft\" title=\"Skipped completion\">\n            <ForwardOutlined className={styles.skipped} />\n          </Tooltip>\n        )}\n        {item.selected && btnsView()}\n      </div>\n    </List.Item>\n  );\n});\n\nclass Completions extends Component {\n  render() {\n    const { store } = this.props;\n\n    let title = (\n      <div className={styles.title + \" \" + styles.titlespace}>\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <h3>Completions</h3>\n        </div>\n\n        <div style={{ marginRight: \"1px\" }}>\n          {store.hasInterface(\"completions:add-new\") && (\n            <Tooltip placement=\"topLeft\" title=\"Create a new completion\">\n              <Button\n                size=\"small\"\n                onClick={ev => {\n                  ev.preventDefault();\n                  const c = store.completionStore.addCompletion({ userGenerate: true });\n                  store.completionStore.selectCompletion(c.id);\n                  // c.list.selectCompletion(c);\n                }}\n              >\n                <PlusOutlined />\n              </Button>\n            </Tooltip>\n          )}\n          {/* @todo fix View All mode */}\n          {/* &nbsp;\n          <Tooltip placement=\"topLeft\" title=\"View all completions\">\n            <Button\n              size=\"small\"\n              type={store.completionStore.viewingAllCompletions ? \"primary\" : \"\"}\n              onClick={ev => {\n                ev.preventDefault();\n                store.completionStore.toggleViewingAllCompletions();\n              }}\n            >\n              <WindowsOutlined />\n            </Button>\n          </Tooltip> */}\n        </div>\n      </div>\n    );\n\n    const content = store.completionStore.completions.map(c => <Completion key={c.id} item={c} store={store} />);\n\n    return (\n      <Card title={title} size=\"small\" bodyStyle={{ padding: \"0\", paddingTop: \"1px\" }}>\n        <List>{store.completionStore.completions ? content : <p>No completions submitted yet</p>}</List>\n      </Card>\n    );\n  }\n}\n\nexport default observer(Completions);\n","import React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nimport styles from \"./Hint.module.scss\";\n\n/**\n * Hint Component\n * @param {object} style\n * @param {ant} children\n */\nexport default class Hint extends Component {\n  render() {\n    let style;\n    let localClass = `${styles.main}`;\n\n    if (this.props.style) style = this.props.style;\n\n    if (this.props.className) {\n      localClass = `${styles.main} ${this.props.className}`;\n    }\n\n    return (\n      <sup data-copy={this.props.copy} className={localClass} style={style}>\n        {this.props.children}\n      </sup>\n    );\n  }\n}\n\nHint.propTypes = {\n  style: PropTypes.object,\n  className: PropTypes.string,\n  copy: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object]),\n};\n","import React from \"react\";\nimport { Button, Tooltip } from \"antd\";\nimport { observer, inject } from \"mobx-react\";\nimport { CheckOutlined, CheckCircleOutlined } from \"@ant-design/icons\";\n\nimport Hint from \"../Hint/Hint\";\nimport { DraftPanel } from \"../Completions/Completions\";\nimport styles from \"./Controls.module.scss\";\n\nconst TOOLTIP_DELAY = 0.8;\n\nexport default inject(\"store\")(\n  observer(({ item, store }) => {\n    /**\n     * Buttons of Controls\n     */\n    let buttons = {\n      skip: \"\",\n      update: \"\",\n      submit: \"\",\n    };\n\n    const { userGenerate, sentUserGenerate, versions } = item;\n    const { enableHotkeys, enableTooltips } = store.settings;\n\n    /**\n     * Task information\n     */\n    let taskInformation;\n    if (store.task) {\n      taskInformation = <h4 className={styles.task + \" ls-task-info\"}>Task ID: {store.task.id}</h4>;\n    }\n\n    /**\n     * Hotkeys\n     */\n    if (enableHotkeys && enableTooltips) {\n      buttons.submit = <Hint> [ Ctrl+Enter ]</Hint>;\n      buttons.skip = <Hint> [ Ctrl+Space ]</Hint>;\n      buttons.update = <Hint> [ Alt+Enter] </Hint>;\n    }\n\n    let skipButton;\n    let updateButton;\n    let submitButton;\n    let draftMenu;\n\n    /**\n     * Check for Predict Menu\n     */\n    if (!store.completionStore.predictSelect || store.explore) {\n      const disabled = store.isSubmitting;\n\n      if (store.hasInterface(\"skip\")) {\n        skipButton = (\n          <Tooltip title=\"Skip task: [ Ctrl+Space ]\" mouseEnterDelay={TOOLTIP_DELAY}>\n            <Button disabled={disabled} type=\"ghost\" onClick={store.skipTask} className={styles.skip + \" ls-skip-btn\"}>\n              Skip {buttons.skip}\n            </Button>\n          </Tooltip>\n        );\n      }\n\n      if ((userGenerate && !sentUserGenerate) || (store.explore && !userGenerate && store.hasInterface(\"submit\"))) {\n        // jklee\n        submitButton = (\n          <Tooltip title=\"Save results: [ Ctrl+Enter ]\" mouseEnterDelay={TOOLTIP_DELAY}>\n            <Button\n              disabled={disabled}\n              type=\"primary\"\n              icon={<CheckOutlined />}\n              onClick={store.submitCompletion}\n              className={styles.submit + \" ls-submit-btn\"}\n            >\n              Submit {buttons.submit}\n            </Button>\n          </Tooltip>\n        );\n      }\n\n      if ((userGenerate && sentUserGenerate) || (!userGenerate && store.hasInterface(\"update\"))) {\n        // jklee\n        updateButton = (\n          <Tooltip title=\"Update this task: [ Alt+Enter ]\" mouseEnterDelay={TOOLTIP_DELAY}>\n            <Button\n              disabled={disabled}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              onClick={store.updateCompletion}\n              className=\"ls-update-btn\"\n            >\n              {sentUserGenerate || versions.result ? \"Update\" : \"Submit\"} {buttons.update}\n            </Button>\n          </Tooltip>\n        );\n      }\n\n      if (!store.hasInterface(\"completions:menu\")) {\n        draftMenu = <DraftPanel item={item} />;\n      }\n    }\n\n    let content = (\n      <div className={styles.block}>\n        <div className={styles.wrapper}>\n          <div className={styles.container}>\n            {skipButton}\n            {updateButton}\n            {submitButton}\n            {draftMenu}\n          </div>\n          {taskInformation}\n        </div>\n      </div>\n    );\n\n    return (item.type === \"completion\" || store.explore) && content;\n  }),\n);\n","import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"antd\";\n\nimport { observer } from \"mobx-react\";\n\nclass DebugComponent extends Component {\n  state = {\n    res: null,\n    config: this.props.store.config,\n    data: this.props.store.task.data,\n    completions: \"\",\n  };\n\n  render() {\n    const self = this;\n    const { store } = this.props;\n    const completion = store.completionStore.selected;\n\n    return (\n      <div>\n        <br />\n        <h2>Debug</h2>\n        <div>\n          <Button\n            onClick={ev => {\n              this.setState({ res: JSON.stringify(store.completionStore.selected.toJSON()) });\n            }}\n          >\n            Serialize whole tree\n          </Button>\n\n          <Button\n            onClick={ev => {\n              this.setState({ res: JSON.stringify(store.completionStore.selected.serializeCompletion()) });\n            }}\n          >\n            Seriealize results tree\n          </Button>\n\n          <Button\n            onClick={ev => {\n              if (self.state.res) completion.deserializeCompletion(JSON.parse(self.state.res));\n            }}\n          >\n            Load Serialized Results\n          </Button>\n\n          <Button\n            onClick={ev => {\n              const c = store.completionStore.addInitialCompletion();\n              store.completionStore.selectCompletion(c.id);\n\n              if (self.state.res) c.deserializeCompletion(JSON.parse(self.state.res));\n              // this.setState.res;\n            }}\n          >\n            Load As New Completion\n          </Button>\n\n          <Button\n            onClick={ev => {\n              this.setState({ res: store.task.data });\n            }}\n          >\n            Task data\n          </Button>\n\n          <Button\n            onClick={ev => {\n              // this.setState.res;\n              const data = JSON.parse(self.state.res);\n              const task = {\n                id: data[\"id\"],\n                project: 2,\n                data: JSON.stringify(data),\n              };\n\n              store.resetState();\n              store.addTask(task);\n              store.addGeneratedCompletion(task);\n              store.markLoading(false);\n\n              if (store.completionStore.selected)\n                store.completionStore.selected.traverseTree(node => node.updateValue && node.updateValue(self));\n            }}\n          >\n            Simulate Loading Task\n          </Button>\n        </div>\n\n        <Form>\n          <div style={{ display: \"flex\" }}>\n            <div style={{ flexBasis: \"50%\" }}>\n              <p>Config</p>\n              <Input.TextArea\n                rows={22}\n                value={this.state.config}\n                className=\"is-search\"\n                onChange={ev => {\n                  this.setState({ config: ev.target.value });\n                }}\n              />\n            </div>\n            <div style={{ flexBasis: \"50%\" }}>\n              <p>Data</p>\n              <Input.TextArea\n                rows={10}\n                value={this.state.data}\n                className=\"is-search\"\n                onChange={ev => {\n                  this.setState({ data: ev.target.value });\n                }}\n              />\n              <p>Completions</p>\n              <Input.TextArea\n                rows={10}\n                value={this.state.completions}\n                className=\"is-search\"\n                onChange={ev => {\n                  this.setState({ completions: ev.target.value });\n                }}\n              />\n            </div>\n          </div>\n          <Button\n            style={{ width: \"100%\" }}\n            onClick={ev => {\n              const { config } = this.state;\n              const completions = JSON.parse(this.state.completions || `[{ \"result\": [] }]`);\n              const data = JSON.parse(this.state.data);\n\n              store.resetState();\n              store.assignConfig(config);\n              store.assignTask({ data });\n              store.initializeStore({ completions, predictions: [] });\n              const cs = store.completionStore;\n              if (cs.completions.length) cs.selectCompletion(cs.completions[0].id);\n            }}\n          >\n            Apply\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default observer(DebugComponent);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Button } from \"antd\";\nimport {\n  UndoOutlined,\n  RedoOutlined,\n  SettingOutlined,\n  RollbackOutlined,\n  FullscreenOutlined,\n  FullscreenExitOutlined,\n} from \"@ant-design/icons\";\n\nimport styles from \"./Panel.module.scss\";\nimport Hint from \"../Hint/Hint\";\n\n/**\n * Panel component with buttons:\n * Undo\n * Redo\n * Reset\n * Show Instructions\n * Settings\n */\nexport default observer(({ store }) => {\n  const { history } = store.completionStore.selected;\n\n  return (\n    <div className={styles.container + \" ls-panel\"}>\n      <div className={`${styles.block} ${styles.block__controls}`}>\n        <Button\n          type=\"ghost\"\n          icon={<UndoOutlined />}\n          onClick={ev => {\n            history && history.canUndo && history.undo();\n            ev.preventDefault();\n          }}\n        >\n          Undo\n          {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ Ctrl+z ]</Hint>}\n        </Button>\n        <Button\n          type=\"ghost\"\n          icon={<RedoOutlined />}\n          onClick={ev => {\n            history && history.canRedo && history.redo();\n            ev.preventDefault();\n          }}\n        >\n          Redo\n        </Button>\n        <Button\n          type=\"ghost\"\n          icon={<RollbackOutlined />}\n          onClick={ev => {\n            history && history.reset();\n          }}\n        >\n          Reset\n        </Button>\n        {store.setPrelabeling && (\n          <Button\n            style={{ display: \"none\" }}\n            onClick={ev => {\n              store.resetPrelabeling();\n            }}\n          >\n            {\" \"}\n            Reset Prelabeling\n          </Button>\n        )}\n        {store.hasInterface(\"debug\") && (\n          <span>\n            {history.undoIdx} / {history.history.length}\n            {history.isFrozen && \" (frozen)\"}\n          </span>\n        )}\n      </div>\n\n      <div className={styles.block}>\n        {store.description && store.showingDescription && (\n          <Button\n            type=\"primary\"\n            onClick={ev => {\n              store.toggleDescription();\n            }}\n          >\n            Hide Instructions\n          </Button>\n        )}\n        {store.description && !store.showingDescription && (\n          <Button\n            type=\"primary\"\n            onClick={ev => {\n              store.toggleDescription();\n            }}\n          >\n            Show Instructions\n          </Button>\n        )}\n\n        <Button\n          type=\"dashed\"\n          icon={<SettingOutlined />}\n          onClick={ev => {\n            store.toggleSettings();\n            ev.preventDefault();\n            return false;\n          }}\n        />\n        <Button\n          type=\"dashed\"\n          className=\"ls-fs\"\n          icon={store.settings.fullscreen ? <FullscreenExitOutlined /> : <FullscreenOutlined />}\n          onClick={ev => {\n            store.settings.toggleFullscreen();\n            ev.preventDefault();\n            return false;\n          }}\n        />\n      </div>\n    </div>\n  );\n});\n","import React, { Component } from \"react\";\nimport { Button, Card, List, Tooltip } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport { CopyOutlined, WindowsOutlined } from \"@ant-design/icons\";\n\nimport Utils from \"../../utils\";\nimport styles from \"../Completions/Completions.module.scss\";\n\nconst Prediction = observer(({ item, store }) => {\n  return (\n    <List.Item\n      key={item.id}\n      className={item.selected ? `${styles.completion} ${styles.completion_selected}` : styles.completion}\n      onClick={ev => {\n        !item.selected && store.completionStore.selectPrediction(item.id);\n      }}\n    >\n      <div className={styles.itembtns}>\n        <div>\n          <div className={styles.title}>{item.createdBy ? `Model (${item.createdBy})` : null}</div>\n          Created\n          <i>{item.createdAgo ? ` ${item.createdAgo} ago` : ` ${Utils.UDate.prettyDate(item.createdDate)}`}</i>\n        </div>\n        <div className={styles.buttons}>\n          {item.selected && (\n            <Tooltip placement=\"topLeft\" title=\"Add a new completion based on this prediction\">\n              <Button\n                size=\"small\"\n                onClick={ev => {\n                  ev.preventDefault();\n\n                  const cs = store.completionStore;\n                  const p = cs.selected;\n                  const c = cs.addCompletionFromPrediction(p);\n\n                  // this is here because otherwise React doesn't re-render the change in the tree\n                  window.setTimeout(function() {\n                    store.completionStore.selectCompletion(c.id);\n                  }, 50);\n                }}\n              >\n                <CopyOutlined />\n              </Button>\n            </Tooltip>\n          )}\n        </div>\n      </div>\n    </List.Item>\n  );\n});\n\nclass Predictions extends Component {\n  render() {\n    const { store } = this.props;\n    const { predictions } = store.completionStore;\n\n    let title = (\n      <div className={styles.title + \" \" + styles.titlespace}>\n        <h3>Predictions</h3>\n        {/* @todo fix View All mode */}\n        {store.completionStore.predictions.length > 0 && false && (\n          <Tooltip placement=\"topLeft\" title=\"View all predictions\">\n            <Button\n              size=\"small\"\n              type={store.completionStore.viewingAllPredictions ? \"primary\" : \"\"}\n              onClick={ev => {\n                ev.preventDefault();\n                store.completionStore.toggleViewingAllPredictions();\n              }}\n            >\n              <WindowsOutlined />\n            </Button>\n          </Tooltip>\n        )}\n      </div>\n    );\n\n    return (\n      <Card title={title} size=\"small\" bodyStyle={{ padding: \"0\" }}>\n        <List>\n          {predictions && predictions.length ? (\n            predictions.map(p => <Prediction key={p.id} item={p} store={store} />)\n          ) : (\n            <List.Item>\n              <div style={{ padding: \"0 12px\" }}>No predictions</div>\n            </List.Item>\n          )}\n        </List>\n      </Card>\n    );\n  }\n}\n\nexport default observer(Predictions);\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nimport styles from \"./Segment.module.scss\";\n\n/**\n * Segment Component\n */\nexport default class Segment extends React.Component {\n  componentDidMount() {\n    const { completion } = this.props;\n    if (completion) completion.updateObjects();\n  }\n\n  render() {\n    let cn = styles.block;\n    if (this.props.className) cn = cn + \" \" + this.props.className;\n\n    return <div className={cn}>{this.props.children}</div>;\n  }\n}\n\nSegment.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","import keymaster from \"keymaster\";\n\nlet _hotkeys_map = {};\nlet _hotkeys_desc = {};\n\nkeymaster.filter = function(event) {\n  if (keymaster.getScope() === \"__none__\") return;\n\n  const tag = (event.target || event.srcElement).tagName;\n  const name = (event.target || event.srcElement).name;\n\n  keymaster.setScope(/^(INPUT|TEXTAREA|SELECT)$/.test(tag) ? name : \"__main__\");\n\n  return true;\n};\n\n/**\n * Add key\n * @param {*} key\n * @param {*} func\n */\nfunction addKey(key, func, desc, scope = \"__main__\") {\n  if (_hotkeys_map[key]) return;\n\n  _hotkeys_map[key] = func;\n  _hotkeys_desc[key] = desc;\n\n  keymaster(key, scope, func);\n}\n\n/**\n * Given a key temp overwrites the function, the overwrite is removed\n * after the returning function is called\n */\nfunction overwriteKey(key, func) {} // eslint-disable-line no-unused-vars\n\nfunction keysDescipritions() {\n  return _hotkeys_desc;\n}\n\nfunction removeKey(key, scope = \"__main__\") {\n  keymaster.unbind(key, scope);\n\n  delete _hotkeys_map[key];\n  delete _hotkeys_desc[key];\n}\n\nfunction getKeys() {\n  return Object.keys(_hotkeys_map);\n}\n\n/**\n * Unbund all hotkeys\n */\nfunction unbindAll() {\n  for (let key of Object.keys(_hotkeys_map)) keymaster.unbind(key);\n\n  _hotkeys_map = {};\n}\n\n/**\n * Set scope of hotkeys\n * @param {*} scope\n */\nfunction setScope(scope) {\n  keymaster.setScope(scope);\n}\n\n/**\n * Create combination\n */\nfunction makeComb() {\n  let prefix = null;\n  let st = \"1234567890qwetasdfgzxcvbyiopjklnm\";\n  let combs = st.split(\"\");\n\n  for (var i = 0; i <= combs.length; i++) {\n    let comb;\n    if (prefix) comb = prefix + \"+\" + combs[i];\n    else comb = combs[i];\n\n    if (!_hotkeys_map.hasOwnProperty(comb)) return comb;\n  }\n\n  return null;\n}\n\nexport default { removeKey, addKey, unbindAll, makeComb, setScope, getKeys, keysDescipritions };\n","import React from \"react\";\nimport { Modal, Checkbox, Tabs, Table } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport Hotkey from \"../../core/Hotkey\";\n\nconst HotkeysDescription = () => {\n  const descr = Hotkey.keysDescipritions();\n  const columns = [\n    { title: \"Key\", dataIndex: \"key\", key: \"key\" },\n    { title: \"Description\", dataIndex: \"descr\", key: \"descr\" },\n  ];\n\n  const data = Object.keys(descr)\n    .filter(k => descr[k])\n    .map(k => new Object({ key: k, descr: descr[k] })); // eslint-disable-line no-new-object\n\n  return <Table columns={columns} dataSource={data} size=\"small\" />;\n};\n\nexport default observer(({ store }) => {\n  return (\n    <Modal\n      visible={store.showingSettings}\n      title=\"Settings\"\n      bodyStyle={{ paddingTop: \"0\" }}\n      footer=\"\"\n      onCancel={store.toggleSettings}\n    >\n      <Tabs defaultActiveKey=\"1\">\n        <Tabs.TabPane tab=\"General\" key=\"1\">\n          <Checkbox\n            checked={store.settings.enableHotkeys}\n            onChange={() => {\n              store.settings.toggleHotkeys();\n            }}\n          >\n            Enable labeling hotkeys\n          </Checkbox>\n          <br />\n          <Checkbox\n            checked={store.settings.enableTooltips}\n            onChange={() => {\n              store.settings.toggleTooltips();\n            }}\n          >\n            Show hotkey tooltips\n          </Checkbox>\n          <br />\n          <Checkbox\n            checked={store.settings.enableLabelTooltips}\n            onChange={() => {\n              store.settings.toggleLabelTooltips();\n            }}\n          >\n            Show labels hotkey tooltips\n          </Checkbox>\n          <br />\n          <Checkbox\n            checked={store.settings.showLabels}\n            onChange={() => {\n              store.settings.toggleShowLabels();\n            }}\n          >\n            Show labels inside the regions\n          </Checkbox>\n          {/* <br/> */}\n          {/* <Checkbox */}\n          {/*   value=\"Show scores inside the regions\" */}\n          {/*   defaultChecked={store.settings.showScore} */}\n          {/*   onChange={() => { */}\n          {/*     store.settings.toggleShowScore(); */}\n          {/*   }} */}\n          {/* > */}\n          {/*   Show scores inside the regions */}\n          {/* </Checkbox> */}\n\n          <br />\n          <Checkbox\n            checked={store.settings.continuousLabeling}\n            onChange={() => {\n              store.settings.toggleContinuousLabeling();\n            }}\n          >\n            Keep label selected after creating a region\n          </Checkbox>\n\n          <br />\n          <Checkbox checked={store.settings.selectAfterCreate} onChange={store.settings.toggleSelectAfterCreate}>\n            Select regions after creating\n          </Checkbox>\n\n          <br />\n          <Checkbox checked={store.settings.showLineNumbers} onChange={store.settings.toggleShowLineNumbers}>\n            Show line numbers for Text\n          </Checkbox>\n\n          {/* <br /> */}\n          {/* <Checkbox */}\n          {/*   value=\"Enable auto-save\" */}\n          {/*   defaultChecked={store.settings.enableAutoSave} */}\n          {/*   onChange={() => { */}\n          {/*     store.settings.toggleAutoSave(); */}\n          {/*   }} */}\n          {/* > */}\n          {/*   Enable auto-save */}\n\n          {/* </Checkbox> */}\n          {/* { store.settings.enableAutoSave && */}\n          {/*   <div style={{ marginLeft: \"1.7em\" }}> */}\n          {/*     Save every <InputNumber size=\"small\" min={5} max={120} /> seconds */}\n          {/*   </div> } */}\n        </Tabs.TabPane>\n        <Tabs.TabPane tab=\"Hotkeys\" key=\"2\">\n          <HotkeysDescription />\n        </Tabs.TabPane>\n        <Tabs.TabPane tab=\"Layout\" key=\"3\">\n          <Checkbox\n            checked={store.settings.bottomSidePanel}\n            onChange={() => {\n              store.settings.toggleBottomSP();\n            }}\n          >\n            Move sidepanel to the bottom\n          </Checkbox>\n\n          <br />\n          <Checkbox checked={store.settings.displayLabelsByDefault} onChange={store.settings.toggleSidepanelModel}>\n            Display Labels by default in Results panel\n          </Checkbox>\n\n          <br />\n          <Checkbox\n            value=\"Show Completions panel\"\n            defaultChecked={store.settings.showCompletionsPanel}\n            onChange={() => {\n              store.settings.toggleCompletionsPanel();\n            }}\n          >\n            Show Completions panel\n          </Checkbox>\n          <br />\n          <Checkbox\n            value=\"Show Predictions panel\"\n            defaultChecked={store.settings.showPredictionsPanel}\n            onChange={() => {\n              store.settings.togglePredictionsPanel();\n            }}\n          >\n            Show Predictions panel\n          </Checkbox>\n\n          {/* <br/> */}\n          {/* <Checkbox */}\n          {/*   value=\"Show image in fullsize\" */}\n          {/*   defaultChecked={store.settings.imageFullSize} */}\n          {/*   onChange={() => { */}\n          {/*     store.settings.toggleImageFS(); */}\n          {/*   }} */}\n          {/* > */}\n          {/*   Show image in fullsize */}\n          {/* </Checkbox> */}\n        </Tabs.TabPane>\n      </Tabs>\n    </Modal>\n  );\n});\n","import React, { Fragment } from \"react\";\nimport { Badge } from \"antd\";\nimport { getType, getRoot } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\nimport {\n  FontColorsOutlined,\n  AudioOutlined,\n  MessageOutlined,\n  BlockOutlined,\n  GatewayOutlined,\n  LineChartOutlined,\n  Loading3QuartersOutlined,\n  EyeOutlined,\n  HighlightOutlined,\n  ApartmentOutlined,\n} from \"@ant-design/icons\";\n\nimport styles from \"./Node.module.scss\";\n\nconst NodeViews = {\n  TextRegionModel: [\"Text\", FontColorsOutlined, node => <span className={null}>{node.text.substring(0, 100)}</span>],\n\n  HyperTextRegionModel: [\"HTML\", FontColorsOutlined, node => <span style={{ color: \"#5a5a5a\" }}>{node.text}</span>],\n\n  AudioRegionModel: [\"Audio\", AudioOutlined, node => `Audio ${node.start.toFixed(2)} - ${node.end.toFixed(2)}`],\n\n  TimeSeriesRegionModel: [\n    \"TimeSeries\",\n    LineChartOutlined,\n    node => `TS ${node.object.formatTime(node.start)} - ${node.object.formatTime(node.end)}`,\n  ],\n\n  TextAreaRegionModel: [\n    \"Input\",\n    MessageOutlined,\n    node => (\n      <Fragment>\n        Input <span style={{ color: \"#5a5a5a\" }}>{node._value}</span>\n      </Fragment>\n    ),\n  ],\n\n  RectRegionModel: [\n    \"Rect\",\n    BlockOutlined,\n    node => {\n      const w = node.width * node.scaleX;\n      const h = node.height * node.scaleY;\n      return `Rectangle ${w.toFixed(2)} x ${h.toFixed(2)}`;\n    },\n  ],\n\n  PolygonRegionModel: [\"Polygon\", GatewayOutlined, () => `Polygon`],\n\n  EllipseRegionModel: [\n    \"Ellipse\",\n    Loading3QuartersOutlined,\n    node => {\n      const radiusX = node.radiusX * node.scaleX;\n      const radiusY = node.radiusY * node.scaleY;\n      const rotation = node.rotation;\n      return `Ellipse ${radiusX.toFixed(2)} x ${radiusY.toFixed(2)}, θ = ${rotation.toFixed(2)}°,\n        center = (${node.x.toFixed(2)}, ${node.y.toFixed(2)})`;\n    },\n  ],\n\n  // @todo add coords\n  KeyPointRegionModel: [\n    \"KeyPoint\",\n    EyeOutlined,\n    node => `KeyPoint ${node.relativeX.toFixed(2)}, ${node.relativeY.toFixed(2)}`,\n  ],\n\n  BrushRegionModel: [\"Brush\", HighlightOutlined, () => `Brush`],\n\n  ChoicesModel: [\"Classification\", ApartmentOutlined, () => `Classification`],\n\n  TextAreaModel: [\"Input\", MessageOutlined, () => `Input`],\n};\n\nconst Node = observer(({ className, node }) => {\n  const name = getType(node).name;\n  if (!(name in NodeViews)) console.error(`No ${name} in NodeView`);\n\n  let [, Icon, getContent] = NodeViews[name];\n\n  if (node.labelsState) {\n    const aliases = node.labelsState.selectedAliases;\n    if (aliases.length)\n      Icon = function() {\n        return <span className={styles.alias}>{aliases.join(\",\")}</span>;\n      };\n  }\n\n  return (\n    <span className={[styles.node, className].filter(Boolean).join(\" \")}>\n      <Icon />\n      {getContent(node)}\n    </span>\n  );\n});\n\nconst NodeMinimal = observer(({ node }) => {\n  const { sortedRegions: regions } = getRoot(node).completionStore.selected.regionStore;\n  const index = regions.indexOf(node);\n  const name = getType(node).name;\n  if (!(name in NodeViews)) return null;\n\n  const oneColor = node.getOneColor();\n  let badgeStyle = {};\n\n  if (oneColor) {\n    badgeStyle = {\n      backgroundColor: oneColor,\n    };\n  } else {\n    badgeStyle = {\n      backgroundColor: \"#fff\",\n      color: \"#999\",\n      boxShadow: \"0 0 0 1px #d9d9d9 inset\",\n    };\n  }\n\n  const [text, Icon] = NodeViews[name];\n  return (\n    <span className={styles.minimal}>\n      {index >= 0 && <Badge count={index + 1} style={badgeStyle} />}\n      <Icon />\n      {text}\n    </span>\n  );\n});\n\nexport { Node, NodeMinimal };\n","import React from \"react\";\nimport styles from \"./SimpleBadge.module.scss\";\n\nexport const SimpleBadge = ({ number, className, ...props }) => (\n  <div className={[styles.badge, className].filter(Boolean).join(\" \")} {...props}>\n    {number}\n  </div>\n);\n","import React from \"react\";\nimport { List, Divider, Badge, Menu, Dropdown, Tree, Tag, Button } from \"antd\";\nimport { getRoot, isAlive } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\n\nimport {\n  DownOutlined,\n  SortAscendingOutlined,\n  CalendarOutlined,\n  ThunderboltOutlined,\n  EyeInvisibleOutlined,\n  EyeOutlined,\n} from \"@ant-design/icons\";\n\nimport Utils from \"../../utils\";\nimport \"./Entities.scss\";\nimport styles from \"./Entities.module.scss\";\nimport globalStyles from \"../../styles/global.module.scss\";\nimport { Node } from \"../Node/Node\";\nimport { SimpleBadge } from \"../SimpleBadge/SimpleBadge\";\n\nconst RegionItem = observer(({ item, idx, flat }) => {\n  if (!isAlive(item)) return null;\n  const c = getRoot(item).completionStore.selected;\n  const classnames = [\n    styles.lstitem,\n    flat && styles.flat,\n    item.hidden === true && styles.hidden,\n    item.selected && styles.selected,\n  ].filter(Boolean);\n\n  const oneColor = item.getOneColor();\n  let badgeStyle = {};\n\n  if (oneColor) {\n    badgeStyle = {\n      backgroundColor: oneColor,\n    };\n  } else {\n    badgeStyle = {\n      backgroundColor: \"#fff\",\n      color: \"#999\",\n      boxShadow: \"0 0 0 1px #d9d9d9 inset\",\n    };\n  }\n\n  return (\n    <List.Item\n      key={item.id}\n      className={classnames.join(\" \")}\n      onClick={() => {\n        c.selectArea(item);\n      }}\n      onMouseOver={() => {\n        item.setHighlight(true);\n      }}\n      onMouseOut={() => {\n        item.setHighlight(false);\n      }}\n    >\n      <SimpleBadge number={idx + 1} style={badgeStyle} />\n      <Node node={item} className={styles.node} />\n\n      {!item.editable && <Badge count={\"ro\"} style={{ backgroundColor: \"#ccc\" }} />}\n\n      {item.hideable && (\n        <Button\n          size=\"small\"\n          type=\"text\"\n          icon={item.hidden ? <EyeInvisibleOutlined /> : <EyeOutlined />}\n          onClick={item.toggleHidden}\n          className={item.hidden ? styles.hidden : styles.visible}\n        />\n      )}\n\n      {item.score && (\n        <span\n          className={styles.confbadge}\n          style={{\n            color: Utils.Colors.getScaleGradient(item.score),\n          }}\n        >\n          {item.score.toFixed(2)}\n        </span>\n      )}\n    </List.Item>\n  );\n});\n\nconst LabelItem = observer(({ item, idx }) => {\n  const bg = item.background;\n  const labelStyle = {\n    backgroundColor: bg,\n    color: item.selectedcolor,\n    cursor: \"pointer\",\n    margin: \"5px\",\n  };\n\n  return (\n    <Tag style={labelStyle} size={item.size}>\n      {item._value}\n    </Tag>\n  );\n});\n\nconst GroupMenu = ({ store, regionStore }) => {\n  return (\n    <Menu selectedKeys={[regionStore.view]}>\n      <Menu.Item key=\"regions\">\n        <div\n          onClick={ev => {\n            regionStore.setView(\"regions\");\n            ev.preventDefault();\n            return false;\n          }}\n          style={{ width: \"135px\", display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <div>Regions</div>\n        </div>\n      </Menu.Item>\n      <Menu.Item key=\"labels\">\n        <div\n          onClick={ev => {\n            regionStore.setView(\"labels\");\n            ev.preventDefault();\n            return false;\n          }}\n          style={{ width: \"135px\", display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <div>Labels</div>\n        </div>\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nconst SortMenu = observer(({ regionStore }) => {\n  return (\n    <Menu selectedKeys={[regionStore.sort]}>\n      <Menu.Item key=\"date\">\n        <div\n          onClick={ev => {\n            regionStore.setSort(\"date\");\n            ev.preventDefault();\n            return false;\n          }}\n          style={{ width: \"135px\", display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <span>\n            <CalendarOutlined /> Date\n          </span>\n          <span>{regionStore.sort === \"date\" && (regionStore.sortOrder === \"asc\" ? \"↓\" : \"↑\")}</span>\n        </div>\n      </Menu.Item>\n      <Menu.Item key=\"score\">\n        <div\n          onClick={ev => {\n            regionStore.setSort(\"score\");\n            ev.preventDefault();\n            return false;\n          }}\n          style={{ width: \"135px\", display: \"flex\", justifyContent: \"space-between\" }}\n        >\n          <span>\n            <ThunderboltOutlined /> Score\n          </span>\n          <span>{regionStore.sort === \"score\" && (regionStore.sortOrder === \"asc\" ? \"↓\" : \"↑\")}</span>\n        </div>\n      </Menu.Item>\n    </Menu>\n  );\n});\n\nconst LabelsList = observer(({ regionStore }) => {\n  const treeData = regionStore.asLabelsTree((item, idx, isLabel) => {\n    return {\n      key: item.id,\n      title: isLabel ? <LabelItem item={item} idx={idx} /> : <RegionItem item={item} idx={idx} />,\n    };\n  });\n\n  return (\n    <Tree\n      className={styles.treelabels}\n      style={{ border: \"1px solid #d9d9d9\", borderRadius: \"2px\" }}\n      treeData={treeData}\n      showIcon={false}\n      blockNode={true}\n      defaultExpandAll={true}\n      autoExpandParent={true}\n      switcherIcon={<DownOutlined />}\n    />\n  );\n});\n\nconst RegionsTree = observer(({ regionStore }) => {\n  const isFlat = !regionStore.sortedRegions.some(r => r.parentID !== \"\");\n  const treeData = regionStore.asTree((item, idx) => {\n    return {\n      key: item.id,\n      title: <RegionItem item={item} idx={idx} flat={isFlat} />,\n    };\n  });\n\n  return (\n    <Tree\n      className={styles.treelabels}\n      treeData={treeData}\n      draggable={true}\n      showIcon={false}\n      blockNode={true}\n      defaultExpandAll={true}\n      autoExpandParent={true}\n      switcherIcon={<DownOutlined />}\n      onDrop={({ node, dragNode, dropPosition, dropToGap }) => {\n        const dropKey = node.props.eventKey;\n        const dragKey = dragNode.props.eventKey;\n        const dropPos = node.props.pos.split(\"-\");\n        dropPosition = dropPosition - parseInt(dropPos[dropPos.length - 1]);\n        const treeDepth = dropPos.length;\n\n        const dropReg = regionStore.findRegionID(dropKey);\n        const dragReg = regionStore.findRegionID(dragKey);\n\n        regionStore.unhighlightAll();\n\n        if (treeDepth === 2 && dropToGap && dropPosition === -1) {\n          dragReg.setParentID(\"\");\n        } else if (dropPosition !== -1) {\n          // check if the dragReg can be a child of dropReg\n          const selDrop = dropReg.labeling?.selectedLabels || [];\n          const labelWithConstraint = selDrop.filter(l => l.groupcancontain);\n\n          if (labelWithConstraint.length) {\n            const go = true;\n            const selDrag = dragReg.labeling.selectedLabels;\n\n            const set1 = Utils.Checkers.flatten(labelWithConstraint.map(l => l.groupcancontain.split(\",\")));\n            const set2 = Utils.Checkers.flatten(selDrag.map(l => (l.alias ? [l.alias, l.value] : [l.value])));\n\n            if (set1.filter(value => -1 !== set2.indexOf(value)).length === 0) return;\n          }\n\n          // check drop regions tree depth\n          if (dropReg.labeling?.from_name?.groupdepth) {\n            const reached = false;\n            let maxDepth = Number(dropReg.labeling.from_name.groupdepth);\n\n            // find the height of the tree formed by dragReg for\n            // example if we have a tree of A -> B -> C -> D and\n            // we're moving B -> C part somewhere then it'd have a\n            // height of 1\n            let treeHeight;\n            treeHeight = function(node) {\n              if (!node) return 0;\n\n              // TODO this can blow up if we have lots of stuff there\n              const childrenHeight = regionStore.filterByParentID(node.pid).map(c => treeHeight(c));\n\n              if (childrenHeight.length == 0) return 0;\n\n              return 1 + Math.max.apply(Math, childrenHeight);\n            };\n\n            if (maxDepth >= 0) {\n              maxDepth = maxDepth - treeHeight(dragReg);\n              let reg = dropReg;\n              while (reg) {\n                reg = regionStore.findRegion(reg.parentID);\n                maxDepth = maxDepth - 1;\n              }\n\n              if (maxDepth < 0) return;\n            }\n          }\n\n          dragReg.setParentID(dropReg.id);\n        }\n      }}\n    >\n      {/* <TreeNode title=\"hello\" key=\"0-0\" style={{ width: '100%' }} /> */}\n    </Tree>\n  );\n});\n\nexport default observer(({ store, regionStore }) => {\n  const { regions } = regionStore;\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          paddingLeft: \"4px\",\n          paddingRight: \"4px\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ flex: 1 }}>\n          {/* override LS styles' height */}\n          <Divider dashed orientation=\"left\" style={{ height: \"auto\" }}>\n            <Dropdown overlay={<GroupMenu regionStore={regionStore} />} placement=\"bottomLeft\">\n              <span className={globalStyles.link} onClick={e => e.preventDefault()}>\n                {regionStore.view === \"regions\" ? <span>Regions ({regions.length})</span> : null}\n                {regionStore.view === \"labels\" ? \"Labels\" : null}\n              </span>\n            </Dropdown>\n          </Divider>\n        </div>\n        {regions.length > 0 && regionStore.view === \"regions\" && (\n          <Dropdown overlay={<SortMenu regionStore={regionStore} />} placement=\"bottomLeft\">\n            <span className={globalStyles.link} onClick={e => e.preventDefault()}>\n              <SortAscendingOutlined /> Sort\n            </span>\n          </Dropdown>\n        )}\n      </div>\n      {!regions.length && <p>No Regions created yet</p>}\n\n      {regions.length > 0 && regionStore.view === \"regions\" && <RegionsTree regionStore={regionStore} />}\n\n      {regions.length > 0 && regionStore.view === \"labels\" && <LabelsList regionStore={regionStore} />}\n    </div>\n  );\n});\n","import React, { Fragment } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Form, Input, Button, Tag, Tooltip, Badge } from \"antd\";\nimport { DeleteOutlined, LinkOutlined, PlusOutlined, CompressOutlined } from \"@ant-design/icons\";\nimport { Typography } from \"antd\";\n\nimport { NodeMinimal } from \"../Node/Node\";\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Entity.module.scss\";\n\nconst { Paragraph, Text } = Typography;\n\nconst renderLabels = element => {\n  return (\n    <Text key={element.pid} className={styles.labels}>\n      Labels:&nbsp;\n      {element.selectedLabels.map(label => {\n        const bgColor = label.background || \"#000000\";\n\n        return (\n          <Tag key={label.id} color={bgColor} className={styles.tag}>\n            {label.value}\n          </Tag>\n        );\n      })}\n    </Text>\n  );\n};\n\nconst renderResult = result => {\n  if (result.type.endsWith(\"labels\")) {\n    return renderLabels(result);\n  } else if (result.type === \"rating\") {\n    return <Paragraph>Rating: {result.mainValue}</Paragraph>;\n  } else if (result.type === \"textarea\") {\n    return (\n      <Paragraph className={styles.row}>\n        <Text>Text: </Text>\n        <Text mark className={styles.long}>\n          {result.mainValue.join(\"\\n\")}\n        </Text>\n      </Paragraph>\n    );\n  } else if (result.type === \"choices\") {\n    return <Paragraph>Choices: {result.mainValue.join(\", \")}</Paragraph>;\n  }\n\n  return null;\n};\n\nexport default observer(({ store, completion }) => {\n  const node = completion.highlightedNode;\n\n  return (\n    <Fragment>\n      <p className={styles.row}>\n        <NodeMinimal node={node} /> (id: {node.id}){\" \"}\n        {!node.editable && <Badge count={\"readonly\"} style={{ backgroundColor: \"#ccc\" }} />}\n      </p>\n      <div className={styles.statesblk + \" ls-entity-states\"}>\n        {node.score && (\n          <Fragment>\n            <Text>\n              Score: <Text underline>{node.score}</Text>\n            </Text>\n          </Fragment>\n        )}\n\n        {node.normalization && (\n          <Text>\n            Normalization: <Text code>{node.normalization}</Text>\n            &nbsp;\n            <DeleteOutlined\n              type=\"delete\"\n              style={{ cursor: \"pointer\" }}\n              onClick={() => {\n                node.deleteNormalization();\n              }}\n            />\n          </Text>\n        )}\n\n        <Fragment>{node.results.map(renderResult)}</Fragment>\n      </div>\n\n      <div className={styles.block + \" ls-entity-buttons\"}>\n        {/* <Tooltip placement=\"topLeft\" title=\"Hide: [h]\"> */}\n        {/*   <Button */}\n        {/*     className={styles.button} */}\n        {/*     onClick={() => { */}\n        {/*         node.toggleHidden(); */}\n        {/*         //node.unselectRegion(); */}\n        {/*         //node.selectRegion(); */}\n        {/*         // completion.startRelationMode(node); */}\n        {/*     }} */}\n        {/*   > */}\n        {/*     { node.hidden ? <EyeOutlined /> : <EyeInvisibleOutlined /> } */}\n        {/*     {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ h ]</Hint>} */}\n        {/*   </Button> */}\n        {/* </Tooltip> */}\n\n        {node.editable && (\n          <Fragment>\n            <Tooltip placement=\"topLeft\" title=\"Create Relation: [r]\">\n              <Button\n                aria-label=\"Create Relation\"\n                className={styles.button}\n                onClick={() => {\n                  completion.startRelationMode(node);\n                }}\n              >\n                <LinkOutlined />\n\n                {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ r ]</Hint>}\n              </Button>\n            </Tooltip>\n\n            <Tooltip placement=\"topLeft\" title=\"Create Normalization\">\n              <Button\n                className={styles.button}\n                onClick={() => {\n                  completion.setNormalizationMode(true);\n                }}\n              >\n                <PlusOutlined />\n              </Button>\n            </Tooltip>\n          </Fragment>\n        )}\n\n        <Tooltip placement=\"topLeft\" title=\"Unselect: [u]\">\n          <Button\n            className={styles.button}\n            type=\"dashed\"\n            onClick={() => {\n              completion.unselectAll();\n            }}\n          >\n            <CompressOutlined />\n            {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ u ]</Hint>}\n          </Button>\n        </Tooltip>\n\n        {node.editable && (\n          <Tooltip placement=\"topLeft\" title=\"Delete Entity: [Backspace]\">\n            <Button\n              type=\"danger\"\n              className={styles.button}\n              onClick={() => {\n                completion.highlightedNode.deleteRegion();\n              }}\n            >\n              <DeleteOutlined />\n\n              {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ Bksp ]</Hint>}\n            </Button>\n          </Tooltip>\n        )}\n      </div>\n\n      {completion.normalizationMode && (\n        <Form\n          style={{ marginTop: \"0.5em\", marginBottom: \"0.5em\" }}\n          onFinish={value => {\n            node.setNormalization(node.normInput);\n            completion.setNormalizationMode(false);\n\n            // ev.preventDefault();\n            // return false;\n          }}\n        >\n          <Input\n            onChange={ev => {\n              const { value } = ev.target;\n              node.setNormInput(value);\n            }}\n            style={{ marginBottom: \"0.5em\" }}\n            placeholder=\"Add Normalization\"\n          />\n\n          <Button type=\"primary\" htmlType=\"submit\" style={{ marginRight: \"0.5em\" }}>\n            Add\n          </Button>\n\n          <Button\n            type=\"danger\"\n            htmlType=\"reset\"\n            onClick={ev => {\n              completion.setNormalizationMode(false);\n\n              ev.preventDefault();\n              return false;\n            }}\n          >\n            Cancel\n          </Button>\n        </Form>\n      )}\n    </Fragment>\n  );\n});\n","import React, { Fragment } from \"react\";\nimport { Select, Divider, List, Button } from \"antd\";\nimport { isValidReference, getRoot } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\nimport { ArrowLeftOutlined, ArrowRightOutlined, SwapOutlined, MoreOutlined, DeleteOutlined } from \"@ant-design/icons\";\n\nimport styles from \"./Relations.module.scss\";\nimport { NodeMinimal } from \"../Node/Node\";\nimport { wrapArray } from \"../../utils/utilities\";\nimport globalStyles from \"../../styles/global.module.scss\";\n\nimport { EyeInvisibleOutlined, EyeOutlined } from \"@ant-design/icons\";\n\nconst { Option } = Select;\n\nconst RelationMeta = observer(({ store, rl }) => {\n  const r = rl.relations;\n  const selected = r.getSelected().map(v => v.value);\n\n  return (\n    <div style={{ marginTop: \"10px\" }}>\n      <h4 className={styles.header}>LABELS</h4>\n      <Select\n        mode={r.choice === \"multiple\" ? \"multiple\" : \"\"}\n        style={{ width: \"100%\" }}\n        placeholder=\"Please select\"\n        defaultValue={selected}\n        onChange={(val, option) => {\n          const values = wrapArray(val);\n          r.unselectAll();\n          values.forEach(v => r.findRelation(v).setSelected(true));\n        }}\n      >\n        {r.children.map(c => (\n          <Option key={c.value} style={{ background: c.background }}>\n            {c.value}\n          </Option>\n        ))}\n      </Select>\n    </div>\n  );\n});\n\n/**\n * Relation Component\n *\n * Shows the relationship between two selected items\n */\nconst Relation = observer(({ store, rl }) => {\n  if (!isValidReference(() => rl.node1) || !isValidReference(() => rl.node2)) {\n    return null;\n  }\n\n  const iconMap = {\n    left: <ArrowLeftOutlined />,\n    right: <ArrowRightOutlined />,\n    bi: <SwapOutlined />,\n  };\n\n  return (\n    <div>\n      <div className={styles.section__blocks}>\n        <div>\n          <NodeMinimal node={rl.node1} />\n        </div>\n        <Button onClick={() => rl.rotateDirection()} size=\"small\" className={styles.relationbtn}>\n          {iconMap[rl.direction]}\n        </Button>\n        <div>\n          <NodeMinimal node={rl.node2} />\n        </div>\n      </div>\n    </div>\n  );\n});\n\nconst ListItem = observer(({ item }) => {\n  const node = getRoot(item).completionStore.selected.highlightedNode;\n  const isSelected = node === item.node1 || node === item.node2;\n\n  return (\n    <List.Item\n      className={isSelected && styles.selected}\n      key={item.id}\n      actions={[]}\n      onMouseEnter={() => {\n        item.toggleHighlight();\n        item.setSelfHighlight(true);\n      }}\n      onMouseLeave={() => {\n        item.toggleHighlight();\n        item.setSelfHighlight(false);\n      }}\n    >\n      <div className={styles.item}>\n        <div>\n          <Relation rl={item} />\n        </div>\n        <div>\n          {item.hasRelations && (\n            <Button\n              size=\"small\"\n              onClick={() => {\n                item.toggleMeta();\n              }}\n              className={styles.button}\n            >\n              <MoreOutlined />\n            </Button>\n          )}\n          &nbsp;\n          <Button\n            size=\"small\"\n            className={styles.button}\n            onClick={() => {\n              item.node1.setHighlight(false);\n              item.node2.setHighlight(false);\n              item.parent.deleteRelation(item);\n              return false;\n            }}\n            danger\n          >\n            <DeleteOutlined />\n          </Button>\n        </div>\n      </div>\n      {item.showMeta && <RelationMeta rl={item} />}\n    </List.Item>\n  );\n});\n\nexport default observer(({ store }) => {\n  const completion = store.completionStore.selected;\n  const { relations } = completion.relationStore;\n  const hasRelations = relations.length > 0;\n  const relationsUIVisible = completion.relationStore.showConnections;\n\n  return (\n    <Fragment>\n      {/* override LS styles' height */}\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          paddingLeft: \"4px\",\n          paddingRight: \"4px\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ flex: 1, paddingRight: 10 }}>\n          <Divider dashed orientation=\"left\" style={{ height: \"auto\" }}>\n            Relations ({relations.length})\n          </Divider>\n        </div>\n        {hasRelations && (\n          <div>\n            <Button\n              size=\"small\"\n              type=\"link\"\n              icon={relationsUIVisible ? <EyeInvisibleOutlined /> : <EyeOutlined />}\n              onClick={() => completion.relationStore.toggleConnections()}\n              className={[relationsUIVisible ? styles.uihidden : styles.uivisible, globalStyles.link]}\n            />\n          </div>\n        )}\n      </div>\n\n      {!hasRelations && <p>No Relations added yet</p>}\n\n      {hasRelations && (\n        <List\n          size=\"small\"\n          bordered\n          itemLayout=\"vertical\"\n          className={styles.list}\n          dataSource={completion.relationStore.relations}\n          renderItem={item => <ListItem item={item} />}\n        />\n      )}\n    </Fragment>\n  );\n});\n","import React from \"react\";\nimport { Button, Popconfirm, Card } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\nimport Hint from \"../Hint/Hint\";\nimport Entities from \"../Entities/Entities\";\nimport Entity from \"../Entity/Entity\";\nimport Relations from \"../Relations/Relations\";\nimport styles from \"./SideColumn.module.scss\";\n\n/**\n * Component Side with:\n * Completions\n * Entities\n * Relations\n */\nexport default observer(({ store }) => {\n  const completion = store.completionStore.selected;\n  const c = store.completionStore.selected;\n  const node = completion.highlightedNode;\n\n  const { regions } = c.regionStore;\n\n  const buttonRemove = () => {\n    const confirm = () => {\n      c.deleteAllRegions();\n    };\n\n    return (\n      <Popconfirm\n        placement=\"bottomLeft\"\n        title={\"Please confirm you want to delete all labeled regions\"}\n        onConfirm={confirm}\n        okText=\"Delete\"\n        okType=\"danger\"\n        cancelText=\"Cancel\"\n      >\n        <Button size=\"small\" type=\"danger\">\n          <DeleteOutlined />\n          {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ ctrl+bksp ]</Hint>}\n        </Button>\n      </Popconfirm>\n    );\n  };\n\n  let title = (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n      <h3 style={{ margin: 0 }}>Results</h3>\n      {regions.length > 0 && c.editable && buttonRemove()}\n    </div>\n  );\n\n  return (\n    <Card title={title} size=\"small\" className={styles.card}>\n      {node && <Entity store={store} completion={completion} />}\n\n      {!completion.highlightedNode && <p style={{ marginBottom: 0 }}>Nothing selected</p>}\n\n      <Entities store={store} regionStore={completion.regionStore} />\n\n      <Relations store={store} item={completion} />\n    </Card>\n  );\n});\n","/**\n * @typedef {{x: number, y: number, width: number, height: number}} BBox\n *\n * @typedef {number[]} Points Represents (x,y) flat array, meaning\n * each two numbers represent x and y accordingly. Array always starts with x\n *\n * @typedef {{\n * x1: number,\n * x2: number,\n * x3: number,\n * x4: number,\n * y1: number,\n * y2: number,\n * y3: number,\n * y4: number}} RectCoordinates Represents 4 corners coordinates of rectangle\n */\n\nexport class Geometry {\n  /**\n   * Returns RAD angle to normalized degrees meaning that it will always fit 0-360 range\n   * @param {number} angle Angle in RAD\n   */\n  static normalizeAngle(angle) {\n    return ((angle + 360) % 360) * (Math.PI / 180);\n  }\n\n  /**\n   * Calculate BBox for any number of coordinates\n   * @param {Points} points Input points\n   * @returns {Points} Array of two (x,y) coordinates representing a BBox\n   */\n  static getPointsBBox(points) {\n    const minmax = [null, null, null, null];\n    points.forEach((num, i) => {\n      const pos = Math.round(i / 2) * 2 - i;\n\n      if (pos === 0) {\n        // Calculate min and max X\n        if (minmax[0] === null || minmax[0] >= num) minmax[0] = num;\n        if (minmax[2] === null || minmax[2] <= num) minmax[2] = num;\n      } else if (pos === 1) {\n        // Calculate min and max Y\n        if (minmax[1] === null || minmax[1] >= num) minmax[1] = num;\n        if (minmax[3] === null || minmax[3] <= num) minmax[3] = num;\n      }\n    });\n\n    return minmax;\n  }\n\n  /**\n   * Calculate distance between wo points\n   * @param {Points} point1\n   * @param {Points} point2\n   */\n  static distance(point1, point2) {\n    const [x1, y1] = point1;\n    const [x2, y2] = point2;\n    return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n  }\n\n  /**\n   * Convert standard bbox to a set of coordinates\n   * @param {BBox} bbox\n   * @returns {RectCoordinates}\n   */\n  static toRectCoordinates(bbox) {\n    const { x: x1, y: y1, width, height } = bbox;\n    const [x2, y2] = [x1 + width, y1];\n    const [x3, y3] = [x1 + width, y1 + height];\n    const [x4, y4] = [x1, y1 + height];\n    return { x1, x2, x3, x4, y1, y2, y3, y4 };\n  }\n\n  /**\n   * Convert RectCoordinates to BBox\n   * @param {RectCoordinates} rect\n   * @returns {BBox}\n   */\n  static convertToRectBBox(rect) {\n    return {\n      x: rect.x1,\n      y: rect.y1,\n      width: rect.x2 - rect.x1,\n      height: rect.y3 - rect.y1,\n    };\n  }\n\n  /**\n   * Find two closes BBoxes of two lists\n   * @param {BBox[]} rectsList1\n   * @param {BBox[]} rectsList2\n   */\n  static closestRects(rectsList1, rectsList2) {\n    const result = rectsList1\n      .reduce((res, rect1) => {\n        const bbox1 = this.toRectCoordinates(rect1);\n\n        rectsList2.forEach(rect2 => {\n          const bbox2 = this.toRectCoordinates(rect2);\n\n          const avgDistance =\n            [\n              this.distance([bbox1.x1, bbox1.y1], [bbox2.x1, bbox1.y1]),\n              this.distance([bbox1.x2, bbox1.y2], [bbox2.x2, bbox1.y2]),\n              this.distance([bbox1.x3, bbox1.y3], [bbox2.x3, bbox1.y3]),\n              this.distance([bbox1.x4, bbox1.y4], [bbox2.x4, bbox2.y4]),\n            ].reduce((d1, d2) => d1 + d2) / 4;\n\n          res.push({\n            distance: avgDistance,\n            bbox: [this.convertToRectBBox(bbox1), this.convertToRectBBox(bbox2)],\n          });\n        });\n\n        return res;\n      }, [])\n      .sort((a, b) => a.distance - b.distance);\n\n    return result[0].bbox;\n  }\n\n  /**\n   * Scale given BBox by a scale factor\n   * @param {BBox} bbox Original BBox\n   * @param {number} scale Scale factor\n   * @returns {BBox} Scaled BBox\n   */\n  static scaleBBox(bbox, scale = 1) {\n    return {\n      ...bbox,\n      x: bbox.x * scale,\n      y: bbox.y * scale,\n      width: bbox.width * scale,\n      height: bbox.height * scale,\n    };\n  }\n\n  /**\n   * Add padding to BBox\n   * @param {BBox} bbox BBox to pad\n   * @param {number} padding Padding size\n   */\n  static padding(bbox, padding = 0) {\n    return {\n      ...bbox,\n      x: bbox.x - padding,\n      y: bbox.y - padding,\n      width: bbox.width + padding * 2,\n      height: bbox.height + padding * 2,\n    };\n  }\n\n  /**\n   * Calculate ellipse BBox\n   * @param {number} x Center X\n   * @param {number} y Center Y\n   * @param {number} rx Radius X\n   * @param {number} ry Radius Y\n   * @param {number} angle Angle in RAD\n   * @returns {BBox[]} Dimensions of bounding box\n   */\n  static getEllipseBBox(x, y, rx, ry, angle) {\n    const angleRad = this.normalizeAngle(angle);\n    const major = Math.max(rx, ry) * 2;\n    const minor = Math.min(rx, ry) * 2;\n\n    const getXLimits = () => {\n      const t = Math.atan(((-minor / 2) * Math.tan(angleRad)) / (major / 2));\n\n      return [t, t + Math.PI]\n        .map(t => {\n          return x + (major / 2) * Math.cos(t) * Math.cos(angleRad) - (minor / 2) * Math.sin(t) * Math.sin(angleRad);\n        })\n        .sort((a, b) => b - a);\n    };\n\n    const getYLimits = () => {\n      const t = Math.atan(((minor / 2) * 1.0) / Math.tan(angleRad) / (major / 2));\n      return [t, t + Math.PI]\n        .map(t => {\n          return y + (minor / 2) * Math.sin(t) * Math.cos(angleRad) + (major / 2) * Math.cos(t) * Math.sin(angleRad);\n        })\n        .sort((a, b) => b - a);\n    };\n\n    const [x1, x2] = getXLimits();\n    const [y1, y2] = getYLimits();\n    const width = x1 - x2;\n    const height = y1 - y2;\n\n    return { x: x2, y: y2, width, height };\n  }\n\n  /**\n   * Calculate rotated rect BBox\n   * @param {number} x Top left X\n   * @param {number} y Top left Y\n   * @param {number} width Width\n   * @param {number} height Height\n   * @param {number} angle Angle in RAD\n   * @returns {BBox[]} Dimensions of bounding box\n   */\n  static getRectBBox(x, y, width, height, angle) {\n    const angleRad = this.normalizeAngle(angle);\n\n    const rotate = (x1, y1) => [\n      (x1 - x) * Math.cos(angleRad) - (y1 - y) * Math.sin(angleRad) + x,\n      (x1 - x) * Math.sin(angleRad) + (y1 - y) * Math.cos(angleRad) + y,\n    ];\n\n    const [rx1, ry1, rx2, ry2] = this.getPointsBBox([\n      x,\n      y,\n      ...rotate(x + width, y),\n      ...rotate(x + width, y + height),\n      ...rotate(x, y + height),\n    ]);\n\n    return { x: rx1, y: ry1, width: rx2 - rx1, height: ry2 - ry1 };\n  }\n\n  /**\n   * Calculate BBox of polygon shape\n   * @param {Points} points\n   * @return {BBox[]}\n   */\n  static getPolygonBBox(points) {\n    const coords = points.reduce((res, point) => [...res, point.x, point.y], []);\n    const [x1, y1, x2, y2] = this.getPointsBBox(coords);\n    return { x: x1, y: y1, width: x2 - x1, height: y2 - y1 };\n  }\n\n  /**\n   * Calculate BBox of Brush region (a set of points)\n   * @param {Points} points\n   * @return {BBox[]}\n   */\n  static getBrushBBox(points) {\n    const [x1, y1, x2, y2] = this.getPointsBBox(points);\n    return { x: x1, y: y1, width: x2 - x1, height: y2 - y1 };\n  }\n\n  /**\n   * Get BBox of any DOM node\n   * @param {HTMLElement} domNode\n   * @param {boolean} single Should return all possible BBoxes or not\n   * @return {BBox[]}\n   */\n  static getDOMBBox(domNode, single = false) {\n    if (!domNode) return null;\n\n    const bboxes = domNode.getClientRects();\n\n    if (bboxes.length === 0) return null;\n\n    const convertDOMRect = domRect => ({\n      x: domRect.x,\n      y: domRect.y,\n      width: domRect.width,\n      height: domRect.height,\n    });\n\n    return single ? convertDOMRect(bboxes[0]) : Array.from(domNode.getClientRects()).map(convertDOMRect);\n  }\n}\n","import { flatten, wrapArray } from \"../../utils/utilities\";\nimport { Geometry } from \"./Geometry\";\n\n/**\n * @type {import(\"./Geometry\").BBox}\n */\nconst DEFAULT_BBOX = { x: 0, y: 0, width: 0, height: 0 };\n\n/**\n * Provides an abstract boudnign box for any types of regions\n */\nexport class BoundingBox {\n  options = {};\n\n  static bbox(region) {\n    const bbox = _detect(region);\n    return wrapArray(bbox).map(bbox => Object.assign({ ...DEFAULT_BBOX }, bbox));\n  }\n\n  /**\n   * Contructor\n   *\n   * _source_ might be any object that provides its dimensions and position\n   *\n   * @param {{\n   * source: any,\n   * getX: (any) => number,\n   * getY: (any) => number,\n   * getXWidth: (any) => number,\n   * getHeight: (any) => number\n   * }} options\n   */\n  constructor(options) {\n    Object.assign(this.options, options);\n  }\n\n  get _source() {\n    return this.options.source;\n  }\n\n  get x() {\n    return this.options.getX(this._source);\n  }\n\n  get y() {\n    return this.options.getY(this._source);\n  }\n\n  get width() {\n    return this.options.getWidth(this._source);\n  }\n\n  get height() {\n    return this.options.getHeight(this._source);\n  }\n}\n\nconst imageRelatedBBox = (region, bbox) => {\n  const imageBbox = Geometry.getDOMBBox(region.parent.imageRef, true);\n  const scaledBBox = Geometry.scaleBBox(bbox, region.parent.zoomScale);\n  return {\n    ...scaledBBox,\n    x: imageBbox.x + scaledBBox.x,\n    y: imageBbox.y + scaledBBox.y,\n  };\n};\n\nconst _detect = region => {\n  switch (region.type) {\n    case \"textrange\":\n    case \"hypertextregion\":\n    case \"textarearegion\":\n    case \"audioregion\":\n    case \"timeseriesregion\": {\n      return Geometry.getDOMBBox(region.regionElement);\n    }\n    case \"rectangleregion\": {\n      return imageRelatedBBox(\n        region,\n        Geometry.getRectBBox(region.x, region.y, region.width, region.height, region.rotation),\n      );\n    }\n    case \"ellipseregion\": {\n      return imageRelatedBBox(\n        region,\n        Geometry.getEllipseBBox(region.x, region.y, region.radiusX, region.radiusY, region.rotation),\n      );\n    }\n    case \"polygonregion\": {\n      return imageRelatedBBox(region, Geometry.getPolygonBBox(region.points));\n    }\n    case \"keypointregion\": {\n      const imageBbox = Geometry.getDOMBBox(region.parent.imageRef, true);\n      const scale = region.parent.zoomScale;\n      return {\n        x: region.x * scale + imageBbox.x - 2,\n        y: region.y * scale + imageBbox.y - 2,\n        width: 4,\n        height: 4,\n      };\n    }\n    case \"brushregion\": {\n      const points = flatten(wrapArray(region.touches.filter(t => t.type === \"add\").map(t => Array.from(t.points))));\n      return imageRelatedBBox(region, Geometry.getBrushBBox(points));\n    }\n    default: {\n      console.warn(`Unknown region type: ${region.type}`);\n      return { ...DEFAULT_BBOX };\n    }\n  }\n};\n","import { BoundingBox } from \"./BoundingBox\";\n\n/* eslint-disable no-unused-expressions */\nexport class RelationShape {\n  params = {};\n\n  _onUpdated = null;\n\n  constructor(params) {\n    Object.assign(this.params, params);\n\n    if (this.params.watcher) {\n      this._watcher = new this.params.watcher(this.params.root, this.params.element, this.onChanged);\n    }\n  }\n\n  boundingBox() {\n    return BoundingBox.bbox(this.params.element);\n  }\n\n  onUpdate(callback) {\n    this.onUpdated = callback;\n  }\n\n  onChanged = () => {\n    this.onUpdated?.();\n  };\n\n  destroy() {\n    this.onUpdated = null;\n  }\n}\n","export class DOMWatcher {\n  constructor(root, element, callback) {\n    this.root = root;\n    this.element = element.regionElement;\n    this.callback = callback;\n\n    this.handleUpdate();\n  }\n\n  handleResize() {\n    window.addEventListener(\"resize\", this.onUpdate);\n  }\n\n  handleUpdate() {\n    this.observer = new MutationObserver(this.onUpdate);\n\n    this.observer.observe(this.element, { attributes: true });\n  }\n\n  onUpdate = () => {\n    this.callback();\n  };\n\n  destroy() {\n    window.removeEventListener(\"resize\", this.onUpdate);\n    this.observer.disconnect();\n  }\n}\n","import { observe } from \"mobx\";\nimport { debounce } from \"../../../utils/debounce\";\n\nexport const createPropertyWatcher = props => {\n  return class {\n    constructor(root, element, callback) {\n      this.root = root;\n      this.element = element;\n      this.callback = callback;\n\n      this.handleUpdate();\n    }\n\n    handleUpdate() {\n      this.disposers = this._watchProperties(this.element, props, []);\n    }\n\n    onUpdate = debounce(() => {\n      this.callback();\n    }, 10);\n\n    destroy() {\n      this.disposers.forEach(dispose => dispose());\n    }\n\n    _watchProperties(element, propsList, disposers) {\n      return propsList.reduce((res, property) => {\n        if (typeof property !== \"string\") {\n          Object.keys(property).forEach(propertyName => {\n            this._watchProperties(element[propertyName], property[propertyName], disposers);\n          });\n        } else {\n          if (Array.isArray(element)) {\n            element.forEach(el => this._watchProperties(el, propsList, disposers));\n          } else {\n            res.push(observe(element, property, this.onUpdate, true));\n          }\n        }\n\n        return res;\n      }, disposers);\n    }\n  };\n};\n","import { debounce } from \"../../utils/debounce\";\nimport { wrapArray } from \"../../utils/utilities\";\nimport { Geometry } from \"./Geometry\";\nimport { RelationShape } from \"./RelationShape\";\nimport { DOMWatcher, createPropertyWatcher } from \"./watchers\";\n\nconst parentImagePropsWatch = {\n  parent: [\"zoomScale\", \"zoomingPositionX\", \"zoomingPositionY\"],\n};\n\nconst obtainWatcher = node => {\n  switch (node.type) {\n    case \"textregion\":\n    case \"hypertextregion\":\n    case \"audioregion\":\n      return DOMWatcher;\n    case \"rectangleregion\":\n      return createPropertyWatcher([\"x\", \"y\", \"width\", \"height\", \"hidden\", parentImagePropsWatch]);\n    case \"ellipseregion\":\n      return createPropertyWatcher([\"x\", \"y\", \"radiusX\", \"radiusY\", \"rotation\", \"hidden\", parentImagePropsWatch]);\n    case \"polygonregion\":\n      return createPropertyWatcher([\"hidden\", { points: [\"x\", \"y\"] }, parentImagePropsWatch]);\n    case \"keypointregion\":\n      return createPropertyWatcher([\"x\", \"y\", \"hidden\", parentImagePropsWatch]);\n    case \"brushregion\":\n      return createPropertyWatcher([\"needsUpdate\", \"hidden\", parentImagePropsWatch]);\n    case \"timeseriesregion\":\n      return createPropertyWatcher([\"start\", \"end\", { parent: [\"zoomedRange\"] }]);\n    default:\n      return null;\n  }\n};\n\nconst createShape = (node, root) => {\n  return new RelationShape({\n    root: root,\n    element: node,\n    watcher: obtainWatcher(node),\n  });\n};\n\nconst connect = (relation, root) => {\n  return {\n    id: relation.id,\n    label: wrapArray(relation.labels ?? []).join(\", \"),\n    color: \"#fa541c\",\n    direction: relation.direction,\n    start: createShape(relation.startNode, root),\n    end: createShape(relation.endNode, root),\n    onChange(callback) {\n      const onChangedCallback = debounce(callback, 50);\n      this.start.onUpdate(onChangedCallback);\n      this.end.onUpdate(onChangedCallback);\n    },\n    destroy() {\n      this.start.destroy();\n      this.end.destroy();\n    },\n  };\n};\n\n/**\n * Calculate BBox for the shape\n * @param {RelationShape} shape\n * @param {HTMLElement} root\n */\nconst calculateBBox = (shape, root) => {\n  const { x, y } = Geometry.getDOMBBox(root, true) ?? { x: 0, y: 0 };\n  const bboxList = shape.boundingBox();\n\n  return bboxList.map(bbox => {\n    const padded = Geometry.padding(bbox, 3);\n    return {\n      ...padded,\n      x: padded.x - x,\n      y: padded.y - y,\n    };\n  });\n};\n\nconst getNodesBBox = ({ start, end, root }) => {\n  const [startBBox, endBBox] = Geometry.closestRects(calculateBBox(start, root), calculateBBox(end, root));\n\n  return {\n    start: startBBox,\n    end: endBBox,\n  };\n};\n\nconst shapesIntersect = ({ x1, y1, w1, x2, y2, w2 }) => {\n  if (y1 === y2) return false;\n\n  const leftIntersection = x1 <= x2 && x2 <= x1 + w1;\n  const rightIntersection = x1 <= x2 + w2 && x2 + w2 <= x1 + w1;\n\n  return leftIntersection || rightIntersection;\n};\n\nconst calculateTopPath = ({ x1, y1, w1, x2, y2, w2, limit }) => {\n  const xw1 = x1 + w1 * 0.5,\n    xw2 = x2 + w2 * 0.5;\n\n  const top = Math.min(y1, y2) - limit;\n  const l1 = Math.min(top, y1 - limit);\n  const l2 = Math.min(top, y2 - limit);\n\n  const toEnd = xw1 < xw2 ? true : false;\n\n  return { x1: xw1, x2: xw2, y1, y2, l1, l2, toEnd };\n};\n\nconst calculateSidePath = ({ x1, y1, w1, h1, x2, y2, w2, h2, limit }) => {\n  let renderingSide = \"left\";\n\n  if (Math.min(x1, x2) - limit < 0) {\n    renderingSide = \"right\";\n  }\n\n  let xs1, xs2, ys1, ys2, l1, l2;\n\n  if (renderingSide === \"left\") {\n    xs1 = x1;\n    ys1 = y1 + h1 * 0.5;\n    xs2 = x2;\n    ys2 = y2 + h2 * 0.5;\n    const left = Math.min(xs1, xs2) - limit;\n    l1 = Math.min(left, xs1 - limit);\n    l2 = Math.min(left, xs2 - limit);\n  } else {\n    xs1 = x1 + w1;\n    ys1 = y1 + h1 * 0.5;\n    xs2 = x2 + w2;\n    ys2 = y2 + h2 * 0.5;\n    const left = Math.max(xs1, xs2) + limit;\n    l1 = Math.max(left, xs1 + limit);\n    l2 = Math.max(left, xs2 + limit);\n  }\n\n  const toEnd = ys1 < ys2 ? true : false;\n\n  return { x1: xs1, x2: xs2, y1: ys1, y2: ys2, l1, l2, toEnd, renderingSide };\n};\n\nconst buildPathCommand = ({ x1, y1, x2, y2, l1, l2, toEnd, renderingSide }, orientation) => {\n  const radius = 5;\n  const vertical = orientation === \"vertical\";\n\n  let px1, py1, px2, py2, px3, py3, px4, py4, sweep, arc1, arc2;\n  let ex, ey;\n\n  if (vertical) {\n    px1 = x1;\n    py1 = y1;\n    px2 = x1;\n    py2 = l1 + radius;\n    px3 = x2 + radius * (toEnd ? -1 : 1);\n    py3 = l2;\n    px4 = x2;\n    py4 = y2;\n    sweep = toEnd ? 1 : 0;\n    arc1 = toEnd ? `${radius} -${radius}` : `-${radius} -${radius}`;\n    arc2 = toEnd ? `${radius} ${radius}` : `-${radius} ${radius}`;\n\n    // Edge center coordinates\n    ex = Math.min(x1, x2) + Math.abs(x2 - x1) / 2;\n    ey = l1;\n  } else if (!vertical && renderingSide === \"right\") {\n    px1 = x1;\n    py1 = y1;\n    px2 = l1 - radius;\n    py2 = y1;\n    px3 = l2;\n    py3 = y2 + radius * (toEnd ? -1 : 1);\n    px4 = x2;\n    py4 = y2;\n    sweep = toEnd ? 1 : 0;\n    arc1 = toEnd ? `${radius} ${radius}` : `${radius} -${radius}`;\n    arc2 = toEnd ? `-${radius} ${radius}` : `-${radius} -${radius}`;\n\n    // Edge center coordinates\n    ex = l1;\n    ey = Math.min(y1, y2) + Math.abs(y2 - y1) / 2;\n  } else if (!vertical && renderingSide === \"left\") {\n    px1 = x1;\n    py1 = y1;\n    px2 = l1 + radius;\n    py2 = y1;\n    px3 = l2;\n    py3 = y2 + radius * (toEnd ? -1 : 1);\n    px4 = x2;\n    py4 = y2;\n    sweep = toEnd ? 0 : 1;\n    arc1 = toEnd ? `-${radius} ${radius}` : `-${radius} -${radius}`;\n    arc2 = toEnd ? `${radius} ${radius}` : `${radius} -${radius}`;\n\n    // Edge center coordinates\n    ex = l1;\n    ey = Math.min(y1, y2) + Math.abs(y2 - y1) / 2;\n  }\n\n  const pathCommand = [\n    `M ${px1} ${py1}`,\n    `${px2} ${py2}`,\n    `a 5 5 0 0 ${sweep} ${arc1}`, // rounded corner\n    `L ${px3} ${py3}`,\n    `a 5 5 0 0 ${sweep} ${arc2}`, // rounded corner\n    `L ${px4} ${py4}`,\n  ];\n\n  return [pathCommand.join(\" \"), [ex, ey]];\n};\n\nconst calculatePath = (start, end) => {\n  const { x: x1, y: y1, width: w1, height: h1 } = start;\n  const { x: x2, y: y2, width: w2, height: h2 } = end;\n\n  const limit = 15;\n\n  const intersecting = shapesIntersect({\n    x1,\n    y1,\n    w1,\n    x2,\n    y2,\n    w2,\n  });\n\n  const coordinatesCalculator = intersecting ? calculateSidePath : calculateTopPath;\n  const coordinates = coordinatesCalculator({\n    x1,\n    y1,\n    w1,\n    h1,\n    x2,\n    y2,\n    w2,\n    h2,\n    limit,\n  });\n\n  const pathCommand = buildPathCommand(coordinates, intersecting ? \"horizontal\" : \"vertical\");\n\n  return pathCommand;\n};\n\nexport default {\n  obtainWatcher,\n  createShape,\n  connect,\n  getNodesBBox,\n  calculatePath,\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport { observer } from \"mobx-react\";\nimport React, { PureComponent, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport NodesConnector from \"./NodesConnector\";\n\nconst ArrowMarker = ({ id, color }) => {\n  return (\n    <marker\n      id={`arrow-${id}`}\n      viewBox=\"0 0 10 10\"\n      refX={8}\n      refY={5}\n      markerWidth={4}\n      markerHeight={4}\n      orient=\"auto-start-reverse\"\n    >\n      <path d=\"M 0 0 L 10 5 L 0 10 z\" fill={color} />\n    </marker>\n  );\n};\n\nconst RelationItemRect = ({ x, y, width, height }) => {\n  return <rect x={x} y={y} width={width} height={height} fill=\"none\" />;\n};\n\nconst RelationConnector = ({ id, command, color, direction, highlight }) => {\n  const pathColor = highlight ? \"#fa541c\" : color;\n  const pathSettings = {\n    d: command,\n    stroke: pathColor,\n    fill: \"none\",\n    strokeLinecap: \"round\",\n  };\n\n  const markers = {};\n\n  if (direction === \"bi\" || direction === \"right\") {\n    markers.markerEnd = `url(#arrow-${id})`;\n  }\n  if (direction === \"bi\" || direction === \"left\") {\n    markers.markerStart = `url(#arrow-${id})`;\n  }\n\n  return (\n    <>\n      <defs>\n        <ArrowMarker id={id} color={pathColor} />\n      </defs>\n      {highlight && <path {...pathSettings} stroke={color} opacity={0.1} strokeWidth={6} />}\n      <path {...pathSettings} opacity={highlight ? 1 : 0.6} strokeWidth={2} {...markers} />\n    </>\n  );\n};\n\nconst RelationLabel = ({ label, position }) => {\n  const [x, y] = position;\n  const textRef = React.createRef();\n  const [background, setBackground] = useState({ width: 0, height: 0, x: 0, y: 0 });\n\n  const groupAttributes = {\n    transform: `translate(${x}, ${y})`,\n    textAnchor: \"middle\",\n    dominantBaseline: \"middle\",\n  };\n\n  const textAttributes = {\n    fill: \"white\",\n    style: { fontSize: 12, fontFamily: \"arial\" },\n  };\n\n  useEffect(() => {\n    const textElement = textRef.current;\n    const bbox = textElement.getBBox();\n    setBackground({\n      x: bbox.x - 5,\n      y: bbox.y - 3,\n      width: bbox.width + 10,\n      height: bbox.height + 6,\n    });\n  }, [label]);\n\n  return (\n    <g {...groupAttributes}>\n      <rect {...background} stroke=\"#fff\" strokeWidth={2} fill=\"#a0a\" rx=\"3\" />\n      <text ref={textRef} {...textAttributes}>\n        {label}\n      </text>\n    </g>\n  );\n};\n\nconst RelationItem = ({ id, startNode, endNode, direction, rootRef, highlight, dimm, labels, visible }) => {\n  const root = rootRef.current;\n  const nodesHidden = startNode.hidden === true || endNode.hidden === true;\n  const hideConnection = nodesHidden || !visible;\n  const [, forceUpdate] = useState();\n\n  const relation = NodesConnector.connect({ id, startNode, endNode, direction, labels }, root);\n  const { start, end } = NodesConnector.getNodesBBox({ root, ...relation });\n  const [path, textPosition] = NodesConnector.calculatePath(start, end);\n\n  useEffect(() => {\n    relation.onChange(() => forceUpdate({}));\n    return () => relation.destroy();\n  }, []);\n\n  return (\n    <g opacity={dimm && !highlight ? 0.5 : 1} visibility={hideConnection ? \"hidden\" : \"visible\"}>\n      <RelationItemRect {...start} />\n      <RelationItemRect {...end} />\n      <RelationConnector\n        id={relation.id}\n        command={path}\n        color={relation.color}\n        direction={relation.direction}\n        highlight={highlight}\n      />\n      {relation.label && <RelationLabel label={relation.label} position={textPosition} />}\n    </g>\n  );\n};\n\n/**\n * @param {{\n * item: object,\n * rootRef: React.RefObject<HTMLElement>\n * }}\n */\nconst RelationItemObserver = observer(({ relation, ...rest }) => {\n  const { node1: startNode, node2: endNode } = relation;\n\n  return (\n    <RelationItem id={relation.id} startNode={startNode} endNode={endNode} direction={relation.direction} {...rest} />\n  );\n});\n\nclass RelationsOverlay extends PureComponent {\n  /** @type {React.RefObject<HTMLElement>} */\n  rootNode = React.createRef();\n  state = { shouldRender: false, souldRenderConnections: Math.random() };\n\n  componentDidMount() {\n    if (this.rootNode.current) {\n      this.setState({ shouldRender: true });\n    }\n\n    window.addEventListener(\"resize\", this.onResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.onResize);\n  }\n\n  render() {\n    const { relations, visible, highlighted } = this.props;\n    const hasHighlight = !!highlighted;\n\n    const style = {\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      zIndex: 100,\n    };\n\n    return (\n      <svg ref={this.rootNode} xmlns=\"http://www.w3.org/2000/svg\" style={style}>\n        {this.state.shouldRender && this.renderRelations(relations, visible, hasHighlight, highlighted)}\n      </svg>\n    );\n  }\n\n  renderRelations(relations, visible, hasHighlight, highlightedRelation) {\n    return relations.map(relation => {\n      const highlighted = highlightedRelation === relation;\n      return (\n        <RelationItemObserver\n          key={relation.id}\n          relation={relation}\n          rootRef={this.rootNode}\n          labels={relation.relations?.selectedValues()}\n          dimm={hasHighlight && !highlighted}\n          highlight={highlighted}\n          visible={highlighted || visible}\n          shouldUpdate={this.state.souldRenderConnections}\n        />\n      );\n    });\n  }\n\n  onResize = () => {\n    this.setState({ souldRenderConnections: Math.random() });\n  };\n}\n\nconst RelationsOverlayObserver = observer(({ store }) => {\n  const { relations, showConnections, highlighted } = store;\n  return <RelationsOverlay relations={Array.from(relations)} visible={showConnections} highlighted={highlighted} />;\n});\n\nexport { RelationsOverlayObserver as RelationsOverlay };\n","import React, { Fragment } from \"react\";\nimport { Button } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { PauseCircleOutlined, PlayCircleOutlined } from \"@ant-design/icons\";\n\nimport Hint from \"../../../components/Hint/Hint\";\n\nconst AudioControls = ({ item, store }) => {\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"space-between\", marginTop: \"1em\" }}>\n      <Button\n        type=\"primary\"\n        onClick={ev => {\n          item._ws.playPause();\n        }}\n      >\n        {item.playing && (\n          <Fragment>\n            <PauseCircleOutlined /> Pause\n            {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && (\n              <Hint>[{item.hotkey}]</Hint>\n            )}\n          </Fragment>\n        )}\n        {!item.playing && (\n          <Fragment>\n            <PlayCircleOutlined /> Play\n            {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && (\n              <Hint>[{item.hotkey}]</Hint>\n            )}\n          </Fragment>\n        )}\n      </Button>\n    </div>\n  );\n};\n\nexport default observer(AudioControls);\n","import { Modal } from \"antd\";\n\nconst wrapper = (_type, value, title) => {\n  let custom = {\n    type: \"\",\n    title: \"\",\n  };\n\n  switch (_type) {\n    case \"error\":\n      custom.type = Modal.error;\n      custom.title = \"Error\";\n      break;\n    case \"warning\":\n      custom.type = Modal.warning;\n      custom.title = \"Warning\";\n      break;\n    case \"success\":\n      custom.type = Modal.success;\n      custom.title = \"Success\";\n      break;\n    default:\n      custom.type = Modal.info;\n      custom.title = \"Info\";\n  }\n\n  custom.type({\n    title: title ? title : custom.title,\n    content: value,\n  });\n};\n\n/**\n * Success modal\n * @param {string} value\n * @param {string} title\n */\nconst error = (value, title) => {\n  wrapper(`error`, value, title);\n};\n\n/**\n * Warning modal\n * @param {string} value\n * @param {string} title\n */\nconst warning = (value, title) => {\n  wrapper(`warning`, value, title);\n};\n\n/**\n * Success modal\n * @param {string} value\n * @param {string} title\n */\nconst success = (value, title) => {\n  wrapper(`success`, value, title);\n};\n\n/**\n * Information modal\n * @param {string} value\n * @param {string} title\n */\nconst info = (value, title) => {\n  wrapper(`info`, value, title);\n};\n\nexport default { error, warning, success, info };\n","import { types } from \"mobx-state-tree\";\nimport isMatch from \"lodash.ismatch\";\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\n\nconst ObjectBase = types\n  .model({\n    // TODO there should be a better way to force an update\n    _needsUpdate: types.optional(types.number, 0),\n  })\n  .views(self => ({\n    findRegion(params) {\n      let obj = null;\n\n      if (self._regionsCache && self._regionsCache.length) {\n        obj = self._regionsCache.find(({ region }) => isMatch(region, params));\n      }\n\n      return obj || self.regions.find(r => isMatch(r, params));\n    },\n  }))\n  .actions(self => ({\n    toStateJSON() {\n      if (!self.regions) return;\n\n      const objectsToReturn = self.regions.map(r => r.toStateJSON());\n      return objectsToReturn;\n    },\n  }))\n  .actions(self => {\n    let props = {};\n\n    function addProp(name, value) {\n      props[name] = value;\n      self._needsUpdate = self._needsUpdate + 1;\n    }\n\n    function getProps() {\n      return props;\n    }\n\n    // @todo maybe not a best place for this method?\n    // check that maxUsages was not exceeded for labels\n    // and if it was - don't allow to create new region and unselect all regions\n    // unselect labels which was exceeded maxUsages\n    // return all states left untouched - available labels and others\n    function getAvailableStates() {\n      // `checkMaxUsages` may unselect labels with already reached `maxUsages`\n      const checkAndCollect = (list, s) => (s.checkMaxUsages ? list.concat(s.checkMaxUsages()) : list);\n      const allStates = self.states() || [];\n      const exceeded = allStates.reduce(checkAndCollect, []);\n      const states = self.activeStates() || [];\n      if (states.length === 0) {\n        if (exceeded.length) {\n          const label = exceeded[0];\n          InfoModal.warning(`You can't use ${label.value} more than ${label.maxUsages} time(s)`);\n        }\n        self.completion.unselectAll();\n      }\n      return states;\n    }\n\n    return {\n      addProp,\n      getProps,\n      getAvailableStates,\n    };\n  });\n\nexport default ObjectBase;\n","/**\n * Convert JavaScript string in dot notation into an object reference\n * @param {Object} obj\n * @param {*} is\n * @param {*} value\n */\nfunction _index(obj, is, value) {\n  if (typeof is === \"string\") return _index(obj, is.split(\".\"), value);\n  else if (is.length === 1 && value !== undefined) return (obj[is[0]] = value);\n  else if (is.length === 0) return obj;\n  else return _index(obj[is[0]], is.slice(1), value);\n}\n\n/**\n *\n * @param {*} variable\n * @param {*} obj\n */\nfunction variableNotation(variable, obj) {\n  if (variable.charAt(0) === \"$\") {\n    const n = variable.substring(1);\n    return _index(obj, n);\n  } else {\n    return variable;\n  }\n}\n\n/**\n * A small templating engine for processing HTML with given data.\n *\n * @see TemplateEngine via MIT Licensed https://github.com/krasimir/absurd/\n *\n * @param {string} html\n * @param {Object} options\n * @returns {*}\n */\nfunction runTemplate(html, options) {\n  if (!options) options = {};\n\n  var re = /[$](.+)/g,\n    reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g,\n    code = \"with(obj) { var r=[];\\n\",\n    cursor = 0,\n    result,\n    match;\n\n  var add = function(line, js) {\n    js\n      ? (code += line.match(reExp) ? line + \"\\n\" : \"r.push(\" + line + \");\\n\")\n      : (code += line !== \"\" ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : \"\");\n    return add;\n  };\n\n  while ((match = re.exec(html))) {\n    add(html.slice(cursor, match.index))(match[1], true);\n    cursor = match.index + match[0].length;\n  }\n\n  if (!html) return \"\";\n\n  add(html.substr(cursor, html.length - cursor));\n  code = (code + 'return r.join(\"\"); }').replace(/[\\r\\t\\n]/g, \" \");\n\n  try {\n    result = new Function(\"obj\", code).apply(options, [options]); // eslint-disable-line no-new-func\n  } catch (err) {\n    console.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\");\n  }\n\n  return result;\n}\n\nexport { variableNotation, runTemplate, _index };\n","import { types } from \"mobx-state-tree\";\n\nimport { runTemplate } from \"../core/Template\";\n\nconst ProcessAttrsMixin = types.model().actions(self => ({\n  updateLocalValue(value) {\n    self._value = value;\n  },\n\n  updateValue(store) {\n    self._value = runTemplate(self.value, store.task.dataObj) || \"\";\n  },\n}));\n\nexport default ProcessAttrsMixin;\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { observer } from \"mobx-react\";\n\n/**\n * Object Tag Component\n */\nclass ObjectTagView extends React.Component {\n  render() {\n    const { props } = this;\n    const { item } = props;\n\n    const moreProps = item.getProps && item.getProps();\n\n    return (\n      <div className={props.className} dataneedsupdate={item._needsUpdate} style={props.style} {...moreProps}>\n        {props.children}\n      </div>\n    );\n  }\n}\n\nObjectTagView.propTypes = {\n  children: PropTypes.node.isRequired,\n  item: PropTypes.object.isRequired,\n};\n\nexport default observer(ObjectTagView);\n","/* eslint-disable react/jsx-no-target-blank */\n\nimport React from \"react\";\n\nconst URL_CORS_DOCS = \"https://app.heartex.ai/docs/guide/FAQ.html#Image-audio-resource-loading-error-while-labeling\";\n\nexport default {\n  DONE: \"Done!\",\n  NO_COMP_LEFT: \"No more completions\",\n  NO_NEXT_TASK: \"No more data available for labeling\",\n  NO_ACCESS: \"You don't have access to this task\",\n\n  // Tree validation messages\n  ERR_REQUIRED: ({ modelName, field }) => {\n    return `Attribute <b>${field}</b> is required for <b>${modelName}</b>`;\n  },\n\n  ERR_UNKNOWN_TAG: ({ modelName, field, value }) => {\n    return `Tag with name <b>${value}</b> is not registered. Referenced by <b>${modelName}#${field}</b>.`;\n  },\n\n  ERR_TAG_NOT_FOUND: ({ modelName, field, value }) => {\n    return `Tag with name <b>${value}</b> does not exist in the config. Referenced by <b>${modelName}#${field}</b>.`;\n  },\n\n  ERR_TAG_UNSUPPORTED: ({ modelName, field, value, validType }) => {\n    return `Invalid attribute <b>${field}</b> for <b>${modelName}</b>: referenced tag is <b>${value}</b>, but <b>${modelName}</b> can only control <b>${[]\n      .concat(validType)\n      .join(\", \")}</b>`;\n  },\n\n  ERR_BAD_TYPE: ({ modelName, field, validType }) => {\n    return `Attribute <b>${field}</b> of tag <b>${modelName}</b> has invalid type. Valid types are: <b>${validType}</b>.`;\n  },\n\n  ERR_INTERNAL: ({ value }) => {\n    return `Internal error. See browser console for more info. Try again or contact developers.<br/>${value}`;\n  },\n\n  ERR_GENERAL: ({ value }) => {\n    return value;\n  },\n\n  // Object loading errors\n  URL_CORS_DOCS,\n\n  ERR_LOADING_AUDIO: ({ attr, url, error }) => (\n    <p>\n      Error while loading audio. Check <code>{attr}</code> field in task.\n      <br />\n      Technical description: {error}\n      <br />\n      URL: {url}\n    </p>\n  ),\n\n  ERR_LOADING_S3: ({ attr, url, error }) => `\n    <div>\n      <p>\n        There was an issue loading URL from <code>${attr}</code> value.\n        The request parameters are invalid.\n        If you are using S3, make sure you’ve specified the right bucket region name.\n      </p>\n      <p>URL: <code><a href=${url} target=\"_blank\">${url}</a></code></p>\n    </div>\n  `,\n\n  ERR_LOADING_CORS: ({ attr, url, error }) => `\n    <div>\n      <p>\n        There was an issue loading URL from <code>${attr}</code> value.\n        Most likely that's because static server has wide-open CORS.\n        <a href=${URL_CORS_DOCS} target=\"_blank\">Read more on that here.</a>\n      </p>\n      <p>\n        Also check that:\n        <ul>\n          <li>URL is valid</li>\n          <li>Network is reachable</li>\n        </ul>\n      </p>\n      <p>URL: <code><a href=${url} target=\"_blank\">${url}</a></code></p>\n    </div>\n  `,\n\n  ERR_LOADING_HTTP: ({ attr, url, error }) => `\n    <div>\n      <p>\n        There was an issue loading URL from <code>${attr}</code> value\n      </p>\n      <p>\n        Things to look out for:\n        <ul>\n          <li>URL is valid</li>\n          <li>URL scheme matches the service scheme, i.e. https and https</li>\n          <li>\n            The static server has wide-open CORS,\n            <a href=${URL_CORS_DOCS} target=\"_blank\">more on that here</a>\n          </li>\n        </ul>\n      </p>\n      <p>\n        Technical description: <code>${error}</code>\n        <br />\n        URL: <code><a href=${url} target=\"_blank\">${url}</a></code>\n      </p>\n    </div>\n  `,\n};\n","import CursorPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.cursor\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport throttle from \"lodash.throttle\";\nimport { ZoomInOutlined, ZoomOutOutlined } from \"@ant-design/icons\";\nimport RegionsPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.regions.min.js\";\nimport TimelinePlugin from \"wavesurfer.js/dist/plugin/wavesurfer.timeline.min.js\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport styles from \"./Waveform.module.scss\";\nimport globalStyles from \"../../styles/global.module.scss\";\nimport { Slider, Row, Col, Select } from \"antd\";\nimport { SoundOutlined } from \"@ant-design/icons\";\nimport InfoModal from \"../Infomodal/Infomodal\";\nimport messages from \"../../utils/messages\";\n\n/**\n * Use formatTimeCallback to style the notch labels as you wish, such\n * as with more detail as the number of pixels per second increases.\n *\n * Here we format as M:SS.frac, with M suppressed for times < 1 minute,\n * and frac having 0, 1, or 2 digits as the zoom increases.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override timeInterval, primaryLabelInterval and/or\n * secondaryLabelInterval so they all work together.\n *\n * @param: seconds\n * @param: pxPerSec\n */\nfunction formatTimeCallback(seconds, pxPerSec) {\n  seconds = Number(seconds);\n  var minutes = Math.floor(seconds / 60);\n  seconds = seconds % 60;\n\n  // fill up seconds with zeroes\n  var secondsStr = Math.round(seconds).toString();\n  if (pxPerSec >= 25 * 10) {\n    secondsStr = seconds.toFixed(2);\n  } else if (pxPerSec >= 25 * 1) {\n    secondsStr = seconds.toFixed(1);\n  }\n\n  if (minutes > 0) {\n    if (seconds < 10) {\n      secondsStr = \"0\" + secondsStr;\n    }\n    return `${minutes}:${secondsStr}`;\n  }\n  return secondsStr;\n}\n\n/**\n * Use timeInterval to set the period between notches, in seconds,\n * adding notches as the number of pixels per second increases.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param: pxPerSec\n */\nfunction timeInterval(pxPerSec) {\n  var retval = 1;\n  if (pxPerSec >= 25 * 100) {\n    retval = 0.01;\n  } else if (pxPerSec >= 25 * 40) {\n    retval = 0.025;\n  } else if (pxPerSec >= 25 * 10) {\n    retval = 0.1;\n  } else if (pxPerSec >= 25 * 4) {\n    retval = 0.25;\n  } else if (pxPerSec >= 25) {\n    retval = 1;\n  } else if (pxPerSec * 5 >= 25) {\n    retval = 5;\n  } else if (pxPerSec * 15 >= 25) {\n    retval = 15;\n  } else {\n    retval = Math.ceil(0.5 / pxPerSec) * 60;\n  }\n  return retval;\n}\n\n/**\n * Return the cadence of notches that get labels in the primary color.\n * EG, return 2 if every 2nd notch should be labeled,\n * return 10 if every 10th notch should be labeled, etc.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param pxPerSec\n */\nfunction primaryLabelInterval(pxPerSec) {\n  var retval = 1;\n  if (pxPerSec >= 25 * 100) {\n    retval = 10;\n  } else if (pxPerSec >= 25 * 40) {\n    retval = 4;\n  } else if (pxPerSec >= 25 * 10) {\n    retval = 10;\n  } else if (pxPerSec >= 25 * 4) {\n    retval = 4;\n  } else if (pxPerSec >= 25) {\n    retval = 1;\n  } else if (pxPerSec * 5 >= 25) {\n    retval = 5;\n  } else if (pxPerSec * 15 >= 25) {\n    retval = 15;\n  } else {\n    retval = Math.ceil(0.5 / pxPerSec) * 60;\n  }\n  return retval;\n}\n\n/**\n * Return the cadence of notches to get labels in the secondary color.\n * EG, return 2 if every 2nd notch should be labeled,\n * return 10 if every 10th notch should be labeled, etc.\n *\n * Secondary labels are drawn after primary labels, so if\n * you want to have labels every 10 seconds and another color labels\n * every 60 seconds, the 60 second labels should be the secondaries.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param pxPerSec\n */\nfunction secondaryLabelInterval(pxPerSec) {\n  // draw one every 10s as an example\n  return Math.floor(10 / timeInterval(pxPerSec));\n}\n\nexport default class Waveform extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      src: this.props.src,\n      pos: 0,\n      colors: {\n        waveColor: \"#97A0AF\",\n        progressColor: \"#52c41a\",\n      },\n      zoom: 0,\n      speed: 1,\n      volume: 1,\n    };\n  }\n\n  /**\n   * Handle to change zoom of wave\n   */\n  onChangeZoom = value => {\n    this.setState({\n      ...this.state,\n      zoom: value,\n    });\n\n    this.wavesurfer.zoom(value);\n  };\n\n  onChangeVolume = value => {\n    this.setState({\n      ...this.state,\n      volume: value,\n    });\n\n    this.wavesurfer.setVolume(value);\n  };\n\n  /**\n   * Handle to change speed of wave\n   */\n  onChangeSpeed = value => {\n    this.setState({\n      ...this.state,\n      speed: value,\n    });\n\n    this.wavesurfer.setPlaybackRate(value);\n  };\n\n  onZoomPlus = (ev, step = 10) => {\n    let val = this.state.zoom;\n    val = val + step;\n    if (val > 700) val = 700;\n\n    this.onChangeZoom(val);\n    ev && ev.preventDefault();\n    return false;\n  };\n\n  onZoomMinus = (ev, step = 10) => {\n    let val = this.state.zoom;\n    val = val - step;\n    if (val < 0) val = 0;\n\n    this.onChangeZoom(val);\n    ev.preventDefault();\n    return false;\n  };\n\n  onWheel = e => {\n    if (e && !e.shiftKey) {\n      return;\n    } else if (e && e.shiftKey) {\n      /**\n       * Disable scrolling page\n       */\n      e.preventDefault();\n    }\n\n    const step = e.deltaY > 0 ? 5 : -5;\n    // console.log(e.evt.deltaY);\n    this.onZoomPlus(e, step);\n  };\n\n  componentDidMount() {\n    this.$el = ReactDOM.findDOMNode(this);\n\n    this.$waveform = this.$el.querySelector(\"#wave\");\n\n    let wavesurferConfigure = {\n      container: this.$waveform,\n      waveColor: this.state.colors.waveColor,\n      height: this.props.height,\n      backend: \"MediaElement\",\n      progressColor: this.state.colors.progressColor,\n\n      splitChannels: true,\n    };\n\n    if (this.props.regions) {\n      wavesurferConfigure = {\n        ...wavesurferConfigure,\n        plugins: [\n          RegionsPlugin.create({\n            dragSelection: {\n              slop: 5, // slop\n            },\n          }),\n          TimelinePlugin.create({\n            container: \"#timeline\", // the element in which to place the timeline, or a CSS selector to find it\n            formatTimeCallback: formatTimeCallback, // custom time format callback. (Function which receives number of seconds and returns formatted string)\n            timeInterval: timeInterval, // number of intervals that records consists of. Usually it is equal to the duration in minutes. (Integer or function which receives pxPerSec value and returns value)\n            primaryLabelInterval: primaryLabelInterval, // number of primary time labels. (Integer or function which receives pxPerSec value and reurns value)\n            secondaryLabelInterval: secondaryLabelInterval, // number of secondary time labels (Time labels between primary labels, integer or function which receives pxPerSec value and reurns value).\n            primaryColor: \"blue\", // the color of the modulo-ten notch lines (e.g. 10sec, 20sec). The default is '#000'.\n            secondaryColor: \"blue\", // the color of the non-modulo-ten notch lines. The default is '#c0c0c0'.\n            primaryFontColor: \"#000\", // the color of the non-modulo-ten time labels (e.g. 10sec, 20sec). The default is '#000'.\n            secondaryFontColor: \"#000\",\n          }),\n          CursorPlugin.create({\n            wrapper: this.$waveform,\n            showTime: true,\n            opacity: 1,\n          }),\n        ],\n      };\n    }\n\n    this.wavesurfer = WaveSurfer.create(wavesurferConfigure);\n\n    this.wavesurfer.on(\"error\", e => {\n      const error = String(e.message || e || \"\");\n      const url = this.props.src;\n\n      // just general error message\n      let body = messages.ERR_LOADING_AUDIO({ attr: this.props.dataField, error, url });\n\n      // \"Failed to fetch\" or HTTP error\n      if (error?.includes(\"HTTP\") || error?.includes(\"fetch\")) {\n        this.wavesurfer.hadNetworkError = true;\n\n        body = messages.ERR_LOADING_HTTP({ attr: this.props.dataField, error, url });\n      } else if (typeof e === \"string\" && e.includes(\"media element\")) {\n        // obviously audio cannot be parsed if it was not loaded successfully\n        // but WS can generate such error even after network errors, so skip it\n        if (this.wavesurfer.hadNetworkError) return;\n        // \"Error loading media element\"\n        body = \"Error while processing audio. Check media format and availability.\";\n      }\n\n      InfoModal.error(body, \"Wow!\");\n    });\n\n    /**\n     * Load data\n     */\n    this.wavesurfer.load(this.props.src);\n\n    /**\n     * Speed of waveform\n     */\n    this.wavesurfer.setPlaybackRate(this.state.speed);\n\n    const self = this;\n\n    if (this.props.regions) {\n      /**\n       * Mouse enter on region\n       */\n      this.wavesurfer.on(\"region-mouseenter\", reg => {\n        reg._region.onMouseOver();\n      });\n\n      /**\n       * Mouse leave on region\n       */\n      this.wavesurfer.on(\"region-mouseleave\", reg => {\n        reg._region.onMouseLeave();\n      });\n\n      /**\n       * Add region to wave\n       */\n      this.wavesurfer.on(\"region-created\", reg => {\n        const region = self.props.addRegion(reg);\n        if (!region) return;\n\n        reg._region = region;\n        reg.color = region.selectedregionbg;\n\n        reg.on(\"click\", () => region.onClick(self.wavesurfer));\n        reg.on(\"update-end\", () => region.onUpdateEnd(self.wavesurfer));\n\n        reg.on(\"dblclick\", e => {\n          window.setTimeout(function() {\n            reg.play();\n          }, 0);\n        });\n\n        reg.on(\"out\", () => {});\n      });\n    }\n\n    /**\n     * Handler of slider\n     */\n    const slider = document.querySelector(\"#slider\");\n\n    if (slider) {\n      slider.oninput = function() {\n        self.wavesurfer.zoom(Number(this.value));\n      };\n    }\n\n    this.wavesurfer.on(\"ready\", () => {\n      self.props.onCreate(this.wavesurfer);\n\n      this.wavesurfer.container.onwheel = throttle(this.onWheel, 100);\n    });\n\n    /**\n     * Pause trigger of audio\n     */\n    this.wavesurfer.on(\"pause\", self.props.handlePlay);\n\n    /**\n     * Play trigger of audio\n     */\n    this.wavesurfer.on(\"play\", self.props.handlePlay);\n\n    if (this.props.regions) {\n      this.props.onLoad(this.wavesurfer);\n    }\n  }\n\n  render() {\n    const self = this;\n\n    const speeds = [\"0.5\", \"0.75\", \"1.0\", \"1.25\", \"1.5\", \"2.0\"];\n\n    return (\n      <div>\n        <div id=\"wave\" className={styles.wave} />\n\n        <div id=\"timeline\" />\n\n        {this.props.zoom && (\n          <Row gutter={16} style={{ marginTop: \"1em\" }}>\n            <Col flex={12} style={{ textAlign: \"right\", marginTop: \"6px\" }}>\n              <div style={{ display: \"flex\" }}>\n                <div style={{ marginTop: \"6px\", marginRight: \"5px\" }}>\n                  <ZoomOutOutlined onClick={this.onZoomMinus} className={globalStyles.link} />\n                </div>\n                <div style={{ width: \"100%\" }}>\n                  <Slider\n                    min={0}\n                    step={10}\n                    max={500}\n                    value={typeof this.state.zoom === \"number\" ? this.state.zoom : 0}\n                    onChange={value => {\n                      this.onChangeZoom(value);\n                    }}\n                  />\n                </div>\n                <div style={{ marginTop: \"6px\", marginLeft: \"5px\" }}>\n                  <ZoomInOutlined onClick={this.onZoomPlus} className={globalStyles.link} />\n                </div>\n              </div>\n            </Col>\n            <Col flex={3}>\n              {this.props.volume && (\n                <div style={{ display: \"flex\", marginTop: \"6.5px\" }}>\n                  <div style={{ width: \"100%\" }}>\n                    <Slider\n                      min={0}\n                      max={1}\n                      step={0.1}\n                      value={typeof this.state.volume === \"number\" ? this.state.volume : 1}\n                      onChange={value => {\n                        this.onChangeVolume(value);\n                      }}\n                    />\n                  </div>\n                  <div style={{ marginLeft: \"10px\", marginTop: \"5px\" }}>\n                    <SoundOutlined />\n                  </div>\n                </div>\n              )}\n            </Col>\n            <Col flex={1} style={{ marginTop: \"6px\" }}>\n              {this.props.speed && (\n                <Select\n                  placeholder=\"Speed\"\n                  style={{ width: \"100%\" }}\n                  defaultValue={this.state.speed}\n                  onChange={self.onChangeSpeed}\n                >\n                  {speeds.map(speed => (\n                    <Select.Option value={+speed} key={speed}>\n                      Speed {speed}\n                    </Select.Option>\n                  ))}\n                </Select>\n              )}\n            </Col>\n          </Row>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport AudioControls from \"./Audio/Controls\";\nimport ObjectBase from \"./Base\";\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport ObjectTag from \"../../components/Tags/Object\";\nimport Registry from \"../../core/Registry\";\nimport Waveform from \"../../components/Waveform/Waveform\";\n\n/**\n * Audio tag plays a simple audio file\n * @example\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\" />\n * </View>\n * @example\n * <!-- Audio classification -->\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\" />\n *   <Choices name=\"ch\" toName=\"audio\">\n *     <Choice value=\"Positive\" />\n *     <Choice value=\"Negative\" />\n *   </Choices>\n * </View>\n * @example\n * <!-- Audio transcription -->\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\" />\n *   <TextArea name=\"ta\" toName=\"audio\" />\n * </View>\n * @name Audio\n * @param {string} name of the element\n * @param {string} value of the element\n * @param {string} hotkey hotkey used to play/pause audio\n */\n\nconst TagAttrs = types.model({\n  name: types.identifier,\n  value: types.maybeNull(types.string),\n  zoom: types.optional(types.boolean, false),\n  volume: types.optional(types.boolean, false),\n  speed: types.optional(types.boolean, false),\n  hotkey: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    type: \"audio\",\n    _value: types.optional(types.string, \"\"),\n    playing: types.optional(types.boolean, false),\n    height: types.optional(types.number, 20),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(obj, fromModel) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n\n    handlePlay() {\n      self.playing = !self.playing;\n    },\n\n    onHotKey() {\n      return self._ws.playPause();\n    },\n\n    onLoad(ws) {\n      self._ws = ws;\n    },\n\n    wsCreated(ws) {\n      self._ws = ws;\n    },\n  }));\n\nconst AudioModel = types.compose(\"AudioModel\", Model, TagAttrs, ProcessAttrsMixin, ObjectBase);\n\nconst HtxAudioView = ({ store, item }) => {\n  if (!item._value) return null;\n\n  return (\n    <ObjectTag item={item}>\n      <Waveform\n        dataField={item.value}\n        src={item._value}\n        onCreate={item.wsCreated}\n        onLoad={item.onLoad}\n        handlePlay={item.handlePlay}\n        speed={item.speed}\n        zoom={item.zoom}\n        volume={item.volume}\n        regions={false}\n        height={item.height}\n      />\n      <AudioControls item={item} store={store} />\n    </ObjectTag>\n  );\n};\n\nconst HtxAudio = inject(\"store\")(observer(HtxAudioView));\n\nRegistry.addTag(\"audio\", AudioModel, HtxAudio);\nRegistry.addObjectType(AudioModel);\n\nexport { AudioModel, HtxAudio };\n","import { types } from \"mobx-state-tree\";\n\nimport { cloneNode } from \"../core/Helpers\";\n\nexport default types\n  .model(\"WithStates\")\n  .views(self => ({\n    // returns one color from all the states\n    getOneColor(pick = \"first\") {\n      if (!self.states) return;\n\n      if (pick === \"first\") {\n        const s = self.states.find(s => \"getSelectedColor\" in s);\n\n        return s ? s.getSelectedColor() : null;\n      }\n\n      if ((pick = \"combine\")) {\n        // [TODO] combine colors\n      }\n    },\n\n    getClonedStates() {\n      return self.states.map(s => cloneNode(s));\n    },\n  }))\n  .actions(self => ({}));\n","export const defaultStyle = {\n  fillcolor: \"orange\",\n  fillopacity: 0.6,\n  strokecolor: \"orange\",\n  strokewidth: 5,\n  opacity: 0.6,\n};\n\nexport default {\n  FILL_COLOR: \"\",\n  STROKE_COLOR: \"\",\n  STROKE_WIDTH: 1,\n\n  // labels\n  LABEL_BACKGROUND: \"#36B37E\",\n\n  RELATION_BACKGROUND: \"#fff\",\n\n  // label on image\n  SHOW_LABEL_FILL: \"white\",\n  SHOW_LABEL_BACKGROUND: \"black\",\n\n  // when region gets highlighted styling\n  HIGHLIGHTED_STROKE_COLOR: \"red\",\n  HIGHLIGHTED_STROKE_WIDTH: 2,\n  HIGHLIGHTED_CSS_BORDER: \"1px dashed #00aeff\",\n\n  // cursors\n  DEFAULT_CURSOR: \"default\",\n  CHOOSE_CURSOR: \"pointer\",\n  POINTER_CURSOR: \"pointer\",\n  MOVE_CURSOR: \"move\",\n  RELATION_MODE_CURSOR: \"crosshair\",\n\n  // images\n  BRIGHTNESS_VALUE: 100,\n  BRIGHTNESS_MAX: 400,\n\n  CONTRAST_VALUE: 100,\n  CONTRAST_MAX: 400,\n};\n","import { types } from \"mobx-state-tree\";\n\n/**\n * Normalization\n * For normalize many labels to one value\n */\nconst NormalizationMixin = types\n  .model({\n    normInput: types.maybeNull(types.string),\n    normalization: types.maybeNull(types.string),\n  })\n  .actions(self => ({\n    /**\n     * Set normalization\n     * @param {*} val\n     */\n    setNormalization(val) {\n      self.normalization = val;\n    },\n\n    /**\n     * Delete normalization\n     */\n    deleteNormalization() {\n      self.setNormalization(\"\");\n    },\n\n    setNormInput(val) {\n      self.normInput = val;\n    },\n  }));\n\nexport default NormalizationMixin;\n","import { types, getParent, getRoot } from \"mobx-state-tree\";\nimport { guidGenerator } from \"../core/Helpers\";\n\nconst RegionsMixin = types\n  .model({\n    // id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n\n    score: types.maybeNull(types.number),\n    readonly: types.optional(types.boolean, false),\n\n    hidden: types.optional(types.boolean, false),\n\n    parentID: types.optional(types.string, \"\"),\n  })\n  .volatile(self => ({\n    // selected: false,\n    highlighted: false,\n  }))\n  .views(self => ({\n    get perRegionStates() {\n      const states = self.states;\n      return states && states.filter(s => s.perregion === true);\n    },\n\n    get store() {\n      return getRoot(self);\n    },\n\n    get parent() {\n      return getParent(self);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get editable() {\n      return self.readonly === false && self.completion.editable === true;\n    },\n  }))\n  .actions(self => ({\n    setParentID(id) {\n      self.parentID = id;\n    },\n\n    moveTop(size) {},\n    moveBottom(size) {},\n    moveLeft(size) {},\n    moveRight(size) {},\n\n    sizeRight(size) {},\n    sizeLeft(size) {},\n    sizeTop(size) {},\n    sizeBottom(size) {},\n\n    // \"web\" degree is opposite to mathematical, -90 is 90 actually\n    // swapSizes = true when canvas is already rotated at this moment\n    rotatePoint(point, degree, swapSizes = true) {\n      const { x, y } = point;\n      if (!degree) return { x, y };\n\n      degree = (360 + degree) % 360;\n      // transform origin is (w/2, w/2) for ccw rotation\n      // (h/2, h/2) for cw rotation\n      const w = self.parent.stageWidth;\n      const h = self.parent.stageHeight;\n      // actions: translate to fit origin, rotate, translate back\n      //   const shift = size / 2;\n      //   const newX = (x - shift) * cos + (y - shift) * sin + shift;\n      //   const newY = -(x - shift) * sin + (y - shift) * cos + shift;\n      // for ortogonal degrees it's simple:\n      if (degree === 270) return { x: y, y: (swapSizes ? h : w) - x };\n      if (degree === 90) return { x: (swapSizes ? w : h) - y, y: x };\n      if (Math.abs(degree) === 180) return { x: w - x, y: h - y };\n      return { x, y };\n    },\n\n    rotateDimensions({ width, height }, degree) {\n      if ((degree + 360) % 180 === 0) return { width, height };\n      return { width: height, height: width };\n    },\n\n    // update region appearence based on it's current states, for\n    // example bbox needs to update its colors when you change the\n    // label, becuase it takes color from the label\n    updateAppearenceFromState() {},\n\n    serialize() {\n      console.error(\"Region class needs to implement serialize\");\n    },\n\n    toStateJSON() {\n      const parent = self.parent;\n      const buildTree = control => {\n        const tree = {\n          id: self.pid,\n          from_name: control.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: control.type,\n          parent_id: self.parentID === \"\" ? null : self.parentID,\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states\n          .map(s => {\n            const ser = self.serialize(s, parent);\n            if (!ser) return null;\n\n            const tree = {\n              ...buildTree(s),\n              ...ser,\n            };\n\n            // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n\n            return tree;\n          })\n          .filter(Boolean);\n      } else {\n        const obj = self.completion.toNames.get(parent.name);\n        const control = obj.length ? obj[0] : obj;\n\n        const tree = {\n          ...buildTree(control),\n          ...self.serialize(control, parent),\n        };\n\n        return tree;\n      }\n    },\n\n    selectRegion() {},\n\n    /**\n     * @todo fix \"keep selected\" setting\n     * Common logic for unselection; specific actions should be in `afterUnselectRegion`\n     * @param {boolean} tryToKeepStates try to keep states selected if such settings enabled\n     */\n    unselectRegion(tryToKeepStates = false) {\n      console.log(\"UNSELECT REGION\", \"you should not be here\");\n      if (1) return;\n      const completion = self.completion;\n      const parent = self.parent;\n      const keepStates = tryToKeepStates && self.store.settings.continuousLabeling;\n\n      if (completion.relationMode) {\n        completion.stopRelationMode();\n      }\n      if (parent.setSelected) {\n        parent.setSelected(undefined);\n      }\n\n      self.selected = false;\n      completion.setHighlightedNode(null);\n\n      self.afterUnselectRegion();\n\n      if (!keepStates) {\n        completion.unloadRegionState(self);\n      }\n    },\n\n    afterUnselectRegion() {},\n\n    onClickRegion() {\n      const completion = self.completion;\n      if (!completion.editable) return;\n\n      if (completion.relationMode) {\n        completion.addRelation(self);\n        completion.stopRelationMode();\n        completion.regionStore.unselectAll();\n      } else {\n        const wasNotSelected = !self.selected;\n        completion.unselectAll();\n        if (wasNotSelected) {\n          completion.selectArea(self);\n        }\n      }\n    },\n\n    /**\n     * Remove region\n     */\n    deleteRegion() {\n      if (!self.completion.editable) return;\n      if (self.selected) self.completion.unselectAll();\n      if (self.destroyRegion) self.destroyRegion();\n      self.completion.deleteRegion(self);\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n    },\n\n    toggleHighlight() {\n      self.setHighlight(!self.highlighted);\n    },\n\n    toggleHidden(e) {\n      self.hidden = !self.hidden;\n      e && e.stopPropagation();\n    },\n  }));\n\nexport default RegionsMixin;\n","import { types, getParent, getRoot, getSnapshot } from \"mobx-state-tree\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport Registry from \"../core/Registry\";\n\nconst Result = types\n  .model(\"Result\", {\n    id: types.optional(types.identifier, guidGenerator),\n    // pid: types.optional(types.string, guidGenerator),\n\n    score: types.maybeNull(types.number),\n    // @todo to readonly mixin\n    // readonly: types.optional(types.boolean, false),\n\n    // @why?\n    // hidden: types.optional(types.boolean, false),\n\n    // @todo to mixins\n    // selected: types.optional(types.boolean, false),\n    // highlighted: types.optional(types.boolean, false),\n\n    // @todo pid?\n    // parentID: types.optional(types.string, \"\"),\n\n    // ImageRegion, TextRegion, HyperTextRegion, AudioRegion)),\n    // optional for classifications\n    // labeling/control tag\n    from_name: types.late(() => types.reference(types.union(...Registry.modelsArr()))),\n    // object tag\n    to_name: types.late(() => types.reference(types.union(...Registry.objectTypes()))),\n    // @todo some general type, maybe just a `string`\n    type: types.enumeration([\n      \"labels\",\n      \"hypertextlabels\",\n      \"rectangle\",\n      \"keypoint\",\n      \"polygon\",\n      \"brush\",\n      \"ellipse\",\n      \"rectanglelabels\",\n      \"keypointlabels\",\n      \"polygonlabels\",\n      \"brushlabels\",\n      \"ellipselabels\",\n      \"timeserieslabels\",\n      \"choices\",\n      \"taxonomy\",\n      \"textarea\",\n      \"rating\",\n      \"pairwise\",\n    ]),\n    // @todo much better to have just a value, not a hash with empty fields\n    value: types.model({\n      rating: types.maybe(types.number),\n      text: types.maybe(types.union(types.string, types.array(types.string))),\n      choices: types.maybe(types.array(types.string)),\n      // pairwise\n      selected: types.maybe(types.enumeration([\"left\", \"right\"])),\n      // @todo all other *labels\n      labels: types.maybe(types.array(types.string)),\n      htmllabels: types.maybe(types.array(types.string)),\n      rectanglelabels: types.maybe(types.array(types.string)),\n      keypointlabels: types.maybe(types.array(types.string)),\n      polygonlabels: types.maybe(types.array(types.string)),\n      ellipselabels: types.maybe(types.array(types.string)),\n      brushlabels: types.maybe(types.array(types.string)),\n      timeserieslabels: types.maybe(types.array(types.string)),\n      taxonomy: types.frozen(), // array of arrays of strings\n    }),\n    // info about object and region\n    // meta: types.frozen(),\n  })\n  .views(self => ({\n    get perRegionStates() {\n      const states = self.states;\n      return states && states.filter(s => s.perregion === true);\n    },\n\n    get store() {\n      return getRoot(self);\n    },\n\n    get area() {\n      return getParent(self, 2);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get mainValue() {\n      return self.value[self.from_name.valueType];\n    },\n\n    get hasValue() {\n      const value = self.mainValue;\n      if (!value) return false;\n      if (Array.isArray(value)) return value.length > 0;\n      return true;\n    },\n\n    get editable() {\n      return self.readonly === false && self.completion.editable === true;\n    },\n\n    getSelectedString(joinstr = \" \") {\n      return self.mainValue?.join(joinstr) || \"\";\n    },\n\n    get selectedLabels() {\n      return self.mainValue?.map(value => self.from_name.findLabel(value)).filter(Boolean);\n    },\n\n    /**\n     * Checks perRegion and Visibility params\n     */\n    get isSubmitable() {\n      const control = self.from_name;\n\n      if (control.perregion) {\n        const label = control.whenlabelvalue;\n        if (label && !self.area.hasLabel(label)) return false;\n      }\n\n      if (control.visiblewhen === \"choice-selected\") {\n        const tagName = control.whentagname;\n        const choiceValues = control.whenchoicevalue ? control.whenchoicevalue.split(\",\") : null;\n        const results = self.completion.results.filter(r => r.type === \"choices\" && r !== self);\n        if (tagName) {\n          const result = results.find(r => r.from_name.name === tagName);\n          if (!result) return false;\n          if (choiceValues && !choiceValues.some(v => result.mainValue.includes(v))) return false;\n        } else {\n          if (!results.length) return false;\n          // if no given choice value is selected in any choice result\n          if (choiceValues && !choiceValues.some(v => results.some(r => r.mainValue.includes(v)))) return false;\n        }\n      }\n\n      return true;\n    },\n\n    get tag() {\n      const value = self.mainValue;\n      if (!value) return null;\n      if (!self.from_name.findLabel) return null;\n      return self.from_name.findLabel(value[0]);\n    },\n\n    get style() {\n      if (!self.tag) return null;\n      const fillcolor = self.tag.background || self.tag.parent.fillcolor;\n      if (!fillcolor) return null;\n      const strokecolor = self.tag.background || self.tag.parent.strokecolor;\n      const { strokewidth, fillopacity, opacity } = self.tag.parent;\n      return { strokecolor, strokewidth, fillcolor, fillopacity, opacity };\n    },\n  }))\n  .volatile(self => ({\n    pid: \"\",\n    selected: false,\n    // highlighted: types.optional(types.boolean, false),\n  }))\n  .actions(self => ({\n    setValue(value) {\n      self.value[self.from_name.valueType] = value;\n    },\n\n    afterCreate() {\n      self.pid = self.id;\n    },\n\n    afterAttach() {\n      // const tag = self.from_name;\n      // update state of classification tags\n      // @todo unify this with `selectArea`\n    },\n\n    setParentID(id) {\n      self.parentID = id;\n    },\n\n    // update region appearence based on it's current states, for\n    // example bbox needs to update its colors when you change the\n    // label, becuase it takes color from the label\n    updateAppearenceFromState() {},\n\n    serialize() {\n      const { from_name, to_name, type, score, value } = getSnapshot(self);\n      const { valueType } = self.from_name;\n      const data = self.area ? self.area.serialize() : {};\n      if (!data) return null;\n      if (!self.isSubmitable) return null;\n      // cut off completion id\n      const id = self.area.cleanId;\n      if (!data.value) data.value = {};\n\n      const meta = self.from_name.metaValue;\n      if (meta) {\n        data.meta = { ...data.meta, ...meta };\n      }\n\n      if (self.area.parentID) {\n        data.parentID = self.area.parentID.replace(/#.*/, \"\");\n      }\n\n      Object.assign(data, { id, from_name, to_name, type });\n      value[valueType] && Object.assign(data.value, { [valueType]: value[valueType] });\n      if (typeof score === \"number\") data.score = score;\n\n      return data;\n    },\n\n    toStateJSON() {\n      const parent = self.parent;\n      const buildTree = control => {\n        const tree = {\n          id: self.pid,\n          from_name: control.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: control.type,\n          parent_id: self.parentID === \"\" ? null : self.parentID,\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states\n          .map(s => {\n            const ser = self.serialize(s, parent);\n            if (!ser) return null;\n\n            const tree = {\n              ...buildTree(s),\n              ...ser,\n            };\n\n            // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n\n            return tree;\n          })\n          .filter(Boolean);\n      } else {\n        const obj = self.completion.toNames.get(parent.name);\n        const control = obj.length ? obj[0] : obj;\n\n        const tree = {\n          ...buildTree(control),\n          ...self.serialize(control, parent),\n        };\n\n        return tree;\n      }\n    },\n\n    /**\n     * Remove region\n     */\n    deleteRegion() {\n      if (!self.completion.editable) return;\n\n      self.unselectRegion();\n\n      self.completion.relationStore.deleteNodeRelation(self);\n\n      if (self.type === \"polygonregion\") {\n        self.destroyRegion();\n      }\n\n      self.completion.regionStore.deleteRegion(self);\n\n      self.completion.deleteRegion(self);\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n    },\n\n    toggleHighlight() {\n      self.setHighlight(!self.highlighted);\n    },\n\n    toggleHidden() {\n      self.hidden = !self.hidden;\n    },\n  }));\n\nexport default Result;\n","import { types, getParent, destroy } from \"mobx-state-tree\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport Result from \"../regions/Result\";\n\nexport const AreaMixin = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    results: types.array(Result),\n    parentID: types.maybeNull(types.string),\n  })\n  .views(self => ({\n    // self id without completion id added to uniquiness across all the tree\n    get cleanId() {\n      return self.id.replace(/#.*/, \"\");\n    },\n\n    get completion() {\n      return getParent(self, 2);\n    },\n\n    get labeling() {\n      return self.results.find(r => r.type.endsWith(\"labels\"));\n    },\n\n    get tag() {\n      return self.labeling?.from_name;\n    },\n\n    hasLabel(value) {\n      return self.labeling?.mainValue?.includes(value);\n    },\n\n    get perRegionTags() {\n      return self.completion.toNames.get(self.object.name)?.filter(tag => tag.perregion) || [];\n    },\n\n    get parent() {\n      return self.object;\n    },\n\n    get style() {\n      const styled = self.results.find(r => r.style);\n      return styled && styled.style;\n    },\n\n    // @todo may be slow, consider to add some code to completion (un)select* methods\n    get selected() {\n      return self.completion.highlightedNode === self;\n    },\n\n    getOneColor() {\n      return self.style?.fillcolor || \"#ccc\";\n    },\n  }))\n  .volatile(self => ({\n    // selected: false,\n  }))\n  .actions(self => ({\n    beforeDestroy() {\n      self.results.forEach(r => destroy(r));\n    },\n\n    setSelected(value) {\n      self.selected = value;\n    },\n\n    addResult(r) {\n      self.results.push(r);\n    },\n\n    removeResult(r) {\n      const index = self.results.indexOf(r);\n      if (index < 0) return;\n      self.results.splice(index, 1);\n      destroy(r);\n      if (!self.results.length) self.completion.deleteArea(self);\n    },\n\n    setValue(tag) {\n      const result = self.results.find(r => r.from_name === tag);\n      const values = tag.selectedValues();\n      if (result) {\n        if (tag.holdsState) result.setValue(values);\n        else self.removeResult(result);\n      } else {\n        self.results.push({\n          area: self,\n          from_name: tag,\n          to_name: self.object,\n          type: tag.resultType,\n          value: {\n            [tag.valueType]: values,\n          },\n        });\n      }\n      self.updateAppearenceFromState && self.updateAppearenceFromState();\n    },\n  }));\n","import { types, getRoot } from \"mobx-state-tree\";\n\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport Constants from \"../core/Constants\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Utils from \"../utils\";\nimport { AudioPlusModel } from \"../tags/object/AudioPlus\";\nimport { AreaMixin } from \"../mixins/AreaMixin\";\nimport Registry from \"../core/Registry\";\n\nconst Model = types\n  .model(\"AudioRegionModel\", {\n    type: \"audioregion\",\n    object: types.late(() => types.reference(AudioPlusModel)),\n\n    start: types.number,\n    end: types.number,\n\n    selectedregionbg: types.optional(types.string, \"rgba(0, 0, 0, 0.5)\"),\n  })\n  .views(self => ({\n    get regionElement() {\n      return self.wsRegionElement(self._ws_region);\n    },\n\n    wsRegionElement(wsRegion) {\n      const elID = wsRegion.id;\n      let el = document.querySelector(`[data-id=\"${elID}\"]`);\n\n      return el;\n    },\n  }))\n  .actions(self => ({\n    serialize() {\n      let res = {\n        original_length: self.object._ws.getDuration(),\n        value: {\n          start: self.start,\n          end: self.end,\n        },\n      };\n\n      return res;\n    },\n\n    updateColor(alpha = 1) {\n      const color = Utils.Colors.convertToRGBA(self.getOneColor(), alpha);\n      // eslint-disable-next-line no-unused-expressions\n      self._ws_region?.update({ color });\n    },\n\n    updateAppearenceFromState() {\n      if (self._ws_region?.update) {\n        self.applyCSSClass(self._ws_region);\n      }\n    },\n\n    applyCSSClass(wsRegion) {\n      self.updateColor(0.3);\n\n      const settings = getRoot(self).settings;\n      const el = self.wsRegionElement(wsRegion);\n      if (!el) return;\n      const classes = [el.className, \"htx-highlight\", \"htx-highlight-last\"];\n\n      if (!self.parent.showlabels && !settings.showLabels) {\n        classes.push(\"htx-no-label\");\n      } else {\n        const cssCls = Utils.HTML.labelWithCSS(el, {\n          labels: self.labeling?.mainValue,\n          score: self.score,\n        });\n        classes.push(cssCls);\n      }\n      el.className = classes.filter(Boolean).join(\" \");\n    },\n\n    /**\n     * Select audio region\n     */\n    selectRegion() {\n      self.updateColor(0.8);\n\n      const el = self.wsRegionElement(self._ws_region);\n      if (el) {\n        // scroll object tag but don't scroll the document\n        const container = window.document.scrollingElement;\n        const top = container.scrollTop;\n        const left = container.scrollLeft;\n        el.scrollIntoViewIfNeeded ? el.scrollIntoViewIfNeeded() : el.scrollIntoView();\n        window.document.scrollingElement.scrollTo(left, top);\n      }\n    },\n\n    /**\n     * Unselect audio region\n     */\n    afterUnselectRegion() {\n      self.updateColor(0.3);\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n\n      if (val) {\n        self.updateColor(0.8);\n        self._ws_region.element.style.border = Constants.HIGHLIGHTED_CSS_BORDER;\n      } else {\n        self.updateColor(0.3);\n        self._ws_region.element.style.border = \"none\";\n      }\n    },\n\n    beforeDestroy() {\n      if (self._ws_region) self._ws_region.remove();\n    },\n\n    onClick(wavesurfer) {\n      // if (! self.editable) return;\n\n      if (!self.completion.relationMode) {\n        // Object.values(wavesurfer.regions.list).forEach(r => {\n        //   // r.update({ color: self.selectedregionbg });\n        // });\n\n        self._ws_region.update({ color: Utils.Colors.rgbaChangeAlpha(self.selectedregionbg, 0.8) });\n      }\n\n      self.onClickRegion();\n    },\n\n    onMouseOver() {\n      if (self.completion.relationMode) {\n        self.setHighlight(true);\n        self._ws_region.element.style.cursor = Constants.RELATION_MODE_CURSOR;\n      }\n    },\n\n    onMouseLeave() {\n      if (self.completion.relationMode) {\n        self.setHighlight(false);\n        self._ws_region.element.style.cursor = Constants.MOVE_CURSOR;\n      }\n    },\n\n    onUpdateEnd(wavesurfer) {\n      self.start = self._ws_region.start;\n      self.end = self._ws_region.end;\n      self.updateColor(self.selected ? 0.8 : 0.3);\n    },\n  }));\n\nconst AudioRegionModel = types.compose(\n  \"AudioRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  AreaMixin,\n  NormalizationMixin,\n  Model,\n);\n\nRegistry.addRegionType(AudioRegionModel, \"audioplus\");\n\nexport { AudioRegionModel };\n","import React, { Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot, getType } from \"mobx-state-tree\";\n\nimport AudioControls from \"./Audio/Controls\";\nimport ObjectTag from \"../../components/Tags/Object\";\nimport ObjectBase from \"./Base\";\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\nimport Utils from \"../../utils\";\nimport Waveform from \"../../components/Waveform/Waveform\";\nimport styles from \"./AudioPlus/AudioPlus.module.scss\"; // eslint-disable-line no-unused-vars\nimport { AudioRegionModel } from \"../../regions/AudioRegion\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\n/**\n * AudioPlus tag plays audio and shows its wave\n * @example\n * <View>\n *   <Labels name=\"lbl-1\" toName=\"audio-1\">\n *     <Label value=\"Hello\" />\n *     <Label value=\"World\" />\n *   </Labels>\n *   <Rating name=\"rate-1\" toName=\"audio-1\" />\n *   <AudioPlus name=\"audio-1\" value=\"$audio\" />\n * </View>\n * @name AudioPlus\n * @param {string} name - name of the element\n * @param {string} value - value of the element\n * @param {boolean=} [volume=false] - show the volume slider (from 0 to 1)\n * @param {boolean} [speed=false] - show the speed slider (from 0.5 to 3)\n * @param {boolean} [zoom=true] - show the zoom slider\n * @param {string} [hotkey] - hotkey used to play/pause audio\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  value: types.maybeNull(types.string),\n  zoom: types.optional(types.boolean, true),\n  volume: types.optional(types.boolean, true),\n  speed: types.optional(types.boolean, true),\n  hotkey: types.maybeNull(types.string),\n  showlabels: types.optional(types.boolean, false),\n  showscores: types.optional(types.boolean, false),\n  height: types.optional(types.string, \"128\"),\n});\n\nconst Model = types\n  .model(\"AudioPlusModel\", {\n    type: \"audio\",\n    _value: types.optional(types.string, \"\"),\n\n    playing: types.optional(types.boolean, false),\n    regions: types.array(AudioRegionModel),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get regs() {\n      return self.completion?.regionStore.regions.filter(r => r.object === self) || [];\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states && states.filter(s => getType(s).name === \"LabelsModel\" && s.isSelected);\n    },\n  }))\n  .actions(self => ({\n    onHotKey(e) {\n      e && e.preventDefault();\n      return self._ws.playPause();\n    },\n\n    fromStateJSON(obj, fromModel) {\n      let r;\n      let m;\n\n      const fm = self.completion.names.get(obj.from_name);\n      fm.fromStateJSON(obj);\n\n      if (!fm.perregion && fromModel.type !== \"labels\") return;\n\n      /**\n       *\n       */\n      const tree = {\n        pid: obj.id,\n        start: obj.value.start,\n        end: obj.value.end,\n        normalization: obj.normalization,\n        score: obj.score,\n        readonly: obj.readonly,\n      };\n\n      r = self.findRegion({ start: obj.value.start, end: obj.value.end });\n\n      if (fromModel) {\n        m = restoreNewsnapshot(fromModel);\n        // m.fromStateJSON(obj);\n\n        if (!r) {\n          // tree.states = [m];\n          r = self.createRegion(tree, [m]);\n          // r = self.addRegion(tree);\n        } else {\n          r.states.push(m);\n        }\n      }\n\n      if (self._ws) {\n        self._ws.addRegion({\n          start: r.start,\n          end: r.end,\n        });\n      }\n\n      // if (fm.perregion)\n      //     fm.perRegionCleanup();\n\n      r.updateAppearenceFromState();\n\n      return r;\n    },\n\n    setRangeValue(val) {\n      self.rangeValue = val;\n    },\n\n    setPlaybackRate(val) {\n      self.playBackRate = val;\n    },\n\n    createRegion(wsRegion, states) {\n      let bgColor = self.selectedregionbg;\n      const st = states.find(s => s.type === \"labels\");\n      if (st) bgColor = Utils.Colors.convertToRGBA(st.getSelectedColor(), 0.3);\n\n      const r = AudioRegionModel.create({\n        id: wsRegion.id ? wsRegion.id : guidGenerator(),\n        pid: wsRegion.pid ? wsRegion.pid : guidGenerator(),\n        parentID: wsRegion.parent_id === null ? \"\" : wsRegion.parent_id,\n        start: wsRegion.start,\n        end: wsRegion.end,\n        score: wsRegion.score,\n        readonly: wsRegion.readonly,\n        regionbg: self.regionbg,\n        selectedregionbg: bgColor,\n        normalization: wsRegion.normalization,\n        states: states,\n      });\n\n      r._ws_region = wsRegion;\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    addRegion(ws_region) {\n      // area id is assigned to WS region during deserealization\n      const find_r = self.completion.areas.get(ws_region.id);\n\n      if (find_r) {\n        find_r.applyCSSClass(ws_region);\n\n        find_r._ws_region = ws_region;\n        return find_r;\n      }\n\n      const states = self.getAvailableStates();\n      if (states.length === 0) {\n        ws_region.remove && ws_region.remove();\n        return;\n      }\n\n      const control = self.activeStates()[0];\n      const labels = { [control.valueType]: control.selectedValues() };\n      const r = self.completion.createResult(ws_region, labels, control, self);\n      r._ws_region = ws_region;\n      r.updateAppearenceFromState();\n      return r;\n    },\n\n    /**\n     * Play and stop\n     */\n    handlePlay() {\n      self.playing = !self.playing;\n    },\n\n    onLoad(ws) {\n      self._ws = ws;\n\n      self.regs.forEach(obj => {\n        const reg = {\n          id: obj.id,\n          start: obj.start,\n          end: obj.end,\n          color: \"orange\",\n        };\n\n        if (obj.readonly) {\n          reg.drag = false;\n          reg.resize = false;\n        }\n\n        const r = self._ws.addRegion(reg);\n        obj._ws_region = r;\n        obj.updateAppearenceFromState();\n      });\n    },\n\n    wsCreated(ws) {\n      self._ws = ws;\n    },\n  }));\n\nconst AudioPlusModel = types.compose(\"AudioPlusModel\", TagAttrs, Model, ProcessAttrsMixin, ObjectBase);\n\nconst HtxAudioView = ({ store, item }) => {\n  if (!item._value) return null;\n\n  return (\n    <ObjectTag item={item}>\n      <Fragment>\n        <Waveform\n          dataField={item.value}\n          src={item._value}\n          selectRegion={item.selectRegion}\n          handlePlay={item.handlePlay}\n          onCreate={item.wsCreated}\n          addRegion={item.addRegion}\n          onLoad={item.onLoad}\n          speed={item.speed}\n          zoom={item.zoom}\n          volume={item.volume}\n          regions={true}\n          height={item.height}\n        />\n\n        <AudioControls item={item} store={store} />\n        <div style={{ marginBottom: \"4px\" }}></div>\n      </Fragment>\n    </ObjectTag>\n  );\n};\n\nconst HtxAudioPlus = inject(\"store\")(observer(HtxAudioView));\n\nRegistry.addTag(\"audioplus\", AudioPlusModel, HtxAudioPlus);\nRegistry.addObjectType(AudioPlusModel);\n\nexport { AudioRegionModel, AudioPlusModel, HtxAudioPlus };\n","import { types, getRoot } from \"mobx-state-tree\";\n\nimport Utils from \"../utils\";\nimport Constants from \"../core/Constants\";\nimport { highlightRange } from \"../utils/html\";\n\nexport default types\n  .model()\n  .views(self => ({}))\n  .actions(self => ({\n    updateSpansColor(bgcolor, opacity) {\n      if (self._spans) {\n        self._spans.forEach(span => {\n          if (bgcolor) {\n            span.style.backgroundColor = bgcolor;\n          }\n\n          if (opacity) {\n            span.style.backgroundColor = Utils.Colors.rgbaChangeAlpha(span.style.backgroundColor, opacity);\n          }\n        });\n      }\n    },\n\n    updateAppearenceFromState() {\n      const labelColor = self.getLabelColor();\n\n      self.updateSpansColor(labelColor, self.selected ? 0.8 : 0.3);\n      self.applyCSSClass(self._lastSpan);\n    },\n\n    createSpans() {\n      const labelColor = self.getLabelColor();\n      const spans = highlightRange(self, \"htx-highlight\", { backgroundColor: labelColor });\n\n      const lastSpan = spans[spans.length - 1];\n      if (!lastSpan) return;\n\n      self.applyCSSClass(lastSpan);\n\n      self._lastSpan = lastSpan;\n      self._spans = spans;\n\n      return spans;\n    },\n\n    getLabelColor() {\n      let labelColor = self.parent.highlightcolor || self.style.fillcolor;\n\n      if (labelColor) {\n        labelColor = Utils.Colors.convertToRGBA(labelColor, 0.3);\n      }\n\n      return labelColor;\n    },\n\n    applyCSSClass(lastSpan) {\n      if (!lastSpan) return;\n      const classes = [\"htx-highlight\", \"htx-highlight-last\"];\n      const settings = getRoot(self).settings;\n      if (!self.parent.showlabels && !settings.showLabels) {\n        classes.push(\"htx-no-label\");\n      } else {\n        // @todo multilabeling with different labels?\n        const names = self.labeling?.mainValue;\n        const cssCls = Utils.HTML.labelWithCSS(lastSpan, {\n          labels: names,\n          score: self.score,\n        });\n        classes.push(cssCls);\n      }\n      lastSpan.className = classes.filter(Boolean).join(\" \");\n    },\n\n    addEventsToSpans(spans) {\n      const addEvent = s => {\n        s.onmouseover = function(ev) {\n          if (self.completion.relationMode) {\n            self.toggleHighlight();\n            s.style.cursor = Constants.RELATION_MODE_CURSOR;\n            // only one span should be highlighted\n            ev.stopPropagation();\n          } else {\n            s.style.cursor = Constants.POINTER_CURSOR;\n          }\n        };\n\n        s.onmouseout = function() {\n          self.setHighlight(false);\n        };\n\n        s.onmousedown = function(ev) {\n          // if we click to already selected span (=== this)\n          // skip it to allow another span to be selected\n          if (self.parent._currentSpan !== this) {\n            ev.stopPropagation();\n            self.parent._currentSpan = this;\n          }\n        };\n\n        s.onclick = function(ev) {\n          // set above in `onmousedown`, can be nulled when new region created\n          if (self.parent._currentSpan !== this) return;\n          // reset for the case we just created new relation\n          s.style.cursor = Constants.POINTER_CURSOR;\n          self.onClickRegion();\n        };\n\n        return false;\n      };\n\n      spans && spans.forEach(s => addEvent(s));\n    },\n\n    selectRegion() {\n      self.updateSpansColor(null, 0.8);\n\n      const first = self._spans[0];\n      if (first) {\n        if (first.scrollIntoViewIfNeeded) {\n          first.scrollIntoViewIfNeeded();\n        } else {\n          first.scrollIntoView({ block: \"center\", behavior: \"smooth\" });\n        }\n      }\n    },\n\n    /**\n     * Unselect text region\n     */\n    afterUnselectRegion() {\n      self.updateSpansColor(null, 0.3);\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n\n      if (self._spans) {\n        const len = self._spans.length;\n        const fspan = self._spans[0];\n        const lspan = self._spans[len - 1];\n        const mspans = self._spans.slice(1, len - 1);\n\n        const set = (span, s, { top = true, bottom = true, right = true, left = true } = {}) => {\n          if (right) span.style.borderRight = s;\n          if (left) span.style.borderLeft = s;\n          if (top) span.style.borderTop = s;\n          if (bottom) span.style.borderBottom = s;\n        };\n\n        if (self.highlighted) {\n          const h = Constants.HIGHLIGHTED_CSS_BORDER;\n          set(fspan, h, { right: false });\n          set(lspan, h, { left: false });\n\n          if (mspans.length) mspans.forEach(s => set(s, h, { left: false, right: false }));\n        } else {\n          const zpx = \"0px\";\n          set(fspan, zpx);\n          set(lspan, zpx);\n\n          if (mspans.length) mspans.forEach(s => set(s, zpx, { left: false, right: false }));\n        }\n      }\n    },\n  }));\n","import { types } from \"mobx-state-tree\";\n\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport SpanTextMixin from \"../mixins/SpanText\";\nimport Utils from \"../utils\";\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport { HyperTextModel } from \"../tags/object/HyperText\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport { AreaMixin } from \"../mixins/AreaMixin\";\nimport Registry from \"../core/Registry\";\n\nconst Model = types\n  .model(\"HyperTextRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"hypertextregion\",\n    object: types.late(() => types.reference(HyperTextModel)),\n\n    startOffset: types.integer,\n    start: types.string,\n    endOffset: types.integer,\n    end: types.string,\n    text: types.string,\n  })\n  .views(self => ({\n    get parent() {\n      return self.object;\n    },\n    get regionElement() {\n      return self._spans[0];\n    },\n  }))\n  .actions(self => ({\n    beforeDestroy() {\n      Utils.HTML.removeSpans(self._spans);\n    },\n\n    serialize() {\n      let res = {\n        value: {\n          start: self.start,\n          end: self.end,\n          startOffset: self.startOffset,\n          endOffset: self.endOffset,\n        },\n      };\n\n      if (self.object.savetextresult === \"yes\") {\n        res.value[\"text\"] = self.text;\n      }\n\n      return res;\n    },\n  }));\n\nconst HyperTextRegionModel = types.compose(\n  \"HyperTextRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  AreaMixin,\n  NormalizationMixin,\n  Model,\n  SpanTextMixin,\n);\n\nRegistry.addRegionType(HyperTextRegionModel, \"hypertext\");\n\nexport { HyperTextRegionModel };\n","const { types } = require(\"mobx-state-tree\");\n\n/**\n * Validates the value against the given range.\n * By default range is from 0 to 1 including ends.\n * @param {Number} min Minimal value\n * @param {Number} max Maximal value\n */\nconst Range = (min = 0, max = 1) =>\n  types.custom({\n    name: `Range(${min}..${max})`,\n    fromSnapshot(snapshot) {\n      return parseFloat(snapshot);\n    },\n    toSnapshot(value) {\n      return value.toString();\n    },\n    isTargetType(value) {\n      const floatValue = parseFloat(value);\n      return min <= floatValue && floatValue <= max;\n    },\n    getValidationMessage(value) {\n      if (this.isTargetType(value)) return \"\";\n      return `Value ${value} is outside of range ${min}..${max}.`;\n    },\n  });\n\n/**\n * Validates any string value againts CSS color rules.\n * Color value might be named, HEX, HSL(A), RGB(A).\n */\nconst CSSColor = types.custom({\n  name: \"CSSColor\",\n  fromSnapshot(value) {\n    return String(value);\n  },\n  toSnapshot(value) {\n    return value.toString();\n  },\n  isTargetType(value) {\n    const colorTester = new Option().style;\n    colorTester.color = value;\n    return colorTester.color !== \"\";\n  },\n  getValidationMessage(value) {\n    if (this.isTargetType(value)) return \"\";\n    return `Value ${value} doesn't appear to be a valid HEX color.`;\n  },\n});\n\nexport const customTypes = {\n  range: Range,\n  color: CSSColor,\n};\n","import * as xpath from \"xpath-range\";\nimport React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getType, getRoot } from \"mobx-state-tree\";\n\nimport Utils from \"../../utils\";\nimport ObjectBase from \"./Base\";\nimport ObjectTag from \"../../components/Tags/Object\";\nimport RegionsMixin from \"../../mixins/Regions\";\nimport Registry from \"../../core/Registry\";\nimport { HyperTextRegionModel } from \"../../regions/HyperTextRegion\";\nimport { restoreNewsnapshot, guidGenerator } from \"../../core/Helpers\";\nimport { splitBoundaries } from \"../../utils/html\";\nimport { runTemplate } from \"../../core/Template\";\nimport { customTypes } from \"../../core/CustomTypes\";\n\n/**\n * HyperText tag shows an HyperText markup that can be labeled\n * @example\n * <View>\n *   <HyperText name=\"text-1\" value=\"$text\" />\n * </View>\n * @name HyperText\n * @param {string} name - name of the element\n * @param {string} value - value of the element\n * @param {boolean} [showLabels=false] - show labels next to the region\n * @param {string} [encoding=none|base64|base64unicode]  - decode value from encoded string\n * @param {boolean} [clickableLinks=false] - allow to open resources from links\n */\nconst TagAttrs = types.model(\"HyperTextModel\", {\n  // opional for cases with inline html: <HyperText><hr/></HyperText>\n  name: types.optional(types.identifier, guidGenerator(5)),\n  value: types.maybeNull(types.string),\n\n  // @todo add `valueType=url` to HyperText and make autodetection of `savetextresult`\n  savetextresult: types.optional(types.enumeration([\"none\", \"no\", \"yes\"]), () =>\n    window.LS_SECURE_MODE ? \"no\" : \"yes\",\n  ),\n  clickablelinks: false,\n\n  highlightcolor: types.maybeNull(customTypes.color),\n  showlabels: types.optional(types.boolean, false),\n\n  encoding: types.optional(types.enumeration([\"none\", \"base64\", \"base64unicode\"]), \"none\"),\n});\n\nconst Model = types\n  .model(\"HyperTextModel\", {\n    type: \"hypertext\",\n    _value: types.optional(types.string, \"\"),\n    _update: types.optional(types.number, 1),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get regs() {\n      return self.completion.regionStore.regions.filter(r => r.object === self);\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states\n        ? states.filter(\n            s => s.isSelected && (getType(s).name === \"HyperTextLabelsModel\" || getType(s).name === \"RatingModel\"),\n          )\n        : null;\n    },\n  }))\n  .actions(self => ({\n    needsUpdate() {\n      self._update = self._update + 1;\n    },\n\n    updateValue(store) {\n      self._value = runTemplate(self.value, store.task.dataObj);\n    },\n\n    createRegion(p) {\n      const r = HyperTextRegionModel.create({\n        pid: p.id,\n        ...p,\n      });\n\n      r._range = p._range;\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    addRegion(range) {\n      const states = self.getAvailableStates();\n      if (states.length === 0) return;\n\n      const control = states[0];\n      const labels = { [control.valueType]: control.selectedValues() };\n      const area = self.completion.createResult(range, labels, control, self);\n      area._range = range._range;\n      return area;\n    },\n\n    /**\n     *\n     * @param {*} obj\n     * @param {*} fromModel\n     */\n    fromStateJSON(obj, fromModel) {\n      const { start, startOffset, end, endOffset, text } = obj.value;\n\n      if (fromModel.type === \"textarea\" || fromModel.type === \"choices\") {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n        return;\n      }\n\n      const states = restoreNewsnapshot(fromModel);\n      const tree = {\n        pid: obj.id,\n        parentID: obj.parent_id === null ? \"\" : obj.parent_id,\n        startOffset: startOffset,\n        endOffset: endOffset,\n        start: start,\n        end: end,\n        text: text,\n        score: obj.score,\n        readonly: obj.readonly,\n        normalization: obj.normalization,\n        states: [states],\n      };\n\n      states.fromStateJSON(obj);\n\n      self.createRegion(tree);\n\n      self.needsUpdate();\n    },\n  }));\n\nconst HyperTextModel = types.compose(\"HyperTextModel\", RegionsMixin, TagAttrs, Model, ObjectBase);\n\nclass HtxHyperTextView extends Component {\n  render() {\n    const { item, store } = this.props;\n\n    if (!item._value) return null;\n\n    return <HtxHyperTextPieceView store={store} item={item} />;\n  }\n}\n\nclass HyperTextPieceView extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  captureDocumentSelection() {\n    var i,\n      self = this,\n      ranges = [],\n      rangesToIgnore = [],\n      selection = window.getSelection();\n\n    if (selection.isCollapsed) return [];\n\n    for (i = 0; i < selection.rangeCount; i++) {\n      var r = selection.getRangeAt(i);\n\n      if (r.endContainer.nodeName === \"DIV\") {\n        r.setEnd(r.startContainer, r.startContainer.length);\n      }\n\n      try {\n        var normedRange = xpath.fromRange(r, self.myRef.current);\n        splitBoundaries(r);\n\n        normedRange._range = r;\n        normedRange.text = selection.toString();\n\n        // If the new range falls fully outside our this.element, we should\n        // add it back to the document but not return it from this method.\n        if (normedRange === null) {\n          rangesToIgnore.push(r);\n        } else {\n          ranges.push(normedRange);\n        }\n      } catch (err) {}\n    }\n\n    // BrowserRange#normalize() modifies the DOM structure and deselects the\n    // underlying text as a result. So here we remove the selected ranges and\n    // reapply the new ones.\n    selection.removeAllRanges();\n\n    return ranges;\n  }\n\n  onMouseUp(ev) {\n    const item = this.props.item;\n    const states = item.activeStates();\n    if (!states || states.length === 0) return;\n\n    var selectedRanges = this.captureDocumentSelection();\n\n    if (selectedRanges.length === 0) return;\n\n    item._currentSpan = null;\n\n    const htxRange = item.addRegion(selectedRanges[0]);\n    if (htxRange) {\n      const spans = htxRange.createSpans();\n      htxRange.addEventsToSpans(spans);\n    }\n  }\n\n  _handleUpdate() {\n    const root = this.myRef.current;\n    const { item } = this.props;\n\n    item.regs.forEach(function(r) {\n      // spans can be totally missed if this is app init or undo/redo\n      // or they can be disconnected from DOM on completions switching\n      // so we have to recreate them from regions data\n      if (r._spans?.[0]?.isConnected) return;\n\n      try {\n        const range = xpath.toRange(r.start, r.startOffset, r.end, r.endOffset, root);\n\n        splitBoundaries(range);\n\n        r._range = range;\n        const spans = r.createSpans();\n        r.addEventsToSpans(spans);\n      } catch (err) {\n        console.log(r);\n      }\n    });\n\n    if (!item.clickablelinks) {\n      Array.from(this.myRef.current.getElementsByTagName(\"a\")).forEach(a => {\n        a.addEventListener(\"click\", function(ev) {\n          ev.preventDefault();\n          return false;\n        });\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this._handleUpdate();\n  }\n\n  componentDidMount() {\n    this._handleUpdate();\n  }\n\n  render() {\n    const { item, store } = this.props;\n\n    let val = runTemplate(item.value, store.task.dataObj);\n    if (item.encoding === \"base64\") val = atob(val);\n    if (item.encoding === \"base64unicode\") val = Utils.Checkers.atobUnicode(val);\n\n    return (\n      <ObjectTag item={item}>\n        <div\n          ref={this.myRef}\n          data-update={item._update}\n          style={{ overflow: \"auto\" }}\n          onMouseUp={this.onMouseUp.bind(this)}\n          dangerouslySetInnerHTML={{ __html: val }}\n        />\n      </ObjectTag>\n    );\n  }\n}\n\nconst HtxHyperText = inject(\"store\")(observer(HtxHyperTextView));\nconst HtxHyperTextPieceView = inject(\"store\")(observer(HyperTextPieceView));\n\nRegistry.addTag(\"hypertext\", HyperTextModel, HtxHyperText);\nRegistry.addObjectType(HyperTextModel);\n\nexport { HyperTextModel, HtxHyperText };\n","import { types } from \"mobx-state-tree\";\n\nconst BaseTool = types.model(\"BaseTool\", {}).actions(self => ({}));\n\nexport const MIN_SIZE = { X: 3, Y: 3 };\n\nexport default BaseTool;\n","import React, { Component, Fragment } from \"react\";\nimport { Button, Slider, Tooltip } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport styles from \"./Styles.module.scss\";\n\nexport default observer(\n  class SliderTool extends Component {\n    render() {\n      return (\n        <Fragment>\n          <Slider\n            defaultValue={this.props.default || 15}\n            max={this.props.max || 50}\n            min={1}\n            vertical\n            tipFormatter={null}\n            style={{ height: this.props.height || 100 }}\n            onChange={this.props.onChange}\n          />\n          <Tooltip title={this.props.title} placement=\"left\">\n            <Button\n              shape=\"circle\"\n              type={this.props.selected ? \"primary\" : \"default\"}\n              className={styles.button}\n              onClick={this.props.onClick}\n            >\n              {this.props.icon}\n            </Button>\n          </Tooltip>\n        </Fragment>\n      );\n    }\n  },\n);\n","import { types, getRoot } from \"mobx-state-tree\";\nimport { cloneNode, restoreNewsnapshot } from \"../core/Helpers\";\n\nconst ToolMixin = types\n  .model({\n    selected: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get obj() {\n      return self._manager.obj;\n    },\n\n    get manager() {\n      return self._manager;\n    },\n\n    get control() {\n      return self._control;\n    },\n\n    get completion() {\n      return getRoot(self.control).completionStore.selected;\n    },\n\n    get viewClass() {\n      return null;\n    },\n\n    get clonedStates() {\n      const states = [self.control];\n      const activeStates = states\n        ? states.filter(c => c.isSelected)\n        : // .filter(\n          //   c =>\n          //     c.type === IMAGE_CONSTANTS.rectanglelabels ||\n          //     c.type === IMAGE_CONSTANTS.keypointlabels ||\n          //     c.type === IMAGE_CONSTANTS.polygonlabels ||\n          //     c.type === IMAGE_CONSTANTS.brushlabels,\n          // )\n          null;\n\n      return activeStates ? activeStates.map(s => cloneNode(s)) : null;\n    },\n\n    // @todo remove\n    moreRegionParams(obj) {},\n\n    get getActiveShape() {\n      // active shape here is the last one that was added\n      const obj = self.obj;\n      return obj.regs[obj.regs.length - 1];\n    },\n\n    get getSelectedShape() {\n      return self.control.completion.highlightedNode;\n    },\n  }))\n  .actions(self => ({\n    setSelected(val) {\n      self.selected = val;\n    },\n\n    event(name, ev, args) {\n      const fn = name + \"Ev\";\n      if (typeof self[fn] !== \"undefined\") self[fn].call(self, ev, args);\n    },\n\n    createFromJSON(obj, fromModel) {\n      let r;\n      let states = [];\n\n      const fm = self.completion.names.get(obj.from_name);\n      fm.fromStateJSON(obj);\n\n      // workaround to prevent perregion textarea from duplicating\n      // during deserialisation\n      if (fm.perregion && fromModel.type === \"textarea\") return;\n\n      const { stateTypes, controlTagTypes } = self.tagTypes;\n\n      if (!fm.perregion && !controlTagTypes.includes(fromModel.type)) return;\n\n      if (obj.type === stateTypes) {\n        states = restoreNewsnapshot(fromModel);\n        if (states.fromStateJSON) {\n          states.fromStateJSON(obj);\n        }\n\n        states = [states];\n      }\n\n      if (controlTagTypes.includes(obj.type)) {\n        const params = {};\n        const moreParams = self.moreRegionParams(obj);\n        const data = {\n          pid: obj.id,\n          parentID: obj.parent_id === null ? \"\" : obj.parent_id,\n          score: obj.score,\n          readonly: obj.readonly,\n          coordstype: \"perc\",\n          states,\n          ...params,\n          ...obj.value,\n          ...moreParams,\n        };\n\n        r = self.createRegion(data);\n      } else if (fm.perregion) {\n        const m = restoreNewsnapshot(fromModel);\n\n        // [TODO] this is a poor mans findRegion for the image\n        // regions right now. This is based on a idea that\n        // results comming from the same region share the same\n        // id, which might not be the case since it'd a good\n        // practice to have unique ids\n        const { regions } = self.obj;\n        r = regions.find(r => r.pid === obj.id);\n\n        // r = self.findRegion(obj.value);\n\n        if (r) r.states.push(m);\n      }\n\n      return r;\n    },\n\n    fromStateJSON(obj, fromModel) {\n      // tool may not be implementing fromStateJSON at all\n      if (!self.tagTypes) return;\n\n      return self.createFromJSON(obj, fromModel);\n    },\n  }));\n\nexport default ToolMixin;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { HighlightOutlined } from \"@ant-design/icons\";\n\nimport BaseTool from \"./Base\";\nimport SliderTool from \"../components/Tools/Slider\";\nimport ToolMixin from \"../mixins/Tool\";\nimport Canvas from \"../utils/canvas\";\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <SliderTool\n      selected={item.selected}\n      icon={<HighlightOutlined />}\n      onClick={ev => {\n        const sel = item.selected;\n        item.manager.unselectAll();\n\n        item.setSelected(!sel);\n\n        if (item.selected) {\n          item.updateCursor();\n        }\n      }}\n      onChange={val => {\n        item.setStroke(val);\n        item.updateCursor();\n      }}\n    />\n  );\n});\n\nconst _Tool = types\n  .model({\n    strokeWidth: types.optional(types.number, 10),\n  })\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n\n    get tagTypes() {\n      return {\n        stateTypes: \"brushlabels\",\n        controlTagTypes: [\"brushlabels\", \"brush\"],\n      };\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(json, controlTag) {\n      const region = self.createFromJSON(json, controlTag);\n\n      if (json.value.points) {\n        const p = region.addPoints({ type: \"add\" });\n        p.addPoints(json.value.points);\n      }\n\n      if (json.value.format === \"rle\") {\n        region._rle = json.value.rle;\n      }\n\n      return region;\n    },\n\n    // fromStateJSON(obj, fromModel) {\n    //   if (\"brushlabels\" in obj.value) {\n    //     const states = restoreNewsnapshot(fromModel);\n    //     states.fromStateJSON(obj);\n\n    //     const region = self.createRegion({\n    //       pid: obj.id,\n    //       stroke: states.getSelectedColor(),\n    //       states: states,\n    //       // coordstype: \"px\",\n    //       // points: obj.value.points,\n    //     });\n\n    //     if (obj.value.points) {\n    //       const p = region.addPoints({ type: \"add\" });\n    //       p.addPoints(obj.value.points);\n    //     }\n\n    //     if (obj.value.format === \"rle\") {\n    //       region._rle = obj.value.rle;\n    //     }\n    //   }\n    // },\n\n    createRegion(opts) {\n      const control = self.control;\n      const labels = { [control.valueType]: control.selectedValues?.() };\n      return self.obj.completion.createResult(opts, labels, control, self.obj);\n    },\n\n    updateCursor() {\n      const val = self.strokeWidth;\n      const stage = self.obj.stageRef;\n      const base64 = Canvas.brushSizeCircle(val);\n      const cursor = [\"url('\", base64, \"')\", \" \", Math.floor(val / 2) + 4, \" \", Math.floor(val / 2) + 4, \", auto\"];\n\n      stage.container().style.cursor = cursor.join(\"\");\n    },\n\n    setStroke(val) {\n      self.strokeWidth = val;\n    },\n\n    mouseupEv() {\n      self.mode = \"viewing\";\n    },\n\n    mousemoveEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n\n      const shape = self.getSelectedShape;\n\n      shape.currentTouch.addPoints(Math.floor(x), Math.floor(y));\n    },\n\n    mousedownEv(ev, [x, y]) {\n      const c = self.control;\n      const brush = self.getSelectedShape;\n\n      if (brush) {\n        self.mode = \"drawing\";\n\n        const p = brush.addTouch({\n          type: \"add\",\n          strokeWidth: self.strokeWidth || c.strokeWidth,\n        });\n\n        p.addPoints(Math.floor(x), Math.floor(y));\n      } else {\n        if (c.isSelected) {\n          self.mode = \"drawing\";\n\n          const brush = self.createRegion({\n            touches: [],\n            coordstype: \"px\",\n          });\n\n          self.obj.completion.selectArea(brush);\n\n          const p = brush.addTouch({\n            type: \"add\",\n            strokeWidth: self.strokeWidth || c.strokeWidth,\n          });\n\n          p.addPoints(Math.floor(x), Math.floor(y));\n        }\n      }\n    },\n  }));\n\nconst Brush = types.compose(ToolMixin, BaseTool, _Tool);\n\nexport { Brush };\n","import React, { Component } from \"react\";\nimport { Button, Tooltip } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport styles from \"./Styles.module.scss\";\n\nexport default observer(\n  class BasicToolView extends Component {\n    render() {\n      return (\n        <Tooltip title={this.props.tooltip} placement=\"left\">\n          <Button\n            shape=\"circle\"\n            type={this.props.selected ? \"primary\" : \"default\"}\n            disabled={this.props.disabled ? true : false}\n            icon={this.props.icon}\n            className={styles.button}\n            onClick={this.props.onClick}\n          ></Button>\n        </Tooltip>\n      );\n    }\n  },\n);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { ScissorOutlined } from \"@ant-design/icons\";\n\nimport BaseTool from \"./Base\";\nimport BasicTool from \"../components/Tools/Basic\";\nimport ToolMixin from \"../mixins/Tool\";\nimport Canvas from \"../utils/canvas\";\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <BasicTool\n      selected={item.selected}\n      onClick={ev => {\n        const sel = item.selected;\n\n        item.manager.unselectAll();\n\n        item.setSelected(!sel);\n\n        if (item.selected) {\n          item.updateCursor();\n        }\n      }}\n      icon={<ScissorOutlined />}\n    />\n  );\n});\n\nconst _Tool = types\n  .model({})\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n  }))\n  .actions(self => ({\n    updateCursor() {\n      const val = 24;\n      const stage = self.obj.stageRef;\n      const base64 = Canvas.brushSizeCircle(val);\n      const cursor = [\"url('\", base64, \"')\", \" \", Math.floor(val / 2) + 4, \" \", Math.floor(val / 2) + 4, \", auto\"];\n\n      stage.container().style.cursor = cursor.join(\"\");\n    },\n\n    mouseupEv() {\n      self.mode = \"viewing\";\n    },\n\n    mousemoveEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n\n      const shape = self.getSelectedShape;\n      if (shape && shape.type === \"brushregion\") {\n        shape.currentTouch.addPoints(Math.floor(x), Math.floor(y));\n      }\n    },\n\n    mousedownEv(ev, [x, y]) {\n      self.mode = \"drawing\";\n\n      const shape = self.getSelectedShape;\n      if (!shape) return;\n\n      if (shape && shape.type === \"brushregion\") {\n        shape.addTouch({ type: \"eraser\" });\n      }\n    },\n  }));\n\nconst Erase = types.compose(ToolMixin, _Tool, BaseTool);\n\nexport { Erase };\n","import { types } from \"mobx-state-tree\";\n\nimport BaseTool from \"./Base\";\nimport ToolMixin from \"../mixins/Tool\";\n\nconst _Tool = types\n  .model({\n    default: types.optional(types.boolean, true),\n  })\n  .views(self => ({\n    get tagTypes() {\n      return {\n        stateTypes: \"keypointlabels\",\n        controlTagTypes: [\"keypointlabels\", \"keypoint\"],\n      };\n    },\n  }))\n  .actions(self => ({\n    createRegion(opts) {\n      const control = self.control;\n      const labels = { [control.valueType]: control.selectedValues?.() };\n      self.obj.completion.createResult(opts, labels, control, self.obj);\n    },\n\n    clickEv(ev, [x, y]) {\n      const c = self.control;\n      if (c.type === \"keypointlabels\" && !c.isSelected) return;\n\n      if (!self.obj.checkLabels()) return;\n\n      self.createRegion({\n        x: x,\n        y: y,\n        width: Number(c.strokewidth),\n        coordstype: \"px\",\n      });\n    },\n  }));\n\nconst KeyPoint = types.compose(ToolMixin, BaseTool, _Tool);\n\n// Registry.addTool(\"keypoint\", KeyPoint);\n\nexport { KeyPoint };\n","import { types } from \"mobx-state-tree\";\n\nimport BaseTool from \"./Base\";\nimport ToolMixin from \"../mixins/Tool\";\n\nconst _Tool = types\n  .model({\n    default: types.optional(types.boolean, true),\n    mode: types.optional(types.enumeration([\"drawing\", \"viewing\"]), \"viewing\"),\n  })\n  .views(self => ({\n    get getActivePolygon() {\n      const poly = self.getActiveShape;\n\n      if (poly && poly.closed) return null;\n      if (poly === undefined) return null;\n      if (poly.type !== \"polygonregion\") return null;\n\n      return poly;\n    },\n\n    get tagTypes() {\n      return {\n        stateTypes: \"polygonlabels\",\n        controlTagTypes: [\"polygonlabels\", \"polygon\"],\n      };\n    },\n\n    moreRegionParams(obj) {\n      return {\n        x: obj.value.points[0][0],\n        y: obj.value.points[0][1],\n      };\n    },\n  }))\n  .actions(self => ({\n    clickEv(ev, [x, y]) {\n      const control = self.control;\n      const current = self.getActivePolygon;\n      const withStates = self.tagTypes.stateTypes === control.type;\n\n      if (withStates && !control.isSelected && current === null) return;\n\n      if (!current && !self.obj.checkLabels()) return;\n\n      // if there is a polygon in process of creation right now, but\n      // the user has clicked on the labels without first finishing\n      // it, we close it automatically and create a new one with new\n      // labels\n\n      // if (states.length && self.getActivePolygon) {\n      //   self.getActivePolygon.closePoly();\n      // }\n\n      if (current) {\n        current.addPoint(x, y);\n      } else {\n        const opts = {\n          points: [[x, y]],\n          width: 10,\n          coordstype: \"px\",\n        };\n\n        self.obj.completion.history.freeze();\n        const labels = { [control.valueType]: control.selectedValues?.() };\n        self.obj.completion.createResult(opts, labels, control, self.obj);\n      }\n    },\n  }));\n\nconst Polygon = types.compose(ToolMixin, BaseTool, _Tool);\n\nexport { Polygon };\n\n// ImageTools.addTool(PolygonTool);\n","import { types } from \"mobx-state-tree\";\n\nimport Utils from \"../utils\";\nimport throttle from \"lodash.throttle\";\n\nconst DrawingTool = types.model(\"DrawingTool\").actions(self => ({\n  updateDraw: throttle(function(x, y) {\n    const shape = self.getActiveShape;\n    const { stageWidth, stageHeight } = self.obj;\n\n    let { x1, y1, x2, y2 } = Utils.Image.reverseCoordinates({ x: shape.startX, y: shape.startY }, { x, y });\n\n    x1 = Math.max(0, x1);\n    y1 = Math.max(0, y1);\n    x2 = Math.min(stageWidth, x2);\n    y2 = Math.min(stageHeight, y2);\n\n    shape.setPosition(x1, y1, x2 - x1, y2 - y1, shape.rotation);\n  }, 48), // 3 frames, optimized enough and not laggy yet\n}));\n\nexport { DrawingTool };\n","import { types } from \"mobx-state-tree\";\n\nimport BaseTool, { MIN_SIZE } from \"./Base\";\nimport ToolMixin from \"../mixins/Tool\";\nimport { DrawingTool } from \"../mixins/DrawingTool\";\n\nconst _Tool = types\n  .model({\n    default: true,\n    mode: types.optional(types.enumeration([\"drawing\", \"viewing\"]), \"viewing\"),\n  })\n  .views(self => ({\n    get tagTypes() {\n      return {\n        stateTypes: \"rectanglelabels\",\n        controlTagTypes: [\"rectanglelabels\", \"rectangle\"],\n      };\n    },\n  }))\n  .actions(self => ({\n    createRegion(opts) {\n      const control = self.control;\n      const labels = { [control.valueType]: control.selectedValues?.() };\n      self.obj.completion.createResult(opts, labels, control, self.obj);\n    },\n\n    mousedownEv(ev, [x, y]) {\n      if (self.tagTypes.stateTypes === self.control.type && !self.control.isSelected) return;\n      if (!self.obj.checkLabels()) return;\n\n      self.completion.history.freeze();\n\n      self.mode = \"drawing\";\n\n      self.createRegion({\n        x: x,\n        y: y,\n        height: 1,\n        width: 1,\n        coordstype: \"px\",\n      });\n    },\n\n    mousemoveEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n\n      self.updateDraw(x, y);\n    },\n\n    mouseupEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n\n      const s = self.getActiveShape;\n\n      if (s.width < MIN_SIZE.X || s.height < MIN_SIZE.Y) {\n        self.completion.removeArea(s);\n        if (self.control.type === \"rectanglelabels\") self.completion.unselectAll(true);\n      } else {\n        self.completion.history.unfreeze();\n        // self.obj.completion.highlightedNode.unselectRegion(true);\n      }\n\n      self.mode = \"viewing\";\n    },\n  }));\n\nconst Rect = types.compose(ToolMixin, BaseTool, DrawingTool, _Tool);\n\nexport { Rect };\n","import { types } from \"mobx-state-tree\";\n\nimport BaseTool, { MIN_SIZE } from \"./Base\";\nimport ToolMixin from \"../mixins/Tool\";\nimport { DrawingTool } from \"../mixins/DrawingTool\";\n\nconst _Tool = types\n  .model({\n    default: true,\n    mode: types.optional(types.enumeration([\"drawing\", \"viewing\"]), \"viewing\"),\n  })\n  .views(self => ({\n    get tagTypes() {\n      return {\n        stateTypes: \"ellipselabels\",\n        controlTagTypes: [\"ellipselabels\", \"ellipse\"],\n      };\n    },\n  }))\n  .actions(self => ({\n    createRegion(opts) {\n      const control = self.control;\n      const labels = { [control.valueType]: control.selectedValues?.() };\n      self.obj.completion.createResult(opts, labels, control, self.obj);\n    },\n\n    mousedownEv(ev, [x, y]) {\n      if (self.tagTypes.stateTypes === self.control.type && !self.control.isSelected) return;\n      if (!self.obj.checkLabels()) return;\n\n      self.completion.history.freeze();\n\n      self.mode = \"drawing\";\n\n      self.createRegion({\n        x: x,\n        y: y,\n        radiusX: 1,\n        radiusY: 1,\n        coordstype: \"px\",\n      });\n    },\n\n    mousemoveEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n\n      self.updateDraw(x, y);\n    },\n\n    mouseupEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n\n      const s = self.getActiveShape;\n\n      if (s.radiusX < MIN_SIZE.X || s.radiusY < MIN_SIZE.Y) {\n        self.completion.removeArea(s);\n        if (self.control.type === \"ellipselabels\") self.completion.unselectAll(true);\n      } else {\n        self.completion.history.unfreeze();\n        // self.obj.completion.highlightedNode.unselectRegion(true);\n      }\n\n      self.mode = \"viewing\";\n    },\n  }));\n\nconst Ellipse = types.compose(ToolMixin, BaseTool, DrawingTool, _Tool);\n\nexport { Ellipse };\n","import React, { Fragment } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { DragOutlined, ZoomInOutlined, ZoomOutOutlined } from \"@ant-design/icons\";\n\nimport BaseTool from \"./Base\";\nimport BasicToolView from \"../components/Tools/Basic\";\nimport ToolMixin from \"../mixins/Tool\";\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <Fragment>\n      <BasicToolView\n        selected={item.selected}\n        icon={<DragOutlined />}\n        tooltip=\"Move position\"\n        onClick={ev => {\n          const sel = item.selected;\n          item.manager.unselectAll();\n          item.setSelected(!sel);\n          if (item.selected) {\n            const stage = item.obj.stageRef;\n            stage.container().style.cursor = \"all-scroll\";\n          }\n        }}\n      />\n      <BasicToolView\n        icon={<ZoomInOutlined />}\n        tooltip=\"Zoom into the image\"\n        onClick={ev => {\n          // console.log(self.image);\n          // console.log(self._image);\n          item.handleZoom(1.2);\n        }}\n      />\n      <BasicToolView\n        icon={<ZoomOutOutlined />}\n        tooltip=\"Zoom out of the image\"\n        onClick={ev => {\n          item.handleZoom(0.8);\n        }}\n      />\n    </Fragment>\n  );\n});\n\nconst _Tool = types\n  .model({\n    // image: types.late(() => types.safeReference(Registry.getModelByTag(\"image\")))\n  })\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n  }))\n  .actions(self => ({\n    mouseupEv() {\n      self.mode = \"viewing\";\n    },\n\n    handleDrag(ev) {\n      const item = self._manager.obj;\n      const stage = item.stageRef;\n      const scale = stage.scaleX();\n\n      let posx = stage.x() + ev.movementX;\n      let posy = stage.y() + ev.movementY;\n\n      if (posx > 0) posx = 0;\n      if (posy > 0) posy = 0;\n\n      item.setZoom(scale, posx, posy);\n      stage.position({ x: posx, y: posy });\n      stage.batchDraw();\n    },\n\n    mousemoveEv(ev, [x, y]) {\n      const scale = self._manager.obj.stageRef.scaleX();\n\n      if (scale <= 1) return;\n      if (self.mode === \"moving\") self.handleDrag(ev);\n    },\n\n    mousedownEv(ev, [x, y]) {\n      self.mode = \"moving\";\n    },\n\n    handleZoom(e, val) {\n      if (e.evt && !e.evt.ctrlKey) {\n        return;\n      } else if (e.evt && e.evt.ctrlKey) {\n        /**\n         * Disable scrolling page\n         */\n        e.evt.preventDefault();\n      }\n\n      // console.log(getEnv(self).manager);\n      // console.log(getEnv(self));\n\n      const item = self._manager.obj;\n\n      // const { item } = this.props;\n      item.freezeHistory();\n\n      const stage = item.stageRef;\n      const scaleBy = parseFloat(item.zoomby);\n      const oldScale = stage.scaleX();\n\n      let mousePointTo;\n      let newScale;\n      let pos;\n      let newPos;\n\n      if (e.evt) {\n        mousePointTo = {\n          x: stage.getPointerPosition().x / oldScale - stage.x() / oldScale,\n          y: stage.getPointerPosition().y / oldScale - stage.y() / oldScale,\n        };\n\n        newScale = e.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\n\n        newPos = {\n          x: -(mousePointTo.x - stage.getPointerPosition().x / newScale) * newScale,\n          y: -(mousePointTo.y - stage.getPointerPosition().y / newScale) * newScale,\n        };\n      } else {\n        pos = {\n          x: stage.width() / 2,\n          y: stage.height() / 2,\n        };\n\n        mousePointTo = {\n          x: pos.x / oldScale - stage.x() / oldScale,\n          y: pos.y / oldScale - stage.y() / oldScale,\n        };\n\n        newScale = Math.max(0.05, oldScale * e);\n\n        newPos = {\n          x: -(mousePointTo.x - pos.x / newScale) * newScale,\n          y: -(mousePointTo.y - pos.y / newScale) * newScale,\n        };\n      }\n\n      if (item.negativezoom !== true && newScale <= 1) {\n        item.setZoom(1, 0, 0);\n        stage.scale({ x: 1, y: 1 });\n        stage.position({ x: 0, y: 0 });\n        stage.batchDraw();\n        return;\n      }\n\n      stage.scale({ x: newScale, y: newScale });\n\n      item.setZoom(newScale, newPos.x, newPos.y);\n      stage.position(newPos);\n      stage.batchDraw();\n    },\n  }));\n\nconst Zoom = types.compose(ToolMixin, BaseTool, _Tool);\n\n// Registry.addTool(\"zoom\", Zoom);\n\nexport { Zoom };\n\n// ImageTools.addTool(ZoomTool);\n","import React from \"react\";\n\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { RotateLeftOutlined, RotateRightOutlined } from \"@ant-design/icons\";\n\nimport BaseTool from \"./Base\";\nimport ToolMixin from \"../mixins/Tool\";\nimport BasicToolView from \"../components/Tools/Basic\";\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <>\n      <BasicToolView\n        selected={item.selected}\n        icon={<RotateLeftOutlined />}\n        tooltip=\"Rotate Left\"\n        onClick={ev => {\n          item.rotate(-90);\n        }}\n      />\n      <BasicToolView\n        selected={item.selected}\n        icon={<RotateRightOutlined />}\n        tooltip=\"Rotate Right\"\n        onClick={ev => {\n          item.rotate(90);\n        }}\n      />\n    </>\n  );\n});\n\nconst _Tool = types\n  .model({})\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n  }))\n  .actions(self => ({\n    rotate(degree) {\n      self.obj.rotate(degree);\n    },\n  }));\n\nconst Rotate = types.compose(ToolMixin, BaseTool, _Tool);\n\nexport { Rotate };\n\n// ImageTools.addTool(RotateTool);\n","import React, { Component, Fragment } from \"react\";\nimport { Button, Slider, Menu, Dropdown } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { ReloadOutlined } from \"@ant-design/icons\";\n\nimport styles from \"./Styles.module.scss\";\n\nexport default observer(\n  class SliderDropDownTool extends Component {\n    render() {\n      const menu = (\n        <Menu>\n          <Menu.Item key=\"1\">\n            <Slider\n              defaultValue={this.props.default || 15}\n              max={this.props.max || 50}\n              value={this.props.value}\n              min={0}\n              vertical\n              tipFormatter={null}\n              style={{ height: this.props.height || 100 }}\n              onChange={this.props.onChange}\n            />\n            <Button\n              shape=\"circle\"\n              type={this.props.selected ? \"primary\" : \"default\"}\n              className={styles.button}\n              onClick={this.props.onResetClick}\n            >\n              <ReloadOutlined />\n            </Button>\n          </Menu.Item>\n        </Menu>\n      );\n\n      return (\n        <Fragment>\n          <Dropdown overlay={menu}>\n            <Button shape=\"circle\" className={styles.button}>\n              {this.props.icon}\n            </Button>\n          </Dropdown>\n        </Fragment>\n      );\n    }\n  },\n);\n","import React, { Fragment } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { ControlOutlined } from \"@ant-design/icons\";\n\nimport BaseTool from \"./Base\";\nimport Constants from \"../core/Constants\";\nimport SliderDropDownTool from \"../components/Tools/SliderDropDown\";\nimport ToolMixin from \"../mixins/Tool\";\n\nimport styles from \"./Tools.module.scss\";\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <Fragment>\n      <SliderDropDownTool\n        default={Constants.BRIGHTNESS_VALUE}\n        value={item.brightness}\n        max={Constants.BRIGHTNESS_MAX}\n        selected={item.selected}\n        icon={<ControlOutlined />}\n        onResetClick={ev => {\n          item.setStroke(Constants.BRIGHTNESS_VALUE);\n        }}\n        onChange={val => {\n          item.setStroke(val);\n        }}\n      />\n      <span className={styles.tooltitle}>Brightness</span>\n    </Fragment>\n  );\n});\n\nconst _Tool = types\n  .model({\n    brightness: types.optional(types.number, Constants.BRIGHTNESS_VALUE),\n  })\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n  }))\n  .actions(self => ({\n    setStroke(val) {\n      self.brightness = val;\n      self.obj.setBrightnessGrade(val);\n    },\n  }));\n\nconst Brightness = types.compose(ToolMixin, BaseTool, _Tool);\n\nexport { Brightness };\n","import React, { Fragment } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { ControlOutlined } from \"@ant-design/icons\";\n\nimport BaseTool from \"./Base\";\nimport Constants from \"../core/Constants\";\nimport SliderDropDownTool from \"../components/Tools/SliderDropDown\";\nimport ToolMixin from \"../mixins/Tool\";\n\nimport styles from \"./Tools.module.scss\";\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <Fragment>\n      <SliderDropDownTool\n        default={Constants.CONTRAST_VALUE}\n        value={item.contrast}\n        max={Constants.CONTRAST_MAX}\n        selected={item.selected}\n        icon={<ControlOutlined />}\n        onResetClick={ev => {\n          item.setStroke(Constants.CONTRAST_VALUE);\n        }}\n        onChange={val => {\n          item.setStroke(val);\n        }}\n      />\n      <span className={styles.tooltitle}>Contrast</span>\n    </Fragment>\n  );\n});\n\nconst _Tool = types\n  .model({\n    contrast: types.optional(types.number, Constants.CONTRAST_VALUE),\n  })\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n  }))\n  .actions(self => ({\n    setStroke(val) {\n      self.contrast = val;\n      self.obj.setContrastGrade(val);\n    },\n  }));\n\nconst Contrast = types.compose(ToolMixin, BaseTool, _Tool);\n\nexport { Contrast };\n","import React, { Fragment } from \"react\";\nimport { Rect, Group, Text, Label, Tag } from \"react-konva\";\nimport { observer } from \"mobx-react\";\nimport { getRoot } from \"mobx-state-tree\";\n\nimport Utils from \"../../utils\";\nimport Constants from \"../../core/Constants\";\nimport { flatten } from \"../../utils/utilities\";\n\n// @todo rewrite this to update bbox on shape level while adding new point\nfunction polytobbox(points) {\n  var lats = [];\n  var lngs = [];\n\n  points.forEach(p => {\n    lats.push(p.x);\n    lngs.push(p.y);\n  });\n\n  // calc the min and max lng and lat\n  var minlat = Math.min.apply(null, lats),\n    maxlat = Math.max.apply(null, lats);\n  var minlng = Math.min.apply(null, lngs),\n    maxlng = Math.max.apply(null, lngs);\n\n  // create a bounding rectangle that can be used in leaflet\n  return [\n    [minlat, maxlat],\n    [minlng, maxlng],\n  ];\n}\n\n// @todo rewrite this to update bbox on shape level while adding new point\nfunction pointstobbox(points) {\n  const len = points.length;\n  if (!len)\n    return [\n      [0, 0],\n      [0, 0],\n    ];\n\n  var x = [points[0], points[0]];\n  var y = [points[1], points[1]];\n\n  for (let i = 2; i < len; i += 2) {\n    if (points[i] < x[0]) x[0] = points[i];\n    else if (points[i] > x[1]) x[1] = points[i];\n    if (points[i + 1] < y[0]) y[0] = points[i + 1];\n    else if (points[i + 1] > y[1]) y[1] = points[i + 1];\n  }\n\n  return [x, y];\n}\n\nconst LabelOnBbox = ({ x, y, text, score, showLabels, showScore, zoomScale }) => {\n  const ss = showScore && score;\n  const scale = 1 / (zoomScale || 1);\n\n  return (\n    <Group strokeScaleEnabled={false} opacity={0.8}>\n      {ss && (\n        <Label x={x} y={y - 20 * scale} scaleX={scale} scaleY={scale}>\n          <Tag fill={Utils.Colors.getScaleGradient(score)} cornerRadius={2} />\n          <Text text={score.toFixed(2)} fontFamily=\"Calibri\" fill=\"white\" padding={2} />\n        </Label>\n      )}\n\n      {showLabels && (\n        <Label x={ss ? x + 34 * scale : x} y={y - 20 * scale} scaleX={scale} scaleY={scale}>\n          <Tag fill={Constants.SHOW_LABEL_BACKGROUND} cornerRadius={2} />\n          <Text text={text} fontFamily=\"Calibri\" fill={Constants.SHOW_LABEL_FILL} padding={2} />\n        </Label>\n      )}\n    </Group>\n  );\n};\n\nconst LabelOnEllipse = observer(({ item }) => {\n  const s = item.labeling;\n  if (!s) return null;\n\n  return (\n    <LabelOnBbox\n      x={item.x}\n      y={item.y}\n      text={s.getSelectedString(\",\")}\n      score={item.score}\n      showLabels={getRoot(item).settings.showLabels}\n      showScore={getRoot(item).settings.showLabels}\n      zoomScale={item.parent.zoomScale}\n    />\n  );\n});\n\nconst LabelOnRect = observer(({ item }) => {\n  const s = item.labeling;\n  if (!s) return null;\n\n  return (\n    <LabelOnBbox\n      x={item.x}\n      y={item.y}\n      text={s.getSelectedString(\",\")}\n      score={item.score}\n      showLabels={getRoot(item).settings.showLabels}\n      showScore={getRoot(item).settings.showLabels}\n      zoomScale={item.parent.zoomScale}\n    />\n  );\n});\n\nconst LabelOnPolygon = observer(({ item }) => {\n  const s = item.labeling;\n  if (!s) return null;\n\n  const bbox = polytobbox(item.points);\n  const settings = getRoot(item).settings;\n  return (\n    <Fragment>\n      {settings && (settings.showLabels || settings.showScore) && (\n        <Rect\n          x={bbox[0][0]}\n          y={bbox[1][0]}\n          fillEnabled={false}\n          width={bbox[0][1] - bbox[0][0]}\n          height={bbox[1][1] - bbox[1][0]}\n          stroke={item.style?.strokecolor}\n          strokeWidth={1}\n          strokeScaleEnabled={false}\n          shadowBlur={0}\n        />\n      )}\n      <LabelOnBbox\n        x={bbox[0][0]}\n        y={bbox[1][0] + 2 / item.parent.zoomScale}\n        text={s.getSelectedString(\",\")}\n        score={item.score}\n        showLabels={settings && settings.showLabels}\n        showScore={settings && settings.showScore}\n        zoomScale={item.parent.zoomScale}\n      />\n    </Fragment>\n  );\n});\n\nconst LabelOnMask = observer(({ item }) => {\n  const settings = getRoot(item).settings;\n  if (settings && !settings.showLabels && !settings.showScore) return null;\n\n  const s = item.labeling;\n  if (!s) return null;\n  if (item.touches.length === 0) return null;\n\n  // @todo fix points from [0, 1, 2, 3] to [{x: 0, y: 1}, {x: 2, y: 3}]\n  const bbox = pointstobbox(flatten(item.touches.map(t => t.points)));\n\n  return (\n    <Group name=\"region-label\">\n      <Rect\n        x={bbox[0][0]}\n        y={bbox[1][0]}\n        fillEnabled={false}\n        width={bbox[0][1] - bbox[0][0]}\n        height={bbox[1][1] - bbox[1][0]}\n        stroke={item.style?.strokecolor}\n        strokeWidth={1}\n        strokeScaleEnabled={false}\n        shadowBlur={0}\n      />\n      <LabelOnBbox\n        x={bbox[0][0]}\n        y={bbox[1][0] + 2 / item.parent.zoomScale}\n        text={s.getSelectedString(\",\")}\n        score={item.score}\n        showLabels={getRoot(item).settings.showLabels}\n        showScore={settings && settings.showScore}\n        zoomScale={item.parent.zoomScale}\n      />\n    </Group>\n  );\n});\n\nconst LabelOnKP = observer(({ item }) => {\n  const s = item.labeling;\n  if (!s) return null;\n\n  return (\n    <LabelOnBbox\n      // keypoints' width scaled back to stay always small, so scale it here too\n      x={item.x + (item.width + 2) / item.parent.zoomScale}\n      y={item.y + (item.width + 2) / item.parent.zoomScale}\n      text={s.getSelectedString(\",\")}\n      score={item.score}\n      showLabels={getRoot(item).settings.showLabels}\n      showScore={getRoot(item).settings.showScore}\n      zoomScale={item.parent.zoomScale}\n    />\n  );\n});\n\nexport { LabelOnBbox, LabelOnPolygon, LabelOnRect, LabelOnEllipse, LabelOnKP, LabelOnMask };\n","import React from \"react\";\nimport { Rect, Circle } from \"react-konva\";\nimport { observer } from \"mobx-react\";\nimport { types, getParent, getRoot } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../core/Helpers\";\n\nconst PolygonPoint = types\n  .model(\"PolygonPoint\", {\n    id: types.optional(types.identifier, guidGenerator),\n\n    relativeX: types.optional(types.number, 0),\n    relativeY: types.optional(types.number, 0),\n\n    initX: types.optional(types.number, 0),\n    initY: types.optional(types.number, 0),\n\n    x: types.number,\n    y: types.number,\n\n    index: types.number,\n\n    selected: types.optional(types.boolean, false),\n\n    style: \"circle\",\n    size: \"small\",\n  })\n  .views(self => ({\n    get parent() {\n      return getParent(self, 2);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    /**\n     * Triggered after create model\n     */\n    afterCreate() {\n      self.initX = self.x;\n      self.initY = self.y;\n\n      if (self.parent.coordstype === \"perc\") {\n        self.relativeX = self.x;\n        self.relativeY = self.y;\n      } else {\n        self.relativeX = (self.x / self.parent.parent.stageWidth) * 100;\n        self.relativeY = (self.y / self.parent.parent.stageHeight) * 100;\n      }\n    },\n\n    /**\n     * External function for Polygon Parent\n     * @param {number} x\n     * @param {number} y\n     */\n\n    movePoint(offsetX, offsetY) {\n      self.initX = self.initX + offsetX;\n      self.initY = self.initY + offsetY;\n      self.x = self.x + offsetX;\n      self.y = self.y + offsetY;\n\n      self.relativeX = (self.x / self.parent.parent.stageWidth) * 100;\n      self.relativeY = (self.y / self.parent.parent.stageHeight) * 100;\n    },\n\n    _movePoint(x, y) {\n      self.initX = x;\n      self.initY = y;\n\n      self.relativeX = (x / self.parent.parent.stageWidth) * 100;\n      self.relativeY = (y / self.parent.parent.stageHeight) * 100;\n\n      self.x = x;\n      self.y = y;\n    },\n\n    /**\n     * Close polygon\n     * @param {*} ev\n     */\n    closeStartPoint(ev) {\n      if (!self.completion.editable) return;\n\n      if (self.parent.mouseOverStartPoint) {\n        self.parent.closePoly();\n      }\n    },\n\n    handleMouseOverStartPoint(ev) {\n      ev.cancelBubble = true;\n\n      const stage = self.parent.parent.stageRef;\n\n      stage.container().style.cursor = \"crosshair\";\n\n      /**\n       * Check if polygon > 2 points and closed point\n       */\n      if (self.parent.closed || self.parent.points.length < 3) return;\n\n      const startPoint = ev.target;\n\n      if (self.style === \"rectangle\") {\n        startPoint.setX(startPoint.x() - startPoint.width() / 2);\n        startPoint.setY(startPoint.y() - startPoint.height() / 2);\n      }\n\n      const scaleMap = {\n        small: 2,\n        medium: 3,\n        large: 4,\n      };\n\n      const scale = scaleMap[self.size];\n\n      startPoint.scale({\n        x: scale / self.parent.parent.zoomScale,\n        y: scale / self.parent.parent.zoomScale,\n      });\n\n      self.parent.setMouseOverStartPoint(true);\n    },\n\n    handleMouseOutStartPoint(ev) {\n      const t = ev.target;\n\n      const stage = self.parent.parent.stageRef;\n      stage.container().style.cursor = \"default\";\n\n      if (self.style === \"rectangle\") {\n        t.setX(t.x() + t.width() / 2);\n        t.setY(t.y() + t.height() / 2);\n      }\n\n      t.scale({\n        x: 1 / self.parent.parent.zoomScale,\n        y: 1 / self.parent.parent.zoomScale,\n      });\n\n      self.parent.setMouseOverStartPoint(false);\n    },\n  }));\n\nconst PolygonPointView = observer(({ item, name }) => {\n  const style = item.parent.style;\n\n  const sizes = {\n    small: 4,\n    medium: 8,\n    large: 12,\n  };\n\n  const stroke = {\n    small: 1,\n    medium: 2,\n    large: 3,\n  };\n\n  const w = sizes[item.size];\n\n  const startPointAttr =\n    item.index === 0\n      ? {\n          hitStrokeWidth: 12,\n          fill: style.strokecolor || item.primary,\n          onMouseOver: item.handleMouseOverStartPoint,\n          onMouseOut: item.handleMouseOutStartPoint,\n          onClick: item.closeStartPoint,\n        }\n      : null;\n\n  const dragOpts = {\n    onDragMove: e => {\n      let { x, y } = e.target.attrs;\n\n      if (x < 0) x = 0;\n      if (y < 0) y = 0;\n      if (x > item.parent.parent.stageWidth) x = item.parent.parent.stageWidth;\n      if (y > item.parent.parent.stageHeight) y = item.parent.parent.stageHeight;\n\n      item._movePoint(x, y);\n    },\n\n    onDragStart: e => {\n      item.completion.history.freeze();\n    },\n\n    onDragEnd: e => {\n      item.completion.history.unfreeze();\n      e.cancelBubble = true;\n    },\n\n    onMouseOver: e => {\n      e.cancelBubble = true;\n      const stage = item.parent.parent.stageRef;\n      stage.container().style.cursor = \"crosshair\";\n    },\n\n    onMouseOut: e => {\n      const stage = item.parent.parent.stageRef;\n      stage.container().style.cursor = \"default\";\n    },\n  };\n\n  const fill = item.selected ? \"green\" : \"white\";\n\n  if (item.style === \"circle\") {\n    return (\n      <Circle\n        key={name}\n        name={name}\n        x={item.x}\n        y={item.y}\n        radius={w}\n        fill={fill}\n        stroke=\"black\"\n        strokeWidth={stroke[item.size]}\n        dragOnTop={false}\n        strokeScaleEnabled={false}\n        scaleX={1 / (item.parent.parent.zoomScale || 1)}\n        scaleY={1 / (item.parent.parent.zoomScale || 1)}\n        onClick={ev => {\n          if (item.parent.mouseOverStartPoint) {\n            item.parent.closePoly();\n          } else {\n            // ev.evt.preventDefault();\n            // ev.cancelBubble = true;\n            item.parent.setSelectedPoint(item);\n          }\n        }}\n        {...dragOpts}\n        {...startPointAttr}\n        draggable={item.parent.editable}\n      />\n    );\n  } else {\n    return (\n      <Rect\n        name={name}\n        key={name}\n        x={item.x - w / 2}\n        y={item.y - w / 2}\n        width={w}\n        height={w}\n        fill={fill}\n        stroke=\"black\"\n        strokeWidth={stroke[item.size]}\n        dragOnTop={false}\n        {...dragOpts}\n        {...startPointAttr}\n        draggable={item.parent.editable}\n      />\n    );\n  }\n});\n\nexport { PolygonPoint, PolygonPointView };\n","import Konva from \"konva\";\nimport React from \"react\";\nimport { Group, Line } from \"react-konva\";\nimport { observer } from \"mobx-react\";\nimport { types, destroy, detach, getRoot } from \"mobx-state-tree\";\n\nimport Constants, { defaultStyle } from \"../core/Constants\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Registry from \"../core/Registry\";\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport { ImageModel } from \"../tags/object/Image\";\nimport { LabelOnPolygon } from \"../components/ImageView/LabelOnRegion\";\nimport { PolygonPoint, PolygonPointView } from \"./PolygonPoint\";\nimport { green } from \"@ant-design/colors\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport { AreaMixin } from \"../mixins/AreaMixin\";\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"polygonregion\",\n    object: types.late(() => types.reference(ImageModel)),\n\n    points: types.array(types.union(PolygonPoint, types.array(types.number)), []),\n\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"perc\"),\n  })\n  .volatile(self => ({\n    closed: false,\n    mouseOverStartPoint: false,\n    selectedPoint: null,\n    hideable: true,\n  }))\n  .views(self => ({\n    get store() {\n      return getRoot(self);\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      if (!self.points.length) return;\n      if (!self.points[0].id) {\n        self.points = self.points.map(([x, y], index) => ({\n          id: guidGenerator(),\n          x: x,\n          y: y,\n          size: self.pointSize,\n          style: self.pointStyle,\n          index,\n        }));\n      }\n\n      if (self.points.length > 2) self.closed = true;\n    },\n\n    /**\n     * @todo excess method; better to handle click only on start point\n     * Handler for mouse on start point of Polygon\n     * @param {boolean} val\n     */\n    setMouseOverStartPoint(value) {\n      self.mouseOverStartPoint = value;\n    },\n\n    // @todo not used\n    setSelectedPoint(point) {\n      if (self.selectedPoint) {\n        self.selectedPoint.selected = false;\n      }\n\n      point.selected = true;\n      self.selectedPoint = point;\n    },\n\n    handleMouseMove({ e, flattenedPoints }) {\n      const { offsetX, offsetY } = e.evt;\n      const [cursorX, cursorY] = self.parent.fixZoomedCoords([offsetX, offsetY]);\n      const [x, y] = getAnchorPoint({ flattenedPoints, cursorX, cursorY });\n\n      const group = e.currentTarget;\n      const layer = e.currentTarget.getLayer();\n      const zoom = self.parent.zoomScale;\n\n      moveHoverAnchor({ point: [x, y], group, layer, zoom });\n    },\n\n    handleMouseLeave({ e }) {\n      removeHoverAnchor({ layer: e.currentTarget.getLayer() });\n    },\n\n    handleLineClick({ e, flattenedPoints, insertIdx }) {\n      e.cancelBubble = true;\n\n      if (!self.closed || !self.selected) return;\n\n      removeHoverAnchor({ layer: e.currentTarget.getLayer() });\n\n      const { offsetX, offsetY } = e.evt;\n      const [cursorX, cursorY] = self.parent.fixZoomedCoords([offsetX, offsetY]);\n      const point = getAnchorPoint({ flattenedPoints, cursorX, cursorY });\n\n      self.insertPoint(insertIdx, point[0], point[1]);\n    },\n\n    addPoint(x, y) {\n      if (self.closed) return;\n      self._addPoint(x, y);\n    },\n\n    insertPoint(insertIdx, x, y) {\n      const p = {\n        id: guidGenerator(),\n        x: x,\n        y: y,\n        size: self.pointSize,\n        style: self.pointStyle,\n        index: self.points.length,\n      };\n      self.points.splice(insertIdx, 0, p);\n    },\n\n    _addPoint(x, y) {\n      self.points.push({\n        id: guidGenerator(),\n        x: x,\n        y: y,\n        size: self.pointSize,\n        style: self.pointStyle,\n        index: self.points.length,\n      });\n    },\n\n    // only px coordtype here\n    rotate(degree = -90) {\n      self.points.forEach(point => {\n        const p = self.rotatePoint(point, degree);\n        point._movePoint(p.x, p.y);\n      });\n    },\n\n    closePoly() {\n      self.closed = true;\n      self.selectRegion();\n      self.completion.history.unfreeze();\n    },\n\n    canClose(x, y) {\n      if (self.points.length < 2) return false;\n\n      const p1 = self.points[0];\n      const p2 = { x, y };\n\n      var r = 50;\n      var dist_points = (p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2;\n\n      if (dist_points < r) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    destroyRegion() {\n      detach(self.points);\n      destroy(self.points);\n    },\n\n    afterUnselectRegion() {\n      if (self.selectedPoint) {\n        self.selectedPoint.selected = false;\n      }\n\n      // self.points.forEach(p => p.computeOffset());\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    updateOffset() {\n      self.points.map(p => p.computeOffset());\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      if (self.coordstype === \"px\") {\n        self.points.forEach(p => {\n          const x = (sw * p.relativeX) / 100;\n          const y = (sh * p.relativeY) / 100;\n\n          p._movePoint(x, y);\n        });\n      }\n\n      if (!self.completion.sentUserGenerate && self.coordstype === \"perc\") {\n        self.points.forEach(p => {\n          const x = (sw * p.x) / 100;\n          const y = (sh * p.y) / 100;\n          self.coordstype = \"px\";\n          p._movePoint(x, y);\n        });\n      }\n    },\n\n    serialize() {\n      if (self.points.length < 3) return null;\n\n      const { naturalWidth, naturalHeight, stageWidth, stageHeight } = self.object;\n      const degree = -self.parent.rotation;\n      const natural = self.rotateDimensions({ width: naturalWidth, height: naturalHeight }, degree);\n      const { width, height } = self.rotateDimensions({ width: stageWidth, height: stageHeight }, degree);\n\n      const perc_points = self.points.map(p => {\n        const normalized = self.rotatePoint(p, degree, false);\n        const res_w = (normalized.x * 100) / width;\n        const res_h = (normalized.y * 100) / height;\n\n        return [res_w, res_h];\n      });\n\n      let res = {\n        value: {\n          points: perc_points,\n        },\n        original_width: natural.width,\n        original_height: natural.height,\n        image_rotation: self.parent.rotation,\n      };\n\n      return res;\n    },\n  }));\n\nconst PolygonRegionModel = types.compose(\n  \"PolygonRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  AreaMixin,\n  NormalizationMixin,\n  Model,\n);\n\n/**\n * Get coordinates of anchor point\n * @param {array} flattenedPoints\n * @param {number} cursorX coordinates of cursor X\n * @param {number} cursorY coordinates of cursor Y\n */\nfunction getAnchorPoint({ flattenedPoints, cursorX, cursorY }) {\n  const [point1X, point1Y, point2X, point2Y] = flattenedPoints;\n  const y =\n    ((point2X - point1X) * (point2X * point1Y - point1X * point2Y) +\n      (point2X - point1X) * (point2Y - point1Y) * cursorX +\n      (point2Y - point1Y) * (point2Y - point1Y) * cursorY) /\n    ((point2Y - point1Y) * (point2Y - point1Y) + (point2X - point1X) * (point2X - point1X));\n  const x =\n    cursorX -\n    ((point2Y - point1Y) *\n      (point2X * point1Y - point1X * point2Y + cursorX * (point2Y - point1Y) - cursorY * (point2X - point1X))) /\n      ((point2Y - point1Y) * (point2Y - point1Y) + (point2X - point1X) * (point2X - point1X));\n\n  return [x, y];\n}\n\nfunction getFlattenedPoints(points) {\n  const p = points.map(p => [p.x, p.y]);\n  return p.reduce(function(flattenedPoints, point) {\n    return flattenedPoints.concat(point);\n  }, []);\n}\n\nfunction getHoverAnchor({ layer }) {\n  return layer.findOne(\".hoverAnchor\");\n}\n\n/**\n * Create new anchor for current polygon\n */\nfunction createHoverAnchor({ point, group, layer, zoom }) {\n  const hoverAnchor = new Konva.Circle({\n    name: \"hoverAnchor\",\n    x: point[0],\n    y: point[1],\n    stroke: green.primary,\n    fill: green[0],\n    scaleX: 1 / (zoom || 1),\n    scaleY: 1 / (zoom || 1),\n\n    strokeWidth: 2,\n    radius: 5,\n  });\n\n  group.add(hoverAnchor);\n  layer.draw();\n  return hoverAnchor;\n}\n\nfunction moveHoverAnchor({ point, group, layer, zoom }) {\n  const hoverAnchor = getHoverAnchor({ layer }) || createHoverAnchor({ point, group, layer, zoom });\n  hoverAnchor.to({ x: point[0], y: point[1], duration: 0 });\n}\n\nfunction removeHoverAnchor({ layer }) {\n  const hoverAnchor = getHoverAnchor({ layer });\n  if (!hoverAnchor) return;\n  hoverAnchor.destroy();\n  layer.draw();\n}\n\nconst HtxPolygonView = ({ item }) => {\n  if (item.hidden) return null;\n\n  const { store } = item;\n\n  const style = item.style || item.tag || defaultStyle;\n\n  /**\n   * Render line between 2 points\n   */\n  function renderLine({ points, idx1, idx2 }) {\n    const name = `border_${idx1}_${idx2}`;\n    let { strokecolor, strokewidth } = style;\n\n    if (item.highlighted) {\n      strokecolor = Constants.HIGHLIGHTED_STROKE_COLOR;\n      strokewidth = Constants.HIGHLIGHTED_STROKE_WIDTH;\n    }\n\n    if (!item.closed && idx2 === 0) return null;\n\n    const insertIdx = idx1 + 1; // idx1 + 1 or idx2\n    const flattenedPoints = getFlattenedPoints([points[idx1], points[idx2]]);\n    return (\n      <Group\n        key={name}\n        name={name}\n        onClick={e => item.handleLineClick({ e, flattenedPoints, insertIdx })}\n        onMouseMove={e => {\n          if (!item.closed || !item.selected || !item.editable) return;\n\n          item.handleMouseMove({ e, flattenedPoints });\n        }}\n        onMouseLeave={e => item.handleMouseLeave({ e })}\n      >\n        <Line\n          points={flattenedPoints}\n          stroke={strokecolor}\n          opacity={+style.opacity}\n          lineJoin=\"bevel\"\n          strokeWidth={+strokewidth}\n          strokeScaleEnabled={false}\n        />\n      </Group>\n    );\n  }\n\n  function renderLines(points) {\n    const name = \"borders\";\n    return (\n      <Group key={name} name={name}>\n        {points.map((p, idx) => {\n          const idx1 = idx;\n          const idx2 = idx === points.length - 1 ? 0 : idx + 1;\n          return renderLine({ points, idx1, idx2 });\n        })}\n      </Group>\n    );\n  }\n\n  function renderPoly(points) {\n    const name = \"poly\";\n    return (\n      <Group key={name} name={name}>\n        <Line\n          lineJoin=\"bevel\"\n          points={getFlattenedPoints(points)}\n          fill={style.strokecolor}\n          closed={true}\n          opacity={0.2}\n        />\n      </Group>\n    );\n  }\n\n  function renderCircle({ points, idx }) {\n    const name = `anchor_${points.length}_${idx}`;\n    const point = points[idx];\n\n    if (!item.closed || (item.closed && item.selected)) {\n      return <PolygonPointView item={point} name={name} key={name} />;\n    }\n  }\n\n  function renderCircles(points) {\n    const name = \"anchors\";\n    return (\n      <Group key={name} name={name}>\n        {points.map((p, idx) => renderCircle({ points, idx }))}\n      </Group>\n    );\n  }\n\n  function minMax(items) {\n    return items.reduce((acc, val) => {\n      acc[0] = acc[0] === undefined || val < acc[0] ? val : acc[0];\n      acc[1] = acc[1] === undefined || val > acc[1] ? val : acc[1];\n      return acc;\n    }, []);\n  }\n\n  let minX = 0,\n    maxX = 0,\n    minY = 0,\n    maxY = 0;\n\n  return (\n    <Group\n      key={item.id ? item.id : guidGenerator(5)}\n      onDragStart={e => {\n        item.completion.setDragMode(true);\n\n        var arrX = item.points.map(p => p.x);\n        var arrY = item.points.map(p => p.y);\n\n        [minX, maxX] = minMax(arrX);\n        [minY, maxY] = minMax(arrY);\n      }}\n      dragBoundFunc={item.parent.fixForZoom(pos => {\n        let { x, y } = pos;\n\n        const sw = item.parent.stageWidth;\n        const sh = item.parent.stageHeight;\n\n        if (minY + y < 0) y = -1 * minY;\n        if (minX + x < 0) x = -1 * minX;\n        if (maxY + y > sh) y = sh - maxY;\n        if (maxX + x > sw) x = sw - maxX;\n\n        return { x: x, y: y };\n      })}\n      onDragEnd={e => {\n        const t = e.target;\n\n        item.completion.setDragMode(false);\n        if (!item.closed) item.closePoly();\n\n        item.completion.history.freeze();\n        item.points.forEach(p => p.movePoint(t.getAttr(\"x\"), t.getAttr(\"y\")));\n        item.completion.history.unfreeze();\n\n        t.setAttr(\"x\", 0);\n        t.setAttr(\"y\", 0);\n      }}\n      onMouseOver={e => {\n        const stage = item.parent.stageRef;\n\n        if (store.completionStore.selected.relationMode) {\n          item.setHighlight(true);\n          stage.container().style.cursor = Constants.RELATION_MODE_CURSOR;\n        } else {\n          stage.container().style.cursor = Constants.POINTER_CURSOR;\n        }\n      }}\n      onMouseOut={e => {\n        const stage = item.parent.stageRef;\n        stage.container().style.cursor = Constants.DEFAULT_CURSOR;\n\n        if (store.completionStore.selected.relationMode) {\n          item.setHighlight(false);\n        }\n      }}\n      onClick={e => {\n        // create regions over another regions with Cmd/Ctrl pressed\n        if (e.evt.metaKey || e.evt.ctrlKey) return;\n\n        e.cancelBubble = true;\n\n        // if (!item.editable) return;\n\n        if (!item.closed) return;\n\n        const stage = item.parent.stageRef;\n\n        if (store.completionStore.selected.relationMode) {\n          stage.container().style.cursor = Constants.DEFAULT_CURSOR;\n        }\n\n        item.setHighlight(false);\n        item.onClickRegion();\n      }}\n      draggable={item.editable}\n    >\n      <LabelOnPolygon item={item} />\n\n      {item.mouseOverStartPoint}\n\n      {item.points && item.closed ? renderPoly(item.points) : null}\n      {item.points ? renderLines(item.points) : null}\n      {item.points ? renderCircles(item.points) : null}\n    </Group>\n  );\n};\n\nconst HtxPolygon = observer(HtxPolygonView);\n\nRegistry.addTag(\"polygonregion\", PolygonRegionModel, HtxPolygon);\nRegistry.addRegionType(PolygonRegionModel, \"image\", value => !!value.points);\n\nexport { PolygonRegionModel, HtxPolygon };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport BaseTool from \"./Base\";\nimport SliderTool from \"../components/Tools/Slider\";\nimport ToolMixin from \"../mixins/Tool\";\nimport { PolygonRegionModel } from \"../regions/PolygonRegion\";\nimport { calcBorder, getImageData } from \"../utils/floodfill\";\nimport { guidGenerator } from \"../core/Helpers\";\n\nconst DEF_THRESHOLD = 10;\n\nconst ToolView = observer(({ item }) => {\n  return (\n    <SliderTool\n      max={50}\n      default={DEF_THRESHOLD}\n      selected={item.selected}\n      icon={\"tool\"}\n      onClick={ev => {\n        const cur = item.selected;\n        item.manager.unselectAll();\n        item.setSelected(!cur);\n      }}\n      onChange={val => {\n        item.setThreshold(val);\n      }}\n    />\n  );\n});\n\nconst _Tool = types\n  .model({\n    threshold: types.optional(types.number, DEF_THRESHOLD),\n  })\n  .views(self => ({\n    get viewClass() {\n      return <ToolView item={self} />;\n    },\n  }))\n  .actions(self => ({\n    setThreshold(val) {\n      self.threshold = val;\n    },\n\n    mouseupEv() {\n      self.mode = \"viewing\";\n    },\n\n    mousemoveEv(ev, [x, y]) {\n      if (self.mode !== \"drawing\") return;\n    },\n\n    createPolygonRegion(points) {\n      const { states, strokecolor } = {};\n      const c = self.control;\n\n      const p = PolygonRegionModel.create({\n        id: guidGenerator(),\n\n        opacity: parseFloat(c.opacity),\n        fillcolor: c.fillcolor,\n\n        strokewidth: parseInt(c.strokewidth),\n        strokecolor: strokecolor,\n\n        pointsize: c.pointsize,\n        pointstyle: c.pointstyle,\n\n        states: states,\n\n        coordstype: \"px\",\n      });\n\n      points.forEach(t => p.addPoint(t.x, t.y));\n      self.obj.addShape(p);\n\n      p.closePoly();\n\n      return p;\n    },\n\n    clickEv(ev, [x, y]) {\n      const image = self.obj;\n      const imageRef = image.imageRef;\n      const imageData = getImageData(imageRef);\n      const points = calcBorder(imageData.data, image.naturalWidth, image.naturalHeight, x, y, self.threshold, true);\n\n      if (points) self.createPolygonRegion(points);\n\n      self.control.unselectAll();\n    },\n\n    mousedownEv(ev, [x, y]) {\n      self.mode = \"drawing\";\n    },\n  }));\n\nconst FloodFill = types.compose(ToolMixin, _Tool, BaseTool);\n\nexport { FloodFill };\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Layer, Rect } from \"react-konva\";\n\n/**\n * Create grid for Image Canvas\n * @param {number} width\n * @param {number} height\n * @param {number} nodeSize\n */\nconst createGrid = (width, height, nodeSize) => {\n  return [...Array(width)]\n    .map((_, col) =>\n      [...Array(height)].map((_, row) => ({\n        col,\n        row,\n        x: col * nodeSize,\n        y: row * nodeSize,\n        fill: \"#fff\",\n      })),\n    )\n    .reduce((p, c) => [...p, ...c]);\n};\n\nexport default observer(\n  class ImageGrid extends Component {\n    render() {\n      const { item } = this.props;\n\n      const grid = createGrid(\n        Math.ceil(item.stageWidth / item.gridSize),\n        Math.ceil(item.stageHeight / item.gridSize),\n        item.gridSize,\n      );\n\n      return (\n        <Layer opacity={0.15} name=\"ruler\">\n          {Object.values(grid).map((n, i) => (\n            <Rect\n              key={i}\n              x={n.x}\n              y={n.y}\n              width={item.gridSize}\n              height={item.gridSize}\n              stroke={item.gridColor}\n              strokeWidth={1}\n            />\n          ))}\n        </Layer>\n      );\n    }\n  },\n);\n","import React, { Component } from \"react\";\nimport { Transformer } from \"react-konva\";\nimport { MIN_SIZE } from \"../../tools/Base\";\nimport { fixRectToFit, getBoundingBoxAfterChanges } from \"../../utils/image\";\n\nexport default class TransformerComponent extends Component {\n  componentDidMount() {\n    this.checkNode();\n  }\n\n  componentDidUpdate() {\n    this.checkNode();\n  }\n\n  checkNode() {\n    if (!this.transformer) return;\n\n    // here we need to manually attach or detach Transformer node\n    const stage = this.transformer.getStage();\n    const { selectedShape } = this.props;\n\n    if (!selectedShape) {\n      this.transformer.detach();\n      this.transformer.getLayer().batchDraw();\n      return;\n    }\n\n    if (!selectedShape.supportsTransform) return;\n\n    const selectedNode = stage.findOne(\".\" + selectedShape.id);\n    // do nothing if selected node is already attached\n    if (selectedNode === this.transformer.node()) {\n      return;\n    }\n\n    if (selectedNode) {\n      // attach to another node\n      this.transformer.attachTo(selectedNode);\n    } else {\n      // remove transformer\n      this.transformer.detach();\n    }\n    this.transformer.getLayer().batchDraw();\n  }\n\n  constrainSizes = (oldBox, newBox) => {\n    // it's important to compare against `undefined` because it can be missed (not rotated box?)\n    const rotation = newBox.rotation !== undefined ? newBox.rotation : oldBox.rotation;\n    const isRotated = rotation !== oldBox.rotation;\n\n    const stage = this.transformer.getStage();\n\n    if (newBox.width < MIN_SIZE) newBox.width = MIN_SIZE;\n    if (newBox.height < MIN_SIZE) newBox.height = MIN_SIZE;\n\n    // it's harder to fix sizes for rotated box, so just block changes out of stage\n    if (rotation || isRotated) {\n      const { x, y, width, height } = newBox;\n      const selfRect = { x: 0, y: 0, width, height };\n\n      // bounding box, got by applying current shift and rotation to normalized box\n      const clientRect = getBoundingBoxAfterChanges(selfRect, { x, y }, rotation);\n      const fixed = fixRectToFit(clientRect, stage.width(), stage.height());\n\n      // if bounding box is out of stage — do nothing\n      if ([\"x\", \"y\", \"width\", \"height\"].some(key => fixed[key] !== clientRect[key])) return oldBox;\n      return newBox;\n    } else {\n      return fixRectToFit(newBox, stage.width(), stage.height());\n    }\n  };\n\n  render() {\n    if (!this.props.selectedShape.supportsTransform) return null;\n\n    return (\n      <Transformer\n        resizeEnabled={true}\n        ignoreStroke={true}\n        keepRatio={false}\n        rotateEnabled={this.props.rotateEnabled}\n        borderDash={[3, 1]}\n        // borderStroke={\"red\"}\n        boundBoxFunc={this.constrainSizes}\n        anchorSize={8}\n        ref={node => {\n          this.transformer = node;\n        }}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Stage, Layer, Group, Line } from \"react-konva\";\nimport { observer } from \"mobx-react\";\nimport { getRoot } from \"mobx-state-tree\";\n\nimport ImageGrid from \"../ImageGrid/ImageGrid\";\nimport ImageTransformer from \"../ImageTransformer/ImageTransformer\";\nimport ObjectTag from \"../../components/Tags/Object\";\nimport Tree from \"../../core/Tree\";\nimport styles from \"./ImageView.module.scss\";\nimport InfoModal from \"../Infomodal/Infomodal\";\n\nexport default observer(\n  class ImageView extends Component {\n    // stored position of canvas before creating region\n    canvasX;\n    canvasY;\n\n    handleOnClick = e => {\n      const { item } = this.props;\n\n      return item.event(\"click\", e, e.evt.offsetX, e.evt.offsetY);\n    };\n\n    handleMouseDown = e => {\n      const { item } = this.props;\n\n      // item.freezeHistory();\n      const p = e.target.getParent();\n\n      if (p && p.className === \"Transformer\") return;\n\n      if (\n        // create regions over another regions with Cmd/Ctrl pressed\n        (e.evt && (e.evt.metaKey || e.evt.ctrlKey)) ||\n        e.target === e.target.getStage() ||\n        (e.target.parent && (e.target.parent.attrs.name === \"ruler\" || e.target.parent.attrs.name === \"segmentation\"))\n      ) {\n        window.addEventListener(\"mousemove\", this.handleGlobalMouseMove);\n        window.addEventListener(\"mouseup\", this.handleGlobalMouseUp);\n        const { offsetX: x, offsetY: y } = e.evt;\n        // store the canvas coords for calculations in further events\n        const { left, top } = this.container.getBoundingClientRect();\n        this.canvasX = left;\n        this.canvasY = top;\n        return item.event(\"mousedown\", e, x, y);\n      }\n\n      return true;\n    };\n\n    /**\n     * Mouse up outside the canvas\n     */\n    handleGlobalMouseUp = e => {\n      window.removeEventListener(\"mousemove\", this.handleGlobalMouseMove);\n      window.removeEventListener(\"mouseup\", this.handleGlobalMouseUp);\n\n      if (e.target && e.target.tagName === \"CANVAS\") return;\n\n      const { item } = this.props;\n      const { clientX: x, clientY: y } = e;\n\n      item.freezeHistory();\n\n      return item.event(\"mouseup\", e, x - this.canvasX, y - this.canvasY);\n    };\n\n    handleGlobalMouseMove = e => {\n      if (e.target && e.target.tagName === \"CANVAS\") return;\n\n      const { item } = this.props;\n      const { clientX: x, clientY: y } = e;\n\n      return item.event(\"mousemove\", e, x - this.canvasX, y - this.canvasY);\n    };\n\n    /**\n     * Mouse up on Stage\n     */\n    handleMouseUp = e => {\n      const { item } = this.props;\n\n      item.freezeHistory();\n\n      return item.event(\"mouseup\", e, e.evt.offsetX, e.evt.offsetY);\n    };\n\n    handleMouseMove = e => {\n      const { item } = this.props;\n\n      item.freezeHistory();\n\n      const stage = item.stageRef;\n      const scale = stage.scaleX();\n\n      if (e.evt && (e.evt.buttons === 4 || (e.evt.buttons === 1 && e.evt.shiftKey)) && scale > 1) {\n        e.evt.preventDefault();\n        const newPos = { x: stage.x() + e.evt.movementX, y: stage.y() + e.evt.movementY };\n        item.setZoom(scale, newPos.x, newPos.y);\n        stage.position(newPos);\n        stage.batchDraw();\n      } else {\n        return item.event(\"mousemove\", e, e.evt.offsetX, e.evt.offsetY);\n      }\n    };\n\n    handleError = () => {\n      InfoModal.error(`Cannot load image (${this.props.item._value}).\\nCheck console/network panel for more info.`);\n    };\n\n    updateGridSize = range => {\n      const { item } = this.props;\n      item.freezeHistory();\n\n      item.setGridSize(range);\n    };\n\n    /**\n     * Handle to zoom\n     */\n    handleZoom = e => {\n      /**\n       * Disable if user doesn't use ctrl\n       */\n      if (e.evt && !e.evt.ctrlKey) {\n        return;\n      } else if (e.evt && e.evt.ctrlKey) {\n        /**\n         * Disable scrolling page\n         */\n        e.evt.preventDefault();\n      }\n\n      const { item } = this.props;\n      item.freezeHistory();\n\n      const stage = item.stageRef;\n      const scaleBy = parseFloat(item.zoomby);\n      const oldScale = stage.scaleX();\n\n      let mousePointTo;\n      let newScale;\n      let pos;\n      let newPos;\n\n      if (e.evt) {\n        mousePointTo = {\n          x: stage.getPointerPosition().x / oldScale - stage.x() / oldScale,\n          y: stage.getPointerPosition().y / oldScale - stage.y() / oldScale,\n        };\n\n        newScale = e.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\n\n        newPos = {\n          x: -(mousePointTo.x - stage.getPointerPosition().x / newScale) * newScale,\n          y: -(mousePointTo.y - stage.getPointerPosition().y / newScale) * newScale,\n        };\n      } else {\n        pos = {\n          x: stage.width() / 2,\n          y: stage.height() / 2,\n        };\n\n        mousePointTo = {\n          x: pos.x / oldScale - stage.x() / oldScale,\n          y: pos.y / oldScale - stage.y() / oldScale,\n        };\n\n        newScale = Math.max(0.05, oldScale * e);\n\n        newPos = {\n          x: -(mousePointTo.x - pos.x / newScale) * newScale,\n          y: -(mousePointTo.y - pos.y / newScale) * newScale,\n        };\n      }\n\n      if (item.negativezoom !== true && newScale <= 1) {\n        item.setZoom(1, 0, 0);\n        stage.scale({ x: 1, y: 1 });\n        stage.position({ x: 0, y: 0 });\n        stage.batchDraw();\n        return;\n      }\n\n      stage.scale({ x: newScale, y: newScale });\n\n      item.setZoom(newScale, newPos.x, newPos.y);\n      stage.position(newPos);\n      stage.batchDraw();\n    };\n\n    renderRulers() {\n      const { item } = this.props;\n      const width = 1;\n      const color = \"white\";\n\n      return (\n        <Group\n          name=\"ruler\"\n          onClick={ev => {\n            ev.cancelBubble = false;\n          }}\n        >\n          <Line\n            x={0}\n            y={item.cursorPositionY}\n            points={[0, 0, item.stageWidth, 0]}\n            strokeWidth={width}\n            stroke={color}\n            tension={0}\n            dash={[4, 4]}\n            closed\n          />\n          <Line\n            x={item.cursorPositionX}\n            y={0}\n            points={[0, 0, 0, item.stageHeight]}\n            strokeWidth={width}\n            stroke={color}\n            tension={0}\n            dash={[1.5]}\n            closed\n          />\n        </Group>\n      );\n    }\n\n    onResize = () => {\n      this.props.item.onResize(this.container.offsetWidth, this.container.offsetHeight, true);\n    };\n\n    componentDidMount() {\n      window.addEventListener(\"resize\", this.onResize);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.onResize);\n    }\n\n    renderTools() {\n      const { item, store } = this.props;\n      const cs = store.completionStore;\n\n      if (cs.viewingAllCompletions || cs.viewingAllPredictions) return null;\n\n      return (\n        <div className={styles.block}>\n          {item\n            .getToolsManager()\n            .allTools()\n            .map(tool => tool.viewClass)}\n        </div>\n      );\n    }\n\n    render() {\n      const { item, store } = this.props;\n\n      // TODO fix me\n      if (!store.task || !item._value) return null;\n\n      const selected = item.selectedShape;\n      const regions = item.regs.filter(r => r !== selected);\n      const cb = item.controlButton();\n      let filler = null;\n      let containerClassName = styles.container;\n      const containerStyle = {};\n\n      const imgStyle = {\n        width: item.width,\n        transformOrigin: \"left top\",\n        filter: `brightness(${item.brightnessGrade}%) contrast(${item.contrastGrade}%)`,\n      };\n      const imgTransform = [];\n\n      if (getRoot(item).settings.imageFullSize === false) {\n        containerStyle[\"maxWidth\"] = item.maxwidth;\n      }\n\n      if (item.zoomScale !== 1) {\n        let { zoomingPositionX, zoomingPositionY } = item;\n        imgTransform.push(\"translate(\" + zoomingPositionX + \"px,\" + zoomingPositionY + \"px)\");\n        imgTransform.push(\"scale(\" + item.resize + \", \" + item.resize + \")\");\n      }\n\n      if (item.rotation) {\n        const translate = {\n          90: `0, -100%`,\n          180: `-100%, -100%`,\n          270: `-100%, 0`,\n        };\n        // there is a top left origin already set for zoom; so translate+rotate\n        imgTransform.push(`rotate(${item.rotation}deg)`);\n        imgTransform.push(`translate(${translate[item.rotation] || \"0, 0\"})`);\n        if ([90, 270].includes(item.rotation)) {\n          // we can not rotate img itself, so we change container's size via css margin hack, ...\n          const ratio = item.naturalHeight / item.naturalWidth;\n          filler = <div className={styles.filler} style={{ marginTop: `${ratio * 100}%` }} />;\n          containerClassName += \" \" + styles.rotated;\n          // ... prepare image size for transform rotation and use position: absolute\n          imgStyle.width = `${ratio * 100}%`;\n        }\n      }\n\n      if (imgTransform.length) {\n        imgStyle[\"transform\"] = imgTransform.join(\" \");\n      }\n\n      return (\n        <ObjectTag\n          item={item}\n          style={{\n            position: \"relative\",\n            display: \"flex\",\n            alignItems: \"flex-start\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <div\n            ref={node => {\n              this.container = node;\n            }}\n            className={containerClassName}\n            style={containerStyle}\n          >\n            {filler}\n            <img\n              ref={ref => {\n                item.setImageRef(ref);\n              }}\n              style={imgStyle}\n              src={item._value}\n              onLoad={item.updateImageSize}\n              onError={this.handleError}\n              onClick={this.handleOnClick}\n              alt=\"LS\"\n            />\n          </div>\n          {/* @todo this is dirty hack; rewrite to proper async waiting for data to load */}\n          {item.stageWidth <= 1 ? null : (\n            <Stage\n              ref={ref => {\n                item.setStageRef(ref);\n              }}\n              style={{ position: \"absolute\", top: 0, left: 0, brightness: \"150%\" }}\n              className={\"image-element\"}\n              width={item.stageWidth}\n              height={item.stageHeight}\n              scaleX={item.scale}\n              scaleY={item.scale}\n              x={item.zoomingPositionX}\n              y={item.zoomingPositionY}\n              onClick={this.handleOnClick}\n              onMouseDown={this.handleMouseDown}\n              onMouseMove={this.handleMouseMove}\n              onMouseUp={this.handleMouseUp}\n              onWheel={item.zoom ? this.handleZoom : () => {}}\n            >\n              {item.grid && item.sizeUpdated && <ImageGrid item={item} />}\n              {regions.filter(s => s.type === \"brushregion\").map(Tree.renderItem)}\n              {selected && selected.type === \"brushregion\" && Tree.renderItem(selected)}\n              <Layer name=\"shapes\">\n                {regions.filter(s => s.type !== \"brushregion\").map(Tree.renderItem)}\n                {selected && selected.type !== \"brushregion\" && Tree.renderItem(selected)}\n                {selected?.editable && (\n                  <ImageTransformer rotateEnabled={cb && cb.canrotate} selectedShape={item.selectedShape} />\n                )}\n              </Layer>\n            </Stage>\n          )}\n\n          {this.renderTools()}\n        </ObjectTag>\n      );\n    }\n  },\n);\n","class ToolsManager {\n  constructor({ obj }) {\n    this.obj = obj;\n    this.tools = {};\n    this._default_tool = null;\n  }\n\n  addTool(name, tool) {\n    this.tools[name] = tool;\n    tool._manager = this;\n\n    if (tool.default) {\n      this._default_tool = tool;\n    }\n  }\n\n  unselectAll() {\n    // when one of the tool get selected you need to unselect all\n    // other active tools\n    Object.values(this.tools).forEach(t => {\n      if (typeof t.selected !== \"undefined\") t.setSelected(false);\n    });\n\n    const stage = this.obj.stageRef;\n    stage.container().style.cursor = \"default\";\n  }\n\n  allTools() {\n    return Object.values(this.tools);\n  }\n\n  addToolsFromControl(s) {\n    const self = this;\n\n    if (s.tools) {\n      const t = s.tools;\n\n      Object.keys(t).forEach(k => {\n        self.addTool(k, t[k]);\n      });\n    }\n  }\n\n  findSelectedTool() {\n    return Object.values(this.tools).find(t => t.selected);\n  }\n\n  event(name, ev, ...args) {\n    // if there is an active tool, dispatch there\n    const selectedTool = this.findSelectedTool();\n\n    if (selectedTool) {\n      selectedTool.event(name, ev, args);\n      return;\n    }\n\n    // if there is a default tool then dispatch an event there\n    if (this._default_tool) {\n      this._default_tool.event(name, ev, args);\n      return;\n    }\n  }\n}\n\nexport default ToolsManager;\n","import React from \"react\";\nimport { Line, Shape, Group, Layer } from \"react-konva\";\nimport { observer } from \"mobx-react\";\nimport { types, getParent, getRoot } from \"mobx-state-tree\";\n\nimport Canvas from \"../utils/canvas\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Registry from \"../core/Registry\";\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport { ImageModel } from \"../tags/object/Image\";\nimport { LabelOnMask } from \"../components/ImageView/LabelOnRegion\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport { AreaMixin } from \"../mixins/AreaMixin\";\n\nconst highlightOptions = {\n  shadowColor: \"red\",\n  shadowBlur: 1,\n  shadowOffsetY: 2,\n  shadowOffsetX: 2,\n  shadowOpacity: 1,\n};\n\nconst Points = types\n  .model(\"Points\", {\n    id: types.optional(types.identifier, guidGenerator),\n    type: types.optional(types.enumeration([\"add\", \"eraser\"]), \"add\"),\n    points: types.array(types.number),\n    /**\n     * Stroke width\n     */\n    strokeWidth: types.optional(types.number, 25),\n  })\n  .views(self => ({\n    get store() {\n      return getRoot(self);\n    },\n    get parent() {\n      return getParent(self, 2);\n    },\n  }))\n  .actions(self => ({\n    setType(type) {\n      self.type = type;\n    },\n\n    addPoints(x, y) {\n      // scale it back because it would be scaled on draw\n      self.points.push(x / self.parent.scaleX);\n      self.points.push(y / self.parent.scaleY);\n    },\n\n    // rescale points to the new width and height from the original\n    rescale(origW, origH, destW, destH) {\n      const s = destW / origW;\n      return self.points.map(p => p * s);\n    },\n\n    scaledStrokeWidth(origW, origH, destW, destH) {\n      const s = destW / origW;\n      return s * self.strokeWidth;\n    },\n  }));\n\n/**\n * Rectangle object for Bounding Box\n *\n */\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"brushregion\",\n    object: types.late(() => types.reference(ImageModel)),\n\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"perc\"),\n\n    rle: types.frozen(),\n\n    touches: types.array(Points),\n    currentTouch: types.maybeNull(types.reference(Points)),\n  })\n  .volatile(self => ({\n    /**\n     * Higher values will result in a more curvy line. A value of 0 will result in no interpolation.\n     */\n    tension: 1.0,\n    /**\n     * Stroke color\n     */\n    // strokeColor: types.optional(types.string, \"red\"),\n\n    /**\n     * Determines node opacity. Can be any number between 0 and 1\n     */\n    opacity: 1,\n    scaleX: 1,\n    scaleY: 1,\n\n    // points: types.array(types.array(types.number)),\n    // eraserpoints: types.array(types.array(types.number)),\n\n    mode: \"brush\",\n\n    needsUpdate: 1,\n    hideable: true,\n  }))\n  .views(self => ({\n    get parent() {\n      return self.object;\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      // if ()\n      // const newdata = ctx.createImageData(750, 937);\n      // newdata.data.set(decode(item._rle));\n      // const dec = decode(self._rle);\n      // self._rle_image =\n      // item._cached_mask = decode(item._rle);\n      // const newdata = ctx.createImageData(750, 937);\n      //     newdata.data.set(item._cached_mask);\n      //     var img = imagedata_to_image(newdata);\n    },\n\n    addTouch({ type, strokeWidth }) {\n      const p = Points.create({ id: guidGenerator(), type: type, strokeWidth: strokeWidth });\n      self.touches.push(p);\n      self.currentTouch = p;\n\n      return p;\n    },\n\n    convertPointsToMask() {},\n\n    // addPoints(x, y, mode) {\n    //   if (mode) self.mode = \"eraser\";\n    //   self.points.push(x);\n    //   self.points.push(y);\n    // },\n\n    // addEraserPoints(x, y) {\n    //   self.eraserpoints = [...self.eraserpoints, x, y];\n    // },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      if (self.parent.initialWidth > 1 && self.parent.initialHeight > 1) {\n        let ratioX = self.parent.stageWidth / self.parent.initialWidth;\n        let ratioY = self.parent.stageHeight / self.parent.initialHeight;\n\n        self.setScale(ratioX, ratioY);\n\n        self.needsUpdate = self.needsUpdate + 1;\n      }\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    serialize() {\n      const object = self.object;\n      const rle = Canvas.Region2RLE(self, object, {\n        stroke: self.strokeColor,\n        tension: self.tension,\n      });\n\n      if (!rle || !rle.length) return null;\n\n      const res = {\n        original_width: object.naturalWidth,\n        original_height: object.naturalHeight,\n        value: {\n          format: \"rle\",\n          // UInt8Array serializes as object, not an array :(\n          rle: Array.from(rle),\n        },\n      };\n\n      return res;\n    },\n  }));\n\nconst BrushRegionModel = types.compose(\n  \"BrushRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  NormalizationMixin,\n  AreaMixin,\n  Model,\n);\n\nconst HtxBrushLayer = observer(({ item, points }) => {\n  const highlight = item.highlighted ? highlightOptions : { shadowOpacity: 0 };\n  const params =\n    points.type === \"add\"\n      ? {\n          ...highlight,\n          opacity: item.mode === \"brush\" ? item.opacity : 1,\n          globalCompositeOperation: \"source-over\",\n        }\n      : {\n          opacity: 1,\n          globalCompositeOperation: \"destination-out\",\n        };\n\n  return (\n    <Line\n      onMouseDown={e => {\n        e.cancelBubble = false;\n      }}\n      points={[...points.points]}\n      stroke={item.style.strokecolor}\n      strokeWidth={points.strokeWidth}\n      lineJoin={\"round\"}\n      lineCap=\"round\"\n      tension={item.tension}\n      {...params}\n    />\n  );\n});\n\nconst HtxBrushView = ({ item }) => {\n  if (item.hidden) return null;\n\n  const { store } = item;\n\n  // if (item.parent.stageRef && item._rle) {\n  //     const sref = item.parent.stageRef;\n  //     const ctx = sref.getLayers()[0].getContext(\"2d\");\n  //     const newdata = ctx.createImageData(item.parent.stageWidth, item.parent.stageHeight);\n\n  //     newdata.data.set(decode(item._rle));\n\n  //     // newdata.data.set(RLEdecode(_rle))\n  //     ctx.putImageData(newdata, 0, 0);\n  // }\n\n  let highlight = item.highlighted ? highlightOptions : { shadowOpacity: 0 };\n\n  return (\n    <Layer id={item.cleanId}>\n      <Group\n        attrMy={item.needsUpdate}\n        name=\"segmentation\"\n        // onClick={e => {\n        //     e.cancelBubble = false;\n        // }}\n        // onMouseDown={e => {\n        //     console.log(\"down\");\n        //     e.cancelBubble = false;\n        // }}\n        onMouseOver={e => {\n          const stage = item.parent.stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = \"crosshair\";\n          } else {\n            // no tool selected\n            if (!item.parent.getToolsManager().findSelectedTool()) stage.container().style.cursor = \"pointer\";\n          }\n        }}\n        onMouseOut={e => {\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n\n          if (!item.parent.getToolsManager().findSelectedTool()) {\n            const stage = item.parent.stageRef;\n            stage.container().style.cursor = \"default\";\n          }\n        }}\n        onClick={e => {\n          if (store.completionStore.selected.relationMode) {\n            item.onClickRegion();\n            return;\n          }\n\n          if (item.parent.getToolsManager().findSelectedTool()) return;\n\n          const stage = item.parent.stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = \"default\";\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n      >\n        {/* @todo rewrite this to just an Konva.Image, much simplier */}\n        {/* @todo and this will allow to use scale on parent Group */}\n        <Shape\n          sceneFunc={(ctx, shape) => {\n            if (item.parent.naturalWidth === 1) return null;\n\n            if (item._loadedOnce === true) {\n              ctx.drawImage(item._img, 0, 0, item.parent.stageWidth, item.parent.stageHeight);\n              ctx.fillStrokeShape(shape);\n\n              return;\n            }\n\n            if (item.rle) {\n              const img = Canvas.RLE2Region(item.rle, item.parent);\n              item._loadedOnce = true;\n\n              img.onload = function() {\n                ctx.drawImage(img, 0, 0, item.parent.stageWidth, item.parent.stageHeight);\n                ctx.fillStrokeShape(shape);\n              };\n\n              item._img = img;\n            }\n          }}\n          opacity={1}\n          {...highlight}\n        />\n\n        <Group scaleX={item.scaleX} scaleY={item.scaleY}>\n          {item.touches.map(p => (\n            <HtxBrushLayer key={p.id} store={store} item={item} points={p} />\n          ))}\n\n          <LabelOnMask item={item} />\n        </Group>\n      </Group>\n    </Layer>\n  );\n};\n\nconst HtxBrush = observer(HtxBrushView);\n\nRegistry.addTag(\"brushregion\", BrushRegionModel, HtxBrush);\nRegistry.addRegionType(BrushRegionModel, \"image\", value => value.rle || value.touches);\n\nexport { BrushRegionModel, HtxBrush };\n","import React, { Fragment } from \"react\";\nimport { Circle } from \"react-konva\";\nimport { observer } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport Constants, { defaultStyle } from \"../core/Constants\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Registry from \"../core/Registry\";\nimport { ImageModel } from \"../tags/object/Image\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport { LabelOnKP } from \"../components/ImageView/LabelOnRegion\";\nimport { AreaMixin } from \"../mixins/AreaMixin\";\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"keypointregion\",\n    object: types.late(() => types.reference(ImageModel)),\n\n    x: types.number,\n    y: types.number,\n\n    width: types.number,\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"perc\"),\n  })\n  .volatile(self => ({\n    relativeX: 0,\n    relativeY: 0,\n    hideable: true,\n  }))\n  .views(self => ({\n    get store() {\n      return getRoot(self);\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      if (self.coordstype === \"perc\") {\n        // deserialization\n        self.relativeX = self.x;\n        self.relativeY = self.y;\n      } else {\n        // creation\n        const { stageWidth: width, stageHeight: height } = self.parent;\n        if (width && height) {\n          self.relativeX = (self.x / width) * 100;\n          self.relativeY = (self.y / height) * 100;\n        }\n      }\n    },\n\n    rotate(degree) {\n      const p = self.rotatePoint(self, degree);\n      self.setPosition(p.x, p.y);\n    },\n\n    setPosition(x, y) {\n      self.x = x;\n      self.y = y;\n\n      self.relativeX = (x / self.parent.stageWidth) * 100;\n      self.relativeY = (y / self.parent.stageHeight) * 100;\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      if (self.coordstype === \"px\") {\n        self.x = (sw * self.relativeX) / 100;\n        self.y = (sh * self.relativeY) / 100;\n      }\n\n      if (self.coordstype === \"perc\") {\n        self.x = (sw * self.x) / 100;\n        self.y = (sh * self.y) / 100;\n        self.width = (sw * self.width) / 100;\n        self.coordstype = \"px\";\n      }\n    },\n\n    serialize() {\n      const object = self.object;\n      const { naturalWidth, naturalHeight, stageWidth, stageHeight } = object;\n      const degree = -self.parent.rotation;\n      const natural = self.rotateDimensions({ width: naturalWidth, height: naturalHeight }, degree);\n      const { width, height } = self.rotateDimensions({ width: stageWidth, height: stageHeight }, degree);\n\n      const { x, y } = self.rotatePoint(self, degree, false);\n\n      const res = {\n        original_width: natural.width,\n        original_height: natural.height,\n        image_rotation: self.parent.rotation,\n\n        value: {\n          x: (x * 100) / width,\n          y: (y * 100) / height,\n          width: (self.width * 100) / width, //  * (self.scaleX || 1)\n        },\n      };\n\n      return res;\n    },\n  }));\n\nconst KeyPointRegionModel = types.compose(\n  \"KeyPointRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  AreaMixin,\n  NormalizationMixin,\n  Model,\n);\n\nconst HtxKeyPointView = ({ item }) => {\n  if (item.hidden) return null;\n\n  const { store } = item;\n\n  const x = item.x;\n  const y = item.y;\n  const style = item.style || item.tag || defaultStyle;\n\n  const props = {};\n\n  props[\"opacity\"] = +style.opacity;\n\n  if (style.fillcolor) {\n    props[\"fill\"] = style.fillcolor;\n  }\n\n  props[\"stroke\"] = style.strokecolor;\n  props[\"strokeWidth\"] = +style.strokewidth;\n  props[\"strokeScaleEnabled\"] = false;\n  props[\"shadowBlur\"] = 0;\n\n  if (item.highlighted || item.selected) {\n    props[\"stroke\"] = Constants.HIGHLIGHTED_STROKE_COLOR;\n    props[\"strokeWidth\"] = Constants.HIGHLIGHTED_STROKE_WIDTH;\n  }\n\n  return (\n    <Fragment>\n      <Circle\n        x={x}\n        y={y}\n        radius={item.width}\n        // fixes performance, but opactity+borders might look not so good\n        perfectDrawEnabled={false}\n        scaleX={1 / item.parent.zoomScale}\n        scaleY={1 / item.parent.zoomScale}\n        name={item.id}\n        onDragEnd={e => {\n          const t = e.target;\n          item.setPosition(t.getAttr(\"x\"), t.getAttr(\"y\"));\n        }}\n        dragBoundFunc={item.parent.fixForZoom(pos => {\n          const r = item.parent.stageWidth;\n          const b = item.parent.stageHeight;\n\n          let { x, y } = pos;\n\n          if (x < 0) x = 0;\n          if (y < 0) y = 0;\n\n          if (x > r) x = r;\n          if (y > b) y = b;\n\n          return { x, y };\n        })}\n        onMouseOver={e => {\n          const stage = item.parent.stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = \"crosshair\";\n          } else {\n            stage.container().style.cursor = \"pointer\";\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent.stageRef;\n          stage.container().style.cursor = \"default\";\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          const stage = item.parent.stageRef;\n\n          if (!item.completion.editable) return;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = \"default\";\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        {...props}\n        draggable={item.editable}\n      />\n      <LabelOnKP item={item} />\n    </Fragment>\n  );\n};\n\nconst HtxKeyPoint = observer(HtxKeyPointView);\n\nRegistry.addTag(\"keypointregion\", KeyPointRegionModel, HtxKeyPoint);\nRegistry.addRegionType(\n  KeyPointRegionModel,\n  \"image\",\n  value => \"x\" in value && \"y\" in value && \"width\" in value && !(\"height\" in value),\n);\n\nexport { KeyPointRegionModel, HtxKeyPoint };\n","import React, { Fragment } from \"react\";\nimport { Rect } from \"react-konva\";\nimport { observer } from \"mobx-react\";\nimport { types, getRoot, isAlive } from \"mobx-state-tree\";\n\nimport Constants, { defaultStyle } from \"../core/Constants\";\nimport DisabledMixin from \"../mixins/Normalization\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Registry from \"../core/Registry\";\nimport Utils from \"../utils\";\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport { ImageModel } from \"../tags/object/Image\";\nimport { LabelOnRect } from \"../components/ImageView/LabelOnRegion\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport { AreaMixin } from \"../mixins/AreaMixin\";\nimport { getBoundingBoxAfterChanges, fixRectToFit } from \"../utils/image\";\n\n/**\n * Rectangle object for Bounding Box\n *\n */\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"rectangleregion\",\n    object: types.late(() => types.reference(ImageModel)),\n\n    x: types.number,\n    y: types.number,\n\n    width: types.number,\n    height: types.number,\n\n    rotation: 0,\n\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"perc\"),\n  })\n  .volatile(self => ({\n    relativeX: 0,\n    relativeY: 0,\n\n    relativeWidth: 0,\n    relativeHeight: 0,\n\n    startX: 0,\n    startY: 0,\n\n    // @todo not used\n    scaleX: 1,\n    scaleY: 1,\n\n    opacity: 0.6,\n\n    fill: true,\n    fillColor: \"#ff8800\", // Constants.FILL_COLOR,\n    fillOpacity: 0.6,\n\n    strokeColor: Constants.STROKE_COLOR,\n    strokeWidth: Constants.STROKE_WIDTH,\n\n    supportsTransform: true,\n    // depends on region and object tag; they both should correctly handle the `hidden` flag\n    hideable: true,\n  }))\n  .views(self => ({\n    get store() {\n      return getRoot(self);\n    },\n    get parent() {\n      return self.object;\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      self.startX = self.x;\n      self.startY = self.y;\n\n      if (self.coordstype === \"perc\") {\n        self.relativeX = self.x;\n        self.relativeY = self.y;\n        self.relativeWidth = self.width;\n        self.relativeHeight = self.height;\n\n        const { naturalWidth, naturalHeight, stageWidth: width, stageHeight: height } = self.parent;\n        if (width && height) {\n          self.updateImageSize(width / naturalWidth, height / naturalHeight, width, height);\n        }\n      }\n\n      self.updateAppearenceFromState();\n    },\n\n    rotate(degree) {\n      const p = self.rotatePoint(self, degree);\n      if (degree === -90) p.y -= self.width;\n      if (degree === 90) p.x -= self.height;\n      self.setPosition(p.x, p.y, self.height, self.width, self.rotation);\n    },\n\n    // @todo not used\n    coordsInside(x, y) {\n      // check if x and y are inside the rectangle\n      const rx = self.x;\n      const ry = self.y;\n      const rw = self.width * (self.scaleX || 1);\n      const rh = self.height * (self.scaleY || 1);\n\n      if (x > rx && x < rx + rw && y > ry && y < ry + rh) return true;\n\n      return false;\n    },\n\n    /**\n     * Boundg Box set position on canvas\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} rotation\n     */\n    setPosition(x, y, width, height, rotation) {\n      self.x = x;\n      self.y = y;\n      self.width = width;\n      self.height = height;\n\n      self.relativeX = (x / self.parent.stageWidth) * 100;\n      self.relativeY = (y / self.parent.stageHeight) * 100;\n\n      self.relativeWidth = (width / self.parent.stageWidth) * 100;\n      self.relativeHeight = (height / self.parent.stageHeight) * 100;\n\n      self.rotation = (rotation + 360) % 360;\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      if (self.coordstype === \"px\") {\n        self.x = (sw * self.relativeX) / 100;\n        self.y = (sh * self.relativeY) / 100;\n        self.width = (sw * self.relativeWidth) / 100;\n        self.height = (sh * self.relativeHeight) / 100;\n      } else if (self.coordstype === \"perc\") {\n        self.x = (sw * self.x) / 100;\n        self.y = (sh * self.y) / 100;\n        self.width = (sw * self.width) / 100;\n        self.height = (sh * self.height) / 100;\n        self.coordstype = \"px\";\n      }\n    },\n\n    serialize() {\n      const object = self.object;\n      const degree = (360 - self.parent.rotation) % 360;\n      let { x, y } = self.rotatePoint(self, degree, false);\n      if (degree === 270) y -= self.width;\n      if (degree === 90) x -= self.height;\n      if (degree === 180) {\n        x -= self.width;\n        y -= self.height;\n      }\n\n      const natural = self.rotateDimensions({ width: object.naturalWidth, height: object.naturalHeight }, degree);\n      const stage = self.rotateDimensions({ width: object.stageWidth, height: object.stageHeight }, degree);\n      const { width, height } = self.rotateDimensions(\n        {\n          width: (self.width * (self.scaleX || 1) * 100) / object.stageWidth, //  * (self.scaleX || 1)\n          height: (self.height * (self.scaleY || 1) * 100) / object.stageHeight,\n        },\n        degree,\n      );\n\n      return {\n        original_width: natural.width,\n        original_height: natural.height,\n        image_rotation: self.parent.rotation,\n        value: {\n          x: (x * 100) / stage.width,\n          y: (y * 100) / stage.height,\n          width,\n          height,\n          rotation: self.rotation,\n        },\n      };\n    },\n  }));\n\nconst RectRegionModel = types.compose(\n  \"RectRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  NormalizationMixin,\n  DisabledMixin,\n  AreaMixin,\n  Model,\n);\n\nconst HtxRectangleView = ({ item }) => {\n  if (!isAlive(item)) return null;\n\n  const { store } = item;\n\n  const style = item.style || item.tag || defaultStyle;\n  let { strokecolor, strokewidth } = style;\n  if (item.highlighted) {\n    strokecolor = Constants.HIGHLIGHTED_STROKE_COLOR;\n    strokewidth = Constants.HIGHLIGHTED_STROKE_WIDTH;\n  }\n\n  if (item.hidden) return null;\n\n  return (\n    <Fragment>\n      <Rect\n        x={item.x}\n        y={item.y}\n        width={item.width}\n        height={item.height}\n        fill={item.fill ? Utils.Colors.convertToRGBA(style.fillcolor, +style.fillopacity) : null}\n        stroke={strokecolor}\n        strokeWidth={+strokewidth}\n        strokeScaleEnabled={false}\n        shadowBlur={0}\n        scaleX={item.scaleX}\n        scaleY={item.scaleY}\n        opacity={+style.opacity}\n        rotation={item.rotation}\n        name={item.id}\n        onTransformEnd={e => {\n          const t = e.target;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"width\") * t.getAttr(\"scaleX\"),\n            t.getAttr(\"height\") * t.getAttr(\"scaleY\"),\n            t.getAttr(\"rotation\"),\n          );\n\n          t.setAttr(\"scaleX\", 1);\n          t.setAttr(\"scaleY\", 1);\n        }}\n        onDragEnd={e => {\n          const t = e.target;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"width\"),\n            t.getAttr(\"height\"),\n            t.getAttr(\"rotation\"),\n          );\n          item.setScale(t.getAttr(\"scaleX\"), t.getAttr(\"scaleY\"));\n        }}\n        dragBoundFunc={item.parent.fixForZoom(pos => {\n          let { x, y } = pos;\n          const { width, height, rotation } = item;\n          const { stageHeight, stageWidth } = item.parent;\n          const selfRect = { x: 0, y: 0, width, height };\n          const box = getBoundingBoxAfterChanges(selfRect, { x, y }, rotation);\n          const fixed = fixRectToFit(box, stageWidth, stageHeight);\n\n          if (fixed.width !== box.width) {\n            x += (fixed.width - box.width) * (fixed.x !== box.x ? -1 : 1);\n          }\n\n          if (fixed.height !== box.height) {\n            y += (fixed.height - box.height) * (fixed.y !== box.y ? -1 : 1);\n          }\n\n          return { x, y };\n        })}\n        onMouseOver={e => {\n          const stage = item.parent.stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = Constants.RELATION_MODE_CURSOR;\n          } else {\n            stage.container().style.cursor = Constants.POINTER_CURSOR;\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent.stageRef;\n          stage.container().style.cursor = Constants.DEFAULT_CURSOR;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          const stage = item.parent.stageRef;\n          if (!item.completion.editable) return;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = Constants.DEFAULT_CURSOR;\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        draggable={item.editable}\n      />\n      <LabelOnRect item={item} />\n    </Fragment>\n  );\n};\n\nconst HtxRectangle = observer(HtxRectangleView);\n\nRegistry.addTag(\"rectangleregion\", RectRegionModel, HtxRectangle);\nRegistry.addRegionType(RectRegionModel, \"image\");\n\nexport { RectRegionModel, HtxRectangle };\n","import React, { Fragment } from \"react\";\nimport { Ellipse } from \"react-konva\";\nimport { observer } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport Constants, { defaultStyle } from \"../core/Constants\";\nimport DisabledMixin from \"../mixins/Normalization\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Registry from \"../core/Registry\";\nimport Utils from \"../utils\";\nimport { ImageModel } from \"../tags/object/Image\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport { LabelOnEllipse } from \"../components/ImageView/LabelOnRegion\";\nimport { AreaMixin } from \"../mixins/AreaMixin\";\nimport { getBoundingBoxAfterChanges, fixRectToFit } from \"../utils/image\";\n\n/**\n * Ellipse object for Bounding Box\n *\n */\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"ellipseregion\",\n    object: types.late(() => types.reference(ImageModel)),\n\n    x: types.number,\n    y: types.number,\n\n    radiusX: types.number,\n    radiusY: types.number,\n\n    rotation: 0,\n\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"perc\"),\n  })\n  .volatile(self => ({\n    relativeX: 0,\n    relativeY: 0,\n\n    relativeWidth: 0,\n    relativeHeight: 0,\n\n    startX: 0,\n    startY: 0,\n\n    relativeRadiusX: 0,\n    relativeRadiusY: 0,\n\n    // @todo not used\n    scaleX: 1,\n    scaleY: 1,\n\n    opacity: types.number,\n\n    fill: true,\n    fillColor: Constants.FILL_COLOR,\n    fillOpacity: 0.6,\n\n    strokeColor: Constants.STROKE_COLOR,\n    strokeWidth: Constants.STROKE_WIDTH,\n\n    supportsTransform: true,\n    hideable: true,\n  }))\n  .views(self => ({\n    get store() {\n      return getRoot(self);\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      self.startX = self.x;\n      self.startY = self.y;\n\n      if (self.coordstype === \"perc\") {\n        self.relativeX = self.x;\n        self.relativeY = self.y;\n        self.relativeRadiusX = self.radiusX;\n        self.relativeRadiusY = self.radiusY;\n        self.relativeWidth = self.width;\n        self.relativeHeight = self.height;\n      }\n\n      self.updateAppearenceFromState();\n    },\n\n    // @todo not used\n    coordsInside(x, y) {\n      // check if x and y are inside the rectangle\n      const a = self.radiusX;\n      const b = self.radiusY;\n\n      const cx = self.x;\n      const cy = self.y;\n      //going to system where center coordinates are (0,0)\n      var rel_x = x - cx;\n      var rel_y = y - cy;\n\n      //going to system where our ellipse has angle 0 to X-Axis via rotate matrix\n      const theta = self.rotation;\n      rel_x = rel_x * Math.cos(Math.unit(theta, \"deg\")) - rel_y * Math.sin(Math.unit(theta, \"deg\"));\n      rel_y = rel_x * Math.sin(Math.unit(theta, \"deg\")) + rel_y * Math.cos(Math.unit(theta, \"deg\"));\n\n      if (Math.abs(rel_x) < a) {\n        if (Math.pow(rel_y, 2) < Math.pow(b, 2) * (1 - Math.pow(rel_x, 2) / Math.pow(a, 2))) {\n          return true;\n        }\n      } else {\n        return false;\n      }\n    },\n\n    rotate(degree) {\n      const p = self.rotatePoint(self, degree);\n      self.setPosition(p.x, p.y, self.radiusY, self.radiusX, self.rotation);\n    },\n\n    /**\n     * Boundg Box set position on canvas\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radiusX\n     * @param {number} radiusY\n     * @param {number} rotation\n     */\n    setPosition(x, y, radiusX, radiusY, rotation) {\n      self.x = x;\n      self.y = y;\n      self.radiusX = radiusX;\n      self.radiusY = radiusY;\n\n      self.relativeX = (x / self.parent.stageWidth) * 100;\n      self.relativeY = (y / self.parent.stageHeight) * 100;\n\n      self.relativeRadiusX = (radiusX / self.parent.stageWidth) * 100;\n      self.relativeRadiusY = (radiusY / self.parent.stageHeight) * 100;\n\n      self.rotation = (rotation + 360) % 360;\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      self.sw = sw;\n      self.sh = sh;\n\n      if (self.coordstype === \"px\") {\n        self.x = (sw * self.relativeX) / 100;\n        self.y = (sh * self.relativeY) / 100;\n        self.radiusX = (sw * self.relativeRadiusX) / 100;\n        self.radiusY = (sh * self.relativeRadiusY) / 100;\n      } else if (self.coordstype === \"perc\") {\n        self.x = (sw * self.x) / 100;\n        self.y = (sh * self.y) / 100;\n        self.radiusX = (sw * self.radiusX) / 100;\n        self.radiusY = (sh * self.radiusY) / 100;\n        self.coordstype = \"px\";\n      }\n    },\n\n    serialize() {\n      const { naturalWidth, naturalHeight, stageWidth, stageHeight } = self.object;\n      const degree = -self.parent.rotation;\n      const natural = self.rotateDimensions({ width: naturalWidth, height: naturalHeight }, degree);\n      const { width, height } = self.rotateDimensions({ width: stageWidth, height: stageHeight }, degree);\n      const { width: radiusX, height: radiusY } = self.rotateDimensions(\n        {\n          width: (self.radiusX * (self.scaleX || 1) * 100) / self.object.stageWidth, //  * (self.scaleX || 1)\n          height: (self.radiusY * (self.scaleY || 1) * 100) / self.object.stageHeight,\n        },\n        degree,\n      );\n\n      const { x, y } = self.rotatePoint(self, degree, false);\n\n      const res = {\n        original_width: natural.width,\n        original_height: natural.height,\n        image_rotation: self.parent.rotation,\n        value: {\n          x: (x * 100) / width,\n          y: (y * 100) / height,\n          radiusX,\n          radiusY,\n          rotation: self.rotation,\n        },\n      };\n\n      return res;\n    },\n  }));\n\nconst EllipseRegionModel = types.compose(\n  \"EllipseRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  AreaMixin,\n  NormalizationMixin,\n  DisabledMixin,\n  Model,\n);\n\nconst HtxEllipseView = ({ item }) => {\n  if (item.hidden) return null;\n\n  const { store } = item;\n\n  const style = item.style || item.tag || defaultStyle;\n  let { strokecolor, strokewidth } = style;\n\n  if (item.highlighted) {\n    strokecolor = Constants.HIGHLIGHTED_STROKE_COLOR;\n    strokewidth = Constants.HIGHLIGHTED_STROKE_WIDTH;\n  }\n\n  return (\n    <Fragment>\n      <Ellipse\n        x={item.x}\n        y={item.y}\n        radiusX={item.radiusX}\n        radiusY={item.radiusY}\n        fill={item.fill ? Utils.Colors.convertToRGBA(style.fillcolor, +style.fillopacity) : null}\n        stroke={strokecolor}\n        strokeWidth={+strokewidth}\n        strokeScaleEnabled={false}\n        shadowBlur={0}\n        scaleX={item.scaleX}\n        scaleY={item.scaleY}\n        opacity={+style.opacity}\n        rotation={item.rotation}\n        name={item.id}\n        onTransformEnd={e => {\n          const t = e.target;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"radiusX\") * t.getAttr(\"scaleX\"),\n            t.getAttr(\"radiusY\") * t.getAttr(\"scaleY\"),\n            t.getAttr(\"rotation\"),\n          );\n\n          t.setAttr(\"scaleX\", 1);\n          t.setAttr(\"scaleY\", 1);\n        }}\n        onDragEnd={e => {\n          const t = e.target;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"radiusX\"),\n            t.getAttr(\"radiusY\"),\n            t.getAttr(\"rotation\"),\n          );\n          item.setScale(t.getAttr(\"scaleX\"), t.getAttr(\"scaleY\"));\n        }}\n        dragBoundFunc={item.parent.fixForZoom(pos => {\n          let { x, y } = pos;\n          const { radiusX, radiusY, rotation } = item;\n          const { stageHeight, stageWidth } = item.parent;\n          const selfRect = { x: -radiusX, y: -radiusY, width: radiusX * 2, height: radiusY * 2 };\n          const box = getBoundingBoxAfterChanges(selfRect, { x, y }, rotation);\n          const fixed = fixRectToFit(box, stageWidth, stageHeight);\n\n          if (fixed.width !== box.width) {\n            x += (fixed.width - box.width) * (fixed.x !== box.x ? -1 : 1);\n          }\n\n          if (fixed.height !== box.height) {\n            y += (fixed.height - box.height) * (fixed.y !== box.y ? -1 : 1);\n          }\n\n          return { x, y };\n        })}\n        onMouseOver={e => {\n          const stage = item.parent.stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = Constants.RELATION_MODE_CURSOR;\n          } else {\n            stage.container().style.cursor = Constants.POINTER_CURSOR;\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent.stageRef;\n          stage.container().style.cursor = Constants.DEFAULT_CURSOR;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          const stage = item.parent.stageRef;\n          if (!item.completion.editable) return;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = Constants.DEFAULT_CURSOR;\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        draggable={item.editable}\n      />\n      <LabelOnEllipse item={item} />\n    </Fragment>\n  );\n};\n\nconst HtxEllipse = observer(HtxEllipseView);\n\nRegistry.addTag(\"ellipseregion\", EllipseRegionModel, HtxEllipse);\nRegistry.addRegionType(EllipseRegionModel, \"image\");\n\nexport { EllipseRegionModel, HtxEllipse };\n","import { types, getType, getRoot } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\n\nimport * as Tools from \"../../tools\";\nimport ImageView from \"../../components/ImageView/ImageView\";\nimport ObjectBase from \"./Base\";\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\nimport ToolsManager from \"../../tools/Manager\";\nimport { BrushRegionModel } from \"../../regions/BrushRegion\";\nimport { KeyPointRegionModel } from \"../../regions/KeyPointRegion\";\nimport { PolygonRegionModel } from \"../../regions/PolygonRegion\";\nimport { RectRegionModel } from \"../../regions/RectRegion\";\nimport { EllipseRegionModel } from \"../../regions/EllipseRegion\";\nimport { customTypes } from \"../../core/CustomTypes\";\n\n/**\n * Image tag shows an image on the page\n * @example\n * <View>\n *   <!-- Take the image url from the url column in JSON/CSV -->\n *   <Image value=\"$url\"></Image>\n * </View>\n * @example\n * <View>\n *   <Image value=\"https://imgflip.com/s/meme/Leonardo-Dicaprio-Cheers.jpg\" width=\"100%\" maxWidth=\"750px\" />\n * </View>\n * @name Image\n * @param {string} name                       - name of the element\n * @param {string} value                      - value\n * @param {string=} [width=100%]              - image width\n * @param {string=} [maxWidth=750px]          - image maximum width\n * @param {boolean=} [zoom=false]             - enable zooming an image by the mouse wheel\n * @param {boolean=} [negativeZoom=false]     - enable zooming out an image\n * @param {float=} [zoomBy=1.1]               - scale factor\n * @param {boolean=} [grid=false]             - show grid\n * @param {number=} [gridSize=30]             - size of the grid\n * @param {string=} [gridColor=\"#EEEEF4\"]     - color of the grid, opacity is 0.15\n * @param {boolean} [zoomControl=false]       - show zoom controls in toolbar\n * @param {boolean} [brightnessControl=false] - show brightness control in toolbar\n * @param {boolean} [contrastControl=false]   - show contrast control in toolbar\n * @param {boolean} [rotateControl=false]     - show rotate control in toolbar\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  value: types.maybeNull(types.string),\n  resize: types.maybeNull(types.number),\n  width: types.optional(types.string, \"100%\"),\n  maxwidth: types.optional(types.string, \"750px\"),\n\n  // rulers: types.optional(types.boolean, true),\n  grid: types.optional(types.boolean, false),\n  gridSize: types.optional(types.number, 30),\n  gridColor: types.optional(customTypes.color, \"#EEEEF4\"),\n\n  zoom: types.optional(types.boolean, false),\n  negativezoom: types.optional(types.boolean, false),\n  zoomby: types.optional(types.string, \"1.1\"),\n\n  showlabels: types.optional(types.boolean, false),\n\n  zoomcontrol: types.optional(types.boolean, false),\n  brightnesscontrol: types.optional(types.boolean, false),\n  contrastcontrol: types.optional(types.boolean, false),\n  rotatecontrol: types.optional(types.boolean, false),\n});\n\nconst IMAGE_CONSTANTS = {\n  rectangleModel: \"RectangleModel\",\n  rectangleLabelsModel: \"RectangleLabelsModel\",\n  ellipseModel: \"EllipseModel\",\n  ellipseLabelsModel: \"EllipseLabelsModel\",\n  brushLabelsModel: \"BrushLabelsModel\",\n  rectanglelabels: \"rectanglelabels\",\n  keypointlabels: \"keypointlabels\",\n  polygonlabels: \"polygonlabels\",\n  brushlabels: \"brushlabels\",\n  brushModel: \"BrushModel\",\n  ellipselabels: \"ellipselabels\",\n};\n\nconst Model = types\n  .model({\n    type: \"image\",\n    _value: types.optional(types.string, \"\"),\n\n    // tools: types.array(BaseTool),\n\n    rotation: types.optional(types.number, 0),\n\n    sizeUpdated: types.optional(types.boolean, false),\n\n    /**\n     * Natural sizes of Image\n     * Constants\n     */\n    naturalWidth: types.optional(types.integer, 1),\n    naturalHeight: types.optional(types.integer, 1),\n\n    /**\n     * Initial width and height of the image\n     */\n    initialWidth: types.optional(types.integer, 1),\n    initialHeight: types.optional(types.integer, 1),\n\n    stageWidth: types.optional(types.integer, 1),\n    stageHeight: types.optional(types.integer, 1),\n\n    /**\n     * Zoom Scale\n     */\n    zoomScale: types.optional(types.number, 1),\n\n    /**\n     * Coordinates of left top corner\n     * Default: { x: 0, y: 0 }\n     */\n    zoomingPositionX: types.maybeNull(types.number),\n    zoomingPositionY: types.maybeNull(types.number),\n\n    /**\n     * Brightness of Canvas\n     */\n    brightnessGrade: types.optional(types.number, 100),\n\n    contrastGrade: types.optional(types.number, 100),\n\n    /**\n     * Cursor coordinates\n     */\n    cursorPositionX: types.optional(types.number, 0),\n    cursorPositionY: types.optional(types.number, 0),\n\n    brushControl: types.optional(types.string, \"brush\"),\n\n    brushStrokeWidth: types.optional(types.number, 15),\n\n    /**\n     * Mode\n     * brush for Image Segmentation\n     * eraser for Image Segmentation\n     */\n    mode: types.optional(types.enumeration([\"drawing\", \"viewing\", \"brush\", \"eraser\"]), \"viewing\"),\n\n    regions: types.array(\n      types.union(BrushRegionModel, RectRegionModel, EllipseRegionModel, PolygonRegionModel, KeyPointRegionModel),\n      [],\n    ),\n  })\n  .views(self => ({\n    /**\n     * @return {boolean}\n     */\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    /**\n     * @return {object}\n     */\n    get completion() {\n      // return Types.getParentOfTypeString(self, \"Completion\");\n      return getRoot(self).completionStore.selected;\n    },\n\n    get regs() {\n      return self.completion?.regionStore.regions.filter(r => r.object === self) || [];\n    },\n\n    get selectedShape() {\n      return self.regs.find(r => r.selected);\n    },\n\n    /**\n     * @return {object}\n     */\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states && states.filter(s => s.isSelected && s.type.includes(\"labels\"));\n    },\n\n    controlButton() {\n      const names = self.states();\n      if (!names || names.length === 0) return;\n\n      let returnedControl = names[0];\n\n      names.forEach(item => {\n        if (\n          item.type === IMAGE_CONSTANTS.rectanglelabels ||\n          item.type === IMAGE_CONSTANTS.brushlabels ||\n          item.type === IMAGE_CONSTANTS.ellipselabels\n        ) {\n          returnedControl = item;\n        }\n      });\n\n      return returnedControl;\n    },\n\n    get controlButtonType() {\n      const name = self.controlButton();\n      return getType(name).name;\n    },\n  }))\n\n  // actions for the tools\n  .actions(self => {\n    const toolsManager = new ToolsManager({ obj: self });\n\n    function afterCreate() {\n      if (self.zoomcontrol) toolsManager.addTool(\"zoom\", Tools.Zoom.create({}, { manager: toolsManager }));\n\n      if (self.brightnesscontrol)\n        toolsManager.addTool(\"brightness\", Tools.Brightness.create({}, { manager: toolsManager }));\n\n      if (self.contrastcontrol) toolsManager.addTool(\"contrast\", Tools.Contrast.create({}, { manager: toolsManager }));\n\n      if (self.rotatecontrol) toolsManager.addTool(\"rotate\", Tools.Rotate.create({}, { manager: toolsManager }));\n    }\n\n    function getToolsManager() {\n      return toolsManager;\n    }\n\n    return { afterCreate, getToolsManager };\n  })\n\n  .actions(self => ({\n    freezeHistory() {\n      //self.completion.history.freeze();\n    },\n\n    updateBrushControl(arg) {\n      self.brushControl = arg;\n    },\n\n    updateBrushStrokeWidth(arg) {\n      self.brushStrokeWidth = arg;\n    },\n\n    /**\n     * Update brightnessGrade of Image\n     * @param {number} value\n     */\n    setBrightnessGrade(value) {\n      self.brightnessGrade = value;\n    },\n\n    setContrastGrade(value) {\n      self.contrastGrade = value;\n    },\n\n    setGridSize(value) {\n      self.gridSize = value;\n    },\n\n    /**\n     * Set pointer of X and Y\n     */\n    setPointerPosition({ x, y }) {\n      self.freezeHistory();\n      self.cursorPositionX = x;\n      self.cursorPositionY = y;\n    },\n\n    /**\n     * Set zoom\n     */\n    setZoom(scale, x, y) {\n      self.resize = scale;\n      self.zoomScale = scale;\n      self.zoomingPositionX = x;\n      self.zoomingPositionY = y;\n    },\n\n    setZoomPosition(x, y) {\n      self.zoomingPositionX = x;\n      self.zoomingPositionY = y;\n    },\n\n    /**\n     * Set mode of Image (drawing and viewing)\n     * @param {string} mode\n     */\n    setMode(mode) {\n      self.mode = mode;\n    },\n\n    setImageRef(ref) {\n      self.imageRef = ref;\n    },\n\n    setStageRef(ref) {\n      self.stageRef = ref;\n      // Konva updates ref repeatedly and this breaks brush scaling\n      if (self.initialWidth > 1) return;\n      self.initialWidth = ref && ref.attrs && ref.attrs.width ? ref.attrs.width : 1;\n      self.initialHeight = ref && ref.attrs && ref.attrs.height ? ref.attrs.height : 1;\n    },\n\n    // @todo remove\n    setSelected(shape) {\n      // self.selectedShape = shape;\n    },\n\n    rotate(degree = -90) {\n      self.rotation = (self.rotation + degree + 360) % 360;\n\n      // 1. swap canvas sizes to correct relative calculations\n      const w = self.stageWidth;\n      self.stageWidth = self.stageHeight;\n      self.stageHeight = w;\n      const nw = self.naturalWidth;\n      self.naturalWidth = self.naturalHeight;\n      self.naturalHeight = nw;\n\n      const ratio = self.stageHeight / self.stageWidth;\n\n      // 2. rotate regions\n      self.regions.forEach(s => s.rotate(degree));\n\n      // 3. scale to fit original width and resize all regions\n      self._updateImageSize({\n        width: w,\n        height: Math.round(ratio * w),\n        naturalWidth: self.naturalWidth,\n        naturalHeight: self.naturalHeight,\n      });\n    },\n\n    _updateImageSize({ width, height, naturalWidth, naturalHeight, userResize }) {\n      if (naturalWidth !== undefined) {\n        self.naturalWidth = naturalWidth;\n        self.naturalHeight = naturalHeight;\n      }\n\n      self.stageWidth = width;\n      self.stageHeight = height;\n      self.sizeUpdated = true;\n\n      self.regions.forEach(shape => {\n        shape.updateImageSize(width / naturalWidth, height / naturalHeight, width, height, userResize);\n      });\n      self.regs.forEach(shape => {\n        shape.updateImageSize(width / naturalWidth, height / naturalHeight, width, height, userResize);\n      });\n    },\n\n    updateImageSize(ev) {\n      const { width, height, naturalWidth, naturalHeight } = ev.target;\n      self.initialWidth = width;\n      self.initialHeight = height;\n      if ((self.rotation + 360) % 180 === 90) {\n        // swap sizes\n        self._updateImageSize({\n          width: height,\n          height: width,\n          naturalWidth: naturalHeight,\n          naturalHeight: naturalWidth,\n        });\n      } else {\n        self._updateImageSize({ width, height, naturalWidth, naturalHeight });\n      }\n      // after regions' sizes adjustment we have to reset all saved history changes\n      // mobx do some batch update here, so we have to reset it asynchronously\n      // this happens only after initial load, so it's safe\n      setTimeout(self.completion.reinitHistory, 0);\n    },\n\n    checkLabels() {\n      // there is should be at least one state selected for *labels object\n      const labelStates = (self.states() || []).filter(s => s.type.includes(\"labels\"));\n      const selectedStates = self.getAvailableStates();\n      return selectedStates.length !== 0 || labelStates.length === 0;\n    },\n\n    addShape(shape) {\n      self.regions.push(shape);\n\n      self.completion.addRegion(shape);\n      self.setSelected(shape.id);\n      shape.selectRegion();\n    },\n\n    // convert screen coords to image coords considering zoom\n    fixZoomedCoords([x, y]) {\n      return [(x - self.zoomingPositionX) / self.zoomScale, (y - self.zoomingPositionY) / self.zoomScale];\n      // good official way, but maybe a bit slower and with repeating cloning\n      // const p = self.stageRef.getAbsoluteTransform().copy().invert().point({ x, y });\n      // return [p.x, p.y];\n    },\n\n    // convert image coords to screen coords considering zoom\n    zoomOriginalCoords([x, y]) {\n      return [x * self.zoomScale + self.zoomingPositionX, y * self.zoomScale + self.zoomingPositionY];\n    },\n\n    /**\n     * @typedef {number[]|{ x: number, y: number }} Point\n     */\n\n    /**\n     * @callback PointFn\n     * @param {Point} point\n     * @returns Point\n     */\n\n    /**\n     * Wrap point operations to convert zoomed coords from screen to image and back\n     * Good for event handlers, receiving screen coords, but working with image coords\n     * Accepts both [x, y] and {x, y} points; preserves this format\n     * @param {PointFn} fn wrapped function do some math with image coords\n     * @return {PointFn} outer function do some math with screen coords\n     */\n    fixForZoom(fn) {\n      return p => {\n        const asArray = p.x === undefined;\n        const [x, y] = self.fixZoomedCoords(asArray ? p : [p.x, p.y]);\n        const modified = fn(asArray ? [x, y] : { x, y });\n        const zoomed = self.zoomOriginalCoords(asArray ? modified : [modified.x, modified.y]);\n        return asArray ? zoomed : { x: zoomed[0], y: zoomed[1] };\n      };\n    },\n\n    /**\n     * Resize of image canvas\n     * @param {*} width\n     * @param {*} height\n     */\n    onResize(width, height, userResize) {\n      self._updateImageSize({ width, height, userResize });\n    },\n\n    event(name, ev, ...coords) {\n      self.getToolsManager().event(name, ev.evt || ev, ...self.fixZoomedCoords(coords));\n    },\n\n    /**\n     * Transform JSON data (completions and predictions) to format\n     */\n    fromStateJSON(obj, fromModel) {\n      const tools = self.getToolsManager().allTools();\n\n      // when there is only the image classification and nothing else, we need to handle it here\n      if (tools.length === 0 && obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n\n        return;\n      }\n\n      tools.forEach(t => t.fromStateJSON && t.fromStateJSON(obj, fromModel));\n    },\n  }));\n\nconst ImageModel = types.compose(\"ImageModel\", TagAttrs, Model, ProcessAttrsMixin, ObjectBase);\n\nconst HtxImage = inject(\"store\")(ImageView);\n\nRegistry.addTag(\"image\", ImageModel, HtxImage);\nRegistry.addObjectType(ImageModel);\n\nexport { ImageModel, HtxImage };\n","import { types } from \"mobx-state-tree\";\n\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport SpanTextMixin from \"../mixins/SpanText\";\nimport Utils from \"../utils\";\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport { TextModel } from \"../tags/object/Text\";\nimport { AreaMixin } from \"../mixins/AreaMixin\";\nimport Registry from \"../core/Registry\";\n\nconst Model = types\n  .model(\"TextRegionModel\", {\n    type: \"textrange\",\n    object: types.late(() => types.reference(TextModel)),\n\n    start: types.number,\n    end: types.number,\n\n    text: \"\", // text is optional, for example in secureMode\n  })\n  .views(self => ({\n    get parent() {\n      return self.object;\n    },\n    get regionElement() {\n      return self._spans[0];\n    },\n  }))\n  .actions(self => ({\n    beforeDestroy() {\n      Utils.HTML.removeSpans(self._spans);\n    },\n\n    setText(text) {\n      self.text = text;\n    },\n\n    serialize() {\n      let res = {\n        value: {\n          start: self.start,\n          end: self.end,\n        },\n      };\n\n      if (self.object.savetextresult === \"yes\") {\n        res.value[\"text\"] = self.text;\n      }\n\n      return res;\n    },\n  }));\n\nconst TextRegionModel = types.compose(\n  \"TextRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  AreaMixin,\n  NormalizationMixin,\n  Model,\n  SpanTextMixin,\n);\n\nRegistry.addRegionType(TextRegionModel, \"text\");\n\nexport { TextRegionModel };\n","import * as xpath from \"xpath-range\";\nimport React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport ObjectBase from \"./Base\";\nimport ObjectTag from \"../../components/Tags/Object\";\nimport RegionsMixin from \"../../mixins/Regions\";\nimport Registry from \"../../core/Registry\";\nimport Utils from \"../../utils\";\nimport { TextRegionModel } from \"../../regions/TextRegion\";\nimport { restoreNewsnapshot } from \"../../core/Helpers\";\nimport { splitBoundaries } from \"../../utils/html\";\nimport { runTemplate } from \"../../core/Template\";\nimport styles from \"./Text/Text.module.scss\";\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\nimport { customTypes } from \"../../core/CustomTypes\";\nimport messages from \"../../utils/messages\";\n\n/**\n * Text tag shows an Text markup that can be labeled\n * @example\n * <View>\n *   <Text name=\"text-1\" value=\"$text\" granularity=\"symbol\" highlightColor=\"#ff0000\" />\n * </View>\n * @name Text\n * @param {string} name                      - name of the element\n * @param {string} value                     - value of the element\n * @param {boolean} [selectionEnabled=true]  - enable or disable selection\n * @param {string} [highlightColor]          - hex string with highlight color, if not provided uses the labels color\n * @param {symbol|word} [granularity=symbol] - control per symbol or word selection\n * @param {boolean} [showLabels=true]        - show labels next to the region\n * @param {string} [encoding=none|base64|base64unicode]  - decode value from encoded string\n */\nconst TagAttrs = types.model(\"TextModel\", {\n  name: types.identifier,\n  value: types.maybeNull(types.string),\n\n  valuetype: types.optional(types.enumeration([\"text\", \"url\"]), () => (window.LS_SECURE_MODE ? \"url\" : \"text\")),\n\n  savetextresult: types.optional(types.enumeration([\"none\", \"no\", \"yes\"]), () =>\n    window.LS_SECURE_MODE ? \"no\" : \"none\",\n  ),\n\n  selectionenabled: types.optional(types.boolean, true),\n\n  highlightcolor: types.maybeNull(customTypes.color),\n  // matchlabel: types.optional(types.boolean, false),\n\n  // [TODO]\n  showlabels: types.optional(types.boolean, true),\n\n  granularity: types.optional(types.enumeration([\"symbol\", \"word\", \"sentence\", \"paragraph\"]), \"symbol\"),\n\n  encoding: types.optional(types.enumeration([\"none\", \"base64\", \"base64unicode\"]), \"none\"),\n});\n\nconst Model = types\n  .model(\"TextModel\", {\n    type: \"text\",\n    loaded: types.optional(types.boolean, false),\n    _value: types.optional(types.string, \"\"),\n    _update: types.optional(types.number, 1),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get regs() {\n      return self.completion.regionStore.regions.filter(r => r.object === self);\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states && states.filter(s => s.isSelected && s.type === \"labels\");\n    },\n  }))\n  .actions(self => ({\n    setRef(ref) {\n      self._ref = ref;\n    },\n\n    needsUpdate() {\n      self._update = self._update + 1;\n    },\n\n    updateValue(store) {\n      self._value = runTemplate(self.value, store.task.dataObj);\n\n      if (self.valuetype === \"url\") {\n        const url = self._value;\n        if (!/^https?:\\/\\//.test(url)) {\n          const message = [];\n          if (url) {\n            message.push(`URL (${url}) is not valid.`);\n            message.push(`You should not put text directly in your task data if you use valuetype=\"url\".`);\n          } else {\n            message.push(`URL is empty, check ${self.value} in data JSON.`);\n          }\n          if (window.LS_SECURE_MODE) message.unshift(`In SECURE MODE valuetype set to \"url\" by default.`);\n          InfoModal.error(message.map(t => <p>{t}</p>));\n          self.loadedValue(\"\");\n          return;\n        }\n        fetch(url)\n          .then(res => {\n            if (!res.ok) throw new Error(`${res.status} ${res.statusText}`);\n            return res.text();\n          })\n          .then(self.loadedValue)\n          .catch(e => {\n            const message = messages.ERR_LOADING_HTTP({ attr: self.value, error: String(e), url });\n            InfoModal.error(message, \"Wow!\");\n            self.loadedValue(\"\");\n          });\n      } else {\n        self.loadedValue(self._value);\n      }\n    },\n\n    loadedValue(val) {\n      self.loaded = true;\n      if (self.encoding === \"base64\") val = atob(val);\n      if (self.encoding === \"base64unicode\") val = Utils.Checkers.atobUnicode(val);\n\n      self._value = val;\n\n      self._regionsCache.forEach(({ region, completion }) => {\n        region.setText(self._value.substring(region.startOffset, region.endOffset));\n        self.regions.push(region);\n        completion.addRegion(region);\n      });\n\n      self._regionsCache = [];\n    },\n\n    afterCreate() {\n      self._regionsCache = [];\n\n      // security measure, if valuetype is set to url then LS\n      // doesn't save the text into the result, otherwise it does\n      // can be aslo directly configured\n      if (self.savetextresult === \"none\") {\n        if (self.valuetype === \"url\") self.savetextresult = \"no\";\n        else if (self.valuetype === \"text\") self.savetextresult = \"yes\";\n      }\n    },\n\n    createRegion(p) {\n      const r = TextRegionModel.create(p);\n\n      r._range = p._range;\n\n      if (self.valuetype === \"url\" && self.loaded === false) {\n        self._regionsCache.push({ region: r, completion: self.completion });\n        return;\n      }\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    addRegion(range) {\n      range.start = range.startOffset;\n      range.end = range.endOffset;\n\n      const states = self.getAvailableStates();\n      if (states.length === 0) return;\n\n      const control = states[0];\n      const labels = { [control.valueType]: control.selectedValues() };\n      const area = self.completion.createResult(range, labels, control, self);\n      area._range = range._range;\n      return area;\n    },\n\n    /**\n     *\n     * @param {*} obj\n     * @param {*} fromModel\n     */\n    fromStateJSON(obj, fromModel) {\n      let r;\n      let m;\n\n      const fm = self.completion.names.get(obj.from_name);\n      fm.fromStateJSON(obj);\n\n      if (!fm.perregion && fromModel.type !== \"labels\") return;\n\n      const { start, end } = obj.value;\n\n      r = self.findRegion({ startOffset: obj.value.start, endOffset: obj.value.end });\n\n      if (fromModel) {\n        m = restoreNewsnapshot(fromModel);\n        // m.fromStateJSON(obj);\n\n        if (r && fromModel.perregion) {\n          r.states.push(m);\n        } else {\n          // tree.states = [m];\n          const data = {\n            pid: obj.id,\n            parentID: obj.parent_id === null ? \"\" : obj.parent_id,\n            startOffset: start,\n            endOffset: end,\n            start: \"\",\n            end: \"\",\n            score: obj.score,\n            readonly: obj.readonly,\n            text: self._value.substring(start, end),\n            normalization: obj.normalization,\n            states: [m],\n          };\n\n          r = self.createRegion(data);\n          // r = self.addRegion(tree);\n        }\n      }\n\n      // states.fromStateJSON(obj);\n\n      // r.updateAppearenceFromState();\n\n      return r;\n\n      // self.createRegion(tree);\n      // self.needsUpdate();\n    },\n  }));\n\nconst TextModel = types.compose(\"TextModel\", RegionsMixin, TagAttrs, Model, ObjectBase);\n\nclass HtxTextView extends Component {\n  render() {\n    const { item, store } = this.props;\n\n    if (!item._value) return null;\n\n    return <HtxTextPieceView store={store} item={item} />;\n  }\n}\n\nclass TextPieceView extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  getValue() {\n    const { item, store } = this.props;\n\n    let val = runTemplate(item.value, store.task.dataObj);\n    if (item.encoding === \"base64\") val = atob(val);\n    if (item.encoding === \"base64unicode\") val = Utils.Checkers.atobUnicode(val);\n\n    return val;\n  }\n\n  alignWord(r, start, end) {\n    const val = this.getValue();\n    const strleft = val.substring(0, start);\n    const r2 = r.cloneRange();\n\n    if (strleft.length > 0) {\n      let idxSpace = strleft.lastIndexOf(\" \");\n      let idxNewline = strleft.lastIndexOf(\"\\n\");\n\n      let idx = idxSpace > idxNewline ? idxSpace : idxNewline;\n\n      if (idx === -1) {\n        r2.setStart(r.startContainer, 0);\n      }\n\n      if (idx > 0) {\n        const { node, len } = Utils.HTML.findIdxContainer(this.myRef, idx + 1);\n        r2.setStart(node, len);\n      }\n    }\n\n    const strright = val.substring(end, val.length);\n\n    if (strright.length > 0) {\n      let idxSpace = strright.indexOf(\" \");\n      let idxNewline = strright.indexOf(\"\\n\");\n\n      let idx;\n\n      if (idxNewline === -1) idx = idxSpace;\n      if (idxSpace === -1) idx = idxNewline;\n\n      if (idxNewline > 0 && idxSpace > 0) {\n        idx = idxSpace > idxNewline ? idxNewline : idxSpace;\n      }\n\n      idx = idx + end;\n\n      if (idx === -1) {\n        r2.setEnd(r.endContainer, r.endContainer.length);\n      }\n\n      if (idx > 0) {\n        const { node, len } = Utils.HTML.findIdxContainer(this.myRef, idx + 1);\n        r2.setEnd(node, len > 0 ? len - 1 : 0);\n      }\n    }\n\n    return r2;\n  }\n\n  alignRange(r) {\n    const item = this.props.item;\n    // there is should be at least one selected label\n    const label = item.activeStates()[0].selectedLabels[0];\n    const granularity = label.granularity || item.granularity;\n\n    if (granularity === \"symbol\") return r;\n\n    const { start, end } = Utils.HTML.mainOffsets(this.myRef);\n\n    // given gobal position and selection node find node\n    // with correct position\n    if (granularity === \"word\") {\n      return this.alignWord(r, start, end);\n    }\n\n    if (granularity === \"sentence\") {\n    }\n\n    if (granularity === \"paragraph\") {\n    }\n  }\n\n  captureDocumentSelection(ev) {\n    var i,\n      self = this,\n      ranges = [],\n      rangesToIgnore = [],\n      selection = window.getSelection();\n\n    if (selection.isCollapsed) return [];\n\n    const granularityDisabled = ev.altKey;\n\n    for (i = 0; i < selection.rangeCount; i++) {\n      var r = selection.getRangeAt(i);\n\n      if (r.endContainer.nodeName === \"DIV\") {\n        r.setEnd(r.startContainer, r.startContainer.length);\n      }\n\n      if (!granularityDisabled) {\n        r = this.alignRange(r);\n      }\n\n      if (r.collapsed || /^\\s*$/.test(r.toString())) continue;\n\n      try {\n        var normedRange = xpath.fromRange(r, self.myRef);\n\n        splitBoundaries(r);\n\n        normedRange._range = r;\n\n        // Range toString() uses only text nodes content\n        // so to extract original new lines made into <br>s we should get all the tags\n        const tags = Array.from(r.cloneContents().childNodes);\n        // and convert every <br> back to new line\n        const text = tags.reduce((str, node) => (str += node.tagName === \"BR\" ? \"\\n\" : node.textContent), \"\");\n        normedRange.text = text;\n\n        const ss = Utils.HTML.toGlobalOffset(self.myRef, r.startContainer, r.startOffset);\n        const ee = Utils.HTML.toGlobalOffset(self.myRef, r.endContainer, r.endOffset);\n\n        normedRange.startOffset = ss;\n        normedRange.endOffset = ee;\n\n        // If the new range falls fully outside our this.element, we should\n        // add it back to the document but not return it from this method.\n        if (normedRange === null) {\n          rangesToIgnore.push(r);\n        } else {\n          ranges.push(normedRange);\n        }\n      } catch (err) {}\n    }\n\n    // BrowserRange#normalize() modifies the DOM structure and deselects the\n    // underlying text as a result. So here we remove the selected ranges and\n    // reapply the new ones.\n    selection.removeAllRanges();\n\n    return ranges;\n  }\n\n  onClick(ev) {\n    // console.log('click');\n  }\n\n  onMouseUp(ev) {\n    const item = this.props.item;\n    if (!item.selectionenabled) return;\n\n    const states = item.activeStates();\n    if (!states || states.length === 0) return;\n\n    var selectedRanges = this.captureDocumentSelection(ev);\n    if (selectedRanges.length === 0) return;\n\n    // prevent overlapping spans from being selected right after this\n    item._currentSpan = null;\n\n    const htxRange = item.addRegion(selectedRanges[0]);\n    if (htxRange) {\n      const spans = htxRange.createSpans();\n      htxRange.addEventsToSpans(spans);\n    }\n  }\n\n  _handleUpdate() {\n    const root = this.myRef;\n    const { item } = this.props;\n\n    item.regs.forEach(function(r) {\n      // spans can be totally missed if this is app init or undo/redo\n      // or they can be disconnected from DOM on completions switching\n      // so we have to recreate them from regions data\n      if (r._spans?.[0]?.isConnected) return;\n\n      const findNode = (el, pos) => {\n        let left = pos;\n        const traverse = node => {\n          if (node.nodeName === \"#text\") {\n            if (left - node.length <= 0) return { node, left };\n\n            left = left - node.length;\n          }\n\n          if (node.nodeName === \"BR\") {\n            if (left - 1 < 0) return { node, left };\n\n            left = left - 1;\n          }\n\n          for (var i = 0; i <= node.childNodes.length; i++) {\n            const n = node.childNodes[i];\n            if (n) {\n              const res = traverse(n);\n              if (res) return res;\n            }\n          }\n        };\n\n        return traverse(el);\n      };\n\n      const ss = findNode(root, r.start);\n      const ee = findNode(root, r.end);\n\n      // if (! ss || ! ee)\n      //     return;\n\n      const range = document.createRange();\n      range.setStart(ss.node, ss.left);\n      range.setEnd(ee.node, ee.left);\n\n      splitBoundaries(range);\n\n      r._range = range;\n\n      const spans = r.createSpans();\n      r.addEventsToSpans(spans);\n    });\n  }\n\n  componentDidUpdate() {\n    this._handleUpdate();\n  }\n\n  componentDidMount() {\n    this._handleUpdate();\n\n    const ref = this.myRef;\n    const settings = this.props.store.settings;\n    if (ref && ref.classList && settings) {\n      ref.classList.toggle(\"htx-line-numbers\", settings.showLineNumbers);\n    }\n  }\n\n  render() {\n    const { item } = this.props;\n\n    if (!item.loaded) return null;\n\n    const val = item._value.split(\"\\n\").reduce((res, s, i) => {\n      if (i) res.push(<br key={i} />);\n      res.push(<span className={styles.line}>{s}</span>);\n      return res;\n    }, []);\n\n    return (\n      <ObjectTag item={item}>\n        <div\n          ref={ref => {\n            this.myRef = ref;\n            item.setRef(ref);\n          }}\n          className={styles.block + \" htx-text\"}\n          data-update={item._update}\n          onMouseUp={this.onMouseUp.bind(this)}\n        >\n          {val}\n        </div>\n      </ObjectTag>\n    );\n  }\n}\n\nconst HtxText = inject(\"store\")(observer(HtxTextView));\nconst HtxTextPieceView = inject(\"store\")(observer(TextPieceView));\n\nRegistry.addTag(\"text\", TextModel, HtxText);\nRegistry.addObjectType(TextModel);\n\nexport { TextModel, HtxText };\n","import { types, getType, getParent } from \"mobx-state-tree\";\n\nimport Registry from \"./Registry\";\n\nfunction _mixedArray(fn) {\n  return function(arr) {\n    return types.maybeNull(types.array(fn(arr)));\n  };\n}\n\nfunction _oneOf(lookup, err) {\n  return function(arr) {\n    return types.union({\n      dispatcher: sn => {\n        if (arr.find(val => sn.type === val)) {\n          return lookup(sn.type);\n        } else {\n          throw Error(err + sn.type);\n        }\n      },\n    });\n  };\n}\n\nconst oneOfTags = _oneOf(Registry.getModelByTag, \"Not expecting tag: \");\nconst tagsArray = _mixedArray(oneOfTags);\n\nfunction unionArray(arr) {\n  return types.maybeNull(types.array(oneOfTags(arr)));\n}\n\nfunction unionTag(arr) {\n  return types.maybeNull(types.enumeration(\"unionTag\", arr));\n}\n\nfunction allModelsTypes() {\n  const args = [\n    {\n      dispatcher: sn => {\n        if (!sn) return types.literal(undefined);\n        if (Registry.tags.includes(sn.type)) {\n          return Registry.getModelByTag(sn.type);\n        } else {\n          throw Error(\"Not expecting tag: \" + sn.type);\n        }\n      },\n    },\n    Registry.modelsArr(),\n  ];\n\n  const results = [].concat.apply([], args);\n\n  return types.union.apply(null, results);\n}\n\nfunction isType(node, types) {\n  const nt = getType(node);\n  for (let t of types) if (nt === t) return true;\n\n  return false;\n}\n\nfunction getParentOfTypeString(node, str) {\n  // same as getParentOfType but checks models .name instead of type\n  let parent = getParent(node);\n\n  if (!Array.isArray(str)) str = [str];\n\n  while (parent) {\n    const name = getType(parent).name;\n\n    if (str.find(c => c === name)) return parent;\n\n    parent = getParent(parent);\n  }\n\n  return null;\n}\n\nconst oneOfTools = _oneOf(Registry.getTool, \"Not expecting tool: \");\nconst toolsArray = _mixedArray(oneOfTools);\n\nexport default { unionArray, allModelsTypes, unionTag, isType, getParentOfTypeString, tagsArray, toolsArray };\n","import * as d3 from \"d3\";\nimport Utils from \"../../../utils\";\n\nexport const line = (x, y) =>\n  d3\n    .line()\n    .x(d => x(d[0]))\n    .y(d => y(d[1]));\n\nexport const idFromValue = value => value.substr(1);\n\nexport const getOptimalWidth = () => ((window.screen && window.screen.width) || 1440) * (window.devicePixelRatio || 2);\n\nexport const sparseValues = (values, max = 1e6) => {\n  if (values.length <= max) return values;\n  let next = 0;\n  let step = (values.length - 1) / (max - 1);\n  // return values.filter((_, i) => i > next && (next += step))\n  return values.filter((_, i) => {\n    if (i < next) return false;\n    next += step;\n    return true;\n  });\n};\n\nexport const getRegionColor = (region, alpha = 1) => {\n  const color = region.style?.fillcolor || \"grey\";\n  return Utils.Colors.convertToRGBA(color, alpha);\n};\n\n// fixes `observe` - it watches only the changes of primitive props of observables count\n// so pass all the required primitives to this stub and they'll be observed\nexport const fixMobxObserve = (...args) => {};\n\n// clear d3 sourceEvent via async call to prevent infinite loops\nexport const clearD3Event = f => setTimeout(f, 0);\n\n// check if we are in recursive event loop, caused by `event`\nexport const checkD3EventLoop = event => {\n  if (!d3.event.sourceEvent) return true;\n  if (event) return d3.event.sourceEvent.type === event;\n  return [\"start\", \"brush\", \"end\"].includes(d3.event.sourceEvent.type);\n};\n\nconst formatDateDiff = (start, end) => {\n  const dates = [start.toLocaleDateString(), end.toLocaleDateString()];\n  if (dates[1] !== dates[0]) return dates;\n  return [start.toLocaleTimeString(), end.toLocaleTimeString()];\n};\n\nexport const formatRegion = node => {\n  let ranges = [];\n  if (node.parent.format === \"date\") {\n    ranges = formatDateDiff(new Date(node.start), new Date(node.end));\n  } else {\n    ranges = [node.start, node.end];\n  }\n  return node.instant ? ranges[0] : ranges.join(\"–\");\n};\n\nexport const formatTrackerTime = time => new Date(time).toLocaleString();\n","import { isString, escapeHtml } from \"./utilities\";\n\n/**\n * Parse CSV\n * Accepts only numbers as a data\n * Returns hash with names (or indexed hash for headless csv) as a keys\n * and arrays of numbers as a values\n * @param {string} text\n * @returns {{ [string]: number[] }}\n */\nexport const parseCSV = (text, separator = \"auto\") => {\n  // @todo iterate over newlines for better performance\n  const lines = text.split(\"\\n\");\n  let names;\n\n  if (separator !== \"auto\" && !lines[0].includes(separator)) {\n    throw new Error([`Cannot find provided separator \"${separator}\".`, `Row 1: ${lines[0]}`].join(`\\n`));\n  }\n\n  // detect separator (2nd line is definitely with data)\n  if (separator === \"auto\" && lines.length > 1) {\n    const candidates = lines[1].trim().match(/[,;\\s\\t]/g);\n    if (!candidates.length) throw new Error(\"No separators found\");\n    if (candidates.some(c => c !== candidates[0])) {\n      const list = Array.from(new Set(candidates))\n        .map(escapeHtml)\n        .map(s => `\"${s}\"`)\n        .join(\", \");\n      throw new Error(\n        [\n          `More than one possible separator found: ${list}`,\n          `You can provide correct one with <Timeseries sep=\",\">`,\n        ].join(`\\n`),\n      );\n    }\n    separator = candidates[0];\n    if (lines[0].split(separator).length !== lines[1].split(separator).length)\n      throw new Error(\n        [\n          `Different amount of elements in rows.`,\n          `Row 1: ${lines[0]}`,\n          `Row 2: ${lines[1]}`,\n          `Guessed separator: ${separator}`,\n          `You can provide correct one with <Timeseries sep=\",\">`,\n        ].join(`\\n`),\n      );\n  }\n\n  const re = new RegExp(\n    [\n      `\"(\"\"|[^\"]+)*\"`, // quoted text with possible quoted quotes inside it (\"not a \"\"value\"\"\")\n      `[^\"${separator}]+`, // usual value, no quotes, between separators\n      `(?=${separator}(${separator}|$))`, // empty value in the middle or at the end of string\n      `^(?=${separator})`, // empty value at the start of the string\n    ].join(\"|\"),\n    \"g\",\n  );\n  const split = text => text.trim().match(re);\n\n  const start = performance.now();\n\n  // detect header; if it is omitted, use indices as a header names\n  names = split(lines[0]);\n  const secondLine = split(lines[1]);\n  // assume that we have at least one column with numbers\n  // and name of this column is not number :)\n  // so we have different types for values in first and second rows\n  if (!names.every((n, i) => isNaN(n) === isNaN(secondLine[i]))) {\n    lines.shift();\n    names = names.map(n => n.toLowerCase());\n  } else {\n    names = names.map((_, i) => String(i));\n  }\n\n  const result = {};\n  for (let name of names) result[name] = [];\n\n  if (names.length !== split(lines[0]).length) {\n    throw new Error(\n      [\n        `Column names count differs from data columns count.`,\n        `Columns: ${names.join(\", \")};`,\n        `Data: ${lines[0]};`,\n        `Separator: \"${separator}\".`,\n      ].join(\"\\n\"),\n    );\n  }\n\n  let row;\n  let i;\n  for (let line of lines) {\n    // skip empty lines including the last line\n    if (!line.trim()) continue;\n    row = split(line);\n    for (i = 0; i < row.length; i++) {\n      const val = +row[i];\n      result[names[i]].push(isNaN(val) ? row[i] : val);\n    }\n  }\n\n  console.log(`Parsed in ${performance.now() - start} ms`);\n\n  return [result, names];\n};\n\n/**\n * Internal helper to check if string is JSON\n * @param {string} value\n * @returns {object|false}\n */\nexport const tryToParseJSON = value => {\n  if (isString(value) && value[0] === \"{\") {\n    try {\n      return JSON.parse(value);\n    } catch (e) {}\n  }\n\n  return false;\n};\n","import Registry from \"../Registry\";\nimport messages from \"../../utils/messages\";\n\nexport const errorBuilder = {\n  /**\n   * Occurrs when attribute is not provided at all\n   */\n  required(modelName, field) {\n    return {\n      modelName,\n      field,\n      error: \"ERR_REQUIRED\",\n    };\n  },\n\n  /**\n   * Occurrs when tag is not in our Registry\n   */\n  unknownTag(modelName, field, value) {\n    return {\n      modelName,\n      field,\n      value,\n      error: \"ERR_UNKNOWN_TAG\",\n    };\n  },\n\n  /**\n   * Occurrs when tag is not on the tree\n   */\n  tagNotFound(modelName, field, value) {\n    return {\n      modelName,\n      field,\n      value,\n      error: \"ERR_TAG_NOT_FOUND\",\n    };\n  },\n\n  /**\n   * Occurrs when referenced tag cannot be controlled by particular control tag\n   */\n  tagUnsupported(modelName, field, value, validType) {\n    return {\n      modelName,\n      field,\n      value,\n      validType,\n      error: \"ERR_TAG_UNSUPPORTED\",\n    };\n  },\n\n  /**\n   * Occurrs when attribute value has wrong type\n   */\n  badAttributeValueType(modelName, field, value, validType) {\n    return {\n      modelName,\n      field,\n      value,\n      validType,\n      error: \"ERR_BAD_TYPE\",\n    };\n  },\n\n  internalError(error) {\n    return {\n      error: \"ERR_INTERNAL\",\n      value: String(error).substr(0, 1000),\n      field: String(error.code),\n      modelName: \"\",\n    };\n  },\n\n  generalError(error) {\n    return {\n      error: \"ERR_GENERAL\",\n      value: String(error).substr(0, 1000),\n      field: String(error.code),\n      modelName: \"\",\n    };\n  },\n\n  loadingError(error, url, attrWithUrl, message = messages.ERR_LOADING_HTTP) {\n    console.log(\"ERR\", error, error.code);\n    return {\n      error: \"ERR_GENERAL\",\n      value: message({ attr: attrWithUrl, error: String(error), url }),\n      field: attrWithUrl,\n      modelName: \"\",\n    };\n  },\n};\n\n/**\n * Transforms MST `describe()` to a human-readable value\n * @param {import(\"mobx-state-tree\").IType} type\n * @param {boolean} withNullType\n */\nconst getTypeDescription = (type, withNullType = true) => {\n  let description = type\n    .describe()\n    .match(/([a-z0-9?|]+)/gi)\n    .join(\"\")\n    .split(\"|\");\n\n  // Remove optional null\n  if (withNullType === false) {\n    const index = description.indexOf(\"null?\");\n    if (index >= 0) description.splice(index, 1);\n  }\n\n  return description;\n};\n\n/**\n * Flatten config tree for faster iterations and searches\n * @param {object} tree\n * @param {string} parent\n * @returns {object[]}\n */\nconst flattenTree = (tree, parent = null) => {\n  const result = [];\n\n  for (let child of tree.children) {\n    /* Create a child without children and\n    assign id of the parent for quick mathcing */\n    const flatChild = { ...child, parent: parent?.id ?? null };\n    delete flatChild.children;\n\n    result.push(flatChild);\n\n    /* Recursively add children if exist */\n    if (child.children instanceof Array) {\n      result.push(...flattenTree(child, child));\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates presence and format of the name attribute\n * @param {Object} child\n * @param {Object} model\n */\nconst validateNameTag = (child, model) => {\n  const { name } = model.properties;\n\n  // HyperText can be used for mark-up, without name, so name is optional type there\n  if (name && !name.optionalValues && child.name === undefined) {\n    return errorBuilder.required(model.name, \"name\");\n  }\n\n  return null;\n};\n\n/**\n * Validates toName attribute\n * Checks that connected tag is existing tag, it present in the tree\n * and can be controlled by current Object Tag\n * @param {Object} element\n * @param {Object} model\n * @param {Object[]} flatTree\n */\nconst validateToNameTag = (element, model, flatTree) => {\n  const { toname, controlledTags } = model.properties;\n\n  if (toname && element.toname === undefined) {\n    return errorBuilder.required(model.name, \"toname\");\n  }\n\n  if (!element.toname) return null;\n\n  const names = element.toname.split(\",\"); // for pairwise\n\n  for (let name of names) {\n    // Find referenced tag in the tree\n    const controlledTag = flatTree.find(item => item.name === name);\n\n    if (controlledTag === undefined) {\n      return errorBuilder.tagNotFound(model.name, \"toname\", name);\n    }\n\n    if (controlledTags && controlledTags.validate(controlledTag.tagName).length) {\n      return errorBuilder.tagUnsupported(model.name, \"toname\", controlledTag.tagName, controlledTags);\n    }\n  }\n\n  return null;\n};\n\n/**\n * Validate other tag attributes other than name and toName\n * @param {Object} child\n * @param {import(\"mobx-state-tree\").IModelType} model\n * @param {string[]} fieldsToSkip\n */\nconst validateAttributes = (child, model, fieldsToSkip) => {\n  const result = [];\n  const properties = Object.keys(model.properties);\n\n  for (let key of properties) {\n    if (!child.hasOwnProperty(key)) continue;\n    if (fieldsToSkip.includes(key)) continue;\n    const value = child[key];\n    const modelProperty = model.properties[key.toLowerCase()];\n    const mstValidationResult = modelProperty.validate(value, modelProperty);\n\n    if (mstValidationResult.length === 0) continue;\n\n    result.push(errorBuilder.badAttributeValueType(model.name, key, value, modelProperty));\n  }\n\n  return result;\n};\n\n/**\n * Convert MST type to a human-readable string\n * @param {import(\"mobx-state-tree\").IType} type\n */\nconst humanizeTypeName = type => {\n  return type ? getTypeDescription(type, false) : null;\n};\n\nexport class ConfigValidator {\n  /**\n   * Validate node attributes and compatibility with other nodes\n   * @param {*} node\n   */\n  static validate(root) {\n    const flatTree = flattenTree(root);\n    const propertiesToSkip = [\"id\", \"children\", \"name\", \"toname\", \"controlledTags\"];\n    const validationResult = [];\n\n    for (let child of flatTree) {\n      const model = Registry.getModelByTag(child.type);\n      // Validate name attribute\n      const nameValidation = validateNameTag(child, model);\n      if (nameValidation !== null) validationResult.push(nameValidation);\n\n      // Validate toName attribute\n      const toNameValidation = validateToNameTag(child, model, flatTree);\n      if (toNameValidation !== null) validationResult.push(toNameValidation);\n\n      validationResult.push(...validateAttributes(child, model, propertiesToSkip));\n    }\n\n    if (validationResult.length) {\n      return validationResult.map(error => ({\n        ...error,\n        validType: humanizeTypeName(error.validType),\n      }));\n    }\n\n    return [];\n  }\n}\n","import { types, getRoot } from \"mobx-state-tree\";\n\nconst PersistentStateMixin = types\n  .model({})\n  .views(self => ({\n    get persistentValuesKey() {\n      return \"labelStudio:storedValues\";\n    },\n\n    get persistentValues() {\n      return {};\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      setTimeout(self.restoreValues);\n    },\n\n    beforeDestroy() {\n      self.storeValues();\n    },\n\n    storeValues() {\n      const key = self.persistentValuesKey;\n      const obj = { task: getRoot(self).task?.id, values: self.persistentValues };\n\n      localStorage.setItem(key, JSON.stringify(obj));\n    },\n\n    restoreValues() {\n      const stored = JSON.parse(localStorage.getItem(self.persistentValuesKey) || \"{}\");\n      if (!stored || stored.task !== getRoot(self).task?.id) return;\n      const values = stored.values || {};\n      for (let key of Object.keys(values)) {\n        self[key] = values[key];\n      }\n    },\n  }));\n\nexport default PersistentStateMixin;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport * as d3 from \"d3\";\nimport ObjectBase from \"../Base\";\nimport Registry from \"../../../core/Registry\";\nimport Types from \"../../../core/Types\";\nimport { cloneNode, guidGenerator } from \"../../../core/Helpers\";\nimport { getOptimalWidth, getRegionColor, fixMobxObserve, sparseValues, checkD3EventLoop } from \"./helpers\";\nimport { errorBuilder } from \"../../../core/DataValidator/ConfigValidator\";\n\n/**\n * Channel tag can be used to label time series data\n * @name Channel\n * @param {string} column column name or index\n * @param {string} [legend] display name of the channel\n * @param {string} [units] display units name\n * @param {string} [displayFormat] format string for the values, uses d3-format:<br/>\n *        `[,][.precision][f\\|%]`<br/>\n *        `,` - group thousands with separator (from locale): `,` (12345.6 -> 12,345.6) `,.2f` (12345.6 -> 12,345.60)<br/>\n *        `.precision` - precision for `f\\|%` type, significant digits for empty type:<br/>\n *                     `.3f` (12.3456 -> 12.345, 1000 -> 1000.000)<br/>\n *                     `.3` (12.3456 -> 12.3, 1.2345 -> 1.23, 12345 -> 1.23e+4)<br/>\n *        `f` - treat as float, default precision is .6: `f` (12 -> 12.000000) `.2f` (12 -> 12.00) `.0f` (12.34 -> 12)<br/>\n *        `%` - treat as percents and format accordingly: `%.0` (0.128 -> 13%) `%.1` (1.2345 -> 123.4%)\n * @param {number} [height] height of the plot\n * @param {string=} [strokeColor=#f48a42] plot stroke color, expects hex value\n * @param {number=} [strokeWidth=1] plot stroke width\n */\n\nconst csMap = {\n  curvestep: \"curveStep\",\n  curvebasis: \"curvebasis\",\n  curvebasisopen: \"curveBasisOpen\",\n  curvebundle: \"curveBundle\",\n  curvecardinal: \"curveCardinal\",\n  curvecardinalopen: \"curveCardinalOpen\",\n  curvecatmullrom: \"curveCatmullRom\",\n  curvecatmullromopen: \"curveCatmullRomOpen\",\n  curvelinear: \"curveLinear\",\n  curvemonotonex: \"curveMonotoneX\",\n  curvemonotoney: \"curveMonotoneY\",\n  curvenatural: \"curveNatural\",\n  curveradial: \"curveRadial\",\n  curvestep: \"curveStep\",\n  curvestepafter: \"curveStepAfter\",\n  curvestepbefore: \"curveStepBefore\",\n};\n\nconst TagAttrs = types.model({\n  legend: \"\",\n  units: \"\",\n  displayformat: types.optional(types.string, \".1f\"),\n\n  interpolation: types.optional(types.enumeration(Object.values(csMap)), \"curveStep\"),\n\n  height: types.optional(types.string, \"200\"),\n\n  strokewidth: types.optional(types.string, \"1\"),\n  strokecolor: types.optional(types.string, \"#1f77b4\"),\n\n  column: types.string,\n});\n\nconst Model = types\n  .model(\"ChannelModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"channel\",\n    children: Types.unionArray([\"channel\", \"view\"]),\n  })\n  .views(self => ({\n    get parent() {\n      return Types.getParentOfTypeString(self, \"TimeSeriesModel\");\n    },\n\n    get columnName() {\n      let column = self.column;\n      if (/^\\d+$/.test(column)) {\n        column = self.parent.headers[column] || column;\n      }\n      column = column.toLowerCase();\n      return column;\n    },\n  }));\n\nconst ChannelModel = types.compose(\"ChannelModel\", Model, TagAttrs, ObjectBase);\n\nclass ChannelD3 extends React.Component {\n  ref = React.createRef();\n  gCreator; // brush creator container\n  brushCreator; // itself\n  gBrushes;\n\n  tracker;\n  trackerPoint;\n  trackerTime;\n  trackerValue;\n\n  extent = [0, 0];\n\n  // if there is a huge data — use sliced data to optimize render\n  useOptimizedData = false;\n  // optimized data and count of slices come from parent\n  optimizedSeries = null;\n  // optimized data is enough to render zoomed data up to this level\n  // and it is equal to the count of slices\n  zoomStep = 10;\n\n  // d3 lines to render full line\n  line;\n  // and just a part of data on the screen\n  lineSlice;\n\n  height = +this.props.item.height;\n\n  state = {\n    width: 840,\n  };\n\n  changeWidth = () => {\n    const offsetWidth = this.ref.current.offsetWidth;\n    console.log(\"WIDTH\", offsetWidth);\n    const { margin } = this.props.item.parent;\n    if (offsetWidth) {\n      const width = offsetWidth - margin.left - margin.right;\n      this.setState({ width });\n    }\n  };\n\n  getRegion = (selection, isInstant) => {\n    const [start, end] = selection.map(n => +this.stick(n)[0]);\n    return { start, end: isInstant ? start : end };\n  };\n\n  createBrushMovedHandler = id => () => {\n    if (checkD3EventLoop(\"end\") || !d3.event.selection) return;\n    const { ranges } = this.props;\n    const { parent } = this.props.item;\n    const i = ranges.findIndex(range => range.id === id);\n    if (i < 0) {\n      console.error(`REGION ${id} was not found`);\n      return;\n    }\n    const r = ranges[i];\n    const moved = this.getRegion(d3.event.selection, r.instant);\n    // click simulation - if selection didn't move\n    const isJustClick = moved.start === r.start && moved.end === r.end;\n    if (isJustClick) {\n      parent.completion.unselectAreas();\n      r.onClickRegion();\n    } else {\n      parent.regionChanged(moved, i);\n    }\n  };\n\n  newRegion;\n  newRegionTimer;\n\n  newBrushHandler = () => {\n    const {\n      ranges,\n      item: { parent },\n    } = this.props;\n    const activeStates = parent.activeStates();\n    const statesSelected = activeStates && activeStates.length;\n    // skip if event fired by .move() - prevent recursion and bugs\n    if (checkD3EventLoop(\"end\")) return;\n    // just a click - create insant region or select region\n    if (!d3.event.selection) {\n      const x = d3.mouse(d3.event.sourceEvent.target)[0];\n      const newRegion = this.newRegion;\n\n      // when 2nd click happens during 300ms after 1st click and in the same place\n      if (newRegion && Math.abs(newRegion.x - x) < 4) {\n        clearTimeout(this.newRegionTimer);\n        parent.regionChanged(newRegion.range, ranges.length, newRegion.states);\n        this.newRegion = null;\n        this.newRegionTimer = null;\n      } else if (statesSelected) {\n        // 1st click - store the data\n        this.newRegion = {\n          range: this.getRegion([x, x]),\n          states: activeStates.map(s => cloneNode(s)),\n          x,\n        };\n        // clear it in 300ms if there no 2nd click\n        this.newRegionTimer = setTimeout(() => {\n          this.newRegion = null;\n          this.newRegionTimer = null;\n        }, 300);\n      }\n\n      // select regions on this coords consequentially one after another\n      // unselect regions after the last one\n      const value = this.x.invert(x);\n      const regions = ranges.filter(r => r.start <= value && r.end >= value);\n      const nextIndex = regions.findIndex(r => r.selected) + 1;\n      const region = regions[nextIndex];\n      parent.completion.unselectAreas();\n      region && region.onClickRegion();\n\n      return;\n    }\n    const region = this.getRegion(d3.event.selection);\n    this.brushCreator.move(this.gCreator, null);\n    if (!statesSelected) return;\n    parent.addRegion(region.start, region.end);\n  };\n\n  renderBrushes(ranges, flush = false) {\n    const { width } = this.state;\n    const height = this.height;\n    const { item } = this.props;\n    const extent = [\n      [0, 0],\n      [width, height],\n    ];\n    const managerBrush = d3.brushX().extent(extent);\n    const x = this.x;\n    const handleSize = 3;\n\n    if (flush) {\n      this.gBrushes.selectAll(\".brush\").remove();\n    }\n\n    const brushSelection = this.gBrushes.selectAll(\".brush\").data(ranges, r => r.id);\n    const createHandler = this.createBrushMovedHandler;\n    const updateTracker = this.updateTracker;\n    const getRegion = this.getRegion;\n\n    // Set up new brushes\n    brushSelection\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"brush\")\n      .attr(\"id\", r => `brush_${item.id}_${r.id}`)\n      .each(function(r) {\n        const group = d3.select(this);\n        const brush = d3.brushX().extent(extent);\n        brush.on(\"brush\", function() {\n          if (checkD3EventLoop(\"brush\")) return;\n          const sticked = getRegion(d3.event.selection, r.instant);\n          managerBrush.move(group, [x(sticked.start), x(sticked.end) + r.instant * 0.5]);\n          updateTracker(d3.mouse(this)[0]);\n        });\n        brush.on(\"end\", createHandler(r.id));\n        brush(group);\n\n        if (r.instant) {\n          // no resizing, only moving\n          group.selectAll(\".handle\").style(\"pointer-events\", \"none\");\n        } else {\n          // no moving, only resizing to prevent out-of-screen bugs\n          // also no reasons to move out-of-screen regions in real world\n          group.selectAll(\".selection\").style(\"pointer-events\", \"none\");\n        }\n        // all other space is taken by brushCreator\n        group.selectAll(\".overlay\").style(\"pointer-events\", \"none\");\n\n        if (r._brushRef === undefined || !r._brushRef.isConnected) {\n          r._brushRef = group.select(\".selection\").node();\n        }\n      })\n      .merge(brushSelection)\n      .each(function(r, i) {\n        const group = d3.select(this);\n        const selection = group.selectAll(\".selection\");\n        const color = getRegionColor(r);\n        if (r.instant) {\n          selection\n            .attr(\"stroke-opacity\", r.selected || r.highlighted ? 0.6 : 0.2)\n            .attr(\"fill-opacity\", r.selected || r.highlighted ? 1 : 0.6)\n            .attr(\"stroke-width\", 3)\n            .attr(\"stroke\", color)\n            .attr(\"fill\", color);\n          const at = x(r.start);\n          managerBrush.move(group, [at, at + 1]);\n        } else {\n          selection\n            .attr(\"stroke-opacity\", r.selected || r.highlighted ? 0.8 : 0.5)\n            .attr(\"fill-opacity\", r.selected || r.highlighted ? 0.6 : 0.3)\n            .attr(\"stroke\", color)\n            .attr(\"fill\", color);\n          managerBrush.move(group, [r.start, r.end].map(x));\n        }\n      });\n    brushSelection.exit().remove();\n  }\n\n  renderBrushCreator() {\n    if (this.gCreator) {\n      this.gCreator.selectAll(\"*\").remove();\n    } else {\n      this.gCreator = this.main.append(\"g\").attr(\"class\", \"new_brush\");\n    }\n\n    const updateTracker = this.updateTracker;\n    const block = this.gCreator;\n    const getRegion = this.getRegion;\n    const x = this.x;\n    const brush = (this.brushCreator = d3\n      .brushX()\n      .extent([\n        [0, 0],\n        [this.state.width, this.height],\n      ])\n      .on(\"brush\", function() {\n        if (checkD3EventLoop(\"brush\") || !d3.event.selection) return;\n        const sticked = getRegion(d3.event.selection);\n        brush.move(block, [x(sticked.start), x(sticked.end)]);\n        updateTracker(d3.mouse(this)[0]);\n      })\n      .on(\"end\", this.newBrushHandler));\n\n    this.gCreator.call(this.brushCreator);\n  }\n\n  updateTracker = screenX => {\n    const { width } = this.state;\n    if (screenX < 0 || screenX > width) return;\n    const [dataX, dataY] = this.stick(screenX);\n    this.tracker.attr(\"transform\", `translate(${this.x(dataX) + 0.5},0)`);\n    this.trackerTime.text(this.formatTime(dataX));\n    this.trackerValue.text(this.formatValue(dataY) + \" \" + this.props.item.units);\n    this.trackerPoint.attr(\"cy\", this.y(dataY));\n    this.tracker.attr(\"text-anchor\", screenX > width - 100 ? \"end\" : \"start\");\n  };\n\n  renderTracker = () => {\n    const updateTracker = this.updateTracker;\n\n    this.tracker = this.main.append(\"g\").style(\"pointer-events\", \"none\");\n    this.trackerValue = this.tracker\n      .append(\"text\")\n      .attr(\"font-size\", 10)\n      .attr(\"fill\", \"#666\");\n    this.trackerTime = this.tracker\n      .append(\"text\")\n      .attr(\"y\", this.height - 1)\n      .attr(\"font-size\", 10)\n      .attr(\"fill\", \"#666\");\n    this.trackerPoint = this.tracker\n      .append(\"circle\")\n      .attr(\"cx\", 0)\n      .attr(\"r\", 3)\n      .attr(\"stroke\", \"red\")\n      .attr(\"fill\", \"none\");\n    this.tracker\n      .append(\"line\")\n      .attr(\"y1\", this.height)\n      .attr(\"y2\", 0)\n      .attr(\"stroke\", \"#666\");\n\n    function onHover() {\n      updateTracker(d3.mouse(this)[0]);\n    }\n\n    this.main.on(\"mousemove\", onHover);\n  };\n\n  renderXAxis = () => {\n    const { item } = this.props;\n    const { width } = this.state;\n    const { margin } = item.parent;\n    const tickSize = this.height + margin.top;\n    const shift = -margin.top;\n    const g = this.main\n      .selectAll(\".xaxis\")\n      .data([0])\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"xaxis\");\n    g.attr(\"transform\", `translate(0,${shift})`)\n      .call(\n        d3\n          .axisBottom(this.x)\n          .ticks(width / 80)\n          .tickSize(tickSize + 4),\n      )\n      .call(g => g.selectAll(\".domain\").remove())\n      // @todo `clone is not a function` wtf?\n      // .call(g => g.selectAll(\".tick line\").clone().attr(\"y1\", 18).attr(\"y2\", 22));\n      .call(g =>\n        g\n          .selectAll(\".tick\")\n          .attr(\"stroke-opacity\", 0.2)\n          .selectAll(\".bottom\")\n          .data([0])\n          .enter()\n          .append(\"line\")\n          .attr(\"class\", \"bottom\")\n          .attr(\"stroke\", \"currentColor\")\n          .attr(\"y1\", tickSize + 16)\n          .attr(\"y2\", tickSize + margin.bottom),\n      );\n  };\n\n  renderYAxis = () => {\n    this.main\n      .append(\"g\")\n      .call(\n        d3\n          .axisLeft(this.y)\n          .tickFormat(this.formatValue)\n          .tickSize(3),\n      )\n      .call(g => g.select(\".domain\").remove())\n      .call(g =>\n        g\n          .append(\"text\")\n          .attr(\"class\", \"title\")\n          .attr(\"font-size\", 8)\n          .attr(\"x\", -6)\n          .attr(\"y\", 0)\n          .attr(\"fill\", \"currentColor\")\n          .attr(\"text-anchor\", \"end\")\n          .text(this.props.item.units),\n      );\n  };\n\n  initZoom() {\n    const { data, item, time } = this.props;\n    const times = data[time];\n    const upd = item.parent.throttledRangeUpdate();\n    const onZoom = () => {\n      const e = d3.event;\n      if (!e.ctrlKey && !e.metaKey) return;\n      e.preventDefault();\n      const { range } = this.props;\n      const indices = range.map(r => d3.bisectRight(times, r));\n      const MAX_POINTS_ON_SCREEN = 10;\n      const [x] = d3.mouse(d3.event.target);\n      const width = this.x.range()[1];\n      // slow down zooming in\n      const scale = Math.min(0.3, -e.deltaY / this.height);\n      // if there are too few points displayed, don't zoom in\n      if (indices[1] - indices[0] < MAX_POINTS_ON_SCREEN && scale > 0) return;\n\n      const shift = range[1] - range[0];\n      const zoomed = [\n        Math.max(+this.extent[0], +range[0] + (shift * scale * x) / width),\n        Math.min(+this.extent[1], range[1] - shift * scale * (1 - x / width)),\n      ];\n      upd(zoomed, scale);\n    };\n\n    this.main.on(\"wheel\", onZoom);\n  }\n\n  componentDidMount() {\n    if (!this.ref.current) return;\n\n    const { data, item, range, time, column } = this.props;\n    const { isDate, formatTime, margin, slicesCount } = item.parent;\n    const height = this.height;\n    this.zoomStep = slicesCount;\n    const clipPathId = `clip_${item.id}`;\n\n    const times = data[time];\n    const values = data[column];\n    const { series } = this.props;\n\n    if (!values) {\n      const names = Object.keys(data).filter(name => name !== time);\n      const message = `\\`${column}\\` not found in data. Available columns: ${names.join(\n        \", \",\n      )}. For headless csv you can use column index`;\n      getRoot(item).completionStore.addErrors([errorBuilder.generalError(message)]);\n      return;\n    }\n\n    // initially it checks do we even need this optimization\n    // but then this is a switch between optimized and original data\n    this.useOptimizedData = series.length > getOptimalWidth() * this.zoomStep;\n    if (this.useOptimizedData) {\n      this.optimizedSeries = sparseValues(series, getOptimalWidth() * this.zoomStep);\n    }\n    this.slices = item.parent.dataSlices;\n\n    const formatValue = d3.format(item.displayformat);\n    this.formatValue = formatValue;\n    this.formatTime = formatTime;\n\n    const offsetWidth = this.ref.current.offsetWidth;\n    const width = offsetWidth ? offsetWidth - margin.left - margin.right : this.state.width;\n    // intention direct assignment to avoid rerender and correct initialization\n    // eslint-disable-next-line react/no-direct-mutation-state\n    this.state.width = width;\n\n    this.extent = d3.extent(times);\n\n    const scale = isDate ? d3.scaleTime() : d3.scaleLinear();\n    const x = scale\n      // .clamp(true)\n      .domain(this.extent)\n      .range([0, width]);\n\n    const y = d3\n      .scaleLinear()\n      .domain([d3.min(values), d3.max(values)])\n      .range([height - margin.max, margin.min]);\n\n    const stick = screenX => {\n      const dataX = x.invert(screenX);\n      let i = d3.bisectRight(times, dataX);\n      if (times[i] - dataX > dataX - times[i - 1]) i--;\n      return [times[i], values[i]];\n    };\n\n    this.x = x;\n    this.y = y;\n    this.plotX = x.copy();\n    this.stick = stick;\n\n    this.line = d3\n      .line()\n      .y(d => this.y(d[column]))\n      .x(d => this.plotX(d[time]));\n\n    this.lineSlice = d3\n      .line()\n      .defined(d => d[time] >= range[0] && d[time] <= range[1])\n      .y(d => this.y(d[column]))\n      .x(d => this.x(d[time]));\n\n    //////////////////////////////////\n    const main = d3\n      .select(this.ref.current)\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width + margin.left + margin.right, height + margin.top + margin.bottom])\n      .style(\"display\", \"block\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    main\n      .append(\"clipPath\")\n      .attr(\"id\", clipPathId)\n      .append(\"rect\")\n      .attr(\"x\", 0)\n      .attr(\"y\", 0)\n      .attr(\"height\", height)\n      .attr(\"width\", width);\n\n    // decorative huge opaque block with channel name on background\n    main\n      .append(\"text\")\n      .text(item.legend)\n      .attr(\"dx\", \"1em\")\n      .attr(\"dy\", \"1em\")\n      .attr(\"font-weight\", \"bold\")\n      .attr(\"font-size\", \"1.4em\")\n      .attr(\"dy\", \"1em\")\n      .attr(\"opacity\", 0.1);\n\n    this.main = main;\n\n    const pathContainer = main.append(\"g\").attr(\"clip-path\", `url(\"#${clipPathId}\")`);\n    this.path = pathContainer\n      .append(\"path\")\n      .datum(this.useOptimizedData ? this.optimizedSeries : series)\n      .attr(\"d\", this.line);\n    // to render different zoomed slices of path\n    this.path2 = pathContainer.append(\"path\");\n\n    pathContainer\n      .selectAll(\"path\")\n      .attr(\"vector-effect\", \"non-scaling-stroke\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke-width\", item.strokewidth || 1)\n      .attr(\"stroke\", item.strokecolor || \"steelblue\");\n\n    this.renderTracker();\n    this.renderYAxis();\n    this.setRangeWithScaling(range);\n    this.renderBrushCreator();\n    this.initZoom();\n\n    // We initially generate a SVG group to keep our brushes' DOM elements in:\n    this.gBrushes = main\n      .append(\"g\")\n      .attr(\"class\", \"brushes\")\n      .attr(\"clip-path\", `url(\"#${clipPathId}\")`);\n\n    this.renderBrushes(this.props.ranges);\n\n    window.addEventListener(\"resize\", this.changeWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.changeWidth);\n  }\n\n  setRangeWithScaling(range) {\n    this.x.domain(range);\n    const current = this.x.range();\n    const all = this.plotX.domain().map(this.x);\n    const scale = (all[1] - all[0]) / (current[1] - current[0]);\n    const left = Math.max(0, Math.floor((this.zoomStep * (current[0] - all[0])) / (all[1] - all[0])));\n    const right = Math.max(0, Math.floor((this.zoomStep * (current[1] - all[0])) / (all[1] - all[0])));\n    const translate = all[0] - current[0];\n    console.log(\"SOME MATH\", {\n      left,\n      right,\n      xDomain: [...range],\n      pDomain: this.plotX.domain(),\n      xRange: current,\n      all,\n      scale,\n      translate,\n      use: this.useOptimizedData,\n    });\n\n    // zoomStep - zoom level when we need to switch between optimized and original data\n    const haveToSwitchData = scale > this.zoomStep === this.useOptimizedData;\n    if (this.optimizedSeries && haveToSwitchData) {\n      this.useOptimizedData = !this.useOptimizedData;\n      if (this.useOptimizedData) {\n        this.path.datum(this.optimizedSeries);\n        this.path.attr(\"d\", this.line);\n      } else {\n        this.path.attr(\"transform\", ``);\n      }\n    }\n\n    if (this.useOptimizedData) {\n      this.path.attr(\"transform\", `translate(${translate} 0) scale(${scale} 1)`);\n      this.path2.attr(\"d\", \"\");\n    } else {\n      if (this.optimizedSeries) {\n        this.path.datum(this.slices[left]);\n        this.path.attr(\"d\", this.lineSlice);\n        if (left !== right) {\n          this.path2.datum(this.slices[right]);\n          this.path2.attr(\"d\", this.lineSlice);\n        } else {\n          this.path2.attr(\"d\", \"\");\n        }\n      } else {\n        this.path.attr(\"d\", this.lineSlice);\n        this.path2.attr(\"d\", \"\");\n      }\n    }\n\n    this.renderXAxis();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { range } = this.props;\n    const { width } = this.state;\n    let flushBrushes = false;\n\n    if (width !== prevState.width) {\n      const { item, range } = this.props;\n      const { margin } = item.parent;\n      const height = this.height;\n      const svg = d3.select(this.ref.current).selectAll(\"svg\");\n\n      svg.attr(\"viewBox\", [0, 0, width + margin.left + margin.right, height + margin.top + margin.bottom]);\n      this.x.range([0, width]);\n      this.renderBrushCreator();\n      svg.selectAll(\"clipPath rect\").attr(\"width\", width);\n\n      this.setRangeWithScaling(range);\n      this.renderBrushCreator();\n      flushBrushes = true;\n    } else {\n      const domain = this.x.domain();\n      if (+domain[0] !== +range[0] || +domain[1] !== +range[1]) {\n        this.setRangeWithScaling(range);\n      }\n    }\n\n    this.renderBrushes(this.props.ranges, flushBrushes);\n  }\n\n  render() {\n    this.props.ranges.map(r => fixMobxObserve(r.start, r.end, r.selected, r.highlighted, r.style?.fillcolor));\n    fixMobxObserve(this.props.range.map(Number));\n\n    return <div className=\"htx-timeseries-channel\" ref={this.ref} />;\n  }\n}\n\nconst ChannelD3Observed = observer(ChannelD3);\n\nconst HtxChannelViewD3 = ({ item }) => {\n  if (!item.parent.dataObj) return null;\n  // @todo maybe later for some other option\n  // let channels = item.parent.overviewchannels;\n  // if (channels) channels = channels.split(\",\");\n  // if (channels && !channels.includes(item.value.substr(1))) return null;\n\n  return (\n    <ChannelD3Observed\n      time={item.parent.keyColumn}\n      column={item.columnName}\n      item={item}\n      data={item.parent.dataObj}\n      series={item.parent.dataHash}\n      range={item.parent.brushRange}\n      ranges={item.parent.regs}\n    />\n  );\n};\n\nconst HtxChannel = observer(HtxChannelViewD3);\n\nRegistry.addTag(\"channel\", ChannelModel, HtxChannel);\n\nexport { ChannelModel, HtxChannel };\n","/* eslint-disable react-hooks/exhaustive-deps */\n\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot, getType } from \"mobx-state-tree\";\nimport throttle from \"lodash.throttle\";\n\nimport ObjectBase from \"./Base\";\nimport ObjectTag from \"../../components/Tags/Object\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\nimport { restoreNewsnapshot } from \"../../core/Helpers\";\nimport {\n  checkD3EventLoop,\n  idFromValue,\n  getRegionColor,\n  fixMobxObserve,\n  formatTrackerTime,\n  sparseValues,\n  getOptimalWidth,\n} from \"./TimeSeries/helpers\";\nimport { parseCSV, tryToParseJSON } from \"../../utils/data\";\nimport messages from \"../../utils/messages\";\nimport { errorBuilder } from \"../../core/DataValidator/ConfigValidator\";\nimport PersistentStateMixin from \"../../mixins/PersistentState\";\n\nimport \"./TimeSeries/Channel\";\n\n/**\n * TimeSeries tag can be used to label time series data.\n * Read more about Time Series Labeling on [template page](../templates/time_series.html).\n * @example\n * <!-- csv loaded by url in `value` with 3 columns: time, sensor1, sensor2 -->\n * <!-- key column `time` is a number actually -->\n * <View>\n *   <TimeSeries name=\"device\" value=\"$timeseries\" valueType=\"url\" timeColumn=\"time\">\n *      <Channel column=\"sensor1\" />\n *      <Channel column=\"sensor2\" />\n *   </TimeSeries>\n * </View>\n * @example\n * <!-- data stored directly in task's field `ts` as json -->\n * <!-- timeseries key (`time`) is date in `timeFormat` formatted as full date on plot (by default) -->\n * <View>\n *   <TimeSeries name=\"device\" value=\"$ts\" timeColumn=\"time\" timeFormat=\"%m/%d/%Y %H:%M:%S\">\n *      <Channel column=\"sensor1\" />\n *      <Channel column=\"sensor2\" />\n *   </TimeSeries>\n * </View>\n * @name TimeSeries\n * @param {string} name name of the element\n * @param {string} value key used to lookup the data, it needs to reference either URLs for your time-series if valueType=url, otherwise expects JSON\n * @param {enum} [valueType] \"url\" or \"json\" If set to \"url\" then it loads value references inside `value` key, otherwise it expects JSON. Defaults to url\n * @param {string} [timeColumn] column name or index that provides temporal values, if your time-series data has no temporal column then its automatically generated\n * @param {string} [timeFormat] pattern used to parse values inside timeColumn, parsing provided by d3, and follows `strftime` implementation\n * @param {string} [timeDisplayFormat] format used to display temporal value, can be a number or a date, if a temporal column is a date then use strftime to format it, otherwise, if it's a number then use [d3 number](https://github.com/d3/d3-format#locale_format) formatting\n * @param {string} [sep] separator for you CSV file, default is comma \",\"\n * @param {string} [overviewChannels] comma-separated list of channels names or indexes displayed in overview\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  value: types.string,\n  valuetype: types.optional(types.enumeration([\"url\", \"json\"]), \"url\"),\n  timecolumn: \"\",\n\n  sep: \",\",\n  timeformat: \"\",\n  timedisplayformat: \"\",\n  overviewchannels: \"\", // comma-separated list of channels to show\n\n  multiaxis: types.optional(types.boolean, false), // show channels in the same view\n  // visibilitycontrols: types.optional(types.boolean, false), // show channel visibility controls\n  hotkey: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model(\"TimeSeriesModel\", {\n    type: \"timeseries\",\n    children: Types.unionArray([\"channel\", \"timeseriesoverview\", \"view\", \"hypertext\"]),\n\n    width: 840,\n    margin: types.frozen({ top: 20, right: 20, bottom: 30, left: 50, min: 10, max: 10 }),\n    brushRange: types.array(types.number),\n\n    // _value: types.optional(types.string, \"\"),\n    _needsUpdate: types.optional(types.number, 0),\n  })\n  .volatile(self => ({\n    data: null,\n    valueLoaded: false,\n    zoomedRange: 0,\n    scale: 1,\n    headers: [],\n  }))\n  .views(self => ({\n    get regionsTimeRanges() {\n      return self.regs.map(r => {\n        return [r.start, r.end];\n      });\n    },\n\n    get store() {\n      return getRoot(self);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get regs() {\n      return self.completion.regionStore.regions.filter(r => r.object === self);\n    },\n\n    get isDate() {\n      return Boolean(self.timeformat) || (self.timedisplayformat && /[a-zA-Z]/.test(self.timedisplayformat[0]));\n    },\n\n    get keyColumn() {\n      // for virtual column use just an uniq random name to not overlap with other column names\n      return (self.timecolumn || \"#@$\").toLowerCase();\n    },\n\n    get parseTimeFn() {\n      return self.timeformat && self.timecolumn ? d3.timeParse(self.timeformat) : Number;\n    },\n\n    parseTime(time) {\n      const parse = self.parseTimeFn;\n      return +parse(time);\n    },\n\n    get dataObj() {\n      if (!self.valueLoaded || !self.data) return null;\n      let data = self.data;\n      if (!self.timecolumn) {\n        const justAnyColumn = Object.values(data)[0];\n        const indices = Array.from({ length: justAnyColumn.length }, (_, i) => i);\n        data = { ...data, [self.keyColumn]: indices };\n      } else if (self.timeformat) {\n        const timestamps = data[self.keyColumn].map(self.parseTime);\n        data = { ...data, [self.keyColumn]: timestamps };\n      }\n      return data;\n    },\n\n    get dataHash() {\n      const raw = self.dataObj;\n      const { keyColumn } = self;\n      if (!raw) return null;\n      const keys = Object.keys(raw);\n      const data = [];\n\n      for (let key of keys) {\n        for (let i = 0; i < raw[key].length; i++) {\n          if (!data[i]) {\n            data[i] = { [key]: raw[key][i] };\n          } else {\n            data[i][key] = raw[key][i];\n          }\n          if (!self.timecolumn) data[i][keyColumn] = i;\n        }\n      }\n      return data;\n    },\n\n    get slicesCount() {\n      return 10;\n    },\n\n    get dataSlices() {\n      // @todo it should make it `computed` automatically\n      if (self.slices) return self.slices;\n      const count = self.slicesCount;\n      const data = self.dataHash;\n      const slice = Math.floor(data.length / count);\n      const slices = [];\n\n      for (let i = 0; i < count - 1; i++) {\n        slices[i] = data.slice(slice * i, slice * i + slice + 1);\n      }\n      slices.push(data.slice(slice * (count - 1)));\n      self.slices = slices;\n      return slices;\n    },\n\n    // range of times or numerical indices\n    get keysRange() {\n      const keys = self.dataObj?.[self.keyColumn];\n      if (!keys) return [];\n      return [keys[0], keys[keys.length - 1]];\n    },\n\n    get persistentValues() {\n      return {\n        brushRange: self.brushRange,\n        initialRange: self.initialRange,\n        // @todo as usual for rerender\n        scale: self.scale + 0.0001,\n      };\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states ? states.filter(s => s.isSelected && getType(s).name === \"TimeSeriesLabelsModel\") : null;\n    },\n\n    formatTime(time) {\n      if (!self._format) {\n        const { timedisplayformat: format, isDate } = self;\n        if (format === \"date\") self._format = formatTrackerTime;\n        else if (format) self._format = isDate ? d3.timeFormat(format) : d3.format(format);\n        else self._format = String;\n      }\n      return self._format(time);\n    },\n  }))\n\n  .actions(self => ({\n    setData(data) {\n      self.data = data;\n      self.valueLoaded = true;\n    },\n\n    setColumnNames(headers) {\n      self.headers = headers;\n    },\n\n    setZoomedRange(range) {\n      self.zoomedRange = range;\n    },\n\n    setScale(scale) {\n      self.scale = scale;\n    },\n\n    updateView() {\n      self._needsUpdate = self._needsUpdate + 1;\n    },\n\n    scrollToRegion(r) {\n      const range = [...self.brushRange];\n      if (r.start >= range[0] && r.end <= range[1]) return;\n      const currentSize = range[1] - range[0];\n      const regionSize = r.end - r.start;\n      const desiredSize = regionSize * 1.5;\n      const gap = (desiredSize - regionSize) / 2;\n      if (currentSize < desiredSize) {\n        const extend = (desiredSize - currentSize) / 2;\n        range[0] -= extend;\n        range[1] += extend;\n      }\n      // just move without resize\n      if (r.start < range[0]) {\n        range[1] -= range[0] - (r.start - gap);\n        range[0] = r.start - gap;\n      }\n      if (r.end > range[1]) {\n        range[0] += r.end + gap - range[1];\n        range[1] = r.end + gap;\n      }\n      // constrain to domain\n      range[0] = Math.max(self.keysRange[0], range[0]);\n      range[1] = Math.min(self.keysRange[1], range[1]);\n      // @todo dirty hack to trigger rerender, rewrite\n      self.updateTR(range, self.scale + 0.0001);\n    },\n\n    updateTR(tr, scale = 1) {\n      if (tr === null) return;\n\n      self.initialRange = tr;\n      self.brushRange = tr;\n      self.setZoomedRange(tr[1] - tr[0]);\n      self.setScale(scale);\n      self.updateView();\n    },\n\n    throttledRangeUpdate() {\n      return throttle(self.updateTR, 100);\n    },\n\n    fromStateJSON(obj, fromModel) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (\"timeserieslabels\" in obj.value) {\n        const states = restoreNewsnapshot(fromModel);\n        states.fromStateJSON(obj);\n\n        self.createRegion(obj.value.start, obj.value.end, [states]);\n\n        self.updateView();\n      }\n    },\n\n    addRegion(start, end, predefinedStates) {\n      const states = self.getAvailableStates();\n      if (states.length === 0) return;\n      const control = states[0];\n      const labels = { [control.valueType]: control.selectedValues() };\n\n      // const r = self.createRegion(start, end, clonedStates);\n      const r = self.completion.createResult({ start, end, instant: start === end }, labels, control, self);\n\n      return r;\n    },\n\n    regionChanged(timerange, i, activeStates) {\n      const r = self.regs[i];\n      let needUpdate = false;\n\n      if (!r) {\n        self.addRegion(timerange.start, timerange.end, activeStates);\n        needUpdate = true;\n      } else {\n        needUpdate = r.start !== timerange.start || r.end !== timerange.end;\n        r.updateRegion(timerange.start, timerange.end);\n      }\n      needUpdate && self.updateView();\n    },\n\n    async preloadValue(store) {\n      const dataObj = store.task.dataObj;\n\n      if (self.valuetype !== \"url\") {\n        if (self.value) {\n          self.setData(dataObj[idFromValue(self.value)]);\n        } else {\n          self.setData(dataObj);\n        }\n        return;\n      }\n\n      if (!self.value) {\n        const message = `Attribute <b>value</b> for <b>${self.name}</b> should be provided when <b>valuetype=\"url\"</b>`;\n        store.completionStore.addErrors([errorBuilder.generalError(message)]);\n        return;\n      }\n      const url = dataObj[idFromValue(self.value)];\n      if (!url || typeof url !== \"string\") {\n        const message = `Cannot find url in <b>${idFromValue(self.value)}</b> field of your task`;\n        store.completionStore.addErrors([errorBuilder.generalError(message)]);\n        return;\n      }\n      let text = \"\";\n      let cors = false;\n      let res;\n\n      try {\n        res = await fetch(url);\n        if (!res.ok) {\n          if (res.status === 400) {\n            store.completionStore.addErrors([\n              errorBuilder.loadingError(`${res.status} ${res.statusText}`, url, self.value, messages.ERR_LOADING_S3),\n            ]);\n            return;\n          }\n          throw new Error(`${res.status} ${res.statusText}`);\n        }\n        text = await res.text();\n      } catch (e) {\n        let error = e;\n        if (!res) {\n          try {\n            res = await fetch(url, { mode: \"no-cors\" });\n            if (!res.ok && res.status === 0) cors = true;\n          } catch (e) {\n            error = e;\n          }\n        }\n        store.completionStore.addErrors([\n          errorBuilder.loadingError(error, url, self.value, cors ? messages.ERR_LOADING_CORS : undefined),\n        ]);\n        return;\n      }\n\n      try {\n        let data = tryToParseJSON(text);\n        let headers = [];\n        if (!data) {\n          let separator = self.sep;\n          if (separator?.length > 1) {\n            const aliases = { tab: \"\\t\", \"\\\\t\": \"\\t\", space: \" \", auto: \"auto\", comma: \",\", dot: \".\" };\n            separator = aliases[separator] || separator[0];\n          }\n          [data, headers] = parseCSV(text, separator);\n        }\n        self.setData(data);\n        self.setColumnNames(headers);\n        self.updateValue(store);\n      } catch (e) {\n        const message = `Problems with parsing CSV: ${e?.message || e}<br>URL: ${url}`;\n        store.completionStore.addErrors([errorBuilder.generalError(message)]);\n      }\n    },\n\n    async updateValue(store) {\n      if (!self.dataObj) {\n        await self.preloadValue(store);\n      }\n      const data = self.dataObj;\n      if (!data) return;\n      const times = data[self.keyColumn];\n      if (!times) {\n        const message = [\n          `<b>${self.keyColumn}</b> not found in data.`,\n          `Use <b>valueType=\"url\"</b> for data loading or column index for headless csv`,\n        ].join(\" \");\n        store.completionStore.addErrors([errorBuilder.generalError(message)]);\n        return;\n      }\n      // if current view already restored by PersistentState\n      if (self.brushRange.length) return;\n      self.updateTR([times[0], times[times.length >> 2]]);\n    },\n\n    onHotKey() {},\n  }));\n\n// Baselines are the dotted average lines displayed on the chart\n// In this case these are separately styled\n\nconst baselineStyles = {\n  speed: {\n    stroke: \"steelblue\",\n    opacity: 0.5,\n    width: 0.25,\n  },\n  power: {\n    stroke: \"green\",\n    opacity: 0.5,\n    width: 0.25,\n  },\n};\n\nfunction useWidth() {\n  const [width, setWidth] = React.useState(840);\n  const [node, setNode] = React.useState(null);\n\n  const ref = React.useCallback(node => {\n    setNode(node);\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (node) {\n      const measure = () =>\n        // window.requestAnimationFrame(() =>\n        setWidth(node.offsetWidth);\n      // );\n      measure();\n\n      window.addEventListener(\"resize\", measure);\n\n      return () => {\n        window.removeEventListener(\"resize\", measure);\n      };\n    }\n  }, [node]);\n\n  return [ref, width, node];\n}\n\n// class TimeSeriesOverviewD3 extends React.Component {\nconst Overview = observer(({ item, data, series, range, forceUpdate }) => {\n  const regions = item.regs;\n  const [ref, fullWidth, node] = useWidth();\n\n  const focusHeight = 60;\n  const { margin, keyColumn: idX } = item;\n  const width = fullWidth - margin.left - margin.right;\n  // const data = store.task.dataObj;\n  let keys = item.children.map(c => c.columnName);\n  if (item.overviewchannels) {\n    const channels = item.overviewchannels\n      .toLowerCase()\n      .split(\",\")\n      .map(name => (/^\\d+$/.test(name) ? item.headers[name] : name))\n      .filter(ch => keys.includes(ch));\n    if (channels.length) keys = channels;\n  }\n  // const series = data[idX];\n  const minRegionWidth = 2;\n\n  const focus = React.useRef();\n  const gRegions = React.useRef();\n  const gChannels = React.useRef();\n  const gAxis = React.useRef();\n  const gb = React.useRef();\n\n  const scale = item.isDate ? d3.scaleTime() : d3.scaleLinear();\n  const x = scale.domain(d3.extent(data[idX])).range([0, width]);\n\n  const upd = React.useCallback(item.throttledRangeUpdate(), []);\n\n  const defaultSelection = [0, width >> 2];\n  const prevBrush = React.useRef(defaultSelection);\n  const MIN_OVERVIEW = 10;\n\n  function brushed() {\n    if (d3.event.selection && !checkD3EventLoop(\"brush\") && !checkD3EventLoop(\"wheel\")) {\n      let [x1, x2] = d3.event.selection;\n      const prev = prevBrush.current;\n      const overviewWidth = x2 - x1;\n      let start = +x.invert(x1);\n      let end = +x.invert(x2);\n      // if overview is left intact do nothing\n      if (prev[0] === x1 && prev[1] === x2) {\n      }\n      // if overview was moved; precision comparison for floats\n      else if (prev[0] !== x1 && prev[1] !== x2 && Math.abs(overviewWidth - MIN_OVERVIEW) < 0.001) {\n        const mid = (start + end) / 2;\n        start = mid - item.zoomedRange / 2;\n        end = mid + item.zoomedRange / 2;\n        // if overview was resized\n      } else if (overviewWidth < MIN_OVERVIEW) {\n        if (prev[0] === x1) {\n          x2 = Math.min(width, x1 + MIN_OVERVIEW);\n        } else if (prev[1] === x2) {\n          x1 = Math.max(0, x2 - MIN_OVERVIEW);\n        }\n        // change the data range, but keep min-width for overview\n        gb.current.call(brush.move, [x1, x2]);\n      }\n      prevBrush.current = [x1, x2];\n      upd([start, end]);\n    }\n  }\n\n  function brushended() {\n    if (!d3.event.selection) {\n      // move selection on click; try to preserve it's width\n      const center = d3.mouse(this)[0];\n      const range = item.brushRange.map(x);\n      const half = (range[1] - range[0]) >> 1;\n      let moved = [center - half, center + half];\n      if (moved[0] < 0) moved = [0, half * 2];\n      if (moved[1] > width) moved = [width - half * 2, width];\n      gb.current.call(brush.move, moved);\n    }\n  }\n\n  const brush = d3\n    .brushX()\n    .extent([\n      [0, 0],\n      [width, focusHeight],\n    ])\n    .on(\"brush\", brushed)\n    .on(\"end\", brushended);\n\n  const drawPath = key => {\n    const channel = item.children.find(c => c.columnName === key);\n    const color = channel ? channel.strokecolor : \"steelblue\";\n    const y = d3\n      .scaleLinear()\n      .domain([d3.min(data[key]), d3.max(data[key])])\n      .range([focusHeight - margin.max, margin.min]);\n\n    gChannels.current\n      .append(\"path\")\n      .datum(sparseValues(series, getOptimalWidth()))\n      .attr(\"class\", \"channel\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", color)\n      .attr(\n        \"d\",\n        d3\n          .line()\n          .y(d => y(d[key]))\n          .defined(d => d[idX])\n          .x(d => x(d[idX])),\n      );\n  };\n\n  const drawRegions = ranges => {\n    const rSelection = gRegions.current.selectAll(\".region\").data(ranges);\n    rSelection\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"region\")\n      .merge(rSelection)\n      .attr(\"y\", 0)\n      .attr(\"height\", focusHeight)\n      .attr(\"x\", r => x(r.start))\n      .attr(\"width\", r => Math.max(minRegionWidth, x(r.end) - x(r.start)))\n      .attr(\"fill\", r => getRegionColor(r, r.selected ? 0.8 : 0.3));\n    rSelection.exit().remove();\n  };\n\n  const drawAxis = () => {\n    gAxis.current.call(\n      d3\n        .axisBottom(x)\n        .ticks(width / 80)\n        .tickSizeOuter(0),\n    );\n  };\n\n  React.useEffect(() => {\n    if (!node) return;\n\n    focus.current = d3\n      .select(node)\n      .append(\"svg\")\n      .attr(\"viewBox\", [0, 0, width + margin.left + margin.right, focusHeight + margin.bottom])\n      .style(\"display\", \"block\")\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",0)\");\n\n    gAxis.current = focus.current.append(\"g\").attr(\"transform\", `translate(0,${focusHeight})`);\n\n    gChannels.current = focus.current.append(\"g\").attr(\"class\", \"channels\");\n\n    gRegions.current = focus.current.append(\"g\").attr(\"class\", \"regions\");\n\n    gb.current = focus.current\n      .append(\"g\")\n      .call(brush)\n      .call(brush.move, defaultSelection);\n    // give a bit more space for brush moving\n    gb.current.select(\".handle--w\").style(\"transform\", \"translate(-1px, 0)\");\n    gb.current.select(\".handle--e\").style(\"transform\", \"translate(1px, 0)\");\n  }, [node]);\n\n  React.useEffect(() => {\n    if (node) {\n      d3.select(node)\n        .selectAll(\"svg\")\n        .attr(\"viewBox\", [0, 0, width + margin.left + margin.right, focusHeight + margin.bottom]);\n\n      gChannels.current.selectAll(\"path\").remove();\n      for (let key of keys) drawPath(key);\n\n      drawAxis();\n      // gb.current.selectAll(\"*\").remove();\n      gb.current.call(brush).call(brush.move, item.brushRange.map(x));\n    }\n  }, [width, node]);\n\n  // redraw overview on zoom\n  React.useEffect(() => {\n    if (!gb.current) return;\n    const range = item.brushRange.map(x);\n    if (range[1] - range[0] < MIN_OVERVIEW) {\n      const mid = (range[1] + range[0]) / 2;\n      range[0] = Math.max(0, mid - MIN_OVERVIEW / 2);\n      range[1] = Math.min(width, mid + MIN_OVERVIEW / 2);\n    }\n    prevBrush.current = range;\n    gb.current.call(brush.move, range);\n  }, [item.scale]); // the only parameter changes on zoom only\n\n  React.useEffect(() => {\n    node && drawRegions(regions);\n  });\n\n  item.regs.map(r => fixMobxObserve(r.start, r.end, r.selected, r.style?.fillcolor));\n\n  return <div className=\"htx-timeseries-overview\" ref={ref} />;\n});\n\nconst HtxTimeSeriesViewRTS = ({ store, item }) => {\n  console.log(\"TS\", item.brushRange, item);\n  const ref = React.createRef();\n\n  React.useEffect(() => {\n    if (item && item.brushRange.length) {\n      item._nodeReference = ref.current;\n    }\n  }, [item, ref]);\n\n  // the last thing updated during initialisation\n  if (!item.brushRange.length || !item.data) return null;\n\n  return (\n    <div ref={ref} className=\"htx-timeseries\">\n      <ObjectTag item={item}>\n        {Tree.renderChildren(item)}\n        <Overview data={item.dataObj} series={item.dataHash} item={item} range={item.brushRange} />\n      </ObjectTag>\n    </div>\n  );\n};\n\nconst TimeSeriesModel = types.compose(\"TimeSeriesModel\", ObjectBase, PersistentStateMixin, TagAttrs, Model);\nconst HtxTimeSeries = inject(\"store\")(observer(HtxTimeSeriesViewRTS));\n\nRegistry.addTag(\"timeseries\", TimeSeriesModel, HtxTimeSeries);\nRegistry.addObjectType(TimeSeriesModel);\n\nexport { TimeSeriesModel, HtxTimeSeries };\n","import { types } from \"mobx-state-tree\";\n\nimport InfoModal from \"../components/Infomodal/Infomodal\";\n\n/**\n * Wrapper of Control item\n */\nconst LabelMixin = types.model(\"LabelMixin\").actions(self => ({\n  /**\n   * Usage check of selected controls before send completion to server\n   */\n  beforeSend() {\n    const names = self.selectedValues();\n\n    if (names && self.type === self._type) {\n      self.unselectAll();\n    }\n  },\n\n  // copy state from another Labels object\n  copyState(labels) {\n    // self.unselectAll();\n    labels.selectedValues().forEach(l => {\n      self.findLabel(l).setSelected(true);\n    });\n  },\n\n  fromStateJSON(obj, fromModel) {\n    self.unselectAll();\n\n    const objectType = obj.value[self._type];\n\n    if (!objectType) {\n      InfoModal.error(`Error with ${self._type}.`);\n      return;\n    }\n\n    if (obj.id) self.pid = obj.id;\n\n    objectType.forEach(obj => {\n      const findedObj = self.findLabel(obj);\n\n      if (!findedObj) {\n        InfoModal.error(`Error with ${self._type}. Not found: ` + objectType);\n        return;\n      }\n\n      findedObj.setSelected(true);\n    });\n  },\n}));\n\nexport default LabelMixin;\n","import { types } from \"mobx-state-tree\";\n\nimport Tree from \"../core/Tree\";\n\nconst SelectedModelMixin = types\n  .model()\n  .views(self => ({\n    get tiedChildren() {\n      return Tree.filterChildrenOfType(self, self._child);\n    },\n\n    get selectedLabels() {\n      return self.tiedChildren.filter(c => c.selected === true);\n    },\n\n    getSelectedColor() {\n      // return first selected label color\n      const sel = self.tiedChildren.find(c => c.selected === true);\n      return sel && sel.background;\n    },\n\n    get selectedColor() {\n      // return first selected label color\n      const sel = self.tiedChildren.find(c => c.selected === true);\n      return sel && sel.background;\n    },\n\n    get isSelected() {\n      return self.selectedLabels.length > 0;\n    },\n\n    // right now this is duplicate code from the above and it's done for clarity\n    get holdsState() {\n      return self.selectedLabels.length > 0;\n    },\n\n    selectedValues() {\n      return self.selectedLabels.map(c => (c.alias ? c.alias : c.value));\n    },\n\n    // return labels that are selected and have an alias only\n    get selectedAliases() {\n      return self.selectedLabels.filter(c => c.alias).map(c => c.alias);\n    },\n\n    getSelectedString(joinstr = \" \") {\n      return self.selectedValues().join(joinstr);\n    },\n\n    findLabel(value) {\n      return self.tiedChildren.find(c => c.alias === value || c.value === value);\n    },\n  }))\n  .actions(self => ({\n    /**\n     * Get current color from Label settings\n     */\n    unselectAll() {\n      self.tiedChildren.forEach(c => c.setSelected(false));\n    },\n\n    checkMaxUsages() {\n      const list = self.tiedChildren.filter(c => !c.canBeUsed());\n      if (list.length) list.forEach(c => c.setSelected(false));\n      return list;\n    },\n\n    selectFirstVisible() {\n      const f = self.tiedChildren.find(c => c.visible);\n      f && f.toggleSelected();\n\n      return f;\n    },\n\n    /**\n     * Change states of tags according to values from result\n     * @param {string|string[]} value\n     */\n    updateFromResult(value) {\n      self.unselectAll();\n      if (!value) return;\n      const values = Array.isArray(value) ? value : [value];\n      values.map(v => self.findLabel(v)).forEach(label => label.setSelected(true));\n    },\n  }));\n\nexport default SelectedModelMixin;\n","import { types } from \"mobx-state-tree\";\n\nconst ControlBase = types.model({}).views(self => ({\n  // historically two \"types\" were used and we should keep that backward compatibility:\n  // 1. name of control tag for describing labeled region;\n  // 2. label type to attach corresponding value to this region.\n  // usually they are the same, but with some problems:\n  // a. for hypertextlabels label type should be \"htmllabels\";\n  // original type are overwritten by Tree#buildData with real tag name,\n  // so _type was introduced to contain desired result type;\n  // b. but for textarea they differ from each other: \"textarea\" and \"text\".\n  // so now there is simple way to distinguish and overwrite them via two methods:\n  get resultType() {\n    return self.type;\n  },\n\n  // and\n  get valueType() {\n    return self.type;\n  },\n}));\n\nexport default ControlBase;\n","import { types, getRoot } from \"mobx-state-tree\";\n\nimport * as Tools from \"../../tools\";\nimport Registry from \"../../core/Registry\";\nimport ControlBase from \"./Base\";\n\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n  strokewidth: types.optional(types.string, \"15\"),\n});\n\nconst Model = types\n  .model({\n    type: \"brush\",\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      const brush = Tools.Brush.create();\n      const erase = Tools.Erase.create();\n      // const zoom  = Tools.Zoom.create();\n\n      brush._control = self;\n      erase._control = self;\n\n      self.tools = {\n        brush: brush,\n        erase: erase,\n        // zoom: zoom\n      };\n    },\n  }));\n\nconst BrushModel = types.compose(\"BrushModel\", TagAttrs, Model, ControlBase);\n\nconst HtxView = () => {\n  return null;\n};\n\nRegistry.addTag(\"brush\", BrushModel, HtxView);\n\nexport { HtxView, BrushModel };\n","import { types } from \"mobx-state-tree\";\n\nconst RequiredMixin = types\n  .model({\n    required: types.optional(types.boolean, false),\n    requiredmessage: types.maybeNull(types.string),\n  })\n  .actions(self => ({\n    validate() {\n      if (self.perregion) {\n        // validating when choices labeling is done per region,\n        // for example choice may be required to be selected for\n        // every bbox\n        const objectTag = self.completion.names.get(self.toname);\n\n        for (let reg of objectTag.regs) {\n          const s = reg.results.find(s => s.type === self.resultType);\n\n          if (self.whenlabelvalue && !reg.hasLabel(self.whenlabelvalue)) {\n            return true;\n          }\n\n          if (!s?.hasValue) {\n            self.completion.selectArea(reg);\n            self.requiredModal();\n\n            return false;\n          }\n        }\n      } else {\n        // validation when its classifying the whole object\n        if (!self.holdsState) {\n          self.requiredModal();\n          return false;\n        }\n      }\n\n      return true;\n    },\n  }));\n\nexport default RequiredMixin;\n","import ColorScheme from \"pleasejs\";\nimport React from \"react\";\nimport { Tag } from \"antd\";\nimport { getRoot, types } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\n\nimport Hint from \"../../components/Hint/Hint\";\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\nimport Constants from \"../../core/Constants\";\nimport Types from \"../../core/Types\";\nimport Utils from \"../../utils\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { runTemplate } from \"../../core/Template\";\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\nimport { customTypes } from \"../../core/CustomTypes\";\n\n/**\n * Label tag represents a single label\n * @example\n * <View>\n *   <Labels name=\"type\" toName=\"txt-1\">\n *     <Label alias=\"B\" value=\"Brand\" />\n *     <Label alias=\"P\" value=\"Product\" />\n *   </Labels>\n *   <Text name=\"txt-1\" value=\"$text\" />\n * </View>\n * @name Label\n * @param {string} value                    - value of the label\n * @param {boolean} [selected=false]        - if this label should be preselected\n * @param {number} [maxUsages]              - maximum available usages\n * @param {string} [hotkey]                 - hotkey, if not specified then will be automatically generated\n * @param {string} [alias]                  - label alias\n * @param {boolean} [showAlias=false]       - show alias inside label text\n * @param {string} [aliasStyle=opacity:0.6] - alias CSS style\n * @param {string} [size=medium]            - size of text in the label\n * @param {string} [background]             - background color of an active label\n * @param {string} [selectedColor]          - color of text in an active label\n * @param {symbol|word} [granularity]       - control per symbol or word selection (only for Text)\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  selected: types.optional(types.boolean, false),\n  maxusages: types.maybeNull(types.string),\n  alias: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n  showalias: types.optional(types.boolean, false),\n  aliasstyle: types.optional(types.string, \"opacity: 0.6\"),\n  size: types.optional(types.string, \"medium\"),\n  background: types.optional(customTypes.color, Constants.LABEL_BACKGROUND),\n  selectedcolor: types.optional(customTypes.color, \"#ffffff\"),\n  granularity: types.maybeNull(types.enumeration([\"symbol\", \"word\", \"sentence\", \"paragraph\"])),\n  groupcancontain: types.maybeNull(types.string),\n  // childrencheck: types.optional(types.enumeration([\"any\", \"all\"]), \"any\")\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"label\",\n    visible: types.optional(types.boolean, true),\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get maxUsages() {\n      return Number(self.maxusages || self.parent.maxusages);\n    },\n\n    usedAlready() {\n      const regions = self.completion.regionStore.regions;\n      // count all the usages among all the regions\n      const used = regions.reduce((s, r) => s + r.hasLabel(self.value), 0);\n      return used;\n    },\n\n    canBeUsed() {\n      if (!self.maxUsages) return true;\n      return self.usedAlready() < self.maxUsages;\n    },\n\n    get parent() {\n      return Types.getParentOfTypeString(self, [\n        \"LabelsModel\",\n        \"EllipseLabelsModel\",\n        \"RectangleLabelsModel\",\n        \"PolygonLabelsModel\",\n        \"KeyPointLabelsModel\",\n        \"BrushLabelsModel\",\n        \"HyperTextLabelsModel\",\n        \"TimeSeriesLabelsModel\",\n      ]);\n    },\n  }))\n  .actions(self => ({\n    /**\n     * Select label\n     */\n    toggleSelected() {\n      // here we check if you click on label from labels group\n      // connected to the region on the same object tag that is\n      // right now highlighted, and if that region is readonly\n      const region = self.completion.highlightedNode;\n      const sameObject = region && region.parent.name === self.parent.toname;\n      if (region && region.readonly === true && sameObject) return;\n\n      // one more check if that label can be selected\n      if (!self.completion.editable) return;\n\n      // don't select if it can not be used\n      if (!self.selected && !self.canBeUsed()) {\n        InfoModal.warning(`You can't use ${self.value} more than ${self.maxUsages} time(s)`);\n        return;\n      }\n\n      const labels = self.parent;\n\n      // check if there is a region selected and if it is and user\n      // is changing the label we need to make sure that region is\n      // not going to endup without the label(s) at all\n      if (region && sameObject) {\n        if (labels.selectedLabels.length === 1 && self.selected) return;\n      }\n\n      // if we are going to select label and it would be the first in this labels group\n      if (!labels.selectedLabels.length && !self.selected) {\n        // unselect labels from other groups of labels connected to this obj\n        self.completion.toNames\n          .get(labels.toname)\n          .filter(tag => tag.type && tag.type.endsWith(\"labels\") && tag.name !== labels.name)\n          .forEach(tag => tag.unselectAll && tag.unselectAll());\n\n        // unselect other tools if they exist and selected\n        const tool = Object.values(self.parent.tools || {})[0];\n        if (tool && tool.manager.findSelectedTool() !== tool) {\n          tool.manager.unselectAll();\n          tool.setSelected(true);\n        }\n      }\n\n      /**\n       * Multiple\n       */\n      if (!labels.shouldBeUnselected) {\n        self.setSelected(!self.selected);\n      }\n\n      /**\n       * Single\n       */\n      if (labels.shouldBeUnselected) {\n        /**\n         * Current not selected\n         */\n        if (!self.selected) {\n          labels.unselectAll();\n          self.setSelected(!self.selected);\n        } else {\n          labels.unselectAll();\n        }\n      }\n\n      region && sameObject && region.setValue(self.parent);\n    },\n\n    setVisible(val) {\n      self.visible = val;\n    },\n\n    /**\n     *\n     * @param {boolean} value\n     */\n    setSelected(value) {\n      self.selected = value;\n    },\n\n    onHotKey() {\n      return self.toggleSelected();\n    },\n\n    _updateBackgroundColor(val) {\n      if (self.background === Constants.LABEL_BACKGROUND) self.background = ColorScheme.make_color({ seed: val })[0];\n    },\n\n    afterCreate() {\n      self._updateBackgroundColor(self._value || self.value);\n    },\n\n    updateValue(store) {\n      self._value = runTemplate(self.value, store.task.dataObj) || \"\";\n      self._updateBackgroundColor(self._value);\n    },\n  }));\n\nconst LabelModel = types.compose(\"LabelModel\", TagAttrs, Model, ProcessAttrsMixin);\n\nconst HtxLabelView = inject(\"store\")(\n  observer(({ item, store }) => {\n    const bg = item.background;\n    const labelStyle = {\n      borderLeftWidth: 3,\n      borderLeftColor: bg,\n      backgroundColor: item.selected ? bg : \"#e8e8e8\",\n      color: item.selected ? item.selectedcolor : \"#333333\",\n      cursor: \"pointer\",\n      margin: \"5px\",\n    };\n\n    if (!item.visible) {\n      labelStyle[\"display\"] = \"none\";\n    }\n\n    if (item.selected) {\n      labelStyle.borderTopColor = bg;\n      labelStyle.borderBottomColor = bg;\n      labelStyle.borderRightColor = bg;\n    }\n\n    return (\n      <Tag\n        onClick={ev => {\n          item.toggleSelected();\n          return false;\n        }}\n        style={labelStyle}\n        size={item.size}\n      >\n        {item._value}\n        {item.showalias === true && item.alias && (\n          <span style={Utils.styleToProp(item.aliasstyle)}>&nbsp;{item.alias}</span>\n        )}\n        {(store.settings.enableTooltips || store.settings.enableLabelTooltips) &&\n          store.settings.enableHotkeys &&\n          item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n      </Tag>\n    );\n  }),\n);\n\nRegistry.addTag(\"label\", LabelModel, HtxLabelView);\n\nexport { HtxLabelView, LabelModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport RequiredMixin from \"../../mixins/Required\";\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\nimport { LabelModel } from \"./Label\"; // eslint-disable-line no-unused-vars\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * Labels tag, create a group of labels\n * @example\n * <View>\n *   <Labels name=\"type\" toName=\"txt-1\">\n *     <Label alias=\"B\" value=\"Brand\" />\n *     <Label alias=\"P\" value=\"Product\" />\n *   </Labels>\n *   <Text name=\"txt-1\" value=\"$text\" />\n * </View>\n * @name Labels\n * @param {string} name                      - name of the element\n * @param {string} toName                    - name of the element that you want to label\n * @param {single|multiple=} [choice=single] - configure if you can select just one or multiple labels\n * @param {number} [maxUsages]               - maximum available usages\n * @param {boolean} [required=false]         - validation if label is required\n * @param {string} [requiredMessage]         - message to show if validation fails\n * @param {boolean} [showInline=true]        - show items in the same visual line\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n\n  choice: types.optional(types.enumeration([\"single\", \"multiple\"]), \"single\"),\n  maxusages: types.maybeNull(types.string),\n  showinline: types.optional(types.boolean, true),\n\n  // TODO this will move away from here\n  groupdepth: types.maybeNull(types.string),\n});\n\n/**\n * @param {boolean} showinline\n * @param {identifier} id\n * @param {string} pid\n */\nconst ModelAttrs = types.model({\n  pid: types.optional(types.string, guidGenerator),\n  type: \"labels\",\n  children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n\n  visible: types.optional(types.boolean, true),\n});\n\nconst Model = LabelMixin.views(self => ({\n  get shouldBeUnselected() {\n    return self.choice === \"single\";\n  },\n})).actions(self => ({\n  validate() {\n    const regions = self.completion.regionStore.regions;\n\n    for (let r of regions) {\n      for (let s of r.states) {\n        if (s.name === self.name) {\n          return true;\n        }\n      }\n    }\n\n    InfoModal.warning(self.requiredmessage || `Labels \"${self.name}\" were not used.`);\n    return false;\n  },\n}));\n\nconst LabelsModel = types.compose(\n  \"LabelsModel\",\n  ModelAttrs,\n  TagAttrs,\n  Model,\n  RequiredMixin,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n  ControlBase,\n);\n\nconst HtxLabels = observer(({ item }) => {\n  const style = {\n    marginTop: \"1em\",\n    marginBottom: \"1em\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    flexFlow: \"wrap\",\n    marginLeft: \"-5px\",\n  };\n\n  if (!item.showinline) {\n    style[\"flexDirection\"] = \"column\";\n    style[\"alignItems\"] = \"flex-start\";\n    style[\"marginTop\"] = \"0\";\n  }\n\n  if (!item.visible) {\n    style[\"display\"] = \"none\";\n  }\n\n  return <div style={style}>{Tree.renderChildren(item)}</div>;\n});\n\nRegistry.addTag(\"labels\", LabelsModel, HtxLabels);\n\nexport { HtxLabels, LabelsModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Types from \"../../core/Types\";\nimport { BrushModel } from \"./Brush\";\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport ControlBase from \"./Base\";\n\n/**\n * BrushLabels tag creates segmented labeling\n * @example\n * <View>\n *   <BrushLabels name=\"labels\" toName=\"image\">\n *     <Label value=\"Person\" />\n *     <Label value=\"Animal\" />\n *   </BrushLabels>\n *   <Image name=\"image\" value=\"$image\" />\n * </View>\n * @name BrushLabels\n * @param {string} name   - name of the element\n * @param {string} toName - name of the image to label\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n});\n\nconst Validation = types.model({\n  controlledTags: Types.unionTag([\"Image\"]),\n});\n\nconst ModelAttrs = types.model(\"BrushLabelsModel\", {\n  type: \"brushlabels\",\n  children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n});\n\nconst BrushLabelsModel = types.compose(\n  \"BrushLabelsModel\",\n  LabelsModel,\n  ModelAttrs,\n  BrushModel,\n  TagAttrs,\n  Validation,\n  LabelMixin,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n  ControlBase,\n);\n\nconst HtxBrushLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"brushlabels\", BrushLabelsModel, HtxBrushLabels);\n\nexport { HtxBrushLabels, BrushLabelsModel };\n","import { types } from \"mobx-state-tree\";\n\n/*\n * Per Region Mixin\n */\nconst PerRegionMixin = types\n  .model({\n    perregion: types.optional(types.boolean, false),\n    whenlabelvalue: types.maybeNull(types.string),\n  })\n  .views(self => ({\n    perRegionVisible() {\n      if (!self.perregion) return true;\n\n      const region = self.completion.highlightedNode;\n      if (!region) {\n        // no region is selected return hidden\n        return false;\n      }\n      // check if selected region is the one this tag is connected to\n      if (region.parent.name !== self.toname) return false;\n\n      // we may need to check for specific value\n      if (self.whenlabelvalue !== null && self.whenlabelvalue !== undefined)\n        return region.hasLabel(self.whenlabelvalue);\n\n      return true;\n    },\n  }))\n  .actions(self => ({}));\n\nexport default PerRegionMixin;\n","import { types } from \"mobx-state-tree\";\n\n/*\n * Per Region Mixin\n */\nconst VisibilityMixin = types\n  .model({\n    visiblewhen: types.maybeNull(types.string),\n    whentagname: types.maybeNull(types.string),\n    whenchoicevalue: types.maybeNull(types.string),\n    whenlabelvalue: types.maybeNull(types.string),\n  })\n  .views(self => ({\n    get isVisible() {\n      if (self.visiblewhen) {\n        const fns = {\n          \"region-selected\": ({ tagName, labelValue }) => {\n            const area = self.completion.highlightedNode;\n\n            if (!area || (tagName && area.labeling?.from_name.name !== tagName)) {\n              return false;\n            }\n\n            if (labelValue) return labelValue.split(\",\").some(v => area.hasLabel(v));\n\n            return true;\n          },\n\n          \"choice-selected\": ({ tagName, choiceValue }) => {\n            if (!tagName) {\n              for (let choices of self.completion.names.values()) {\n                if (choices.type === \"choices\" && choices.selectedValues && choices.selectedValues().length) {\n                  return true;\n                }\n              }\n              return false;\n            }\n\n            const tag = self.completion.names.get(tagName);\n\n            if (!tag) return false;\n\n            if (choiceValue) {\n              const choicesSelected = choiceValue\n                .split(\",\")\n                .map(v => tag.findLabel(v))\n                .some(c => c && c.selected);\n              return choicesSelected;\n            }\n\n            return tag.isSelected;\n          },\n\n          \"no-region-selected\": ({ tagName }) => !self.completion.highlightedNode,\n        };\n\n        if (Object.keys(fns).includes(self.visiblewhen)) {\n          const res = fns[self.visiblewhen]({\n            tagName: self.whentagname,\n            choiceValue: self.whenchoicevalue,\n            labelValue: self.whenlabelvalue,\n          });\n\n          return res !== false;\n        }\n      }\n\n      return true;\n    },\n  }))\n  .actions(self => ({}));\n\nexport default VisibilityMixin;\n","import React, { Component } from \"react\";\nimport { Checkbox, Radio, Form } from \"antd\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\n\nimport Hint from \"../../components/Hint/Hint\";\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\nimport { ChoicesModel } from \"./Choices\";\n\n/**\n * Choice tag represents a single choice\n *\n * @example\n * <View>\n *   <Choices name=\"gender\" toName=\"txt-1\" choice=\"single\">\n *     <Choice value=\"Male\" />\n *     <Choice value=\"Female\" />\n *   </Choices>\n *   <Text name=\"txt-1\" value=\"John went to see Marry\" />\n * </View>\n * @name Choice\n * @param {string} value       - choice value\n * @param {boolean} [selected] - if this label should be preselected\n * @param {string} [alias]     - alias for the label\n * @param {style} [style]      - css style of the checkbox element\n * @param {string} [hotkey]    - hotkey\n */\nconst TagAttrs = types.model({\n  selected: types.optional(types.boolean, false),\n  alias: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n  style: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    type: \"choice\",\n    visible: types.optional(types.boolean, true),\n    _value: types.optional(types.string, \"\"),\n    // hierarchical Choices used for Taxonomy\n    children: Types.unionArray([\"choice\"]),\n  })\n  .views(self => ({\n    get isCheckbox() {\n      const choice = self.parent.choice;\n      return choice === \"multiple\" || choice === \"single\";\n    },\n\n    get isSelect() {\n      console.log(self.parent.layout);\n      return self.parent.layout === \"select\";\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get parent() {\n      return getParentOfType(self, ChoicesModel);\n    },\n\n    // to conform Label's maxUsages check\n    canBeUsed() {\n      return true;\n    },\n  }))\n  .actions(self => ({\n    toggleSelected() {\n      const choices = self.parent;\n\n      choices.shouldBeUnselected && choices.resetSelected();\n\n      self.setSelected(!self.selected);\n\n      choices.updateResult();\n    },\n\n    setVisible(val) {\n      self.visible = val;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n\n    onHotKey() {\n      return self.toggleSelected();\n    },\n  }));\n\nconst ChoiceModel = types.compose(\"ChoiceModel\", TagAttrs, Model, ProcessAttrsMixin);\n\nclass HtxChoiceView extends Component {\n  render() {\n    const { item, store } = this.props;\n    let style = {};\n\n    if (item.style) style = Tree.cssConverter(item.style);\n\n    if (!item.visible) {\n      style[\"display\"] = \"none\";\n    }\n\n    const showHotkey =\n      (store.settings.enableTooltips || store.settings.enableLabelTooltips) &&\n      store.settings.enableHotkeys &&\n      item.hotkey;\n\n    const props = {\n      checked: item.selected,\n      disabled: item.parent.readonly,\n      onChange: ev => {\n        if (!item.completion.editable) return;\n        item.toggleSelected();\n        ev.nativeEvent.target.blur();\n      },\n    };\n\n    if (item.isCheckbox) {\n      const cStyle = Object.assign({ display: \"flex\", alignItems: \"center\", marginBottom: 0 }, style);\n\n      return (\n        <Form.Item style={cStyle}>\n          <Checkbox name={item._value} {...props}>\n            {item._value}\n            {showHotkey && <Hint>[{item.hotkey}]</Hint>}\n          </Checkbox>\n        </Form.Item>\n      );\n    } else {\n      return (\n        <div style={style}>\n          <Radio value={item._value} style={{ display: \"inline-block\", marginBottom: \"0.5em\" }} {...props}>\n            {item._value}\n            {showHotkey && <Hint>[{item.hotkey}]</Hint>}\n          </Radio>\n        </div>\n      );\n    }\n  }\n}\n\nconst HtxChoice = inject(\"store\")(observer(HtxChoiceView));\n\nRegistry.addTag(\"choice\", ChoiceModel, HtxChoice);\n\nexport { HtxChoice, ChoiceModel };\n","import React from \"react\";\nimport { Form, Select } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport RequiredMixin from \"../../mixins/Required\";\nimport PerRegionMixin from \"../../mixins/PerRegion\";\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport VisibilityMixin from \"../../mixins/Visibility\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\nimport { ChoiceModel } from \"./Choice\"; // eslint-disable-line no-unused-vars\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\nconst { Option } = Select;\n\n/**\n * Choices tag, create a group of choices, radio, or checkboxes. Shall\n * be used for a single or multi-class classification.\n * @example\n * <View>\n *   <Choices name=\"gender\" toName=\"txt-1\" choice=\"single-radio\">\n *     <Choice alias=\"M\" value=\"Male\" />\n *     <Choice alias=\"F\" value=\"Female\" />\n *   </Choices>\n *   <Text name=\"txt-1\" value=\"John went to see Marry\" />\n * </View>\n * @name Choices\n * @param {string} name                - name of the group\n * @param {string} toName              - name of the element that you want to label\n * @param {single|single-radio|multiple} [choice=single] - single or multi-class\n * @param {boolean} [showInline=false] - show items in the same visual line\n * @param {boolean} [required=false]   - validation if choice has been selected\n * @param {string} [requiredMessage]   - message to show if validation fails\n * @param {region-selected|choice-selected|no-region-selected} [visibleWhen] show the contents of a view when condition is true\n * @param {string} [whenTagName] narrow down visibility by name of the tag, for regions use the name of the object tag, for choices use the name of the choices tag\n * @param {string} [whenLabelValue] narrow down visibility by label value\n * @param {string} [whenChoiceValue] narrow down visibility by choice value\n * @param {boolean} [perRegion] use this tag for region labeling instead of the whole object labeling\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n\n  showinline: types.maybeNull(types.boolean),\n\n  choice: types.optional(types.enumeration([\"single\", \"single-radio\", \"multiple\"]), \"single\"),\n\n  layout: types.optional(types.enumeration([\"select\", \"inline\", \"vertical\"]), \"vertical\"),\n});\n\nconst Model = types\n  .model({\n    pid: types.optional(types.string, guidGenerator),\n\n    readonly: types.optional(types.boolean, false),\n    visible: types.optional(types.boolean, true),\n\n    type: \"choices\",\n    children: Types.unionArray([\"choice\", \"view\", \"header\", \"hypertext\"]),\n  })\n  .views(self => ({\n    get shouldBeUnselected() {\n      return self.choice === \"single\" || self.choice === \"single-radio\";\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    get serializableValue() {\n      const choices = self.selectedValues();\n      if (choices && choices.length) return { choices };\n\n      return null;\n    },\n\n    get result() {\n      if (self.perregion) {\n        const area = self.completion.highlightedNode;\n        if (!area) return null;\n\n        return self.completion.results.find(r => r.from_name === self && r.area === area);\n      }\n      return self.completion.results.find(r => r.from_name === self);\n    },\n\n    // perChoiceVisible() {\n    //     if (! self.whenchoicevalue) return true;\n\n    //     // this is a special check when choices are labeling other choices\n    //     // may need to show\n    //     if (self.whenchoicevalue) {\n    //         const choicesTag = self.completion.names.get(self.toname);\n    //         const ch = choicesTag.findLabel(self.whenchoicevalue);\n\n    //         if (ch && ch.selected)\n    //             return true;\n    //     }\n\n    //     return false;\n    // }\n  }))\n  .actions(self => ({\n    afterCreate() {\n      // TODO depricate showInline\n      if (self.showinline === true) self.layout = \"inline\";\n      if (self.showinline === false) self.layout = \"vertical\";\n    },\n\n    needsUpdate() {\n      if (self.result) self.setResult(self.result.mainValue);\n      else self.setResult([]);\n    },\n\n    requiredModal() {\n      InfoModal.warning(self.requiredmessage || `Checkbox \"${self.name}\" is required.`);\n    },\n\n    copyState(choices) {\n      choices.selectedValues().forEach(l => {\n        self.findLabel(l).setSelected(true);\n      });\n    },\n\n    // this is not labels, unselect affects result, so don't unselect on random reason\n    unselectAll() {},\n\n    updateFromResult(value) {\n      self.setResult(Array.isArray(value) ? value : [value]);\n    },\n\n    // unselect only during choice toggle\n    resetSelected() {\n      self.selectedLabels.forEach(c => c.setSelected(false));\n    },\n\n    setResult(values) {\n      self.tiedChildren.forEach(choice => choice.setSelected(values.includes(choice.alias || choice._value)));\n    },\n\n    // update result in the store with current selected choices\n    updateResult() {\n      if (self.result) {\n        self.result.area.setValue(self);\n      } else {\n        if (self.perregion) {\n          const area = self.completion.highlightedNode;\n          if (!area) return null;\n          area.setValue(self);\n        } else {\n          self.completion.createResult({}, { choices: self.selectedValues() }, self, self.toname);\n        }\n      }\n    },\n\n    toStateJSON() {\n      const names = self.selectedValues();\n\n      if (names && names.length) {\n        const toname = self.toname || self.name;\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: toname,\n          type: self.type,\n          value: {\n            choices: names,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.choices) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      self.readonly = obj.readonly;\n\n      obj.value.choices.forEach(l => {\n        const choice = self.findLabel(l);\n\n        if (!choice) throw new Error(\"No label \" + l);\n\n        choice.setSelected(true);\n      });\n    },\n  }));\n\nconst ChoicesModel = types.compose(\n  \"ChoicesModel\",\n  ControlBase,\n  TagAttrs,\n  SelectedModelMixin.props({ _child: \"ChoiceModel\" }),\n  RequiredMixin,\n  PerRegionMixin,\n  VisibilityMixin,\n  Model,\n);\n\nconst HtxChoices = observer(({ item }) => {\n  const style = { marginTop: \"1em\", marginBottom: \"1em\" };\n  const visibleStyle = item.perRegionVisible() ? {} : { display: \"none\" };\n\n  if (item.isVisible === false) {\n    visibleStyle[\"display\"] = \"none\";\n  }\n\n  return (\n    <div style={{ ...style, ...visibleStyle }}>\n      {item.layout === \"select\" ? (\n        <Select\n          style={{ width: \"100%\" }}\n          value={item.selectedLabels.map(l => l._value)}\n          mode={item.choice === \"multiple\" ? \"multiple\" : \"\"}\n          onChange={function(val, opt) {\n            if (Array.isArray(val)) {\n              item.resetSelected();\n              val.forEach(v => item.findLabel(v).setSelected(true));\n              item.updateResult();\n            } else {\n              const c = item.findLabel(val);\n              if (c) {\n                c.toggleSelected();\n              }\n            }\n          }}\n        >\n          {item.tiedChildren.map(i => (\n            <Option key={i._value} value={i._value}>\n              {i._value}\n            </Option>\n          ))}\n        </Select>\n      ) : (\n        <Form layout={item.layout}>{Tree.renderChildren(item)}</Form>\n      )}\n    </div>\n  );\n});\n\nRegistry.addTag(\"choices\", ChoicesModel, HtxChoices);\n\nexport { HtxChoices, ChoicesModel, TagAttrs };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Types from \"../../core/Types\";\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport ControlBase from \"./Base\";\n\n/**\n * HyperTextLabels tag creates labeled hyper text (HTML)\n * @example\n * <View>\n *   <HyperTextLabels name=\"labels\" toName=\"ht\">\n *     <Label value=\"Face\" />\n *     <Label value=\"Nose\" />\n *   </HyperTextLabels>\n *   <HyperText name=\"ht\" value=\"$html\" />\n * </View>\n * @name HyperTextLabels\n * @param {string} name name of the element\n * @param {string} toName name of the html element to label\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n});\n\nconst Validation = types.model({\n  controlledTags: Types.unionTag([\"HyperText\"]),\n});\n\nconst ModelAttrs = types\n  .model(\"HyperTextLabelesModel\", {\n    type: \"htmllabels\",\n    children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get serializableValue() {\n      const obj = {};\n      obj[self.resultType] = self.selectedValues();\n\n      return obj;\n    },\n\n    get resultType() {\n      return \"hypertextlabels\";\n    },\n\n    get valueType() {\n      return \"htmllabels\";\n    },\n  }));\n\nconst Composition = types.compose(\n  ControlBase,\n  LabelsModel,\n  ModelAttrs,\n  TagAttrs,\n  Validation,\n  LabelMixin,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n);\n\nconst HyperTextLabelsModel = types.compose(\"HyperTextLabelsModel\", Composition);\n\nconst HtxHyperTextLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"hypertextlabels\", HyperTextLabelsModel, HtxHyperTextLabels);\n\nexport { HtxHyperTextLabels, HyperTextLabelsModel };\n","import { types } from \"mobx-state-tree\";\n\nimport * as Tools from \"../../tools\";\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\nimport ControlBase from \"./Base\";\nimport { customTypes } from \"../../core/CustomTypes\";\n\n/**\n * KeyPoint is used to add a keypoint to an image without label selection. It's useful when you have only one label.\n * @example\n * <View>\n *   <KeyPoint name=\"kp-1\" toName=\"img-1\" />\n *   <Image name=\"img-1\" value=\"$img\" />\n * </View>\n * @name KeyPoint\n * @param {string} name                  - name of the element\n * @param {string} toName                - name of the image to label\n * @param {float=} [opacity=0.9]         - opacity of keypoint\n * @param {string=} [fillColor=#8bad00]  - keypoint fill color\n * @param {number=} [strokeWidth=1]      - width of the stroke\n * @param {string=} [stokeColor=#8bad00] - keypoint stroke color\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(customTypes.range(), \"0.9\"),\n  fillcolor: types.optional(customTypes.color, \"#8bad00\"),\n\n  strokecolor: types.optional(customTypes.color, \"#8bad00\"),\n  strokewidth: types.optional(types.string, \"1\"),\n});\n\nconst Model = types\n  .model({\n    type: \"keypoint\",\n\n    // tools: types.array(BaseTool)\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return Types.getParentOfTypeString(self, \"Completion\");\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(obj) {},\n\n    afterCreate() {\n      const kp = Tools.KeyPoint.create();\n      kp._control = self;\n\n      self.tools = { keypoint: kp };\n    },\n  }));\n\nconst KeyPointModel = types.compose(\"KeyPointModel\", TagAttrs, Model, ControlBase);\n\nconst HtxView = () => {\n  return null;\n};\n\nRegistry.addTag(\"keypoint\", KeyPointModel, HtxView);\n\nexport { HtxView, KeyPointModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Types from \"../../core/Types\";\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { KeyPointModel } from \"./KeyPoint\";\nimport ControlBase from \"./Base\";\n\n/**\n * KeyPointLabels tag\n * KeyPointLabels tag creates labeled keypoints\n * @example\n * <View>\n *   <KeyPointLabels name=\"kp-1\" toName=\"img-1\">\n *     <Label value=\"Face\" />\n *     <Label value=\"Nose\" />\n *   </KeyPointLabels>\n *   <Image name=\"img-1\" value=\"$img\" />\n * </View>\n * @name KeyPointLabels\n * @param {string} name                  - name of the element\n * @param {string} toName                - name of the image to label\n * @param {float=} [opacity=0.9]         - opacity of keypoint\n * @param {string=} [fillColor]          - keypoint fill color, default is transparent\n * @param {number=} [strokeWidth=1]      - width of the stroke\n * @param {string=} [stokeColor=#8bad00] - keypoint stroke color\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n});\n\nconst Validation = types.model({\n  controlledTags: Types.unionTag([\"Image\"]),\n});\n\nconst ModelAttrs = types\n  .model(\"KeyPointLabelesModel\", {\n    type: \"keypointlabels\",\n    children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n  }));\n\nconst Composition = types.compose(\n  LabelsModel,\n  ModelAttrs,\n  KeyPointModel,\n  TagAttrs,\n  Validation,\n  LabelMixin,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n  ControlBase,\n);\n\nconst KeyPointLabelsModel = types.compose(\"KeyPointLabelsModel\", Composition);\n\nconst HtxKeyPointLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"keypointlabels\", KeyPointLabelsModel, HtxKeyPointLabels);\n\nexport { HtxKeyPointLabels, KeyPointLabelsModel };\n","import React from \"react\";\nimport arrayMove from \"array-move\";\nimport { List } from \"antd\";\nimport { SortableContainer, SortableElement, sortableHandle } from \"react-sortable-hoc\";\nimport { observer, inject } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { variableNotation } from \"../../core/Template\";\n\nconst ListItemModel = types\n  .model({\n    backgroundColor: types.optional(types.string, \"transparent\"),\n    value: types.maybeNull(types.string),\n    _value: types.maybeNull(types.string),\n    selected: types.optional(types.boolean, false),\n    idx: types.number,\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setBG(val) {\n      self.backgroundColor = val;\n    },\n\n    setIdx(idx) {\n      self.idx = idx;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n  }));\n\n/**\n * List element, used for ranking results. Great choice for recomendation systems.\n * @example\n * <View>\n *  <HyperText value=\"$markup\"></HyperText>\n *  <List name=\"ranker\" value=\"$replies\" elementValue=\"$text\" elementTag=\"Text\" ranked=\"true\" sortedHighlightColor=\"#fcfff5\"></List>\n * </View>\n * @name List\n * @param {string} elementValue lookup key for child object\n * @param {Text|Image|Audio} elementTag element used to render children\n * @param {string} value list value\n * @param {string} name of group\n * @param {string=} sortedHighlightColor color\n * @param {string=} axis axis used for drag-n-drop\n * @param {string=} lockAxis lock axis\n */\nconst TagAttrs = types.model({\n  axis: types.optional(types.enumeration([\"x\", \"y\"]), \"y\"),\n  lockaxis: types.maybeNull(types.enumeration([\"x\", \"y\"])),\n\n  elementvalue: types.maybeNull(types.string),\n  elementtag: types.optional(types.enumeration([\"Text\", \"Image\", \"Audio\"]), \"Text\"),\n  // ranked: types.optional(types.string, \"true\"),\n  // sortable: types.optional(types.string, \"true\"),\n\n  sortedhighlightcolor: types.maybeNull(types.string),\n\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"list\",\n    update: types.optional(types.number, 1),\n\n    regions: types.array(ListItemModel),\n    // update: types.optional(types.boolean, false)\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setUpdate() {\n      self.update = self.update + 1;\n    },\n\n    addRegion(vals, idx) {\n      const reg = ListItemModel.create({\n        value: self.elementvalue,\n        idx: idx,\n        _value: variableNotation(self.elementvalue, vals[idx]),\n      });\n\n      self.regions.push(reg);\n    },\n\n    updateValue(store) {\n      const val = variableNotation(self.value, store.task.dataObj);\n\n      // in case we're in expert mode it will call updateValue\n      // on each new task loaded, therefore we need to remove\n      // previously loaded regions here\n      self.regions = [];\n      val.forEach((v, idx) => self.addRegion(val, idx));\n\n      val.forEach((v, idx) => {\n        v[\"_orig_idx\"] = idx;\n      });\n\n      self._value = val;\n      self.setUpdate();\n    },\n\n    moveItems({ oldIndex, newIndex }) {\n      if (oldIndex === newIndex) return;\n\n      if (self.sortedhighlightcolor) {\n        self.regions[oldIndex].setBG(self.sortedhighlightcolor);\n      }\n\n      self.regions[oldIndex].setSelected(true);\n\n      if (self._value) self._value = arrayMove(self._value, oldIndex, newIndex);\n\n      self.regions = arrayMove(self.regions, oldIndex, newIndex);\n      self.setUpdate();\n    },\n\n    toStateJSON() {\n      const map = {};\n\n      self._value.forEach((v, idx) => {\n        map[self.regions[idx].idx] = 1 / (1 + idx);\n      });\n\n      const ranked = Object.keys(map)\n        .sort((a, b) => a - b)\n        .map(function(v) {\n          return map[v];\n        });\n\n      const selected = [];\n      for (let i = 0; i < Object.keys(map).length; i++) {\n        selected[self.regions[i].idx] = self.regions[i].selected ? 1 : 0;\n      }\n\n      return {\n        from_name: self.name,\n        to_name: self.name,\n        value: {\n          weights: ranked,\n          selected: selected,\n        },\n      };\n    },\n\n    fromStateJSON(obj, fromModel) {\n      const ranked = [];\n      const regions = [];\n      const item_weight = {};\n\n      obj.value.weights.forEach((v, idx) => {\n        if (item_weight[v]) {\n          item_weight[v].push(idx);\n        } else {\n          item_weight[v] = [idx];\n        }\n      });\n\n      Object.keys(item_weight)\n        .sort((a, b) => b - a)\n        .forEach(v => {\n          const idxes = item_weight[v];\n          idxes.forEach(idx => {\n            regions.push(self.regions[idx]);\n            ranked.push(self._value[idx]);\n          });\n        });\n\n      regions.forEach((r, idx) => r.setIdx(idx));\n\n      self._value = ranked;\n      self.regions = regions;\n\n      // self.regions = ranked;\n      self.setUpdate();\n    },\n  }));\n\nconst ListModel = types.compose(\"ListModel\", TagAttrs, Model);\n\nconst DragHandle = sortableHandle(() => <div className=\"drag-handle\"></div>);\n\nfunction isMobileDevice() {\n  try {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst SortableText = SortableElement(({ item, value }) => {\n  let classNames;\n  if (isMobileDevice) {\n    classNames = \"noselect\";\n  }\n\n  const map = {\n    text: v => <span className={classNames}>{v._value}</span>,\n    image: v => <img src={v._value} alt=\"\" />,\n    audio: v => <audio src={v._value} />,\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"1em\",\n        userSelect: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: value.selected ? item.sortedhighlightcolor : \"transparent\",\n      }}\n      className={classNames}\n      onClick={ev => {\n        if (value.selected) {\n          value.setSelected(false);\n          item.setUpdate();\n        } else {\n          value.setSelected(true);\n          item.setUpdate();\n        }\n        ev.preventDefault();\n        return false;\n      }}\n    >\n      <DragHandle />\n      {map[item.elementtag.toLowerCase()](value)}\n    </div>\n  );\n});\n\nconst SortableList = SortableContainer(({ item, items }) => {\n  return (\n    <List celled>\n      {items.map((value, index) => (\n        <SortableText\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          color={value.backgroundColor}\n          item={item}\n          onClick={ev => {}}\n        />\n      ))}\n    </List>\n  );\n});\n\nconst HtxListView = ({ store, item }) => {\n  const props = {};\n  if (isMobileDevice()) {\n    props[\"pressDelay\"] = 100;\n  } else {\n    props[\"distance\"] = 7;\n  }\n\n  return (\n    <div>\n      <SortableList update={item.update} item={item} items={item.regions} onSortEnd={item.moveItems} {...props} />\n    </div>\n  );\n};\n\nconst HtxList = inject(\"store\")(observer(HtxListView));\n\nRegistry.addTag(\"list\", ListModel, HtxList);\n\nexport { ListModel, HtxList };\n","import { types, getRoot } from \"mobx-state-tree\";\n\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport ControlBase from \"./Base\";\n\n/**\n * Pairwise element. Compare two different objects, works with any label studio object\n * @example\n * <View>\n *   <Pairwise name=\"pairwise\" leftClass=\"text1\" rightClass=\"text2\" toName=\"txt-1,txt-2\"></Pairwise>\n *   <Text name=\"txt-1\" value=\"Text 1\" />\n *   <Text name=\"txt-2\" value=\"Text 2\" />\n * </View>\n * @example\n * <!-- You can also style the appearence using the View tag: -->\n * <View>\n *   <Pairwise name=\"pw\" toName=\"txt-1,txt-2\"></Pairwise>\n *   <View style=\"display: flex;\">\n *     <View style=\"margin-right: 1em;\"><Text name=\"txt-1\" value=\"$text1\" /></View>\n *     <View><Text name=\"txt-2\" value=\"$text2\" /></View>\n *   </View>\n * </View>\n * @name Pairwise\n * @param {string} name               - name of the element\n * @param {string} toName             - names of the elements you want to compare\n * @param {string} [selectionStyle]   - style of the selection\n * @params {string} [leftClass=left]  - class name of the left object\n * @params {string} [rightClass=left] - class name of the right object\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n  selectionstyle: types.maybeNull(types.string),\n  leftclass: types.maybeNull(types.string),\n  rightclass: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    type: \"pairwise\",\n    selected: types.maybeNull(types.enumeration([\"left\", \"right\", \"none\"])),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get names() {\n      return self.toname.split(\",\");\n    },\n\n    get left() {\n      return self.completion.names.get(self.names[0]);\n    },\n\n    get right() {\n      return self.completion.names.get(self.names[1]);\n    },\n\n    get valueType() {\n      return \"selected\";\n    },\n\n    get result() {\n      return self.completion.results.find(r => r.from_name === self);\n    },\n  }))\n  .actions(self => ({\n    updateResult() {\n      const { result, selected } = self;\n      if (selected === \"none\") {\n        if (result) result.area.removeResult(result);\n      } else {\n        if (result) result.setValue(selected);\n        else {\n          self.completion.createResult({}, { selected }, self, self.name);\n        }\n      }\n    },\n\n    setResult(dir = \"none\") {\n      self.selected = dir;\n      self.left.addProp(\"style\", dir === \"left\" ? self._selection : {});\n      self.right.addProp(\"style\", dir === \"right\" ? self._selection : {});\n    },\n\n    selectLeft() {\n      self.setResult(self.selected === \"left\" ? \"none\" : \"left\");\n      self.updateResult();\n    },\n\n    selectRight() {\n      self.setResult(self.selected === \"right\" ? \"none\" : \"right\");\n      self.updateResult();\n    },\n\n    afterCreate() {\n      if (self.names.length !== 2 || self.names[0] === self.names[1]) {\n        InfoModal.error(\n          `Incorrect toName parameter on Pairwise, should be two names separated by the comma: name1,name2`,\n        );\n      }\n\n      let selection = {};\n      if (self.selectionstyle) {\n        const s = Tree.cssConverter(self.selectionstyle);\n        for (let key in s) {\n          selection[key] = s[key];\n        }\n      } else {\n        selection = {\n          backgroundColor: \"#f6ffed\",\n          border: \"1px solid #b7eb8f\",\n        };\n      }\n\n      self._selection = selection;\n    },\n\n    needsUpdate() {\n      if (self.result) self.setResult(self.result.value.selected);\n      else self.setResult();\n    },\n\n    completionAttached() {\n      // @todo completion attached in a weird way, so do that next tick, with fixed tree\n      setTimeout(() => {\n        self.left.addProp(\"onClick\", self.selectLeft);\n        self.right.addProp(\"onClick\", self.selectRight);\n        self.setResult(self.result?.value.selected);\n      });\n    },\n  }));\n\nconst PairwiseModel = types.compose(\"PairwiseModel\", TagAttrs, ControlBase, Model);\n\nconst HtxPairwise = () => {\n  return null;\n};\n\nRegistry.addTag(\"pairwise\", PairwiseModel, HtxPairwise);\nRegistry.addObjectType(PairwiseModel);\n\nexport { HtxPairwise, PairwiseModel };\n","import { types, getRoot } from \"mobx-state-tree\";\n\nimport * as Tools from \"../../tools\";\nimport Registry from \"../../core/Registry\";\nimport ControlBase from \"./Base\";\nimport { customTypes } from \"../../core/CustomTypes\";\nimport Types from \"../../core/Types\";\n\n/**\n * Polygon is used to add polygons to an image without label selection. It's useful when you have only one label.\n * @example\n * <View>\n *   <Polygon name=\"rect-1\" toName=\"img-1\" />\n *   <Image name=\"img-1\" value=\"$img\" />\n * </View>\n * @name Polygon\n * @param {string} name                           - name of tag\n * @param {string} toname                         - name of image to label\n * @param {number} [opacity=0.6]                  - opacity of polygon\n * @param {string} [fillColor]                    - rectangle fill color, default is transparent\n * @param {string} [strokeColor]                  - stroke color\n * @param {number} [strokeWidth=1]                - width of stroke\n * @param {small|medium|large} [pointSize=medium] - size of polygon handle points\n * @param {rectangle|circle} [pointStyle=circle]  - style of points\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(customTypes.range(), \"0.6\"),\n  fillcolor: types.optional(customTypes.color, \"#f48a42\"),\n\n  strokewidth: types.optional(types.string, \"3\"),\n  strokecolor: types.optional(customTypes.color, \"#f48a42\"),\n\n  pointsize: types.optional(types.string, \"small\"),\n  pointstyle: types.optional(types.string, \"circle\"),\n});\n\nconst Validation = types.model({\n  controlledTags: Types.unionTag([\"Image\"]),\n});\n\nconst Model = types\n  .model({\n    type: \"polygon\",\n\n    // regions: types.array(RectRegionModel),\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON() {},\n\n    afterCreate() {\n      const poly = Tools.Polygon.create();\n      const floodFill = Tools.FloodFill.create();\n\n      poly._control = self;\n      floodFill._control = self;\n\n      self.tools = {\n        poly: poly,\n        // floodfill: floodFill,\n      };\n    },\n  }));\n\nconst PolygonModel = types.compose(\"PolygonModel\", ControlBase, TagAttrs, Validation, Model);\n\nconst HtxView = () => null;\n\nRegistry.addTag(\"polygon\", PolygonModel, HtxView);\n\nexport { HtxView, PolygonModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Types from \"../../core/Types\";\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { PolygonModel } from \"./Polygon\";\nimport ControlBase from \"./Base\";\n\n/**\n * PolygonLabels tag, create labeled polygons\n * @example\n * <View>\n *   <Image name=\"image\" value=\"$image\" />\n *   <PolygonLabels name=\"lables\" toName=\"image\">\n *     <Label value=\"Car\" />\n *     <Label value=\"Sign\" />\n *   </PolygonLabels>\n * </View>\n * @name PolygonLabels\n * @param {string} name                             - name of tag\n * @param {string} toName                           - name of image to label\n * @param {number} [opacity=0.6]                    - opacity of polygon\n * @param {string} [fillColor]                      - rectangle fill color, default is transparent\n * @param {string} [strokeColor]                    - stroke color\n * @param {number} [strokeWidth=1]                  - width of stroke\n * @param {small|medium|large} [pointSize=medium]   - size of polygon handle points\n * @param {rectangle|circle} [pointStyle=rectangle] - style of points\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n});\n\nconst Validation = types.model({\n  controlledTags: Types.unionTag([\"Image\"]),\n});\n\nconst ModelAttrs = types.model(\"PolygonLabelsModel\", {\n  type: \"polygonlabels\",\n  children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n});\n\nconst Composition = types.compose(\n  LabelsModel,\n  ModelAttrs,\n  PolygonModel,\n  TagAttrs,\n  Validation,\n  LabelMixin,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n  ControlBase,\n);\n\nconst PolygonLabelsModel = types.compose(\"PolygonLabelsModel\", Composition);\n\nconst HtxPolygonLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"polygonlabels\", PolygonLabelsModel, HtxPolygonLabels);\n\nexport { HtxPolygonLabels, PolygonLabelsModel };\n","import React from \"react\";\nimport arrayMove from \"array-move\";\nimport { List } from \"antd\";\nimport { SortableContainer, SortableElement, sortableHandle } from \"react-sortable-hoc\";\nimport { observer, inject } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\n\nconst RankerItemModel = types\n  .model({\n    backgroundColor: types.optional(types.string, \"transparent\"),\n    value: types.maybeNull(types.string),\n    _value: types.maybeNull(types.string),\n    selected: types.optional(types.boolean, false),\n    idx: types.number,\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setBG(val) {\n      self.backgroundColor = val;\n    },\n\n    setIdx(idx) {\n      self.idx = idx;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n  }));\n\n/**\n * Ranker tag, used to ranking models\n *\n * Ranker has a complex mechanics and uses only the \"prediction\" field from the input task,\n * please explore input task example carefully.\n *\n * It renders given list of strings and allows to drag and reorder them.\n * To see this tag in action you have to use json below as task on \"Import\" page:\n * setup given config, go to Import, then copy-paste json to the input field and submit.\n *\n * @example\n * <View>\n *   <Text name=\"txt-1\" value=\"$text\"></Text>\n *   <Ranker name=\"ranker-1\" toName=\"txt-1\" ranked=\"true\" sortedHighlightColor=\"red\"></Ranker>\n * </View>\n * @example\n * [{\n *   \"data\": {\n *     \"text\": \"Some text for ranker\"\n *   },\n *   \"predictions\": [{\n *     \"model_version\": \"1564027355\",\n *     \"result\": [{\n *       \"from_name\": \"ranker-1\",\n *       \"to_name\": \"ranker-1\",\n *       \"type\": \"ranker\",\n *       \"value\": {\n *         \"items\": [\"abc\", \"def\", \"ghk\", \"more more more\", \"really long text\"],\n *         \"weights\": [1.00, 0.78, 0.75, 0.74, 0.74],\n *         \"selected\": [false, false, false, false, false]\n *       }\n *     }],\n *     \"score\": 1.0\n *   }]\n * }]\n * @name Ranker\n * @param {string} name of group\n * @param {y|x=} [axis=y] axis direction\n * @param {string} sortedHighlightColor sorted color\n */\nconst TagAttrs = types.model({\n  axis: types.optional(types.enumeration([\"x\", \"y\"]), \"y\"),\n  lockaxis: types.maybeNull(types.enumeration([\"x\", \"y\"])),\n\n  // elementvalue: types.maybeNull(types.string),\n  elementtag: types.optional(types.string, \"Text\"),\n  ranked: types.optional(types.boolean, true),\n  sortable: types.optional(types.boolean, true),\n\n  sortedhighlightcolor: types.maybeNull(types.string),\n\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"ranker\",\n    update: types.optional(types.number, 1),\n\n    regions: types.array(RankerItemModel),\n    // update: types.optional(types.boolean, false)\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setUpdate() {\n      self.update = self.update + 1;\n    },\n\n    _addRegion(val, idx) {\n      const reg = RankerItemModel.create({\n        value: val,\n        idx: idx,\n        _value: val,\n      });\n\n      self.regions.push(reg);\n    },\n\n    moveItems({ oldIndex, newIndex }) {\n      if (oldIndex === newIndex) return;\n\n      if (self.sortedhighlightcolor) {\n        self.regions[oldIndex].setBG(self.sortedhighlightcolor);\n      }\n\n      self.regions[oldIndex].setSelected(true);\n\n      if (self._value) self._value = arrayMove(self._value, oldIndex, newIndex);\n\n      self.regions = arrayMove(self.regions, oldIndex, newIndex);\n      self.setUpdate();\n    },\n\n    toStateJSON() {\n      return {\n        from_name: self.name,\n        to_name: self.name,\n        value: {\n          // weights: ranked,\n          items: self.regions.map(r => r.value),\n          selected: self.regions.map(r => r.selected),\n        },\n      };\n    },\n\n    fromStateJSON(obj, fromModel) {\n      obj.value.items.forEach((v, idx) => {\n        self._addRegion(v, idx);\n      });\n\n      self.setUpdate();\n    },\n  }));\n\nconst RankerModel = types.compose(\"RankerModel\", TagAttrs, Model);\n\nconst DragHandle = sortableHandle(() => <div className=\"drag-handle\"></div>);\n\nfunction isMobileDevice() {\n  try {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst SortableText = SortableElement(({ item, value }) => {\n  let classNames;\n  if (isMobileDevice) {\n    classNames = \"noselect\";\n  }\n\n  const map = {\n    text: v => <span className={classNames}>{v._value}</span>,\n    image: v => <img src={v._value} alt=\"\" />,\n    audio: v => <audio src={v._value} />,\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"1em\",\n        userSelect: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: value.selected ? item.sortedhighlightcolor : \"transparent\",\n      }}\n      className={classNames}\n      onClick={ev => {\n        if (value.selected) {\n          value.setSelected(false);\n          item.setUpdate();\n        } else {\n          value.setSelected(true);\n          item.setUpdate();\n        }\n        ev.preventDefault();\n        return false;\n      }}\n    >\n      <DragHandle />\n      {map[item.elementtag.toLowerCase()](value)}\n    </div>\n  );\n});\n\nconst SortableList = SortableContainer(({ item, items }) => {\n  return (\n    <List celled>\n      {items.map((value, index) => (\n        <SortableText\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          color={value.backgroundColor}\n          item={item}\n          onClick={ev => {}}\n        />\n      ))}\n    </List>\n  );\n});\n\nconst HtxRankerView = ({ store, item }) => {\n  const props = {};\n  if (isMobileDevice()) {\n    props[\"pressDelay\"] = 100;\n  } else {\n    props[\"distance\"] = 7;\n  }\n\n  return (\n    <div>\n      <SortableList update={item.update} item={item} items={item.regions} onSortEnd={item.moveItems} {...props} />\n    </div>\n  );\n};\n\nconst HtxRanker = inject(\"store\")(observer(HtxRankerView));\n\nRegistry.addTag(\"ranker\", RankerModel, HtxRanker);\n\nexport { RankerModel, HtxRanker };\n","import React from \"react\";\nimport { Rate } from \"antd\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { StarOutlined } from \"@ant-design/icons\";\n\nimport RequiredMixin from \"../../mixins/Required\";\nimport PerRegionMixin from \"../../mixins/PerRegion\";\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * Rating adds rating selection\n *\n * @example\n * <View>\n *   <Text name=\"txt\" value=\"$text\" />\n *   <Rating name=\"rating\" toName=\"txt\" maxRating=\"10\" icon=\"star\" size=\"medium\" />\n * </View>\n *\n * @name Rating\n * @param {string} name Name of the element\n * @param {string} toName Name of the element that you want to label\n * @param {number} [maxRating=5] Maximum rating value\n * @param {number} [defaultValue=0] Default rating value\n * @param {string} [size=medium] One of: small, medium, large\n * @param {string} [icon=start] One of: star, heart, fire, smile\n * @param {string} hotkey HotKey for changing rating value\n * @param {boolean} [required=false]   - validation if rating is required\n * @param {string} [requiredMessage]   - message to show if validation fails\n * @param {boolean} [perRegion] use this tag for region labeling instead of the whole object labeling\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n\n  maxrating: types.optional(types.string, \"5\"),\n  icon: types.optional(types.string, \"star\"),\n  size: types.optional(types.string, \"medium\"),\n  defaultvalue: types.optional(types.string, \"0\"),\n\n  hotkey: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    pid: types.optional(types.string, guidGenerator),\n    type: \"rating\",\n    rating: types.maybeNull(types.number),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    selectedValues() {\n      return self.rating;\n    },\n\n    get serializableValue() {\n      const rating = self.selectedValues();\n      if (!rating) return null;\n      return { rating };\n    },\n\n    get holdsState() {\n      return self.rating > 0;\n    },\n\n    get result() {\n      if (self.perregion) {\n        const area = self.completion.highlightedNode;\n        if (!area) return null;\n\n        return self.completion.results.find(r => r.from_name === self && r.area === area);\n      }\n      return self.completion.results.find(r => r.from_name === self);\n    },\n  }))\n  .actions(self => ({\n    getSelectedString() {\n      return self.rating + \" star\";\n    },\n\n    copyState(obj) {\n      self.setRating(obj.rating);\n    },\n\n    needsUpdate() {\n      if (self.result) self.rating = self.result.mainValue;\n      else self.rating = null;\n    },\n\n    unselectAll() {},\n\n    setRating(value) {\n      self.rating = value;\n\n      if (self.result) {\n        self.result.area.setValue(self);\n      } else {\n        if (self.perregion) {\n          const area = self.completion.highlightedNode;\n          if (!area) return null;\n          area.setValue(self);\n        } else {\n          self.completion.createResult({}, { rating: value }, self, self.toname);\n        }\n      }\n    },\n\n    updateFromResult(value) {\n      self.rating = value;\n    },\n\n    requiredModal() {\n      InfoModal.warning(self.requiredmessage || `Rating \"${self.name}\" is required.`);\n    },\n\n    increaseValue() {\n      if (self.rating >= Number(self.maxrating)) {\n        self.setRating(0);\n      } else {\n        if (self.rating > 0) {\n          self.setRating(self.rating + 1);\n        } else {\n          self.setRating(1);\n        }\n      }\n    },\n\n    onHotKey() {\n      return self.increaseValue();\n    },\n\n    toStateJSON() {\n      if (self.rating) {\n        const toname = self.toname || self.name;\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: toname,\n          type: self.type,\n          value: {\n            rating: self.rating,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      if (obj.id) self.pid = obj.id;\n\n      self.rating = obj.value.rating;\n    },\n  }));\n\nconst RatingModel = types.compose(\"RatingModel\", ControlBase, TagAttrs, Model, RequiredMixin, PerRegionMixin);\n\nconst HtxRating = inject(\"store\")(\n  observer(({ item, store }) => {\n    let iconSize;\n\n    if (item.size === \"small\") {\n      iconSize = 15;\n    } else if (item.size === \"medium\") {\n      iconSize = 25;\n    } else if (item.size === \"large\") {\n      iconSize = 40;\n    }\n\n    const visibleStyle = item.perRegionVisible() ? {} : { display: \"none\" };\n\n    return (\n      <div style={visibleStyle}>\n        <Rate\n          character={<StarOutlined style={{ fontSize: iconSize }} />}\n          value={item.rating}\n          count={Number(item.maxrating)}\n          defaultValue={Number(item.defaultvalue)}\n          onChange={item.setRating}\n        />\n        {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && (\n          <sup style={{ fontSize: \"9px\" }}>[{item.hotkey}]</sup>\n        )}\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"rating\", RatingModel, HtxRating);\n\nexport { HtxRating, RatingModel };\n","import { types, getRoot } from \"mobx-state-tree\";\n\nimport * as Tools from \"../../tools\";\nimport Registry from \"../../core/Registry\";\nimport ControlBase from \"./Base\";\nimport { customTypes } from \"../../core/CustomTypes\";\n\n/**\n * Rectangle is used to add rectangle (Bounding Box) to an image without label selection. It's useful when you have\n * only one label.\n * @example\n * <View>\n *   <Rectangle name=\"rect-1\" toName=\"img-1\" />\n *   <Image name=\"img-1\" value=\"$img\" />\n * </View>\n * @name Rectangle\n * @param {string} name                   - name of the element\n * @param {string} toName                 - name of the image to label\n * @param {float=} [opacity=0.6]          - opacity of rectangle\n * @param {string=} [fillColor]           - rectangle fill color, default is transparent\n * @param {string=} [strokeColor=#f48a42] - stroke color\n * @param {number=} [strokeWidth=1]       - width of the stroke\n * @param {boolean=} [canRotate=true]     - show or hide rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(customTypes.range(), \"0.6\"),\n  fillcolor: types.optional(customTypes.color, \"#f48a42\"),\n\n  strokewidth: types.optional(types.string, \"1\"),\n  strokecolor: types.optional(customTypes.color, \"#f48a42\"),\n  fillopacity: types.optional(customTypes.range(), \"0.6\"),\n\n  canrotate: types.optional(types.boolean, true),\n});\n\nconst Model = types\n  .model({\n    type: \"rectangle\",\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON() {},\n\n    afterCreate() {\n      const rect = Tools.Rect.create({ activeShape: null });\n      rect._control = self;\n\n      self.tools = { rect: rect };\n    },\n  }));\n\nconst RectangleModel = types.compose(\"RectangleModel\", ControlBase, TagAttrs, Model);\n\nconst HtxView = () => {\n  return null;\n};\n\nRegistry.addTag(\"rectangle\", RectangleModel, HtxView);\n\nexport { HtxView, RectangleModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Types from \"../../core/Types\";\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { RectangleModel } from \"./Rectangle\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * RectangleLabels tag creates labeled rectangles\n * Used only for Image\n * @example\n * <View>\n *   <RectangleLabels name=\"labels\" toName=\"image\">\n *     <Label value=\"Person\" />\n *     <Label value=\"Animal\" />\n *   </RectangleLabels>\n *   <Image name=\"image\" value=\"$image\" />\n * </View>\n * @name RectangleLabels\n * @param {string} name              - name of the element\n * @param {string} toName            - name of the image to label\n * @param {float} [opacity=0.6]      - opacity of rectangle\n * @param {string} [fillColor]       - rectangle fill color, default is transparent\n * @param {string} [strokeColor]     - stroke color\n * @param {number} [strokeWidth=1]   - width of stroke\n * @param {boolean} [canRotate=true] - show or hide rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n});\n\nconst Validation = types.model({\n  controlledTags: Types.unionTag([\"Image\"]),\n});\n\nconst ModelAttrs = types.model(\"RectangleLabelsModel\", {\n  pid: types.optional(types.string, guidGenerator),\n  type: \"rectanglelabels\",\n  children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n});\n\nconst Composition = types.compose(\n  LabelsModel,\n  ModelAttrs,\n  RectangleModel,\n  TagAttrs,\n  Validation,\n  LabelMixin,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n  ControlBase,\n);\n\nconst RectangleLabelsModel = types.compose(\"RectangleLabelsModel\", Composition);\n\nconst HtxRectangleLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"rectanglelabels\", RectangleLabelsModel, HtxRectangleLabels);\n\nexport { HtxRectangleLabels, RectangleLabelsModel };\n","import React from \"react\";\nimport { Tag } from \"antd\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParent } from \"mobx-state-tree\";\n\nimport Hint from \"../../components/Hint/Hint\";\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\n\n/**\n * Shortcut tag can be used to define a shortcut, which adds a predefined object\n * @example\n * <View>\n *   <TextArea name=\"txt-1\">\n *     <Shortcut alias=\"Silence\" value=\"SILENCE\" hotkey=\"ctrl+1\" />\n *   </TextArea>\n * </View>\n * @name Shortcut\n * @param {string} value A value of the shortcut\n * @param {string} [alias] Shortcut alias\n * @param {string} [hotkey] Hotkey\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  alias: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"shortcut\",\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get hotkeyScope() {\n      const p = getParent(getParent(self));\n      return p.name;\n    },\n  }))\n  .actions(self => ({\n    onClick() {\n      const p = getParent(getParent(self));\n\n      if (p.onShortcut) p.onShortcut(self.value);\n    },\n\n    onHotKey() {\n      return self.onClick();\n    },\n  }));\n\nconst ShortcutModel = types.compose(\"ShortcutModel\", TagAttrs, Model, ProcessAttrsMixin);\n\nconst HtxShortcutView = inject(\"store\")(\n  observer(({ item, store }) => {\n    const bg = {\n      backgroundColor: item.selected ? item.background : \"#e8e8e8\",\n      color: item.selected ? item.selectedcolor : \"#333333\",\n      cursor: \"pointer\",\n      margin: \"5px\",\n    };\n\n    return (\n      <Tag\n        onClick={ev => {\n          item.onClick();\n          return false;\n        }}\n        style={bg}\n      >\n        {item.alias ? item.alias : item._value}\n        {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n      </Tag>\n    );\n  }),\n);\n\nRegistry.addTag(\"shortcut\", ShortcutModel, HtxShortcutView);\n\nexport { HtxShortcutView, ShortcutModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport VisibilityMixin from \"../../mixins/Visibility\";\nimport ControlBase from \"./Base\";\nimport Types from \"../../core/Types\";\nimport { ChoiceModel } from \"./Choice\"; // eslint-disable-line no-unused-vars\nimport { guidGenerator } from \"../../core/Helpers\";\n\nimport DropdownTreeSelect from \"react-dropdown-tree-select\";\nimport \"react-dropdown-tree-select/dist/styles.css\";\n\n/**\n * Taxonomy tag allows to select one or more hierarchical labels\n * storing both label and their ancestors.\n * @example\n * <View>\n *   <Taxonomy name=\"media\" toName=\"text\">\n *     <Choice value=\"Online\">\n *       <Choice value=\"UGC\" />\n *       <Choice value=\"Free\" />\n *       <Choice value=\"Paywall\">\n *         <Choice value=\"NYC Times\" />\n *         <Choice value=\"The Wall Street Journal\" />\n *       </Choice>\n *     </Choice>\n *     <Choice value=\"Offline\" />\n *   </Taxonomy>\n *   <Text name=\"text\" value=\"You never believe what he did to the country\" />\n * </View>\n * @name Taxonomy\n * @param {string} name                - name of the group\n * @param {string} toName              - name of the element that you want to label\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    pid: types.optional(types.string, guidGenerator),\n\n    readonly: types.optional(types.boolean, false),\n\n    type: \"taxonomy\",\n    children: Types.unionArray([\"choice\"]),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get holdsState() {\n      return true;\n    },\n\n    get valueType() {\n      return \"taxonomy\";\n    },\n\n    get result() {\n      if (self.perregion) {\n        const area = self.completion.highlightedNode;\n        if (!area) return null;\n\n        return self.completion.results.find(r => r.from_name === self && r.area === area);\n      }\n      return self.completion.results.find(r => r.from_name === self);\n    },\n  }))\n  .actions(self => {\n    // RDTS is uncontrolled component, so it handles selected values by itself.\n    // We store path for selected items and store them separately for serialization.\n    // It shall not trigger rerender every time, so it's not observable.\n    let selected = [];\n\n    return {\n      needsUpdate() {\n        if (self.result) selected = self.result.mainValue;\n        else selected = [];\n      },\n\n      selectedValues() {\n        return selected;\n      },\n\n      onChange(node, checked) {\n        selected = checked.map(s => s.path);\n\n        if (self.result) {\n          self.result.area.setValue(self);\n        } else {\n          if (self.perregion) {\n            const area = self.completion.highlightedNode;\n            if (!area) return null;\n            area.setValue(self);\n          } else {\n            self.completion.createResult({}, { taxonomy: selected }, self, self.toname);\n          }\n        }\n      },\n\n      traverse(root) {\n        const visitNode = function(node, parents = []) {\n          const label = node.value;\n          const path = [...parents, label];\n          const obj = {\n            label,\n            path,\n            // @todo this check is heavy for long lists, optimize\n            // search through last items in every stored path\n            // if it's not saved as selected RDTS should handle it by its own, so undefined\n            checked: selected.some(p => p.length && p[p.length - 1] === label) || undefined,\n          };\n\n          if (node.children) {\n            obj.children = node.children.map(n => visitNode(n, path));\n          }\n\n          return obj;\n        };\n\n        return Array.isArray(root) ? root.map(n => visitNode(n)) : visitNode(root);\n      },\n    };\n  });\n\nconst TaxonomyModel = types.compose(\"TaxonomyModel\", ControlBase, TagAttrs, Model, VisibilityMixin);\n\nconst HtxTaxonomy = observer(({ item }) => {\n  const style = { marginTop: \"1em\", marginBottom: \"1em\" };\n\n  return (\n    <div style={{ ...style }}>\n      <DropdownTreeSelect data={item.traverse(item.children)} onChange={item.onChange} showPartiallySelected />\n    </div>\n  );\n});\n\nRegistry.addTag(\"taxonomy\", TaxonomyModel, HtxTaxonomy);\n\nexport { HtxTaxonomy, TaxonomyModel, TagAttrs };\n","import React from \"react\";\nimport { Typography, Tooltip } from \"antd\";\nimport { DeleteOutlined, EditOutlined, EnterOutlined } from \"@ant-design/icons\";\nimport styles from \"./HtxTextBox.module.scss\";\nimport throttle from \"lodash.throttle\";\n\nconst { Paragraph } = Typography;\n\nexport class HtxTextBox extends React.Component {\n  state = {\n    editing: false,\n    height: 0,\n    value: this.props.text,\n  };\n\n  textRef = React.createRef();\n  inputRef = React.createRef();\n\n  startEditing = () => {\n    const height = this.textRef.current?.parentNode.offsetHeight || 0;\n    this.setState({ editing: true, height });\n\n    // eslint-disable-next-line no-unused-expressions\n    this.props.onStartEditing?.();\n\n    setTimeout(this.focus);\n  };\n\n  focus = () => {\n    const input = this.inputRef.current;\n    if (input) input.selectionStart = this.state.value.length;\n  };\n\n  setEditing = editing => {\n    this.setState({ editing });\n  };\n\n  setValue = value => {\n    this.setState({ value });\n  };\n\n  cancel = () => {\n    this.setValue(this.props.text);\n    this.setEditing(false);\n  };\n\n  save = () => {\n    this.props.onChange(this.state.value);\n    this.setEditing(false);\n  };\n\n  updateHeight = throttle(() => {\n    const borders = 2;\n    const height = (this.inputRef.current?.scrollHeight || 0) + borders;\n    if (height && height !== this.state.height) {\n      this.setState({ height });\n    }\n  }, 100);\n\n  renderEdit() {\n    const { className = \"\", onChange, onDelete, text, rows = 1, ...props } = this.props;\n    const { height, value } = this.state;\n\n    const inputProps = {\n      className: \"ant-input \" + styles.input,\n      style: height ? { height } : null,\n      autoFocus: true,\n      ref: this.inputRef,\n      value,\n      onBlur: this.save,\n      onChange: e => {\n        this.setValue(e.target.value);\n        this.updateHeight();\n      },\n      onKeyDown: e => {\n        const { key, shiftKey } = e;\n        if (key === \"Enter\") {\n          // for multiline textarea save only by shift+enter\n          if (+rows === 1 || shiftKey) {\n            e.preventDefault();\n            e.stopPropagation();\n            this.save();\n          }\n        } else if (key === \"Escape\") {\n          this.cancel();\n        }\n      },\n    };\n\n    return (\n      <Paragraph {...props} className={className + \" ant-typography-edit-content \" + styles.editing}>\n        {rows > 1 ? <textarea {...inputProps} /> : <input {...inputProps} />}\n        <Tooltip title=\"Save: [shift+enter]\">\n          <EnterOutlined className={\"ant-typography-edit-content-confirm \" + styles.enter} onClick={this.save} />\n        </Tooltip>\n      </Paragraph>\n    );\n  }\n\n  renderView() {\n    const { onChange, onDelete, text, ...props } = this.props;\n\n    return (\n      <>\n        <Paragraph {...props}>\n          <span ref={this.textRef}>{text}</span>\n          {onChange && <EditOutlined onClick={this.startEditing} className=\"ant-typography-edit\" />}\n        </Paragraph>\n        {onDelete && <DeleteOutlined className={styles.delete} onClick={onDelete} />}\n      </>\n    );\n  }\n\n  render() {\n    return this.state.editing ? this.renderEdit() : this.renderView();\n  }\n}\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types, getParentOfType } from \"mobx-state-tree\";\n\nimport { Typography } from \"antd\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport Registry from \"../core/Registry\";\nimport { TextAreaModel } from \"../tags/control/TextArea\";\nimport { guidGenerator } from \"../core/Helpers\";\n\nimport styles from \"./TextAreaRegion/TextAreaRegion.module.scss\";\nimport { HtxTextBox } from \"../components/HtxTextBox/HtxTextBox\";\n\nconst { Paragraph } = Typography;\n\nconst Model = types\n  .model(\"TextAreaRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"textarearegion\",\n\n    _value: types.string,\n    // states: types.array(types.union(ChoicesModel)),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, TextAreaModel);\n    },\n    get regionElement() {\n      return document.querySelector(`#TextAreaRegion-${self.id}`);\n    },\n  }))\n  .actions(self => ({\n    setValue(val) {\n      self._value = val;\n      self.parent.onChange();\n    },\n  }));\n\nconst TextAreaRegionModel = types.compose(\n  \"TextAreaRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nconst HtxTextAreaRegionView = ({ item }) => {\n  const classes = [styles.mark];\n  const params = {};\n  const { parent } = item;\n  const { relationMode } = item.completion;\n\n  if (relationMode) {\n    classes.push(styles.relation);\n  }\n\n  if (item.selected) {\n    classes.push(styles.selected);\n  } else if (item.highlighted) {\n    classes.push(styles.highlighted);\n  }\n\n  if (parent.editable) {\n    params.onChange = str => {\n      item.setValue(str);\n    };\n  }\n\n  let divAttrs = {};\n  if (parent.perregion) {\n    params.onDelete = () => item.parent.remove(item);\n  } else {\n    divAttrs = {\n      onMouseOver: () => {\n        if (relationMode) {\n          item.setHighlight(true);\n        }\n      },\n      onMouseOut: () => {\n        /* range.setHighlight(false); */\n        if (relationMode) {\n          item.setHighlight(false);\n        }\n      },\n    };\n  }\n\n  return (\n    <div {...divAttrs} className={styles.row} data-testid=\"textarea-region\">\n      <HtxTextBox\n        id={`TextAreaRegion-${item.id}`}\n        className={classes.join(\" \")}\n        rows={parent.rows}\n        text={item._value}\n        {...params}\n      />\n    </div>\n  );\n};\n\nconst HtxTextAreaRegion = observer(HtxTextAreaRegionView);\n\nRegistry.addTag(\"textarearegion\", TextAreaRegionModel, HtxTextAreaRegion);\n\nexport { TextAreaRegionModel, HtxTextAreaRegion };\n","import React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { observer } from \"mobx-react\";\nimport { types, destroy, getRoot } from \"mobx-state-tree\";\n\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport RequiredMixin from \"../../mixins/Required\";\nimport PerRegionMixin from \"../../mixins/PerRegion\";\nimport InfoModal from \"../../components/Infomodal/Infomodal\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\nimport { HtxTextAreaRegion, TextAreaRegionModel } from \"../../regions/TextAreaRegion\";\nimport { cloneNode } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\nconst { TextArea } = Input;\n\n/**\n * TextArea tag shows the textarea for user input\n * @example\n * <View>\n *   <TextArea name=\"ta\"></TextArea>\n * </View>\n * @name TextArea\n * @param {string} name name of the element\n * @param {string} toName name of the element that you want to label if any\n * @param {string} value\n * @param {string=} [label] label text\n * @param {string=} [placeholder] placeholder text\n * @param {string=} [maxSubmissions] maximum number of submissions\n * @param {boolean=} [editable=false] editable textarea results\n * @param {number} [rows] number of rows in the textarea\n * @param {boolean} [required=false]   - validation if textarea is required\n * @param {string} [requiredMessage]   - message to show if validation fails\n * @param {boolean=} [showSubmitButton] show submit button or hide it, it's shown by default when rows is more than one (i.e. textarea mode)\n * @param {boolean} [perRegion] use this tag for region labeling instead of the whole object labeling\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n  allowsubmit: types.optional(types.boolean, true),\n  label: types.optional(types.string, \"\"),\n  value: types.maybeNull(types.string),\n  rows: types.optional(types.string, \"1\"),\n  showsubmitbutton: types.optional(types.boolean, false),\n  placeholder: types.maybeNull(types.string),\n  maxsubmissions: types.maybeNull(types.string),\n  editable: types.optional(types.boolean, false),\n});\n\nconst Model = types\n  .model({\n    type: \"textarea\",\n    regions: types.array(TextAreaRegionModel),\n\n    _value: types.optional(types.string, \"\"),\n    children: Types.unionArray([\"shortcut\"]),\n  })\n  .views(self => ({\n    get valueType() {\n      return \"text\";\n    },\n\n    get holdsState() {\n      return self.regions.length > 0;\n    },\n\n    get submissionsNum() {\n      return self.regions.length;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get showSubmit() {\n      if (self.maxsubmissions) {\n        const num = parseInt(self.maxsubmissions);\n        return self.submissionsNum < num;\n      } else {\n        return true;\n      }\n    },\n\n    get serializableValue() {\n      if (!self.regions.length) return null;\n      return { text: self.selectedValues() };\n    },\n\n    selectedValues() {\n      return self.regions.map(r => r._value);\n    },\n\n    get result() {\n      if (self.perregion) {\n        const area = self.completion.highlightedNode;\n        if (!area) return null;\n\n        return self.completion.results.find(r => r.from_name === self && r.area === area);\n      }\n      return self.completion.results.find(r => r.from_name === self);\n    },\n  }))\n  .actions(self => ({\n    getSerializableValue() {\n      const texts = self.regions.map(s => s._value);\n      if (texts.length === 0) return;\n\n      return { text: texts };\n    },\n\n    needsUpdate() {\n      self.updateFromResult(self.result?.mainValue);\n    },\n\n    requiredModal() {\n      InfoModal.warning(self.requiredmessage || `Input for the textarea \"${self.name}\" is required.`);\n    },\n\n    setResult(value) {\n      const values = Array.isArray(value) ? value : [value];\n      values.forEach(v => self.createRegion(v));\n    },\n\n    updateFromResult(value) {\n      self.regions = [];\n      value && self.setResult(value);\n    },\n\n    setValue(value) {\n      self._value = value;\n    },\n\n    remove(region) {\n      const index = self.regions.indexOf(region);\n      if (index < 0) return;\n      self.regions.splice(index, 1);\n      destroy(region);\n      self.onChange();\n    },\n\n    copyState(obj) {\n      self.regions = obj.regions.map(r => cloneNode(r));\n    },\n\n    perRegionCleanup() {\n      self.regions = [];\n    },\n\n    createRegion(text, pid) {\n      const r = TextAreaRegionModel.create({ pid: pid, _value: text });\n      self.regions.push(r);\n\n      return r;\n    },\n\n    onChange() {\n      if (self.result) {\n        self.result.area.setValue(self);\n      } else {\n        if (self.perregion) {\n          const area = self.completion.highlightedNode;\n          if (!area) return null;\n          area.setValue(self);\n        } else {\n          self.completion.createResult({}, { text: self.selectedValues() }, self, self.toname);\n        }\n      }\n    },\n\n    addText(text, pid) {\n      self.createRegion(text, pid);\n      self.onChange();\n    },\n\n    beforeSend() {\n      if (self._value && self._value.length) {\n        self.addText(self._value);\n        self._value = \"\";\n      }\n    },\n\n    // add unsubmitted text when user switches region\n    submitChanges() {\n      self.beforeSend();\n    },\n\n    deleteText(text) {\n      destroy(text);\n    },\n\n    onShortcut(value) {\n      self.setValue(self._value + value);\n    },\n\n    toStateJSON() {\n      if (!self.regions.length) return;\n\n      const toname = self.toname || self.name;\n      const tree = {\n        id: self.pid,\n        from_name: self.name,\n        to_name: toname,\n        type: \"textarea\",\n        value: {\n          text: self.regions.map(r => r._value),\n        },\n      };\n\n      return tree;\n    },\n\n    fromStateJSON(obj, fromModel) {\n      let { text } = obj.value;\n      if (!Array.isArray(text)) text = [text];\n\n      text.forEach(t => self.addText(t, obj.id));\n    },\n  }));\n\nconst TextAreaModel = types.compose(\n  \"TextAreaModel\",\n  ControlBase,\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n  RequiredMixin,\n  PerRegionMixin,\n);\n\nconst HtxTextArea = observer(({ item }) => {\n  const rows = parseInt(item.rows);\n\n  const props = {\n    name: item.name,\n    value: item._value,\n    rows: item.rows,\n    className: \"is-search\",\n    label: item.label,\n    placeholder: item.placeholder,\n    onChange: ev => {\n      const { value } = ev.target;\n      item.setValue(value);\n    },\n  };\n\n  if (rows > 1) {\n    // allow to add multiline text with shift+enter\n    props.onKeyDown = e => {\n      if (e.key === \"Enter\" && e.shiftKey && item.allowsubmit && item._value) {\n        e.preventDefault();\n        e.stopPropagation();\n        item.addText(item._value);\n        item.setValue(\"\");\n      }\n    };\n  }\n\n  if (!item.completion.editable) props[\"disabled\"] = true;\n\n  const visibleStyle = item.perRegionVisible() ? {} : { display: \"none\" };\n\n  const showAddButton = (item.completion.editable && rows !== 1) || item.showSubmitButton;\n  const itemStyle = {};\n  if (showAddButton) itemStyle[\"marginBottom\"] = 0;\n\n  visibleStyle[\"marginTop\"] = \"4px\";\n\n  return (\n    <div style={visibleStyle}>\n      {Tree.renderChildren(item)}\n\n      {item.showSubmit && (\n        <Form\n          onFinish={ev => {\n            if (item.allowsubmit && item._value) {\n              item.addText(item._value);\n              item.setValue(\"\");\n            }\n\n            return false;\n          }}\n        >\n          <Form.Item style={itemStyle}>\n            {rows === 1 ? <Input {...props} /> : <TextArea {...props} />}\n            {showAddButton && (\n              <Form.Item>\n                <Button style={{ marginTop: \"10px\" }} type=\"primary\" htmlType=\"submit\">\n                  Add\n                </Button>\n              </Form.Item>\n            )}\n          </Form.Item>\n        </Form>\n      )}\n\n      {item.regions.length > 0 && (\n        <div style={{ marginBottom: \"1em\" }}>\n          {item.regions.map(t => (\n            <HtxTextAreaRegion key={t.id} item={t} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n});\n\nRegistry.addTag(\"textarea\", TextAreaModel, HtxTextArea);\n\nexport { TextAreaModel, HtxTextArea };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport RequiredMixin from \"../../mixins/Required\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Types from \"../../core/Types\";\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * TimeSeriesLabels tag creates labeled time range\n * @example\n * <View>\n *   <TimeSeriesLabels name=\"label\" toName=\"ts\">\n *       <Label value=\"Run\"/>\n *       <Label value=\"Walk\"/>\n *   </TimeSeriesLabels>\n *\n *   <TimeSeries name=\"ts\" value=\"$csv\" valueType=\"url\">\n *      <Channel column=\"first_column\"/>\n *   </TimeSeries>\n * </View>\n *\n * @name TimeSeriesLabels\n * @param {string} name name of the element\n * @param {string} toname name of the timeseries to label\n * @param {float=} [opacity=0.9] opacity of range\n * @param {string=} fillColor range fill color, default is transparent\n * @param {number=} [strokeWidth=1] width of the stroke\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(types.string, \"0.9\"),\n  fillcolor: types.maybeNull(types.string),\n\n  strokeWidth: types.optional(types.number, 1),\n  strokeColor: types.optional(types.string, \"#f48a42\"),\n});\n\nconst ModelAttrs = types\n  .model(\"TimeSeriesLabelesModel\", {\n    pid: types.optional(types.string, guidGenerator),\n    type: \"timeserieslabels\",\n    children: Types.unionArray([\"labels\", \"label\", \"choice\"]),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states ? states.filter(c => c.isSelected === true) : null;\n    },\n  }));\n\nconst Model = LabelMixin.props({ _type: \"timeserieslabels\" }).views(self => ({\n  get shouldBeUnselected() {\n    return self.choice === \"single\";\n  },\n}));\n\nconst Composition = types.compose(\n  LabelsModel,\n  ModelAttrs,\n  TagAttrs,\n  Model,\n  RequiredMixin,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n  ControlBase,\n);\n\nconst TimeSeriesLabelsModel = types.compose(\"TimeSeriesLabelsModel\", Composition);\n\nconst HtxTimeSeriesLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"timeserieslabels\", TimeSeriesLabelsModel, HtxTimeSeriesLabels);\n\nexport { HtxTimeSeriesLabels, TimeSeriesLabelsModel };\n","import { types, getRoot } from \"mobx-state-tree\";\n\nimport * as Tools from \"../../tools\";\nimport Registry from \"../../core/Registry\";\nimport ControlBase from \"./Base\";\nimport { customTypes } from \"../../core/CustomTypes\";\n\n/**\n * Ellipse\n * Ellipse is used to add ellipse (elleptic Bounding Box) to an image\n * @example\n * <View>\n *   <Ellipse name=\"ellipse1-1\" toName=\"img-1\" />\n *   <Image name=\"img-1\" value=\"$img\" />\n * </View>\n * @name Ellipse\n * @param {string} name                  - name of the element\n * @param {string} toName                - name of the image to label\n * @param {float} [opacity=0.6]          - opacity of ellipse\n * @param {string} [fillColor]           - rectangle fill color, default is transparent\n * @param {string} [strokeColor=#f48a42] - stroke color\n * @param {number} [strokeWidth=1]       - width of the stroke\n * @param {boolean} [canRotate=true]     - show or hide rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(customTypes.range(), \"0.6\"),\n  fillcolor: types.optional(customTypes.color, \"#f48a42\"),\n\n  strokewidth: types.optional(types.string, \"1\"),\n  strokecolor: types.optional(customTypes.color, \"#f48a42\"),\n  fillopacity: types.optional(customTypes.range(), \"0.6\"),\n\n  canrotate: types.optional(types.boolean, true),\n});\n\nconst Model = types\n  .model({\n    type: \"ellipse\",\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      const ellipse = Tools.Ellipse.create({ activeShape: null });\n      ellipse._control = self;\n\n      self.tools = { ellipse: ellipse };\n    },\n  }));\n\nconst EllipseModel = types.compose(\"EllipseModel\", TagAttrs, Model, ControlBase);\n\nconst HtxView = () => {\n  return null;\n};\n\nRegistry.addTag(\"ellipse\", EllipseModel, HtxView);\n\nexport { HtxView, EllipseModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport LabelMixin from \"../../mixins/LabelMixin\";\nimport Registry from \"../../core/Registry\";\nimport SelectedModelMixin from \"../../mixins/SelectedModel\";\nimport Types from \"../../core/Types\";\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { EllipseModel } from \"./Ellipse\";\nimport ControlBase from \"./Base\";\n\n/**\n * EllipseLabels tag creates labeled ellipses\n * Used only for Image\n * @example\n * <View>\n *   <EllipseLabels name=\"labels\" toName=\"image\">\n *     <Label value=\"Person\" />\n *     <Label value=\"Animal\" />\n *   </EllipseLabels>\n *   <Image name=\"image\" value=\"$image\" />\n * </View>\n * @name EllipseLabels\n * @param {string} name               - name of the element\n * @param {string} toName             - name of the image to label\n * @param {float=} [opacity=0.6]      - opacity of rectangle\n * @param {string=} [fillColor]       - ellipse fill color, default is transparent\n * @param {string=} [strokeColor]     - stroke color\n * @param {number=} [strokeWidth=1]   - width of stroke\n * @param {boolean=} [canRotate=true] - show or hide rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.identifier,\n  toname: types.maybeNull(types.string),\n});\n\nconst ModelAttrs = types.model(\"EllipseLabelsModel\", {\n  type: \"ellipselabels\",\n  children: Types.unionArray([\"label\", \"header\", \"view\", \"hypertext\"]),\n});\n\nconst Composition = types.compose(\n  LabelsModel,\n  ModelAttrs,\n  EllipseModel,\n  TagAttrs,\n  LabelMixin,\n  SelectedModelMixin.props({ _child: \"LabelModel\" }),\n  ControlBase,\n);\n\nconst EllipseLabelsModel = types.compose(\"EllipseLabelsModel\", Composition);\n\nconst HtxEllipseLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"ellipselabels\", EllipseLabelsModel, HtxEllipseLabels);\n\nexport { HtxEllipseLabels, EllipseLabelsModel };\n","import { types } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ControlBase from \"./Base\";\n\n/**\n * Relations tag, create relations labels\n * @example\n * <View>\n *   <Relations>\n *     <Relation value=\"hello\" />\n *     <Relation value=\"world\" />\n *   </Relations>\n *\n *   <Text name=\"txt-1\" value=\"$text\" />\n *   <Labels name=\"lbl-1\" toName=\"txt-1\">\n *     <Label value=\"Relevant\" />\n *     <Label value=\"Not Relevant\" />\n *   </Labels>\n * </View>\n * @name Relations\n * @param {single|multiple=} [choice=single] configure if you can select just one or multiple labels\n */\nconst TagAttrs = types.model({\n  choice: types.optional(types.enumeration([\"single\", \"multiple\"]), \"multiple\"),\n});\n\n/**\n * @param {boolean} showinline\n * @param {identifier} id\n * @param {string} pid\n */\nconst ModelAttrs = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"relations\",\n    children: Types.unionArray([\"relations\", \"relation\"]),\n  })\n  .views(self => ({\n    getSelected() {\n      return self.children.filter(c => c.selected === true);\n    },\n\n    selectedValues() {\n      return self.getSelected().map(c => c.value);\n    },\n\n    findRelation(value) {\n      return self.children.find(c => c.value === value);\n    },\n  }))\n  .actions(self => ({\n    unselectAll() {\n      self.children.map(c => c.setSelected(false));\n    },\n  }));\n\nconst RelationsModel = types.compose(\"RelationsModel\", ModelAttrs, TagAttrs, ControlBase);\n\nconst HtxRelations = () => {\n  return null;\n};\n\nRegistry.addTag(\"relations\", RelationsModel, HtxRelations);\n\nexport { HtxRelations, RelationsModel };\n","import { types } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport Constants from \"../../core/Constants\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { customTypes } from \"../../core/CustomTypes\";\n\n/**\n * Relation tag represents a single relation label\n * @example\n * <View>\n *   <Relations>\n *     <Relation value=\"hello\" />\n *     <Relation value=\"world\" />\n *   </Relations>\n *\n *   <Text name=\"txt-1\" value=\"$text\" />\n *   <Labels name=\"lbl-1\" toName=\"txt-1\">\n *     <Label value=\"Relevant\" />\n *     <Label value=\"Not Relevant\" />\n *   </Labels>\n * </View>\n * @name Relation\n * @param {string} value - value of the relation\n * @param {string} [background] - background color of active label\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  background: types.optional(customTypes.color, Constants.RELATION_BACKGROUND),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    selected: types.optional(types.boolean, false),\n    type: \"relation\",\n  })\n  .actions(self => ({\n    setSelected(value) {\n      self.selected = value;\n    },\n  }));\n\nconst RelationModel = types.compose(\"RelationModel\", TagAttrs, Model);\n\nconst HtxRelationView = () => {\n  return null;\n};\n\nRegistry.addTag(\"relation\", RelationModel, HtxRelationView);\n\nexport { HtxRelationView, RelationModel };\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { Tag } from \"antd\";\n\nimport styles from \"./Dialog.module.scss\";\n\nexport default class DialogView extends React.Component {\n  render() {\n    let selectedStyle = `${styles.block}`;\n    let hint;\n    let bgColor;\n    let date;\n\n    if (this.props.hint) {\n      hint = <Tag color=\"blue\">{this.props.hint}</Tag>;\n    }\n\n    if (this.props.bg) {\n      bgColor = this.props.bg;\n    }\n\n    if (this.props.selected) {\n      selectedStyle = `${selectedStyle} ${styles.block_selected}`;\n      hint = (\n        <div>\n          <Tag color=\"magenta\">Selected Message</Tag>\n        </div>\n      );\n\n      if (this.props.hint) {\n        hint = (\n          <div className={styles.tag}>\n            <Tag color=\"magenta\">{this.props.hint}</Tag>\n          </div>\n        );\n      }\n    }\n\n    if (this.props.date) {\n      date = <span className={styles.date}>{this.props.date}</span>;\n    }\n\n    return (\n      <div className={selectedStyle} style={{ background: bgColor, width: \"max-content\", maxWidth: \"100%\" }}>\n        <span className={styles.name}>{this.props.name}:&nbsp;</span>\n        <p className={styles.text}>{this.props.text}</p>\n        {date}\n        {hint}\n      </div>\n    );\n  }\n}\n\nDialogView.propTypes = {\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  selected: PropTypes.bool,\n  date: PropTypes.string,\n  hint: PropTypes.string,\n};\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { Divider, Empty } from \"antd\";\n\nimport { guidGenerator } from \"../../utils/unique\";\nimport Registry from \"../../core/Registry\";\nimport DialogView from \"../../components/Dialog/Dialog\";\nimport { stringToColor, convertToRGBA } from \"../../utils/colors\";\n\n/**\n * Dialog tag renders a dialog\n * @example\n * <View>\n *  <Dialog name=\"dialog\" value=\"$dialog\"></Dialog>\n * <View>\n * @param {string} name name of the element\n * @param {object} value value of the element\n */\nconst Replica = types.model({\n  name: types.string,\n  text: types.string,\n  selected: types.optional(types.boolean, false),\n  date: types.optional(types.string, \"\"),\n  hint: types.optional(types.string, \"\"),\n});\n\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  name: types.maybeNull(types.string),\n});\n\nfunction DialogActions(self) {\n  return {\n    fromStateJSON(obj) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n  };\n}\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"Dialog\",\n    data: types.map(Replica),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => DialogActions(self));\n\nconst DialogModel = types.compose(\"DialogModel\", TagAttrs, Model);\n\nconst HtxDialogView = inject(\"store\")(\n  observer(({ store, item }) => {\n    if (!store.task || !store.task.dataObj) {\n      return <Empty />;\n    }\n\n    let result = [];\n    let name = item.value;\n\n    if (name.charAt(0) === \"$\") {\n      name = name.substr(1);\n    }\n\n    store.task.dataObj[name].forEach((item, ind) => {\n      let bgColor;\n\n      if (item.name) {\n        bgColor = convertToRGBA(stringToColor(item.name), 0.1);\n      }\n\n      result.push(\n        <DialogView\n          key={ind}\n          name={item.name}\n          hint={item.hint}\n          text={item.text}\n          selected={item.selected}\n          date={item.date}\n          id={item.id}\n          bg={bgColor}\n        />,\n      );\n    });\n\n    return (\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            maxHeight: \"500px\",\n            overflowY: \"scroll\",\n            paddingRight: \"10px\",\n            marginTop: \"10px\",\n          }}\n        >\n          {result}\n        </div>\n        <Divider dashed={true} />\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"dialog\", DialogModel, HtxDialogView);\n\nexport { DialogModel, HtxDialogView };\n","import React from \"react\";\nimport { types } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\nimport { Typography } from \"antd\";\n\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\n\n/**\n * Header tag, show header\n * @example\n * <View>\n *   <Header name=\"text-1\" value=\"$text\" />\n * </View>\n * @example\n * <View>\n *   <Header name=\"text-1\" value=\"Please select the class\" />\n * </View>\n * @name Header\n * @param {string} value              - text of header\n * @param {number} [size=4]           - size of header\n * @param {string} [style]            - css style string\n * @param {boolean} [underline=false] - underline of header\n */\nconst Model = types.model({\n  type: \"header\",\n  size: types.optional(types.string, \"4\"),\n  style: types.maybeNull(types.string),\n  _value: types.optional(types.string, \"\"),\n  value: types.optional(types.string, \"\"),\n  underline: types.optional(types.boolean, false),\n});\n\nconst HeaderModel = types.compose(\"HeaderModel\", Model, ProcessAttrsMixin);\n\nconst HtxHeader = observer(({ item }) => {\n  const size = parseInt(item.size);\n  const style = item.style ? Tree.cssConverter(item.style) : { margin: \"10px 0\" };\n\n  if (!style.fontSize && size > 4) {\n    style.fontSize = size === 5 ? \"1.2em\" : \"1.1em\";\n  }\n\n  return (\n    <Typography.Title underline={item.underline} level={size} style={style}>\n      {item._value}\n    </Typography.Title>\n  );\n});\n\nRegistry.addTag(\"header\", HeaderModel, HtxHeader);\n\nexport { HtxHeader, HeaderModel };\n","import React from \"react\";\nimport { Table } from \"antd\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\n\n/**\n * Table tag, show object keys and values in a table\n * @example\n * <Table name=\"text-1\" value=\"$text\"></Table>\n * @name Table\n * @param {string} value\n */\nconst Model = types\n  .model({\n    type: \"table\",\n    value: types.maybeNull(types.string),\n    // _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get _value() {\n      if (!self.value) return undefined;\n\n      const store = getRoot(self);\n      const val = self.value.substr(1);\n      return store.task.dataObj[val];\n    },\n  }));\n\nconst TableModel = types.compose(\"TableModel\", Model);\n\nconst HtxTable = inject(\"store\")(\n  observer(({ store, item }) => {\n    let value = item._value;\n\n    if (!value) {\n      if (store.task) value = store.task.dataObj;\n    }\n\n    const columns = [\n      { title: \"Name\", dataIndex: \"type\" },\n      { title: \"Value\", dataIndex: \"value\" },\n    ];\n\n    console.log(item._value);\n    console.log(Object.keys(value));\n\n    const dataSource = Object.keys(value).map(k => {\n      let val = value[k];\n\n      if (typeof val === \"object\") val = JSON.stringify(val);\n\n      return { type: k, value: val };\n    });\n\n    return <Table bordered dataSource={dataSource} columns={columns} pagination={{ hideOnSinglePage: true }} />;\n  }),\n);\n\nRegistry.addTag(\"table\", TableModel, HtxTable);\n\nexport { HtxTable, TableModel };\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\nimport VisibilityMixin from \"../../mixins/Visibility\";\n\n/**\n * View element. It's analogous to div element in html and can be used to visual configure display of blocks\n * @example\n * <View style=\"display: flex;\">\n *   <View style=\"flex: 50%\">\n *     <Header value=\"Facts:\" />\n *     <Text name=\"text\" value=\"$fact\" />\n *   </View>\n *   <View style=\"flex: 50%; margin-left: 1em\">\n *     <Header value=\"Enter your question:\" />\n *     <TextArea name=\"question\" />\n *   </View>\n * </View>\n * @name View\n * @param {block|inline} display\n * @param {string} [style] css style string\n * @param {string} [className] - class name of the css style to apply\n * @param {region-selected|choice-selected|no-region-selected} [visibleWhen] show the contents of a view when condition is true\n * @param {string} [whenTagName] narrow down visibility by name of the tag, for regions use the name of the object tag, for choices use the name of the choices tag\n * @param {string} [whenLabelValue] narrow down visibility by label value\n * @param {string} [whenChoiceValue] narrow down visibility by choice value\n */\nconst TagAttrs = types.model({\n  classname: types.optional(types.string, \"\"),\n  display: types.optional(types.string, \"block\"),\n  style: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"view\",\n    children: Types.unionArray([\n      \"view\",\n      \"header\",\n      \"labels\",\n      \"label\",\n      \"table\",\n      \"taxonomy\",\n      \"choices\",\n      \"choice\",\n      \"rating\",\n      \"ranker\",\n      \"rectangle\",\n      \"ellipse\",\n      \"polygon\",\n      \"keypoint\",\n      \"brush\",\n      \"rectanglelabels\",\n      \"ellipselabels\",\n      \"polygonlabels\",\n      \"keypointlabels\",\n      \"brushlabels\",\n      \"hypertextlabels\",\n      \"timeserieslabels\",\n      \"text\",\n      \"audio\",\n      \"image\",\n      \"hypertext\",\n      \"timeseries\",\n      \"audioplus\",\n      \"list\",\n      \"dialog\",\n      \"textarea\",\n      \"pairwise\",\n      \"style\",\n      \"label\",\n      \"relations\",\n      \"filter\",\n    ]),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }));\n\nconst ViewModel = types.compose(\"ViewModel\", TagAttrs, Model, VisibilityMixin);\n\nconst HtxView = observer(({ item, store }) => {\n  let style = {};\n\n  if (item.display === \"inline\") {\n    style = { display: \"inline-block\", marginRight: \"15px\" };\n  }\n\n  if (item.style) {\n    style = Tree.cssConverter(item.style);\n  }\n\n  if (item.isVisible === false) {\n    style[\"display\"] = \"none\";\n  }\n\n  return (\n    <div className={item.classname} style={style}>\n      {Tree.renderChildren(item)}\n    </div>\n  );\n});\n\nRegistry.addTag(\"view\", ViewModel, HtxView);\n\nexport { HtxView, ViewModel };\n","import React from \"react\";\nimport { types } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\n\nimport Registry from \"../../core/Registry\";\n\n/**\n * Style tag, add css styles right through the config\n * @example\n * <View>\n *   <Style> .cls-name { background: red; }</Style>\n *   <View className=\"cls-name\">\n *     <Header value=\"Header\" />\n *   </View>\n * </View>\n * @name Style\n */\nconst Model = types.model({\n  type: \"style\",\n  value: types.optional(types.string, \"\"),\n});\nconst StyleModel = types.compose(\"StyleModel\", Model);\n\nconst HtxStyle = observer(({ item }) => {\n  return <style dangerouslySetInnerHTML={{ __html: item.value }}></style>;\n});\n\nRegistry.addTag(\"style\", StyleModel, HtxStyle);\n\nexport { HtxStyle, StyleModel };\n","import React from \"react\";\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\nimport { Input } from \"antd\";\n\nimport ProcessAttrsMixin from \"../../mixins/ProcessAttrs\";\nimport Registry from \"../../core/Registry\";\n\n/**\n * Filter search for large amount of labels\n * @example\n * <View>\n *   <Filter name=\"filter\" toName=\"ner\"\n *           hotkey=\"shift+f\" minlength=\"0\"\n *           placeholder=\"Filter\" />\n *   <Labels name=\"ner\" toName=\"text\" showInline=\"false\">\n *     <Label value=\"Person\" />\n *     <Label value=\"Organization\" />\n *   </Labels>\n *   <Text name=\"text\" value=\"$text\" />\n * </View>\n * @name Filter\n * @param {string} [placeholder]      - placeholder text of filter\n * @param {number} [minlength=4]      - size of filter\n * @param {string} [style]            - css style string\n * @param {string} [hotkey]           - hotkey to focus on filter text area\n */\n\nconst TagAttrs = types.model({\n  casesensetive: types.optional(types.boolean, false),\n\n  cleanup: types.optional(types.boolean, true),\n\n  placeholder: types.optional(types.string, \"Quick Filter\"),\n  minlength: types.optional(types.string, \"3\"),\n  hotkey: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    type: \"filter\",\n    _value: types.maybeNull(types.string),\n    name: types.identifier,\n    toname: types.maybeNull(types.string),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get toTag() {\n      return self.completion.names.get(self.toname);\n    },\n  }))\n  .actions(self => ({\n    applyFilter() {\n      let value = self._value;\n      const tch = self.toTag.tiedChildren;\n\n      if (Number(self.minlength) > value.length) {\n        tch.filter(ch => !ch.visible).forEach(ch => ch.setVisible(true));\n        return;\n      }\n\n      if (!self.casesensetive) value = value.toLowerCase();\n\n      tch.forEach(ch => {\n        let chval = ch._value;\n        if (!self.casesensetive) chval = chval.toLowerCase();\n\n        if (chval.indexOf(value) !== -1) ch.setVisible(true);\n        else ch.setVisible(false);\n      });\n    },\n\n    applyFilterEv(e) {\n      let { value } = e.target;\n      self._value = value;\n\n      self.applyFilter();\n    },\n\n    onHotKey() {\n      if (self._ref) {\n        self._ref.focus();\n      }\n\n      return false;\n    },\n\n    setInputRef(ref) {\n      self._ref = ref;\n    },\n\n    selectFirstElement() {\n      const selected = self.toTag.selectFirstVisible();\n      if (selected && self.cleanup) {\n        self._value = \"\";\n        self.applyFilter();\n      }\n    },\n  }));\n\nconst FilterModel = types.compose(\"FilterModel\", Model, TagAttrs, ProcessAttrsMixin);\n\nconst HtxFilter = observer(({ item }) => {\n  const tag = item.toTag;\n\n  if (tag.type.indexOf(\"labels\") === -1 && tag.type.indexOf(\"choices\") === -1) return null;\n\n  return (\n    <Input\n      ref={ref => {\n        item.setInputRef(ref);\n      }}\n      value={item._value}\n      size=\"small\"\n      /* addonAfter={\"clear\"} */\n      onChange={item.applyFilterEv}\n      onPressEnter={item.selectFirstElement}\n      placeholder={item.placeholder}\n    />\n  );\n});\n\nRegistry.addTag(\"filter\", FilterModel, HtxFilter);\n\nexport { HtxFilter, FilterModel };\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { getEnv } from \"mobx-state-tree\";\nimport { inject, observer } from \"mobx-react\";\n\nimport styles from \"./TreeValidation.module.scss\";\n\nexport const TreeValidation = inject(\"store\")(\n  observer(({ store, errors }) => {\n    console.log(styles);\n\n    return (\n      <div className=\"ls-errors\">\n        {errors.map((error, index) => {\n          return (\n            <code\n              key={`error-${index}`}\n              className={styles[\"ls-error\"]}\n              dangerouslySetInnerHTML={{ __html: getEnv(store).messages[error.error](error) }}\n            />\n          );\n        })}\n      </div>\n    );\n  }),\n);\n\nTreeValidation.propTypes = {\n  errors: PropTypes.array.isRequired,\n};\n","/**\n * Libraries\n */\nimport React, { Component } from \"react\";\nimport { Result, Spin } from \"antd\";\nimport { getEnv } from \"mobx-state-tree\";\nimport { observer, Provider } from \"mobx-react\";\n\n/**\n * Core\n */\nimport Tree from \"../../core/Tree\";\n\n/**\n * Components\n */\nimport Completions from \"../Completions/Completions\";\nimport Controls from \"../Controls/Controls\";\nimport Debug from \"../Debug\";\nimport Panel from \"../Panel/Panel\";\nimport Predictions from \"../Predictions/Predictions\";\nimport Segment from \"../Segment/Segment\";\nimport Settings from \"../Settings/Settings\";\nimport SideColumn from \"../SideColumn/SideColumn\";\nimport { RelationsOverlay } from \"../RelationsOverlay/RelationsOverlay\";\n\n/**\n * Tags\n */\nimport * as ObjectTags from \"../../tags/object\"; // eslint-disable-line no-unused-vars\nimport * as ControlTags from \"../../tags/control\"; // eslint-disable-line no-unused-vars\nimport * as VisualTags from \"../../tags/visual\"; // eslint-disable-line no-unused-vars\n\n/**\n * Styles\n */\nimport styles from \"./App.module.scss\";\nimport { TreeValidation } from \"../TreeValidation/TreeValidation\";\nimport { guidGenerator } from \"../../utils/unique\";\n\n/**\n * App\n */\nclass App extends Component {\n  renderSuccess() {\n    return <Result status=\"success\" title={getEnv(this.props.store).messages.DONE} />;\n  }\n\n  renderNoCompletion() {\n    return <Result status=\"success\" title={getEnv(this.props.store).messages.NO_COMP_LEFT} />;\n  }\n\n  renderNothingToLabel() {\n    return <Result status=\"success\" title={getEnv(this.props.store).messages.NO_NEXT_TASK} />;\n  }\n\n  renderNoAccess() {\n    return <Result status=\"warning\" title={getEnv(this.props.store).messages.NO_ACCESS} />;\n  }\n\n  renderConfigValidationException() {\n    return (\n      <Segment>\n        <TreeValidation errors={this.props.store.completionStore.validation} />\n      </Segment>\n    );\n  }\n\n  renderLoader() {\n    return <Result icon={<Spin size=\"large\" />} />;\n  }\n\n  _renderAll(obj) {\n    if (obj.length === 1) return <Segment completion={obj[0]}>{[Tree.renderItem(obj[0].root)]}</Segment>;\n\n    return (\n      <div className=\"ls-renderall\">\n        {obj.map(c => (\n          <div className=\"ls-fade\">\n            <Segment completion={c}>{[Tree.renderItem(c.root)]}</Segment>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  _renderUI(root, store, cs, settings) {\n    return (\n      <>\n        {!cs.viewingAllCompletions && !cs.viewingAllPredictions && (\n          <Segment completion={cs.selected} className={settings.bottomSidePanel ? \"\" : styles.segment + \" ls-segment\"}>\n            <div style={{ position: \"relative\" }}>\n              {Tree.renderItem(root)}\n              {this.renderRelations(cs.selected)}\n            </div>\n            {store.hasInterface(\"controls\") && <Controls item={cs.selected} />}\n          </Segment>\n        )}\n        {cs.viewingAllCompletions && this.renderAllCompletions()}\n        {cs.viewingAllPredictions && this.renderAllPredictions()}\n      </>\n    );\n  }\n\n  renderAllCompletions() {\n    return this._renderAll(this.props.store.completionStore.completions);\n  }\n\n  renderAllPredictions() {\n    return this._renderAll(this.props.store.completionStore.predictions);\n  }\n\n  renderRelations(selectedStore) {\n    const store = selectedStore.relationStore;\n    return <RelationsOverlay key={guidGenerator()} store={store} />;\n  }\n\n  render() {\n    const self = this;\n    const { store } = self.props;\n    const cs = store.completionStore;\n    const root = cs.selected && cs.selected.root;\n    const { settings } = store;\n\n    if (store.isLoading) return self.renderLoader();\n\n    if (store.noTask) return self.renderNothingToLabel();\n\n    if (store.noAccess) return self.renderNoAccess();\n\n    if (store.labeledSuccess) return self.renderSuccess();\n\n    if (!root) return self.renderNoCompletion();\n\n    const stEditor = settings.fullscreen ? styles.editorfs : styles.editor;\n    const stCommon = settings.bottomSidePanel ? styles.commonbsp : styles.common;\n    const stMenu = settings.bottomSidePanel ? styles.menubsp : styles.menu;\n\n    return (\n      <div className={stEditor + \" ls-editor\"}>\n        <Settings store={store} />\n        <Provider store={store}>\n          <div>\n            {store.hasInterface(\"panel\") && <Panel store={store} />}\n\n            {store.showingDescription && (\n              <Segment>\n                <div dangerouslySetInnerHTML={{ __html: store.description }} />\n              </Segment>\n            )}\n\n            {/* <div className={styles.pins}> */}\n            {/*   <div style={{ width: \"100%\", marginRight: \"20px\" }}><PushpinOutlined /></div> */}\n            {/*   <div className={styles.pinsright}><PushpinOutlined /></div> */}\n            {/* </div> */}\n\n            <div className={stCommon + \" ls-common\"}>\n              {cs.validation === null\n                ? this._renderUI(root, store, cs, settings)\n                : this.renderConfigValidationException()}\n              <div className={stMenu + \" ls-menu\"}>\n                {store.hasInterface(\"completions:menu\") && store.settings.showCompletionsPanel && (\n                  <Completions store={store} />\n                )}\n                {store.hasInterface(\"predictions:menu\") && store.settings.showPredictionsPanel && (\n                  <Predictions store={store} />\n                )}\n                {store.hasInterface(\"side-column\") && !cs.viewingAllCompletions && !cs.viewingAllPredictions && (\n                  <SideColumn store={store} />\n                )}\n              </div>\n            </div>\n          </div>\n        </Provider>\n        {store.hasInterface(\"debug\") && <Debug store={store} />}\n      </div>\n    );\n  }\n}\n\nexport default observer(App);\n","import * as d3 from \"d3\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\n\nimport Hotkey from \"../core/Hotkey\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport { TimeSeriesModel, HtxTimeSeries } from \"../tags/object/TimeSeries\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport WithStatesMixin from \"../mixins/WithStates\";\nimport Registry from \"../core/Registry\";\nimport { AreaMixin } from \"../mixins/AreaMixin\";\n\nconst Model = types\n  .model(\"TimeSeriesRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"timeseriesregion\",\n    object: types.late(() => types.reference(TimeSeriesModel)),\n\n    start: types.union(types.number, types.string),\n    end: types.union(types.number, types.string),\n    instant: false,\n  })\n  .views(self => ({\n    get parent() {\n      return self.object;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n    get regionElement() {\n      return self._brushRef;\n    },\n  }))\n  .actions(self => ({\n    growRight(size) {\n      self.end = self.end + size;\n    },\n\n    growLeft(size) {\n      self.start = self.start - size;\n    },\n\n    shrinkRight(size) {\n      self.end = self.end - size;\n    },\n\n    shrinkLeft(size) {\n      self.start = self.start + size;\n    },\n\n    selectRegion() {\n      const one = 1000;\n      const lots = one * 10;\n\n      Hotkey.addKey(\"left\", () => self.growLeft(one), \"Increase region to the left\");\n      Hotkey.addKey(\"right\", () => self.growRight(one), \"Increase region to the right\");\n      Hotkey.addKey(\"alt+left\", () => self.shrinkLeft(one), \"Decrease region on the left\");\n      Hotkey.addKey(\"alt+right\", () => self.shrinkRight(one), \"Decrease region on the right\");\n\n      Hotkey.addKey(\"shift+left\", () => self.growLeft(lots));\n      Hotkey.addKey(\"shift+right\", () => self.growRight(lots));\n      Hotkey.addKey(\"shift+alt+left\", () => self.shrinkLeft(lots));\n      Hotkey.addKey(\"shift+alt+right\", () => self.shrinkRight(lots));\n\n      self.parent.scrollToRegion(self);\n    },\n\n    updateAppearenceFromState() {\n      const s = self.labelsState;\n      if (!s) return;\n\n      // @todo remove\n      self.parent.updateView();\n    },\n\n    afterUnselectRegion() {\n      [\n        \"left\",\n        \"right\",\n        \"ctrl+left\",\n        \"ctrl+right\",\n        \"up\",\n        \"shift+up\",\n        \"down\",\n        \"shift+down\",\n        \"ctrl+up\",\n        \"ctrl+shift+up\",\n        \"ctrl+down\",\n        \"ctrl+shift+down\",\n      ].forEach(key => Hotkey.removeKey(key));\n\n      self.parent.updateView();\n    },\n\n    updateRegion(start, end) {\n      self.start = start;\n      self.end = end;\n    },\n\n    afterCreate() {\n      if (typeof self.start === \"string\") {\n        // deal only with timestamps/indices\n        self.start = self.parent.parseTime(self.start);\n        self.end = self.parent.parseTime(self.end);\n      }\n    },\n\n    serialize(control, object) {\n      // convert to original format from data/csv\n      const format = self.parent.timeformat ? d3.timeFormat(self.parent.timeformat) : Number;\n      let res = {\n        value: {\n          start: format(self.start),\n          end: format(self.end),\n          instant: self.instant,\n        },\n      };\n\n      return res;\n    },\n  }));\n\nconst TimeSeriesRegionModel = types.compose(\n  \"TimeSeriesRegionModel\",\n  WithStatesMixin,\n  RegionsMixin,\n  AreaMixin,\n  NormalizationMixin,\n  Model,\n);\n\nRegistry.addTag(\"timeseriesregion\", TimeSeriesRegionModel, () => {});\nRegistry.addRegionType(TimeSeriesRegionModel, \"timeseries\");\n\nexport { TimeSeriesRegionModel };\n","import { types } from \"mobx-state-tree\";\n\n// export { default as Zoom } from \"./Zoom\";\n// export { default as KeyPoint } from \"./KeyPoint\";\n\nimport { AudioRegionModel } from \"./AudioRegion\";\nimport { BrushRegionModel, HtxBrush } from \"./BrushRegion\";\nimport { HyperTextRegionModel } from \"./HyperTextRegion\";\nimport { TimeSeriesRegionModel } from \"./TimeSeriesRegion\";\nimport { KeyPointRegionModel, HtxKeyPoint } from \"./KeyPointRegion\";\nimport { PolygonPoint, PolygonPointView } from \"./PolygonPoint\";\nimport { PolygonRegionModel, HtxPolygon } from \"./PolygonRegion\";\nimport { RectRegionModel, HtxRectangle } from \"./RectRegion\";\nimport { EllipseRegionModel, HtxEllipse } from \"./EllipseRegion\";\nimport { TextAreaRegionModel, HtxTextAreaRegion } from \"./TextAreaRegion\";\nimport { TextRegionModel } from \"./TextRegion\";\n\nconst AllRegionsType = types.union(\n  AudioRegionModel,\n  BrushRegionModel,\n  EllipseRegionModel,\n  HyperTextRegionModel,\n  TimeSeriesRegionModel,\n  KeyPointRegionModel,\n  PolygonRegionModel,\n  RectRegionModel,\n  TextAreaRegionModel,\n  TextRegionModel,\n);\n\nexport {\n  AllRegionsType,\n  AudioRegionModel,\n  BrushRegionModel,\n  EllipseRegionModel,\n  HtxBrush,\n  HtxEllipse,\n  HtxKeyPoint,\n  HtxPolygon,\n  HtxRectangle,\n  HtxTextAreaRegion,\n  HyperTextRegionModel,\n  TimeSeriesRegionModel,\n  KeyPointRegionModel,\n  PolygonPoint,\n  PolygonPointView,\n  PolygonRegionModel,\n  RectRegionModel,\n  TextAreaRegionModel,\n  TextRegionModel,\n};\n","import { types, destroy } from \"mobx-state-tree\";\n\nimport { AllRegionsType } from \"../regions\";\n\nconst Normalization = types\n  .model(\"Normalization\", {\n    node1: types.reference(AllRegionsType),\n    node2: types.reference(AllRegionsType),\n  })\n  .actions(self => ({\n    toggleHighlight() {\n      if (self.node1 === self.node2) {\n        self.node1.toggleHighlight();\n      } else {\n        self.node1.toggleHighlight();\n        self.node2.toggleHighlight();\n      }\n    },\n  }));\n\nexport default types\n  .model(\"NormalizationStore\", {\n    normalizations: types.array(Normalization),\n  })\n  .actions(self => ({\n    findNormalization(node1, node2) {\n      if (!node2) {\n        return self.normalizations.find(rl => {\n          return rl.node1.id === node1.id || rl.node2.id === node1.id;\n        });\n      }\n\n      return self.normalizations.find(rl => {\n        return rl.node1.id === node1.id && rl.node2.id === node2.id;\n      });\n    },\n\n    addNormalization(node1, node2) {\n      if (self.findNormalization(node1, node2)) return;\n\n      const rl = Normalization.create({\n        node1: node1,\n        node2: node2,\n      });\n\n      self.normalizations.unshift(rl);\n\n      return rl;\n    },\n\n    deleteNormalization(rl) {\n      destroy(rl);\n    },\n\n    deleteNodeNormalization(node) {\n      // lookup $node and delete it's normalization\n      const rl = self.findNormalization(node);\n\n      if (rl) self.deleteNormalization(rl);\n    },\n  }));\n","import { types, getParent, getEnv, onPatch } from \"mobx-state-tree\";\n\nimport Hotkey from \"../core/Hotkey\";\n\nexport default types\n  .model(\"RegionStore\", {\n    sort: types.optional(types.enumeration([\"date\", \"score\"]), \"date\"),\n    sortOrder: types.optional(types.enumeration([\"asc\", \"desc\"]), \"desc\"),\n\n    group: types.optional(types.enumeration([\"type\", \"label\"]), \"type\"),\n\n    view: types.optional(types.enumeration([\"regions\", \"labels\"]), \"regions\"),\n  })\n  .views(self => ({\n    get completion() {\n      return getParent(self);\n    },\n\n    get regions() {\n      return Array.from(self.completion.areas.values()).filter(area => !area.classification);\n    },\n\n    get sortedRegions() {\n      const sorts = {\n        date: isDesc => (isDesc ? self.regions : [...self.regions].reverse()),\n        score: isDesc => [...self.regions].sort(isDesc ? (a, b) => b.score - a.score : (a, b) => a.score - b.score),\n      };\n\n      const sorted = sorts[self.sort](self.sortOrder === \"desc\");\n      return sorted;\n    },\n\n    asTree(enrich) {\n      // every region has a parentID\n      // parentID is an empty string - \"\" if it's top level\n      // or it can contain a string key to the parent region\n      // [ { id: \"1\", parentID: \"\" }, { id: \"2\", parentID: \"1\" } ]\n      // would create a tree of two elements\n\n      const arr = self.sortedRegions;\n      const tree = [],\n        lookup = {};\n\n      arr.forEach((el, idx) => {\n        lookup[el.id] = enrich(el, idx);\n        lookup[el.id][\"item\"] = el;\n        lookup[el.id][\"children\"] = [];\n      });\n\n      Object.keys(lookup).forEach(key => {\n        const el = lookup[key];\n        let pid = el[\"item\"].parentID;\n        if (pid) {\n          let parent = lookup[pid];\n          if (!parent) parent = lookup[`${pid}#${self.completion.id}`];\n          if (parent) {\n            parent.children.push(el);\n            return;\n          }\n        }\n        tree.push(el);\n      });\n\n      return tree;\n    },\n\n    asLabelsTree(enrich) {\n      // collect all label states into two maps\n      const labels = {};\n      const map = {};\n      self.regions.forEach(r => {\n        const l = r.labeling;\n        if (l) {\n          const selected = l.selectedLabels;\n          selected &&\n            selected.forEach(s => {\n              labels[s._value] = s;\n              if (s._value in map) map[s._value].push(r);\n              else map[s._value] = [r];\n            });\n        }\n      });\n\n      // create the tree\n      let idx = 0;\n      const tree = Object.keys(labels).map(lname => {\n        const el = enrich(labels[lname], idx, true);\n        el[\"children\"] = map[lname].map(r => enrich(r, idx++));\n\n        return el;\n      });\n\n      return tree;\n    },\n  }))\n  .actions(self => ({\n    addRegion(region) {\n      self.regions.push(region);\n      getEnv(self).onEntityCreate(region);\n    },\n\n    toggleSortOrder() {\n      if (self.sortOrder === \"asc\") self.sortOrder = \"desc\";\n      else self.sortOrder = \"asc\";\n    },\n\n    setView(view) {\n      self.view = view;\n    },\n\n    setSort(sort) {\n      if (self.sort === sort) {\n        self.toggleSortOrder();\n      } else {\n        self.sortOrder = \"desc\";\n        self.sort = sort;\n      }\n      self.initHotkeys();\n    },\n\n    setGroup(group) {\n      self.group = group;\n    },\n\n    /**\n     * Delete region\n     * @param {obj} region\n     */\n    deleteRegion(region) {\n      const arr = self.regions;\n\n      // find regions that have that region as a parent\n      const children = self.filterByParentID(region.id);\n      children && children.forEach(r => r.setParentID(region.parentID));\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === region) {\n          arr.splice(i, 1);\n        }\n      }\n\n      getEnv(self).onEntityDelete(region);\n      self.initHotkeys();\n    },\n\n    findRegionID(id) {\n      return self.regions.find(r => r.id === id);\n    },\n\n    findRegion(id) {\n      return self.regions.find(r => r.id === id);\n    },\n\n    filterByParentID(id) {\n      return self.regions.filter(r => r.parentID === id);\n    },\n\n    afterCreate() {\n      onPatch(self, patch => {\n        if ((patch.op === \"add\" || patch.op === \"delete\") && patch.path.indexOf(\"/regions/\") !== -1) {\n          self.initHotkeys();\n        }\n      });\n      self.view = self.completion.store.settings.displayLabelsByDefault ? \"labels\" : \"regions\";\n    },\n\n    // init Alt hotkeys for regions selection\n    initHotkeys() {\n      const PREFIX = \"alt+shift+\";\n      const keys = Hotkey.getKeys();\n      const rkeys = keys.filter(k => k.indexOf(PREFIX) !== -1);\n\n      rkeys.forEach(k => Hotkey.removeKey(k));\n\n      self.sortedRegions.forEach((r, n) => {\n        Hotkey.addKey(PREFIX + (n + 1), function() {\n          self.unselectAll();\n          r.selectRegion();\n        });\n      });\n\n      // this is added just for the reference to show up in the\n      // settings page\n      Hotkey.addKey(\"alt+shift+$n\", () => {}, \"Select a region\");\n    },\n\n    /**\n     * @param {boolean} tryToKeepStates try to keep states selected if such settings enabled\n     */\n    unselectAll(tryToKeepStates = false) {\n      self.completion.unselectAll();\n    },\n\n    unhighlightAll() {\n      self.regions.forEach(r => r.setHighlight(false));\n    },\n\n    selectNext() {\n      const { regions } = self;\n      const idx = self.regions.findIndex(r => r.selected);\n      idx !== -1 && regions[idx].unselectRegion();\n\n      const next = regions[idx + 1] !== \"undefined\" ? regions[idx + 1] : regions[0];\n\n      next && next.selectRegion();\n    },\n  }));\n","import { types } from \"mobx-state-tree\";\nimport Registry from \"../core/Registry\";\nimport { RectRegionModel } from \"./RectRegion\";\nimport { KeyPointRegionModel } from \"./KeyPointRegion\";\nimport { AreaMixin } from \"../mixins/AreaMixin\";\nimport { AudioRegionModel } from \"./AudioRegion\";\nimport { TextRegionModel } from \"./TextRegion\";\nimport { HyperTextRegionModel } from \"./HyperTextRegion\";\nimport { PolygonRegionModel } from \"./PolygonRegion\";\nimport { EllipseRegionModel } from \"./EllipseRegion\";\nimport { BrushRegionModel } from \"./BrushRegion\";\nimport { TimeSeriesRegionModel } from \"./TimeSeriesRegion\";\n\n// general Area type for classification Results which doesn't belong to any real Area\nconst ClassificationArea = types.compose(\n  \"ClassificationArea\",\n  AreaMixin,\n  types\n    .model({\n      object: types.late(() => types.reference(types.union(...Registry.objectTypes()))),\n      classification: true,\n    })\n    .actions(self => ({\n      serialize: () => ({}),\n    })),\n);\n\nconst Area = types.union(\n  {\n    dispatcher(sn) {\n      // for some deserializations\n      if (sn.$treenode) return sn.$treenode.type;\n      if (sn.value && Object.values(sn.value).length <= 1) return ClassificationArea;\n      // may be a tag itself or just its name\n      const objectName = sn.object.name || sn.object;\n      // we have to use current config to detect Object tag by name\n      const tag = window.Htx.completionStore.names.get(objectName);\n      // provide value to detect Area by data\n      const available = Registry.getAvailableAreas(tag.type, sn);\n      // union of all available Areas for this Object type\n      if (!available.length) return ClassificationArea;\n      return types.union(...available, ClassificationArea);\n    },\n  },\n  AudioRegionModel,\n  TextRegionModel,\n  HyperTextRegionModel,\n  TimeSeriesRegionModel,\n  RectRegionModel,\n  KeyPointRegionModel,\n  EllipseRegionModel,\n  PolygonRegionModel,\n  BrushRegionModel,\n  ClassificationArea,\n);\n\nexport default Area;\n","import { types, destroy, getParentOfType, getRoot, isValidReference } from \"mobx-state-tree\";\n\nimport { cloneNode, guidGenerator } from \"../core/Helpers\";\nimport { RelationsModel } from \"../tags/control/Relations\";\nimport { TRAVERSE_SKIP } from \"../core/Tree\";\nimport Area from \"../regions/Area\";\n\n/**\n * Relation between two different nodes\n */\nconst Relation = types\n  .model(\"Relation\", {\n    id: types.optional(types.identifier, guidGenerator),\n\n    node1: types.reference(Area),\n    node2: types.reference(Area),\n\n    direction: types.optional(types.enumeration([\"left\", \"right\", \"bi\"]), \"right\"),\n\n    // labels\n    relations: types.maybeNull(RelationsModel),\n\n    showMeta: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, RelationStore);\n    },\n\n    get hasRelations() {\n      const r = self.relations;\n      return r && r.children && r.children.length > 0;\n    },\n  }))\n  .actions(self => ({\n    afterAttach() {\n      const root = getRoot(self);\n      const c = root.completionStore.selected;\n\n      // find <Relations> tag in the tree\n      let relations = null;\n      c.traverseTree(function(node) {\n        if (node.type === \"relations\") {\n          relations = node;\n          return TRAVERSE_SKIP;\n        }\n      });\n\n      if (relations !== null) {\n        self.relations = cloneNode(relations);\n      }\n    },\n\n    rotateDirection() {\n      const d = [\"left\", \"right\", \"bi\"];\n      let idx = d.findIndex(item => item === self.direction);\n\n      idx = idx + 1;\n      if (idx >= d.length) idx = 0;\n\n      self.direction = d[idx];\n    },\n\n    toggleHighlight() {\n      if (self.node1 === self.node2) {\n        self.node1.toggleHighlight();\n      } else {\n        self.node1.toggleHighlight();\n        self.node2.toggleHighlight();\n      }\n    },\n\n    toggleMeta() {\n      self.showMeta = !self.showMeta;\n    },\n\n    setSelfHighlight(highlighted = false) {\n      if (highlighted) {\n        self.parent.setHighlight(self);\n      } else {\n        self.parent.removeHighlight();\n      }\n    },\n  }));\n\nconst RelationStore = types\n  .model(\"RelationStore\", {\n    _relations: types.array(Relation),\n    showConnections: types.optional(types.boolean, true),\n    highlighted: types.maybeNull(types.safeReference(Relation)),\n  })\n  .views(self => ({\n    get relations() {\n      // @todo fix undo/redo with relations\n      // currently undo/redo doesn't consider relations at all,\n      // so some relations can temporarily lose nodes they are connected to during undo/redo\n      return self._relations.filter(r => isValidReference(() => r.node1) && isValidReference(() => r.node2));\n    },\n  }))\n  .actions(self => ({\n    findRelations(node1, node2) {\n      const id1 = node1.id || node1;\n      const id2 = node2?.id || node2;\n\n      if (!id2) {\n        return self.relations.filter(rl => {\n          return rl.node1.id === id1 || rl.node2.id === id1;\n        });\n      }\n\n      return self.relations.filter(rl => {\n        return rl.node1.id === id1 && rl.node2.id === id2;\n      });\n    },\n\n    nodesRelated(node1, node2) {\n      return self.findRelations(node1, node2).length > 0;\n    },\n\n    addRelation(node1, node2) {\n      if (self.nodesRelated(node1, node2)) return;\n\n      const rl = Relation.create({ node1, node2 });\n\n      // self.relations.unshift(rl);\n      self._relations.push(rl);\n\n      return rl;\n    },\n\n    deleteRelation(rl) {\n      destroy(rl);\n    },\n\n    deleteNodeRelation(node) {\n      // lookup $node and delete it's relation\n      const rl = self.findRelations(node);\n      rl.length && rl.forEach(self.deleteRelation);\n    },\n\n    serializeCompletion() {\n      return self.relations.map(r => {\n        const s = {\n          from_id: r.node1.cleanId,\n          to_id: r.node2.cleanId,\n          type: \"relation\",\n          direction: r.direction,\n        };\n\n        if (r.relations) s[\"labels\"] = r.relations.selectedValues();\n\n        return s;\n      });\n    },\n\n    deserializeRelation(node1, node2, direction, labels) {\n      const rl = self.addRelation(node1, node2);\n      rl.direction = direction;\n\n      if (rl.relations && labels)\n        labels.forEach(l => {\n          const r = rl.relations.findRelation(l);\n          if (r) r.setSelected(true);\n        });\n    },\n\n    toggleConnections() {\n      self.showConnections = !self.showConnections;\n    },\n\n    setHighlight(relation) {\n      self.highlighted = relation;\n    },\n\n    removeHighlight() {\n      self.highlighted = null;\n    },\n  }));\n\nexport default RelationStore;\n","import { types, resolvePath, getEnv, onSnapshot, getSnapshot, applySnapshot } from \"mobx-state-tree\";\n\n/**\n * Time Traveller\n */\nconst TimeTraveller = types\n  .model(\"TimeTraveller\", {\n    undoIdx: 0,\n    targetPath: \"\",\n    skipNextUndoState: types.optional(types.boolean, false),\n\n    createdIdx: 0,\n  })\n  .volatile(self => ({\n    history: [],\n    isFrozen: false,\n  }))\n  .views(self => ({\n    get canUndo() {\n      return self.undoIdx > 0;\n    },\n    get canRedo() {\n      return self.undoIdx < self.history.length - 1;\n    },\n  }))\n  .actions(self => {\n    let targetStore;\n    let snapshotDisposer;\n    let updateHandlers = new Set();\n\n    function triggerHandlers() {\n      updateHandlers.forEach(handler => handler());\n    }\n\n    return {\n      freeze() {\n        self.isFrozen = true;\n      },\n\n      unfreeze() {\n        self.isFrozen = false;\n        self.recordNow();\n      },\n\n      recordNow() {\n        self.addUndoState(getSnapshot(targetStore));\n      },\n\n      onUpdate(handler) {\n        updateHandlers.add(handler);\n        return () => {\n          updateHandlers.delete(handler);\n        };\n      },\n\n      addUndoState(recorder) {\n        if (self.isFrozen) return;\n        if (self.skipNextUndoState) {\n          /**\n           * Skip recording if this state was caused by undo / redo\n           */\n          self.skipNextUndoState = false;\n\n          return;\n        }\n\n        self.history.splice(self.undoIdx + 1);\n        self.history.push(recorder);\n        self.undoIdx = self.history.length - 1;\n      },\n\n      reinit() {\n        self.history = [getSnapshot(targetStore)];\n        self.undoIdx = 0;\n        self.createdIdx = 0;\n        triggerHandlers();\n      },\n\n      afterCreate() {\n        targetStore = self.targetPath ? resolvePath(self, self.targetPath) : getEnv(self).targetStore;\n\n        if (!targetStore)\n          throw new Error(\n            \"Failed to find target store for TimeTraveller. Please provide `targetPath`  property, or a `targetStore` in the environment\",\n          );\n        // start listening to changes\n        snapshotDisposer = onSnapshot(targetStore, snapshot => this.addUndoState(snapshot));\n        // record an initial state if no known\n        if (self.history.length === 0) {\n          self.recordNow();\n        }\n\n        self.createdIdx = self.undoIdx;\n      },\n\n      beforeDestroy() {\n        snapshotDisposer();\n      },\n\n      undo() {\n        self.set(self.undoIdx - 1);\n      },\n\n      redo() {\n        self.set(self.undoIdx + 1);\n      },\n\n      set(idx) {\n        self.undoIdx = idx;\n        self.skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[idx]);\n        triggerHandlers();\n      },\n\n      reset() {\n        self.set(self.createdIdx);\n      },\n    };\n  });\n\nexport default TimeTraveller;\n","import { types } from \"mobx-state-tree\";\nimport { ConfigValidator } from \"./ConfigValidator\";\n\n/**@typedef {(errors: any[]) => void} ErrorCallback */\n\nconst DATA_VALIDATORS = {\n  CONFIG: ConfigValidator,\n  RESULT: {\n    validate() {\n      return [];\n    },\n  },\n};\n\n/** @type {{[key: string]: keyof typeof DATA_VALIDATORS}} */\nexport const VALIDATORS = Object.keys(DATA_VALIDATORS).reduce((res, k) => ({ ...res, [k]: k }), {});\n\nconst ValidType = types.union(types.string, types.array(types.string));\n\nexport const ValidationError = types\n  .model({\n    modelName: types.string,\n    field: types.string,\n    error: types.string,\n    value: types.maybeNull(types.string),\n    validType: types.maybeNull(ValidType),\n  })\n  .views(self => ({\n    get identifier() {\n      return [self.modelName, self.field, self.error, self.value]\n        .concat(...[self.validType])\n        .filter(el => el !== null)\n        .join(\"-\");\n    },\n  }));\n\nexport class DataValidator {\n  /**@type {Set<ErrorCallback>} */\n  callbacks = new Set();\n\n  addErrorCallback(callback) {\n    if (!this.callbacks.has(callback)) {\n      this.callbacks.add(callback);\n      return true;\n    }\n    return false;\n  }\n\n  removeErrorCallback(callback) {\n    if (this.callbacks.has(callback)) {\n      this.callbacks.delete(callback);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Perform validation and return errors in a form of an array\n   * @param {keyof typeof DATA_VALIDATORS} validatorName\n   * @param {Object} data\n   */\n  validate(validatorName, data) {\n    const validator = DATA_VALIDATORS[validatorName];\n    let errors = [];\n\n    if (validator) {\n      errors = (validator.validate(data) ?? []).map(compiledError => {\n        try {\n          return ValidationError.create(compiledError);\n        } catch (err) {\n          console.log({ compiledError });\n          throw err;\n        }\n      });\n    } else {\n      console.error(`Unknown validator: ${validatorName}`);\n    }\n\n    setTimeout(() => {\n      if (errors.length) {\n        for (let callback of this.callbacks) {\n          callback(errors);\n        }\n      }\n    }, 0);\n  }\n}\n","import { types, getParent, getEnv, getRoot, destroy, detach, onSnapshot, isAlive } from \"mobx-state-tree\";\n\nimport Constants from \"../core/Constants\";\nimport Hotkey from \"../core/Hotkey\";\nimport NormalizationStore from \"./NormalizationStore\";\nimport RegionStore from \"./RegionStore\";\nimport Registry from \"../core/Registry\";\nimport RelationStore from \"./RelationStore\";\nimport TimeTraveller from \"../core/TimeTraveller\";\nimport Tree, { TRAVERSE_STOP } from \"../core/Tree\";\nimport Types from \"../core/Types\";\nimport Utils from \"../utils\";\nimport { delay } from \"../utils/utilities\";\nimport { AllRegionsType } from \"../regions\";\nimport { guidGenerator } from \"../core/Helpers\";\nimport { DataValidator, ValidationError, VALIDATORS } from \"../core/DataValidator\";\nimport { errorBuilder } from \"../core/DataValidator/ConfigValidator\";\nimport Area from \"../regions/Area\";\nimport throttle from \"lodash.throttle\";\nimport { ViewModel } from \"../tags/visual\";\n\nconst Completion = types\n  .model(\"Completion\", {\n    id: types.identifier,\n    // @todo this value used `guidGenerator(5)` as default value before\n    // @todo but it calculates once, so all the completions have the same pk\n    // @todo why don't use only `id`?\n    // @todo reverted back to wrong type; maybe it breaks all the deserialisation\n    pk: types.maybeNull(types.string),\n\n    selected: types.optional(types.boolean, false),\n    type: types.enumeration([\"completion\", \"prediction\"]),\n\n    createdDate: types.optional(types.string, Utils.UDate.currentISODate()),\n    createdAgo: types.maybeNull(types.string),\n    createdBy: types.optional(types.string, \"Admin\"),\n\n    loadedDate: types.optional(types.Date, new Date()),\n    leadTime: types.maybeNull(types.number),\n\n    draft: false,\n    // @todo use types.Date\n    draftSaved: types.maybe(types.string),\n\n    // created by user during this session\n    userGenerate: types.optional(types.boolean, true),\n    update: types.optional(types.boolean, false),\n    sentUserGenerate: types.optional(types.boolean, false),\n    localUpdate: types.optional(types.boolean, false),\n\n    honeypot: types.optional(types.boolean, false),\n    skipped: false,\n\n    history: types.optional(TimeTraveller, { targetPath: \"../areas\" }),\n\n    dragMode: types.optional(types.boolean, false),\n\n    editable: types.optional(types.boolean, true),\n\n    relationMode: types.optional(types.boolean, false),\n    relationStore: types.optional(RelationStore, {\n      relations: [],\n    }),\n\n    normalizationMode: types.optional(types.boolean, false),\n    normalizationStore: types.optional(NormalizationStore, {\n      normalizations: [],\n    }),\n\n    areas: types.map(Area),\n\n    regionStore: types.optional(RegionStore, {\n      regions: [],\n    }),\n\n    highlightedNode: types.maybeNull(types.safeReference(AllRegionsType)),\n  })\n  .preProcessSnapshot(sn => {\n    sn.draft = Boolean(sn.draft);\n    return sn;\n  })\n  .views(self => ({\n    get store() {\n      return getRoot(self);\n    },\n\n    get list() {\n      return getParent(self, 2);\n    },\n\n    get root() {\n      return self.list.root;\n    },\n\n    get names() {\n      return self.list.names;\n    },\n\n    get toNames() {\n      return self.list.toNames;\n    },\n\n    get objects() {\n      return Array.from(self.names.values()).filter(tag => !tag.toname);\n    },\n\n    get results() {\n      const results = [];\n      self.areas.forEach(a => a.results.forEach(r => results.push(r)));\n      return results;\n    },\n  }))\n  .volatile(self => ({\n    versions: {},\n  }))\n  .actions(self => ({\n    reinitHistory() {\n      self.history.reinit();\n      self.autosave && self.autosave.cancel();\n    },\n\n    setEdit(val) {\n      self.editable = val;\n    },\n\n    setGroundTruth(value) {\n      self.honeypot = value;\n      getEnv(self).onGroundTruth(self.store, self, value);\n    },\n\n    sendUserGenerate() {\n      self.sentUserGenerate = true;\n    },\n\n    setLocalUpdate(value) {\n      self.localUpdate = value;\n    },\n\n    setDragMode(val) {\n      self.dragMode = val;\n    },\n\n    updatePersonalKey(value) {\n      self.pk = value;\n    },\n\n    setNormalizationMode(val) {\n      self.normalizationMode = val;\n    },\n\n    setHighlightedNode(node) {\n      // moved to selectArea and others\n    },\n\n    selectArea(area) {\n      if (self.highlightedNode === area) return;\n      // if (current) current.setSelected(false);\n      self.unselectAll();\n      self.highlightedNode = area;\n      // area.setSelected(true);\n      // @todo some backward compatibility, should be rewritten to state handling\n      // @todo but there are some actions should be performed like scroll to region\n      area.selectRegion && area.selectRegion();\n      area.perRegionTags.forEach(tag => tag.updateFromResult?.(undefined));\n      area.results.forEach(r => r.from_name.updateFromResult?.(r.mainValue));\n    },\n\n    unselectArea(area) {\n      if (self.highlightedNode !== area) return;\n      // area.setSelected(false);\n      self.unselectAll();\n    },\n\n    unselectAreas() {\n      const node = self.highlightedNode;\n      if (!node) return;\n\n      // eslint-disable-next-line no-unused-expressions\n      node.perRegionTags.forEach(tag => tag.submitChanges?.());\n\n      self.highlightedNode = null;\n      // eslint-disable-next-line no-unused-expressions\n      node.afterUnselectRegion?.();\n    },\n\n    unselectStates() {\n      self.names.forEach(tag => tag.unselectAll && tag.unselectAll());\n    },\n\n    /**\n     * @param {boolean} tryToKeepStates don't unselect labels if such setting is enabled\n     */\n    unselectAll(tryToKeepStates = false) {\n      const keepStates = tryToKeepStates && self.store.settings.continuousLabeling;\n\n      self.unselectAreas();\n      if (!keepStates) self.unselectStates();\n    },\n\n    removeArea(area) {\n      destroy(area);\n    },\n\n    startRelationMode(node1) {\n      self._relationObj = node1;\n      self.relationMode = true;\n\n      document.body.style.cursor = Constants.CHOOSE_CURSOR;\n    },\n\n    stopRelationMode() {\n      document.body.style.cursor = Constants.DEFAULT_CURSOR;\n\n      self._relationObj = null;\n      self.relationMode = false;\n\n      self.regionStore.unhighlightAll();\n    },\n\n    deleteAllRegions({ deleteReadOnly = false } = {}) {\n      let { regions } = self.regionStore;\n\n      if (deleteReadOnly === false) regions = regions.filter(r => r.readonly === false);\n\n      regions.forEach(r => r.deleteRegion());\n    },\n\n    addRegion(reg) {\n      self.regionStore.unselectAll(true);\n\n      if (self.relationMode) {\n        self.addRelation(reg);\n        self.stopRelationMode();\n      }\n    },\n\n    loadRegionState(region) {\n      region.states &&\n        region.states.forEach(s => {\n          const mainViewTag = self.names.get(s.name);\n          mainViewTag.unselectAll && mainViewTag.unselectAll();\n          mainViewTag.copyState(s);\n        });\n    },\n\n    unloadRegionState(region) {\n      region.states &&\n        region.states.forEach(s => {\n          const mainViewTag = self.names.get(s.name);\n          mainViewTag.unselectAll && mainViewTag.unselectAll();\n          mainViewTag.perRegionCleanup && mainViewTag.perRegionCleanup();\n        });\n    },\n\n    addRelation(reg) {\n      self.relationStore.addRelation(self._relationObj, reg);\n    },\n\n    addNormalization(normalization) {\n      self.normalizationStore.addNormalization();\n    },\n\n    validate() {\n      let ok = true;\n\n      self.traverseTree(function(node) {\n        if (node.required === true) {\n          ok = node.validate();\n          if (ok === false) {\n            ok = false;\n            return TRAVERSE_STOP;\n          }\n        }\n      });\n\n      return ok;\n    },\n\n    traverseTree(cb) {\n      return Tree.traverseTree(self.root, cb);\n    },\n\n    /**\n     *\n     */\n    beforeSend() {\n      self.traverseTree(node => {\n        if (node && node.beforeSend) {\n          node.beforeSend();\n        }\n      });\n\n      self.stopRelationMode();\n      self.unselectAll();\n    },\n\n    /**\n     * Delete region\n     * @param {*} region\n     */\n    deleteRegion(region) {\n      self.relationStore.deleteNodeRelation(region);\n      if (region.type === \"polygonregion\") {\n        detach(region);\n      }\n\n      destroy(region);\n    },\n\n    deleteArea(area) {\n      destroy(area);\n    },\n\n    // update some fragile parts after snapshot manipulations (undo/redo)\n    updateObjects() {\n      self.unselectAll();\n      self.names.forEach(tag => tag.needsUpdate && tag.needsUpdate());\n      self.areas.forEach(area => area.updateAppearenceFromState && area.updateAppearenceFromState());\n    },\n\n    addVersions(versions) {\n      self.versions = { ...self.versions, ...versions };\n    },\n\n    toggleDraft() {\n      const isDraft = self.draft;\n      if (!isDraft && !self.versions.draft) return;\n      self.autosave.flush();\n      self.pauseAutosave();\n      if (isDraft) self.versions.draft = self.serializeCompletion();\n      self.deleteAllRegions({ deleteReadOnly: true });\n      if (isDraft) {\n        self.deserializeCompletion(self.versions.result);\n        self.draft = false;\n      } else {\n        self.deserializeCompletion(self.versions.draft);\n        self.draft = true;\n      }\n      self.updateObjects();\n      self.startAutosave();\n    },\n\n    async startAutosave() {\n      if (!getEnv(self).onSubmitDraft) return;\n      if (self.type !== \"completion\") return;\n\n      // some async tasks should be performed after deserialization\n      // so start autosave on next tick\n      await delay(0);\n\n      if (self.autosave) {\n        self.autosave.cancel();\n        self.autosave.paused = false;\n        return;\n      }\n\n      console.info(\"autosave initialized\");\n\n      // mobx will modify methods, so add it directly to have cancel() method\n      self.autosave = throttle(\n        snapshot => {\n          if (self.autosave.paused) return;\n\n          const result = self.serializeCompletion();\n          // if this is new completion and no regions added yet\n          if (!self.pk && !result.length) return;\n\n          self.setDraft(true);\n          self.versions.draft = result;\n\n          self.store.submitDraft(self).then(self.onDraftSaved);\n        },\n        5000,\n        { leading: false },\n      );\n\n      onSnapshot(self.areas, self.autosave);\n    },\n\n    pauseAutosave() {\n      if (!self.autosave) return;\n      self.autosave.paused = true;\n      self.autosave.cancel();\n    },\n\n    beforeDestroy() {\n      self.autosave && self.autosave.cancel && self.autosave.cancel();\n    },\n\n    setDraft(flag) {\n      self.draft = flag;\n    },\n\n    onDraftSaved() {\n      self.draftSaved = Utils.UDate.currentISODate();\n    },\n\n    dropDraft() {\n      if (!self.autosave) return;\n      self.autosave.cancel();\n      self.draft = false;\n      self.draftSaved = undefined;\n      self.versions.draft = undefined;\n    },\n\n    afterAttach() {\n      self.traverseTree(node => {\n        // called when the completion is attached to the main store,\n        // at this point the whole tree is available. This method\n        // may come handy when you have a tag that acts or depends\n        // on other elements in the tree.\n        if (node.completionAttached) node.completionAttached();\n\n        // copy tools from control tags into object tools manager\n        // [DOCS] each object tag may have an assigned tools\n        // manager. This assignment may happen because user asked\n        // for it through the config, or because the attached\n        // control tags are complex and require additional UI\n        // interfaces. Each control tag defines a set of tools it\n        // supports\n        if (node && node.getToolsManager) {\n          const tools = node.getToolsManager();\n          const states = self.toNames.get(node.name);\n\n          states && states.forEach(s => tools.addToolsFromControl(s));\n        }\n      });\n\n      self.history.onUpdate(self.updateObjects);\n      self.startAutosave();\n    },\n\n    afterCreate() {\n      if (self.userGenerate && !self.sentUserGenerate) {\n        self.loadedDate = new Date();\n      }\n    },\n\n    setupHotKeys() {\n      Hotkey.unbindAll();\n\n      let audiosNum = 0;\n      let audioNode = null;\n      let mod = \"shift+space\";\n      let comb = mod;\n\n      // [TODO] we need to traverse this two times, fix\n      // Hotkeys setup\n      self.traverseTree(node => {\n        if (node && node.onHotKey && node.hotkey) {\n          Hotkey.addKey(node.hotkey, node.onHotKey, undefined, node.hotkeyScope);\n        }\n      });\n\n      self.traverseTree(node => {\n        // add Space hotkey for playbacks of audio, there might be\n        // multiple audios on the screen\n        if (node && !node.hotkey && (node.type === \"audio\" || node.type === \"audioplus\")) {\n          if (audiosNum > 0) comb = mod + \"+\" + (audiosNum + 1);\n          else audioNode = node;\n\n          node.hotkey = comb;\n          Hotkey.addKey(comb, node.onHotKey, \"Play an audio\");\n\n          audiosNum++;\n        }\n      });\n\n      self.traverseTree(node => {\n        /**\n         * Hotkey for controls\n         */\n        if (node && node.onHotKey && !node.hotkey) {\n          const comb = Hotkey.makeComb();\n\n          if (!comb) return;\n\n          node.hotkey = comb;\n          Hotkey.addKey(node.hotkey, node.onHotKey);\n        }\n      });\n\n      if (audioNode && audiosNum > 1) {\n        audioNode.hotkey = mod + \"+1\";\n        Hotkey.addKey(audioNode.hotkey, audioNode.onHotKey);\n        Hotkey.removeKey(mod);\n      }\n\n      // prevent spacebar from scrolling\n      // document.onkeypress = function(e) {\n      //     e = e || window.event;\n\n      //   var charCode = e.keyCode || e.which;\n      //   if (charCode === 32) {\n      //     e.preventDefault();\n      //     return false;\n      //   }\n      // };\n\n      Hotkey.setScope(\"__main__\");\n    },\n\n    createResult(areaValue, resultValue, control, object) {\n      const result = {\n        from_name: control.name,\n        // @todo should stick to area\n        to_name: object,\n        type: control.resultType,\n        value: resultValue,\n      };\n\n      const area = self.areas.put({\n        id: guidGenerator(),\n        object,\n        // data for Model instance\n        ...areaValue,\n        // for Model detection\n        value: areaValue,\n        results: [result],\n      });\n\n      if (self.store.settings.selectAfterCreate) {\n        if (!area.classification) {\n          // some regions might need some actions right after creation (i.e. text)\n          // and some may be already deleted (i.e. bboxes)\n          setTimeout(() => isAlive(area) && self.selectArea(area));\n        }\n      } else {\n        // unselect labels after use, but consider \"keep labels selected\" settings\n        if (control.type.includes(\"labels\")) self.unselectAll(true);\n      }\n\n      return area;\n    },\n\n    serializeCompletion() {\n      return self.results\n        .map(r => r.serialize())\n        .filter(Boolean)\n        .concat(self.relationStore.serializeCompletion());\n    },\n\n    // Some completions may be created with wrong assumptions\n    // And this problems are fixable, so better to fix them on start\n    fixBrokenCompletion(json) {\n      json.forEach(obj => {\n        if (obj.type === \"htmllabels\") obj.type = \"hypertextlabels\";\n      });\n      return json;\n    },\n\n    /**\n     * Deserialize completion of models\n     */\n    deserializeCompletion(json) {\n      try {\n        let objCompletion = json;\n\n        if (typeof objCompletion !== \"object\") {\n          objCompletion = JSON.parse(objCompletion);\n        }\n\n        objCompletion = self.fixBrokenCompletion(objCompletion);\n\n        self._initialCompletionObj = objCompletion;\n\n        objCompletion.forEach(obj => {\n          if (obj[\"type\"] !== \"relation\") {\n            const { id, value, type, ...data } = obj;\n            // avoid duplicates of the same areas in different completions/predictions\n            const areaId = `${id || guidGenerator()}#${self.id}`;\n            const resultId = `${data.from_name}@${areaId}`;\n\n            let area = self.areas.get(areaId);\n            if (!area) {\n              area = self.areas.put({\n                id: areaId,\n                object: data.to_name,\n                ...data,\n                ...value,\n                value,\n              });\n            }\n\n            area.addResult({ ...data, id: resultId, type, value });\n          }\n        });\n\n        self.results.filter(r => r.area.classification).forEach(r => r.from_name.updateFromResult?.(r.mainValue));\n\n        objCompletion.forEach(obj => {\n          if (obj[\"type\"] === \"relation\") {\n            self.relationStore.deserializeRelation(\n              `${obj.from_id}#${self.id}`,\n              `${obj.to_id}#${self.id}`,\n              obj.direction,\n              obj.labels,\n            );\n          }\n        });\n      } catch (e) {\n        console.error(e);\n        self.list.addErrors([errorBuilder.generalError(e)]);\n      }\n    },\n  }));\n\nexport default types\n  .model(\"CompletionStore\", {\n    selected: types.maybeNull(types.reference(Completion)),\n\n    root: Types.allModelsTypes(),\n    names: types.map(types.reference(Types.allModelsTypes())),\n    toNames: types.map(types.array(types.reference(Types.allModelsTypes()))),\n\n    completions: types.array(Completion),\n    predictions: types.array(Completion),\n\n    viewingAllCompletions: types.optional(types.boolean, false),\n    viewingAllPredictions: types.optional(types.boolean, false),\n\n    validation: types.maybeNull(types.array(ValidationError)),\n  })\n  .views(self => ({\n    get store() {\n      return getRoot(self);\n    },\n  }))\n  .actions(self => {\n    function toggleViewingAll() {\n      if (self.viewingAllCompletions || self.viewingAllPredictions) {\n        if (self.selected) {\n          self.selected.unselectAll();\n          self.selected.selected = false;\n        }\n\n        self.completions.forEach(c => {\n          c.editable = false;\n        });\n      } else {\n        selectCompletion(self.completions[0].id);\n      }\n    }\n\n    function toggleViewingAllPredictions() {\n      self.viewingAllPredictions = !self.viewingAllPredictions;\n\n      if (self.viewingAllPredictions) self.viewingAllCompletions = false;\n\n      toggleViewingAll();\n    }\n\n    function toggleViewingAllCompletions() {\n      self.viewingAllCompletions = !self.viewingAllCompletions;\n\n      if (self.viewingAllCompletions) self.viewingAllPredictions = false;\n\n      toggleViewingAll();\n    }\n\n    function unselectViewingAll() {\n      self.viewingAllCompletions = false;\n      self.viewingAllPredictions = false;\n    }\n\n    function selectItem(id, list) {\n      unselectViewingAll();\n\n      if (self.selected) {\n        self.selected.unselectAll();\n        self.selected.selected = false;\n      }\n\n      // sad hack with pk while sdk are not using pk everywhere\n      const c = list.find(c => c.id === id || c.pk === String(id)) || list[0];\n      if (!c) return null;\n      c.selected = true;\n      self.selected = c;\n      c.updateObjects();\n\n      return c;\n    }\n\n    /**\n     * Select completion\n     * @param {*} id\n     */\n    function selectCompletion(id) {\n      if (!self.completions.length) return null;\n\n      const { selected } = self;\n      const c = selectItem(id, self.completions);\n\n      c.editable = true;\n      c.setupHotKeys();\n\n      getEnv(self).onSelectCompletion(c, selected);\n\n      return c;\n    }\n\n    function selectPrediction(id) {\n      const p = selectItem(id, self.predictions);\n\n      return p;\n    }\n\n    function deleteCompletion(completion) {\n      getEnv(self).onDeleteCompletion(self.store, completion);\n\n      /**\n       * MST destroy completion\n       */\n      destroy(completion);\n\n      self.selected = null;\n      /**\n       * Select other completion\n       */\n      if (self.completions.length > 0) {\n        self.selectCompletion(self.completions[0].id);\n      }\n    }\n\n    function initRoot(config) {\n      if (self.root) return;\n\n      // convert config to mst model\n      const rootModel = Tree.treeToModel(config);\n      const modelClass = Registry.getModelByTag(rootModel.type);\n      // hacky way to get all the available object tag names\n      const objectTypes = Registry.objectTypes().map(type => type.name.replace(\"Model\", \"\").toLowerCase());\n      const objects = [];\n\n      self.validate(VALIDATORS.CONFIG, rootModel);\n\n      try {\n        self.root = modelClass.create(rootModel);\n      } catch (e) {\n        console.error(e);\n        self.addErrors([errorBuilder.generalError(e)]);\n        // we have to return at least empty View to display interface\n        return (self.root = ViewModel.create({ id: \"error\" }));\n      }\n\n      Tree.traverseTree(self.root, node => {\n        if (node?.name) {\n          self.names.put(node);\n          if (objectTypes.includes(node.type)) objects.push(node.name);\n        }\n      });\n\n      // initialize toName bindings [DOCS] name & toName are used to\n      // connect different components to each other\n      Tree.traverseTree(self.root, node => {\n        const isControlTag = node.name && !objectTypes.includes(node.type);\n        // auto-infer missed toName if there is only one object tag in the config\n        if (isControlTag && !node.toname && objects.length === 1) {\n          node.toname = objects[0];\n        }\n\n        if (node && node.toname) {\n          const val = self.toNames.get(node.toname);\n          if (val) {\n            val.push(node.name);\n          } else {\n            self.toNames.set(node.toname, [node.name]);\n          }\n        }\n\n        if (self.store.task && node.updateValue) node.updateValue(self.store);\n      });\n\n      return self.root;\n    }\n\n    function addItem(options) {\n      const { user, config } = self.store;\n\n      if (!self.root) initRoot(config);\n\n      const pk = options.pk || options.id;\n\n      //\n      let node = {\n        userGenerate: false,\n\n        ...options,\n\n        // id is internal so always new to prevent collisions\n        id: guidGenerator(5),\n        // pk and id may be missing, so undefined | string\n        pk: pk && String(pk),\n        root: self.root,\n      };\n\n      if (user && !(\"createdBy\" in node)) node[\"createdBy\"] = user.displayName;\n\n      //\n      return Completion.create(node);\n    }\n\n    function addPrediction(options = {}) {\n      options.editable = false;\n      options.type = \"prediction\";\n\n      const item = addItem(options);\n      self.predictions.unshift(item);\n\n      return item;\n    }\n\n    function addCompletion(options = {}) {\n      options.type = \"completion\";\n\n      const item = addItem(options);\n      item.addVersions({ result: options.result, draft: options.draft });\n      self.completions.unshift(item);\n\n      return item;\n    }\n\n    function addCompletionFromPrediction(prediction) {\n      // immutable work, because we'll change ids soon\n      const s = prediction._initialCompletionObj.map(r => ({ ...r }));\n      const c = self.addCompletion({ userGenerate: true, result: s });\n\n      const ids = {};\n\n      // Area id is <uniq-id>#<completion-id> to be uniq across all tree\n      s.forEach(r => {\n        if (\"id\" in r) {\n          const id = r.id.replace(/#.*$/, `#${c.id}`);\n          ids[r.id] = id;\n          r.id = id;\n        }\n      });\n\n      s.forEach(r => {\n        if (r.parent_id) {\n          if (ids[r.parent_id]) r.parent_id = ids[r.parent_id];\n          // impossible case but to not break the app better to reset it\n          else r.parent_id = null;\n        }\n      });\n\n      selectCompletion(c.id);\n      c.deserializeCompletion(s);\n\n      return c;\n    }\n\n    /** ERRORS HANDLING */\n    const handleErrors = errors => {\n      self.addErrors(errors);\n    };\n\n    const addErrors = errors => {\n      const ids = [];\n\n      const newErrors = [...(self.validation ?? []), ...errors].reduce((res, error) => {\n        const id = error.identifier;\n\n        if (ids.indexOf(id) < 0) {\n          ids.push(id);\n          res.push(error);\n        }\n\n        return res;\n      }, []);\n\n      self.validation = newErrors;\n    };\n\n    const afterCreate = () => {\n      self._validator = new DataValidator();\n      self._validator.addErrorCallback(handleErrors);\n    };\n\n    const beforeDestroy = () => {\n      self._validator.removeErrorCallback(handleErrors);\n    };\n\n    const validate = (validatorName, data) => {\n      self._validator.validate(validatorName, data);\n    };\n\n    return {\n      afterCreate,\n      beforeDestroy,\n\n      toggleViewingAllCompletions,\n      toggleViewingAllPredictions,\n\n      initRoot,\n\n      addPrediction,\n      addCompletion,\n      addCompletionFromPrediction,\n\n      addErrors,\n      validate,\n\n      selectCompletion,\n      selectPrediction,\n\n      deleteCompletion,\n    };\n  });\n","import { types, getParent } from \"mobx-state-tree\";\n\n/**\n * Project Store\n */\nconst ProjectStore = types\n  .model(\"Project\", {\n    /**\n     * Project ID\n     */\n    id: types.identifierNumber,\n  })\n  .views(self => ({\n    get app() {\n      return getParent(self);\n    },\n  }));\n\nexport default ProjectStore;\n","import { types, onSnapshot, getRoot } from \"mobx-state-tree\";\n\nimport Hotkey from \"../core/Hotkey\";\nimport Utils from \"../utils\";\n\nconst SIDEPANEL_MODE_REGIONS = \"SIDEPANEL_MODE_REGIONS\";\nconst SIDEPANEL_MODE_LABELS = \"SIDEPANEL_MODE_LABELS\";\n\n/**\n * Setting store of Label Studio\n */\nconst SettingsModel = types\n  .model(\"SettingsModel\", {\n    /**\n     * Hotkey\n     */\n    enableHotkeys: types.optional(types.boolean, true),\n    /**\n     * Hotkey panel\n     */\n    enablePanelHotkeys: types.optional(types.boolean, true),\n    /**\n     * Tooltips preview\n     */\n    enableTooltips: types.optional(types.boolean, false),\n\n    enableLabelTooltips: types.optional(types.boolean, true),\n\n    /**\n     * Keep label selected after creating a region\n     */\n    continuousLabeling: false,\n\n    // select regions after creating them\n    selectAfterCreate: false,\n\n    fullscreen: types.optional(types.boolean, false),\n\n    bottomSidePanel: types.optional(types.boolean, false),\n\n    sidePanelMode: types.optional(\n      types.enumeration([SIDEPANEL_MODE_REGIONS, SIDEPANEL_MODE_LABELS]),\n      SIDEPANEL_MODE_REGIONS,\n    ),\n\n    imageFullSize: types.optional(types.boolean, false),\n\n    enableAutoSave: types.optional(types.boolean, false),\n\n    showLabels: types.optional(types.boolean, false),\n\n    showLineNumbers: false,\n\n    showCompletionsPanel: types.optional(types.boolean, true),\n\n    showPredictionsPanel: types.optional(types.boolean, true),\n    // showScore: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n    get displayLabelsByDefault() {\n      return self.sidePanelMode === SIDEPANEL_MODE_LABELS;\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      // sandboxed environment may break even on check of this property\n      try {\n        const { localStorage } = window;\n        if (!localStorage) return;\n      } catch (e) {\n        return;\n      }\n\n      const lsKey = \"labelStudio:settings\";\n\n      // load settings from the browser store\n      const lss = localStorage.getItem(lsKey);\n      if (lss) {\n        const lsp = JSON.parse(lss);\n        typeof lsp === \"object\" &&\n          lsp !== null &&\n          Object.keys(lsp).forEach(k => {\n            if (k in self) self[k] = lsp[k];\n          });\n      }\n\n      // capture changes and save it\n      onSnapshot(self, ss => {\n        localStorage.setItem(lsKey, JSON.stringify(ss));\n      });\n    },\n\n    //   toggleShowScore() {\n    //       self.showScore = !self.showScore;\n    // },\n\n    toggleShowLabels() {\n      self.showLabels = !self.showLabels;\n\n      Utils.HTML.toggleLabelsAndScores(self.showLabels);\n\n      // const c = getRoot(self).completionStore.selected;\n      // c.regionStore.regions.forEach(r => {\n      //   // TODO there is no showLables in the regions right now\n      //   return typeof r.showLabels === \"boolean\" && r.setShowLables(self.showLabels);\n      // });\n    },\n\n    toggleShowLineNumbers() {\n      self.showLineNumbers = !self.showLineNumbers;\n\n      // hack to enable it from outside, because Text spawns spans on every rerender\n      // @todo it should be enabled inside Text\n      document.querySelectorAll(\".htx-text\").forEach(text => text.classList.toggle(\"htx-line-numbers\"));\n    },\n\n    toggleContinuousLabeling() {\n      self.continuousLabeling = !self.continuousLabeling;\n    },\n\n    toggleSelectAfterCreate() {\n      self.selectAfterCreate = !self.selectAfterCreate;\n    },\n\n    toggleSidepanelModel() {\n      self.sidePanelMode =\n        self.sidePanelMode === SIDEPANEL_MODE_LABELS ? SIDEPANEL_MODE_REGIONS : SIDEPANEL_MODE_LABELS;\n      // apply immediately\n      self.completion.regionStore.setView(self.displayLabelsByDefault ? \"labels\" : \"regions\");\n    },\n\n    toggleAutoSave() {\n      self.enableAutoSave = !self.enableAutoSave;\n    },\n\n    toggleHotkeys() {\n      self.enableHotkeys = !self.enableHotkeys;\n      if (self.enableHotkeys) {\n        Hotkey.setScope(\"__main__\");\n      } else {\n        Hotkey.setScope(\"__none__\");\n      }\n    },\n\n    /**\n     * Function to off/on panel of hotkeys\n     */\n    togglePanelHotkeys() {\n      self.enablePanelHotkeys = !self.enablePanelHotkeys;\n    },\n\n    /**\n     * Function to off/on tooltips\n     */\n    toggleTooltips() {\n      self.enableTooltips = !self.enableTooltips;\n    },\n\n    toggleFullscreen() {\n      self.fullscreen = !self.fullscreen;\n    },\n\n    toggleBottomSP() {\n      self.bottomSidePanel = !self.bottomSidePanel;\n    },\n\n    toggleImageFS() {\n      self.imageFullSize = !self.imageFullSize;\n    },\n\n    toggleLabelTooltips() {\n      self.enableLabelTooltips = !self.enableLabelTooltips;\n    },\n\n    toggleCompletionsPanel() {\n      self.showCompletionsPanel = !self.showCompletionsPanel;\n    },\n\n    togglePredictionsPanel() {\n      self.showPredictionsPanel = !self.showPredictionsPanel;\n    },\n  }));\n\nexport default SettingsModel;\n","import { types, getParent } from \"mobx-state-tree\";\n\nimport Utilities from \"../utils\";\n\n/**\n * Model for HTTP Basic Authorization\n */\nconst AuthStore = types.model({\n  enable: types.optional(types.boolean, false),\n  username: types.string,\n  password: types.string,\n  to: types.string,\n});\n\n/**\n * Task Store\n */\nconst TaskStore = types\n  .model(\"Task\", {\n    id: types.maybeNull(types.number),\n    load: types.optional(types.boolean, false),\n    auth: types.maybeNull(AuthStore),\n    /**\n     * Data of task, may contain an object but in App Store will be transformed into string\n     * MST doesn't support processing of dynamic objects with unkown keys value\n     */\n    data: types.maybeNull(types.string),\n  })\n  .views(self => ({\n    get app() {\n      return getParent(self);\n    },\n\n    /**\n     * Return JSON with task data\n     * @returns {object}\n     */\n    get dataObj() {\n      if (Utilities.Checkers.isStringJSON(self.data)) {\n        return JSON.parse(self.data);\n      } else if (typeof self.data === \"object\") {\n        return self.data;\n      } else {\n        return null;\n      }\n    },\n  }));\n\nexport default TaskStore;\n","import { types } from \"mobx-state-tree\";\n\n/**\n * User store of Label Studio\n */\nconst UserStore = types\n  .model(\"UserStore\", {\n    /**\n     * Personal key of user\n     */\n    pk: types.maybeNull(types.integer),\n    /**\n     * Name of user\n     */\n    firstName: types.maybeNull(types.string),\n    /**\n     * Last name of user\n     */\n    lastName: types.maybeNull(types.string),\n  })\n  .views(self => ({\n    get displayName() {\n      if (self.firstName || self.lastName) return `${self.firstName} ${self.lastName}`;\n\n      return \"\";\n    },\n  }));\n\nexport default UserStore;\n","import { types, getEnv } from \"mobx-state-tree\";\n\nimport CompletionStore from \"./CompletionStore\";\nimport Hotkey from \"../core/Hotkey\";\nimport InfoModal from \"../components/Infomodal/Infomodal\";\nimport Project from \"./ProjectStore\";\nimport Settings from \"./SettingsStore\";\nimport Task from \"./TaskStore\";\nimport User from \"./UserStore\";\nimport Utils from \"../utils\";\nimport { delay } from \"../utils/utilities\";\n\nexport default types\n  .model(\"AppStore\", {\n    /**\n     * XML config\n     */\n    config: types.string,\n\n    /**\n     * Task with data, id and project\n     */\n    task: types.maybeNull(Task),\n\n    project: types.maybeNull(Project),\n\n    /**\n     * Configure the visual UI shown to the user\n     */\n    interfaces: types.array(types.string),\n\n    /**\n     * Flag for labeling of tasks\n     */\n    explore: types.optional(types.boolean, false),\n\n    /**\n     * Completions Store\n     */\n    completionStore: types.optional(CompletionStore, {\n      completions: [],\n      predictions: [],\n    }),\n\n    /**\n     * User of Label Studio\n     */\n    user: types.maybeNull(User),\n\n    /**\n     * Debug for development environment\n     */\n    debug: types.optional(types.boolean, true),\n\n    /**\n     * Settings of Label Studio\n     */\n    settings: types.optional(Settings, {}),\n\n    /**\n     * Data of description flag\n     */\n    description: types.maybeNull(types.string),\n    // apiCalls: types.optional(types.boolean, true),\n\n    /**\n     * Flag for settings\n     */\n    showingSettings: types.optional(types.boolean, false),\n    /**\n     * Flag\n     * Description of task in Label Studio\n     */\n    showingDescription: types.optional(types.boolean, false),\n    /**\n     * Loading of Label Studio\n     */\n    isLoading: types.optional(types.boolean, false),\n    /**\n     * Submitting task; used to prevent from duplicating requests\n     */\n    isSubmitting: false,\n    /**\n     * Flag for disable task in Label Studio\n     */\n    noTask: types.optional(types.boolean, false),\n    /**\n     * Flag for no access to specific task\n     */\n    noAccess: types.optional(types.boolean, false),\n    /**\n     * Finish of labeling\n     */\n    labeledSuccess: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    /**\n     * Get alert\n     */\n    get alert() {\n      return getEnv(self).alert;\n    },\n  }))\n  .actions(self => {\n    /**\n     * Update settings display state\n     */\n    function toggleSettings() {\n      self.showingSettings = !self.showingSettings;\n    }\n\n    /**\n     * Update description display state\n     */\n    function toggleDescription() {\n      self.showingDescription = !self.showingDescription;\n    }\n\n    function setFlags(flags) {\n      const names = [\n        \"showingSettings\",\n        \"showingDescription\",\n        \"isLoading\",\n        \"isSubmitting\",\n        \"noTask\",\n        \"noAccess\",\n        \"labeledSuccess\",\n      ];\n\n      for (let n of names) if (n in flags) self[n] = flags[n];\n    }\n\n    /**\n     * Check for interfaces\n     * @param {string} name\n     * @returns {string | undefined}\n     */\n    function hasInterface(name) {\n      return self.interfaces.find(i => name === i) !== undefined;\n    }\n\n    function addInterface(name) {\n      return self.interfaces.push(name);\n    }\n\n    /**\n     * Function\n     */\n    function afterCreate() {\n      // important thing to detect Area atomatically: it hasn't access to store, only via global\n      window.Htx = self;\n\n      /**\n       * Hotkey for submit\n       */\n      Hotkey.addKey(\"ctrl+enter\", self.submitCompletion, \"Submit a task\");\n\n      /**\n       * Hotkey for skip task\n       */\n      if (self.hasInterface(\"skip\")) Hotkey.addKey(\"ctrl+space\", self.skipTask, \"Skip a task\");\n\n      /**\n       * Hotkey for update completion\n       */\n      if (self.hasInterface(\"update\")) Hotkey.addKey(\"alt+enter\", self.updateCompletion, \"Update a task\");\n\n      /**\n       * Hotkey for delete\n       */\n      Hotkey.addKey(\n        \"ctrl+backspace\",\n        function() {\n          const { selected } = self.completionStore;\n          selected.deleteAllRegions();\n        },\n        \"Delete all regions\",\n      );\n\n      // create relation\n      Hotkey.addKey(\n        \"r\",\n        function() {\n          const c = self.completionStore.selected;\n          if (c && c.highlightedNode && !c.relationMode) {\n            c.startRelationMode(c.highlightedNode);\n          }\n        },\n        \"Create relation when region is selected\",\n      );\n\n      // unselect region\n      Hotkey.addKey(\"u\", function() {\n        const c = self.completionStore.selected;\n        if (c && !c.relationMode) {\n          c.unselectAll();\n        }\n      });\n\n      Hotkey.addKey(\"h\", function() {\n        const c = self.completionStore.selected;\n        if (c && c.highlightedNode && !c.relationMode) {\n          c.highlightedNode.toggleHidden();\n        }\n      });\n\n      Hotkey.addKey(\"ctrl+z\", function() {\n        const { history } = self.completionStore.selected;\n        history && history.canUndo && history.undo();\n      });\n\n      Hotkey.addKey(\"ctrl+shift+z\", function() {\n        const { history } = self.completionStore.selected;\n        history && history.canRedo && history.redo();\n      });\n\n      Hotkey.addKey(\n        \"escape\",\n        function() {\n          const c = self.completionStore.selected;\n          if (c && c.relationMode) {\n            c.stopRelationMode();\n          } else if (c && c.highlightedNode) {\n            c.regionStore.unselectAll();\n          }\n        },\n        \"Unselect region, exit relation mode\",\n      );\n\n      Hotkey.addKey(\n        \"backspace\",\n        function() {\n          const c = self.completionStore.selected;\n          if (c && c.highlightedNode) {\n            c.highlightedNode.deleteRegion();\n          }\n        },\n        \"Delete selected region\",\n      );\n\n      Hotkey.addKey(\n        \"alt+tab\",\n        function() {\n          const c = self.completionStore.selected;\n          c && c.regionStore.selectNext();\n        },\n        \"Circle through entities\",\n      );\n\n      getEnv(self).onLabelStudioLoad(self);\n    }\n\n    /**\n     *\n     * @param {*} taskObject\n     */\n    function assignTask(taskObject) {\n      if (taskObject && !Utils.Checkers.isString(taskObject.data)) {\n        taskObject = {\n          ...taskObject,\n          data: JSON.stringify(taskObject.data),\n        };\n      }\n      self.task = Task.create(taskObject);\n    }\n\n    function assignConfig(config) {\n      const cs = self.completionStore;\n      self.config = config;\n      cs.initRoot(self.config);\n    }\n\n    /* eslint-disable no-unused-vars */\n    function showModal(message, type = \"warning\") {\n      InfoModal[type](message);\n\n      // InfoModal.warning(\"You need to label at least something!\");\n    }\n    /* eslint-enable no-unused-vars */\n\n    function submitDraft(c) {\n      return new Promise(resolve => {\n        const fn = getEnv(self).onSubmitDraft;\n        if (!fn) return resolve();\n        const res = fn(self, c);\n        if (res && res.then) res.then(resolve);\n        else resolve(res);\n      });\n    }\n\n    // Set `isSubmitting` flag to block [Submit] and related buttons during request\n    // to prevent from sending duplicating requests.\n    // Better to return request's Promise from SDK to make this work perfect.\n    function handleSubmittingFlag(fn, defaultMessage = \"Error during submit\") {\n      self.setFlags({ isSubmitting: true });\n      const res = fn();\n      // Wait for request, max 5s to not make disabled forever broken button;\n      // but block for at least 0.5s to prevent from double clicking.\n      Promise.race([Promise.all([res, delay(500)]), delay(5000)])\n        .catch(err => showModal(err?.message || err || defaultMessage))\n        .then(() => self.setFlags({ isSubmitting: false }));\n    }\n\n    function submitCompletion() {\n      console.log(\"hello submit\");\n      const c = self.completionStore.selected;\n      c.beforeSend();\n\n      if (!c.validate()) return;\n\n      c.sendUserGenerate();\n      c.dropDraft();\n      handleSubmittingFlag(() => getEnv(self).onSubmitCompletion(self, c));\n    }\n\n    function updateCompletion() {\n      console.log(\"hello update\");\n      const c = self.completionStore.selected;\n      c.beforeSend();\n\n      if (!c.validate()) return;\n\n      c.dropDraft();\n      getEnv(self).onUpdateCompletion(self, c);\n      !c.sentUserGenerate && c.sendUserGenerate();\n    }\n\n    function skipTask() {\n      handleSubmittingFlag(() => getEnv(self).onSkipTask(self), \"Error during skip, try again\");\n    }\n\n    /**\n     * Reset completion store\n     */\n    function resetState() {\n      self.completionStore = CompletionStore.create({ completions: [] });\n\n      // const c = self.completionStore.addInitialCompletion();\n\n      // self.completionStore.selectCompletion(c.id);\n    }\n\n    /**\n     * Function to initilaze completion store\n     * Given completions and predictions\n     */\n    function initializeStore({ completions, predictions }) {\n      const cs = self.completionStore;\n      cs.initRoot(self.config);\n\n      // eslint breaks on some optional chaining https://github.com/eslint/eslint/issues/12822\n      /* eslint-disable no-unused-expressions */\n      predictions?.forEach(p => {\n        const obj = cs.addPrediction(p);\n        cs.selectCompletion(obj.id);\n        obj.deserializeCompletion(p.result);\n      });\n      completions?.forEach((c, i) => {\n        const obj = cs.addCompletion(c);\n        cs.selectCompletion(obj.id);\n        obj.deserializeCompletion(c.draft || c.result);\n        obj.reinitHistory();\n      });\n      /* eslint-enable no-unused-expressions */\n    }\n\n    return {\n      setFlags,\n      addInterface,\n      hasInterface,\n\n      afterCreate,\n      assignTask,\n      assignConfig,\n      resetState,\n      initializeStore,\n\n      skipTask,\n      submitDraft,\n      submitCompletion,\n      updateCompletion,\n\n      showModal,\n      toggleSettings,\n      toggleDescription,\n    };\n  });\n","/**\n * Callback on submit completion\n */\nfunction onSubmitCompletion() {}\n\n/**\n * Callback on update completion\n */\nfunction onUpdateCompletion() {}\n\n/**\n * Callback on delete completion\n */\nfunction onDeleteCompletion() {}\n\n/**\n * Callback on skip task\n */\nfunction onSkipTask() {}\n\n/**\n * Callback on task load\n */\nfunction onTaskLoad() {}\n\n/**\n * Callback on Label Studio load\n */\nfunction onLabelStudioLoad() {}\n\n/**\n * Callback when labeled region gets created\n */\nfunction onEntityCreate() {}\n\n/**\n * Callback when labeled region gets deleted\n */\nfunction onEntityDelete() {}\n\n/**\n * Callback when ground truth button gets pressed\n */\nfunction onGroundTruth() {}\n\n/**\n * Callback when a new completion gets selected\n */\nfunction onSelectCompletion(completion, previousCompletion) {}\n\nexport default {\n  onDeleteCompletion,\n  onEntityCreate,\n  onEntityDelete,\n  onGroundTruth,\n  onLabelStudioLoad,\n  onSkipTask,\n  onSubmitCompletion,\n  onTaskLoad,\n  onUpdateCompletion,\n  onSelectCompletion,\n};\n","import External from \"../core/External\";\nimport Messages from \"../utils/messages\";\n\nfunction getData(task) {\n  if (task && task.data) {\n    return {\n      ...task,\n      data: JSON.stringify(task.data),\n    };\n  }\n\n  return task;\n}\n\nfunction getState(task) {\n  const completions = task && task.completions ? task.completions : null;\n  const predictions = task && task.predictions ? task.predictions : null;\n\n  return {\n    completions: completions,\n    predictions: predictions,\n  };\n}\n\n/**\n * LS will render in this part\n */\nfunction rootElement(element) {\n  const el = document.createElement(\"div\");\n\n  let root = document.getElementById(element);\n\n  root.innerHTML = \"\";\n  root.appendChild(el);\n\n  return el;\n}\n\n/**\n * Function to configure application with callbacks\n * @param {object} params\n */\nfunction configureApplication(params) {\n  // callbacks for back compatibility\n  const osCB = params.submitCompletion || params.onSubmitCompletion;\n  const ouCB = params.updateCompletion || params.onUpdateCompletion;\n  const odCB = params.deleteCompletion || params.onDeleteCompletion;\n\n  const options = {\n    // communication with the server\n    // fetch: params.fetch || Requests.fetcher,\n    // patch: params.patch || Requests.patch,\n    // post: params.post || Requests.poster,\n    // remove: params.remove || Requests.remover,\n\n    // communication with the user\n    alert: m => console.log(m), // Noop for demo: window.alert(m)\n    messages: { ...Messages, ...params.messages },\n\n    // callbacks and event handlers\n    onSubmitCompletion: params.onSubmitCompletion ? osCB : External.onSubmitCompletion,\n    onUpdateCompletion: params.onUpdateCompletion ? ouCB : External.onUpdateCompletion,\n    onDeleteCompletion: params.onDeleteCompletion ? odCB : External.onDeleteCompletion,\n    onSkipTask: params.onSkipTask ? params.onSkipTask : External.onSkipTask,\n    onSubmitDraft: params.onSubmitDraft || External.onSubmitDraft,\n    onTaskLoad: params.onTaskLoad || External.onTaskLoad,\n    onLabelStudioLoad: params.onLabelStudioLoad || External.onLabelStudioLoad,\n    onEntityCreate: params.onEntityCreate || External.onEntityCreate,\n    onEntityDelete: params.onEntityDelete || External.onEntityDelete,\n    onGroundTruth: params.onGroundTruth || External.onGroundTruth,\n    onSelectCompletion: params.onSelectCompletion || External.onSelectCompletion,\n  };\n\n  return options;\n}\n\nexport default { getData, getState, rootElement, configureApplication };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./assets/styles/global.scss\";\nimport App from \"./components/App/App\";\nimport AppStore from \"./stores/AppStore\";\nimport ProductionEnvironment from \"./env/production\";\n\nlet LabelStudio;\n\nif (process.env.NODE_ENV === \"production\") {\n  const environment = ProductionEnvironment;\n\n  LabelStudio = function(element, options) {\n    let params = options;\n\n    if (params.options && params.options.secureMode) window.LS_SECURE_MODE = true;\n\n    if (params && params.task) {\n      params.task = environment.getData(params.task);\n    }\n\n    /**\n     * Configure Application\n     */\n    const app = AppStore.create(params, environment.configureApplication(params));\n\n    /**\n     * Initialize store\n     */\n    app.initializeStore(environment.getState(params.task));\n\n    ReactDOM.render(<App store={app} />, environment.rootElement(element));\n\n    window.Htx = app;\n    return app;\n  };\n} else {\n  const environment = require(\"./env/development\").default;\n\n  LabelStudio = function(element, options) {\n    let params = options;\n    console.log(params);\n\n    if (params.options && params.options.secureMode) window.LS_SECURE_MODE = true;\n\n    // this is a way to initialize one of the examples from the src/examples section\n    if (!options.config) {\n      environment.getExample().then(result => {\n        params = {\n          ...params,\n          ...result,\n        };\n\n        let app = AppStore.create(params, environment.configureApplication(params));\n\n        app.initializeStore({ completions: params.completions, predictions: params.predictions });\n        window.Htx = app;\n\n        ReactDOM.render(<App store={app} />, environment.rootElement(element));\n      });\n    } else {\n      // this is static initialization from the index.html file\n      params = {\n        ...params,\n        task: {\n          ...params.task,\n          data: JSON.stringify(params.task.data),\n        },\n      };\n\n      let app = AppStore.create(params, environment.configureApplication(params));\n\n      app.initializeStore({ completions: params.task.completions, predictions: params.task.predictions });\n      window.Htx = app;\n\n      ReactDOM.render(<App store={app} />, environment.rootElement(element));\n\n      return app;\n    }\n  };\n}\n\nwindow.LabelStudio = LabelStudio;\n\nexport default LabelStudio;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Entity_block__3XG93\",\"button\":\"Entity_button__3c64R\",\"labels\":\"Entity_labels__1voVE\",\"tag\":\"Entity_tag__1B3eN\",\"statesblk\":\"Entity_statesblk__2jpJN\",\"row\":\"Entity_row__3Ii1C\",\"long\":\"Entity_long__1o1P3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"treelabels\":\"Entities_treelabels__1eXl8\",\"item\":\"Entities_item__3UOdP\",\"lstitem\":\"Entities_lstitem__2fIoQ\",\"node\":\"Entities_node__3lZB0\",\"flat\":\"Entities_flat__1BGpb\",\"hidden\":\"Entities_hidden__2BWhO\",\"visible\":\"Entities_visible__1hiJ7\",\"selected\":\"Entities_selected__2iSLh\",\"list\":\"Entities_list__1PQ5b\",\"ant-tree-switcher\":\"Entities_ant-tree-switcher__37tkR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Relations_list__1qJFP\",\"item\":\"Relations_item__2qMzb\",\"selected\":\"Relations_selected__352to\",\"block\":\"Relations_block__1iBxL\",\"relationbtn\":\"Relations_relationbtn__1DE91\",\"header\":\"Relations_header__2735N\",\"section\":\"Relations_section__LTPqm\",\"section__blocks\":\"Relations_section__blocks__3TOMg\",\"uihidden\":\"Relations_uihidden__1vAUT\",\"uivisible\":\"Relations_uivisible__HDy6L\"};"],"sourceRoot":""}